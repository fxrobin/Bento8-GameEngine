/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : .\Sonic2\GeneratedCode\TITLESCR\MainEngine.asm
 * Fichier destination : .\Sonic2\GeneratedCode\TMP.BIN
 * Contenu :
 *     Main     0:MAIN.ASM     3819
 *     Include  0:CONSTANT.ASM 5768
 *     Include  0:WAITVBL.ASM  1795
 *     Include  0:READJPDS.ASM 1855
 *     Include  0:RUNOBJTS.ASM 1312
 *     Include  0:MRKOBJGN.ASM 481
 *     Include  0:DISPLSPR.ASM 2223
 *     Include  0:ANIMSPR.ASM  1998
 *     Include  0:OBJMOVE.ASM  752
 *     Include  0:OBJLOAD.ASM  1109
 *     Include  0:DELETOBJ.ASM 2732
 *     Include  0:CLEAROBJ.ASM 647
 *     Include  0:CHECKSPR.ASM 10494
 *     Include  0:ERASESPR.ASM 4868
 *     Include  0:UNSETDSP.ASM 2832
 *     Include  0:DRAWSPR.ASM  6323
 *     Include  0:BGBALLOC.ASM 1029
 *     Include  0:BGBFREE.ASM  1879
 *     Include  0:CLRCARTM.ASM 642
 *     Include  0:UPDTPAL.ASM  953
 *     Include  0:PLAYPCM.ASM  1216
 *     Include  0:PSGLIB.ASM   16960
 *     Include  0:IRQPSGRR.ASM 1768
 *     Include  0:IMAGEIDX.ASM 5024
 *     Include  0:ANIMSCPT.ASM 991
 *     Include  0:OBJINDEX.ASM 6715
 *     Include  0:SOUNDIDX.ASM 174
 *     Include  0:LOADACT.ASM  364
 *     Include  0:PALETTE.ASM  1208
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
    180                                   INCLUD CONSTANT
    181                           * --------------------------------------->>
    182                           * Constants
    183                           *
    184                           * Naming convention
    185                           * -----------------
    186                           * - lower case
    187                           * - underscore-separated names
    188                           *
    189                           * --------------------------------------->>
    190
    191                           * =======================================>>
    192                           * TO8 Registers
    193                           * =======================================>>
    194
    195                  6049     dk_lecteur                    equ $6049
    196                  604A     dk_piste                      equ $604A
    197                  604B     dk_pisteL                     equ $604B
    198                  604C     dk_secteur                    equ $604C
    199                  604F     dk_destination                equ $604F
    200
    201                           * =======================================>>
    202                           * Display Constants
    203                           * =======================================>>
    204
    205                  00A0     screen_width                  equ 160 ; s>>
    206                  001C     screen_top                    equ 28 ; in>>
    207                  00E3     screen_bottom                 equ 28+199 >>
    208                  0030     screen_left                   equ 48 ; in>>
    209                  00CF     screen_right                  equ 48+159 >>
    210                  0008     nb_priority_levels            equ 8   ; n>>
    211
    212                           * =======================================>>
    213                           * Physics Constants
    214                           * =======================================>>
    215
    216                  0038     gravity                       equ $38 ; G>>
    217
    218                           * =======================================>>
    219                           * Animation Constants
    220                           * =======================================>>
    221
    222                  00FF     _resetAnim                    equ $FF
    223                  00FE     _goBackNFrames                equ $FE
    224                  00FD     _goToAnimation                equ $FD
    225                  00FC     _nextRoutine                  equ $FC
    226                  00FB     _resetAnimAndSubRoutine       equ $FB
    227                  00FA     _nextSubRoutine               equ $FA
    228
    229                           * =======================================>>
    230                           * Images Constants
    231                           * =======================================>>
    232
    233                  0004     image_x_size                  equ 4
    234                  0005     image_y_size                  equ 5
    235                  0006     image_center_offset           equ 6
    236
    237                  0004     image_subset_x1_offset        equ 4
    238                  0005     image_subset_y1_offset        equ 5
    239
    240                  0000     page_draw_routine             equ 0
    241                  0001     draw_routine                  equ 1
    242                  0003     page_erase_routine            equ 3
    243                  0004     erase_routine                 equ 4
    244                  0006     erase_nb_cell                 equ 6
    245
    246                           * =======================================>>
    247                           * Sound Constants
    248                           * =======================================>>
    249
    250                  0000     pcm_page        equ 0
    251                  0001     pcm_start_addr  equ 1
    252                  0003     pcm_end_addr    equ 3
    253                  0005     pcm_meta_size   equ 5
    254
    255                           * =======================================>>
    256                           * Object Constants
    257                           * =======================================>>
    258
    259                  0002     nb_reserved_objects           equ 2
    260                  001B     nb_dynamic_objects            equ 27
    261                  0003     nb_level_objects              equ 3
    262                  0020     nb_objects                    equ 32 * ma>>
    263
    264                           * --------------------------------------->>
    265                           * Object Status Table offsets
    266                           * --------------------------------------->>
    267
    268                  005A     object_size                   equ 90 ; th>>
    269                  005A     next_object                   equ object_>>
    270
    271                  0000     id                            equ 0      >>
    272                  0001     subtype                       equ 1      >>
    273                  0002     render_flags                  equ 2
    274
    275                           * --- render_flags bitfield variables --->>
    276                  0001     render_xmirror_mask           equ $01 ; (>>
    277                  0002     render_ymirror_mask           equ $02 ; (>>
    278                  0004     render_overlay_mask           equ $04 ; (>>
    279                  0008     render_motionless_mask        equ $08 ; (>>
    280                  0010     render_playfieldcoord_mask    equ $10 ; (>>
    281                  0020     render_hide_mask              equ $20 ; (>>
    282                  0040     render_todelete_mask          equ $40 ; (>>
    283                  0080     render_xloop_mask             equ $80 ; (>>
    284                            
    285                  0003     priority                      equ 3      >>
    286                  0004     anim                          equ 4  ; an>>
    287                  0006     prev_anim                     equ 6  ; an>>
    288                  0008     anim_frame                    equ 8      >>
    289                  0009     anim_frame_duration           equ 9      >>
    290                  000A     image_set                     equ 10 ; an>>
    291                  000C     x_pos                         equ 12 ; an>>
    292                  000E     x_sub                         equ 14     >>
    293                  000F     y_pos                         equ 15 ; an>>
    294                  0011     y_sub                         equ 17     >>
    295                  0012     xy_pixel                      equ 18     >>
    296                  0012     x_pixel                       equ 18     >>
    297                  0013     y_pixel                       equ 19     >>
    298                  0014     x_vel                         equ 20 ; an>>
    299                  0016     y_vel                         equ 22 ; an>>
    300                  0018     routine                       equ 24     >>
    301                  0019     routine_secondary             equ 25     >>
    302                  001A     status                        equ 26
    303
    304                           * --- status bitfield variables for objec>>
    305                  0001     status_x_orientation          equ   $01 ;>>
    306                  0002     status_y_orientation          equ   $02 ;>>
    307                  0004     status_bit2                   equ   $04 ;>>
    308                  0008     status_mainchar_standing      equ   $08 ;>>
    309                  0010     status_sidekick_standing      equ   $10 ;>>
    310                  0020     status_mainchar_pushing       equ   $20 ;>>
    311                  0040     status_sidekick_pushing       equ   $40 ;>>
    312                  0080     status_bit7                   equ   $80 ;>>
    313
    314                           * --- status bitfield variables for Main >>
    315                  0002     status_inair                  equ   $02 ;>>
    316                  0004     status_jumporroll             equ   $04 ;>>
    317                  0008     status_norgroundnorfall       equ   $08 ;>>
    318                  0010     status_jumpingafterrolling    equ   $10 ;>>
    319                  0020     status_pushing                equ   $20 ;>>
    320                  0040     status_underwater             equ   $40 ;>>
    321
    322                  001B     ext_variables                 equ 27 ; to>>
    323
    324                           * --------------------------------------->>
    325                           * reserved variables (engine)
    326
    327                  0029     rsv_render_flags              equ 41
    328
    329                           * --- rsv_render_flags bitfield variables>>
    330                  0001     rsv_render_checkrefresh_mask  equ $01 ; (>>
    331                  0002     rsv_render_erasesprite_mask   equ $02 ; (>>
    332                  0004     rsv_render_displaysprite_mask equ $04 ; (>>
    333                  0008     rsv_render_outofrange_mask    equ $08 ; (>>
    334
    335                  002A     rsv_prev_anim                 equ 42 ; an>>
    336                  002C     rsv_image_center_offset       equ 44 ; 0 >>
    337                           * ne sert plus                       ; an>>
    338                  002E     rsv_image_subset              equ 46 ; an>>
    339                  0030     rsv_mapping_frame             equ 48 ; an>>
    340                  0032     rsv_xy1_pixel                 equ 50     >>
    341                  0032     rsv_x1_pixel                  equ 50     >>
    342                  0033     rsv_y1_pixel                  equ 51     >>
    343                  0034     rsv_xy2_pixel                 equ 52     >>
    344                  0034     rsv_x2_pixel                  equ 52     >>
    345                  0035     rsv_y2_pixel                  equ 53     >>
    346
    347                           * --------------------------------------->>
    348                           * reserved variables (engine) - buffer sp>>
    349
    350                  0036     rsv_buffer_0                  equ 54 ; St>>
    351                  0036     rsv_priority_0                equ 54 ; in>>
    352                  0037     rsv_priority_prev_obj_0       equ 55 ; an>>
    353                  0039     rsv_priority_next_obj_0       equ 57 ; an>>
    354                           *rsv_prev_image_subset_0       equ 59 ; a>>
    355                  003D     rsv_prev_mapping_frame_0      equ 61 ; an>>
    356                  003F     rsv_bgdata_0                  equ 63 ; an>>
    357                  0041     rsv_prev_xy_pixel_0           equ 65 ;
    358                  0041     rsv_prev_x_pixel_0            equ 65 ; pr>>
    359                  0042     rsv_prev_y_pixel_0            equ 66 ; pr>>
    360                  0043     rsv_prev_xy1_pixel_0          equ 67 ;
    361                  0043     rsv_prev_x1_pixel_0           equ 67 ; pr>>
    362                  0044     rsv_prev_y1_pixel_0           equ 68 ; pr>>
    363                  0045     rsv_prev_xy2_pixel_0          equ 69 ;
    364                  0045     rsv_prev_x2_pixel_0           equ 69 ; pr>>
    365                  0046     rsv_prev_y2_pixel_0           equ 70 ; pr>>
    366                  0047     rsv_prev_render_flags_0       equ 71 ;
    367                           * --- rsv_prev_render_flags_0 bitfield va>>
    368                  0001     rsv_prev_render_overlay_mask  equ $01 ; (>>
    369                  0080     rsv_prev_render_onscreen_mask equ $80 ; (>>
    370
    371                  0048     rsv_buffer_1                  equ 72 ; St>>
    372                  0048     rsv_priority_1                equ 72 ; in>>
    373                  0049     rsv_priority_prev_obj_1       equ 73 ; an>>
    374                  004B     rsv_priority_next_obj_1       equ 75 ; an>>
    375                           *rsv_prev_image_subset_1       equ 77 ; a>>
    376                  004F     rsv_prev_mapping_frame_1      equ 79 ; an>>
    377                  0051     rsv_bgdata_1                  equ 81 ; an>>
    378                  0053     rsv_prev_xy_pixel_1           equ 83 ;
    379                  0053     rsv_prev_x_pixel_1            equ 83 ; pr>>
    380                  0054     rsv_prev_y_pixel_1            equ 84 ; pr>>
    381                  0055     rsv_prev_xy1_pixel_1          equ 85 ;
    382                  0055     rsv_prev_x1_pixel_1           equ 85 ; pr>>
    383                  0056     rsv_prev_y1_pixel_1           equ 86 ; pr>>
    384                  0057     rsv_prev_xy2_pixel_1          equ 87 ;
    385                  0057     rsv_prev_x2_pixel_1           equ 87 ; pr>>
    386                  0058     rsv_prev_y2_pixel_1           equ 88 ; pr>>
    387                  0059     rsv_prev_render_flags_1       equ 89 ;
    388
    389                  0000     buf_priority                  equ 0  ; of>>
    390                  0001     buf_priority_prev_obj         equ 1  ;
    391                  0003     buf_priority_next_obj         equ 3  ;
    392                           *buf_prev_image_subset         equ 5  ;
    393                  0007     buf_prev_mapping_frame        equ 7  ;
    394                  0009     buf_bgdata                    equ 9  ;
    395                  000B     buf_prev_xy_pixel             equ 11 ;
    396                  000B     buf_prev_x_pixel              equ 11 ;
    397                  000C     buf_prev_y_pixel              equ 12 ;
    398                  000D     buf_prev_xy1_pixel            equ 13 ;
    399                  000D     buf_prev_x1_pixel             equ 13 ;
    400                  000E     buf_prev_y1_pixel             equ 14 ;
    401                  000F     buf_prev_xy2_pixel            equ 15 ;
    402                  000F     buf_prev_x2_pixel             equ 15 ;
    403                  0010     buf_prev_y2_pixel             equ 16 ;
    404                  0011     buf_prev_render_flags         equ 17 ;
    405
     10        6100                       org   $6100
     11
     12  8     6100 BD   8A67             jsr   LoadAct
     13
     14                           * =======================================>>
     15                           * Main Loop
     16                           * =======================================>>
     17        6103               LevelMainLoop
     18  8     6103 BD   7153             jsr   WaitVBL
     19  8     6106 BD   7D54             jsr   UpdatePalette
     20  8     6109 BD   7190             jsr   ReadJoypads
     21  8     610C BD   71B1             jsr   RunObjects
     22  8     610F BD   7440             jsr   CheckSpritesRefresh
     23  8     6112 BD   7780             jsr   EraseSprites
     24  8     6115 BD   78F9             jsr   UnsetDisplayPriority
     25  8     6118 BD   79D8             jsr   DrawSprites
     26  3     611B 20   E6               bra   LevelMainLoop
     27                            
     28                           * =======================================>>
     29                           * Global Data
     30                           *
     31                           * Naming convention
     32                           * -----------------
     33                           * - underscore-separated names
     34                           * - first letter of each word in upper ca>>
     35                           *
     36                           * Templates
     37                           * ---------
     38                           * - Glb_*        : global variable
     39                           * - Tbl_*        : data table
     40                           * - Lst_*        : list is a data table w>>
     41                           * - Obj_*        : address of an object i>>
     42                           *
     43                           * - *_Object_RAM : sub group of objects
     44                           * - *_end        : data end label
     45                           *
     46                           * =======================================>>
     47
     48                           * --------------------------------------->>
     49                           * Display
     50                           * --------------------------------------->>
     51                            
     52        611D 00            Glb_Cur_Wrk_Screen_Id         fcb   $00  >>
     53        611E 0000          Glb_Camera_X_Pos              fdb   $0000>>
     54        6120 0000          Glb_Camera_Y_Pos              fdb   $0000>>
     55        6122 0000          Glb_Sprite_Screen_Pos_Part1   fdb   $0000>>
     56        6124 0000          Glb_Sprite_Screen_Pos_Part2   fdb   $0000>>
     57
     58                           * --------------------------------------->>
     59                           * Background Backup Cells - BBC
     60                           * --------------------------------------->>
     61
     62                           * ----- Cell variables
     63                  0000     nb_cells                      equ   0
     64                  0001     cell_start                    equ   1
     65                  0003     cell_end                      equ   3
     66                  0005     next_entry                    equ   5
     67                  0007     entry_size                    equ   7
     68
     69                           * ----- Cells List
     70                  0082     nb_free_cells                 equ   130
     71                  0040     cell_size                     equ   64   >>
     72                  6000     cell_start_adr                equ   $6000>>
     73
     74        6126 6128          Lst_FreeCellFirstEntry_0      fdb   Lst_F>>
     75        6128 82            Lst_FreeCell_0                fcb   nb_fr>>
     76        6129 3F80                                        fdb   cell_>>
     77        612B 6000                                        fdb   cell_>>
     78        612D 0000                                        fdb   $0000>>
     79        612F                                             rmb   (entr>>
     80                            
     81        62F5 62F7          Lst_FreeCellFirstEntry_1      fdb   Lst_F>>
     82        62F7 82            Lst_FreeCell_1                fcb   nb_fr>>
     83        62F8 3F80                                        fdb   cell_>>
     84        62FA 6000                                        fdb   cell_>>
     85        62FC 0000                                        fdb   $0000>>
     86        62FE                                             rmb   (entr>>
     87                           * --------------------------------------->>
     88                           * Display Priority Structure - DPS
     89                           * --------------------------------------->>
     90
     91        64C4               DPS_buffer_0
     92        64C4               Tbl_Priority_First_Entry_0    rmb   2+(nb>>
     93        64D6               Tbl_Priority_Last_Entry_0     rmb   2+(nb>>
     94        64E8 64EA          Lst_Priority_Unset_0          fdb   Lst_P>>
     95        64EA                                             rmb   (nb_o>>
     96        652A               DPS_buffer_1
     97        652A               Tbl_Priority_First_Entry_1    rmb   2+(nb>>
     98        653C               Tbl_Priority_Last_Entry_1     rmb   2+(nb>>
     99        654E 6550          Lst_Priority_Unset_1          fdb   Lst_P>>
    100        6550                                             rmb   (nb_o>>
    101                            
    102                  0000     buf_Tbl_Priority_First_Entry  equ   0
    103                  0012     buf_Tbl_Priority_Last_Entry   equ   Tbl_P>>
    104                  0024     buf_Lst_Priority_Unset        equ   Lst_P>>
    105
    106                           * --------------------------------------->>
    107                           * Sub Priority Objects List - SOL
    108                           * --------------------------------------->>
    109
    110        6590               Tbl_Sub_Object_Erase          rmb   nb_ob>>
    111        65D0               Tbl_Sub_Object_Draw           rmb   nb_ob>>
    112
    113                           * --------------------------------------->>
    114                           * Object Status Table - OST
    115                           * --------------------------------------->>
    116                            
    117        6610               Object_RAM *@globals
    118        6610               Reserved_Object_RAM
    119        6610 0203          Obj_MainCharacter             fdb   $0203>>
    120        6612                                             rmb   objec>>
    121        666A               Obj_Sidekick                  rmb   objec>>
    122        66C4               Reserved_Object_RAM_End
    123
    124        66C4               Dynamic_Object_RAM            rmb   nb_dy>>
    125        7042               Dynamic_Object_RAM_End
    126
    127        7042               LevelOnly_Object_RAM                     >>
    128        7042               Obj_TailsTails                rmb   objec>>
    129        709C               Obj_SonicDust                 rmb   objec>>
    130        70F6               Obj_TailsDust                 rmb   objec>>
    131        7150               LevelOnly_Object_RAM_End
    132        7150 7150          Object_RAM_End                fdb *
    133
    134                           * --------------------------------------->>
    135                           * Lifecycle
    136                           * --------------------------------------->>
    137
    138        7152               Glb_MainCharacter_Is_Dead     rmb   $1,0
    139
    140                           * =======================================>>
    141                           * Routines
    142                           * =======================================>>
    143                                   * a rendre dynamique a partir des>>
    406                                   INCLUD WAITVBL
    407                           *****************************************>>
    408                           * Attente VBL
    409                           * Alternance de la page 2 et 3 entre affi>>
    410                           * Alternance de la RAMA et RAM B dans l'e>>
    411                           * --------------------------------------->>
    412                           *
    413                           * Page Affichee par l'automate Video
    414                           * ----------------------------------
    415                           *   $E7DD determine la page affichee a l'>>
    416                           *   bit7=0 bit6=0 bit5=0 bit4=0 (#$0_) : >>
    417                           *   bit7=0 bit6=1 bit5=0 bit4=0 (#$4_) : >>
    418                           *   bit7=1 bit6=0 bit5=0 bit4=0 (#$8_) : >>
    419                           *   bit7=1 bit6=1 bit5=0 bit4=0 (#$C_) : >>
    420                           *   bit3 bit2 bit1 bit0  (#$_0 a #$_F) : >>
    421                           *   Remarque : bit5 et bit4 utilisable un>>
    422                           *
    423                           * Page en espace cartouche (ecriture dans>>
    424                           * --------------------------------------->>
    425                           *   $E7E6 determine la page visible dans >>
    426                           *   bit7 toujours a 0
    427                           *   bit6=1 : ecriture autorisee
    428                           *   bit5=1 : espace cartouche recouvert p>>
    429                           *   bit4=0 : CAS1N valide : banques 0-15 >>
    430                           *   bit5=1 bit4=0 bit3=0 bit2=0 bit1=0 bi>>
    431                           *   ...
    432                           *   bit5=1 bit4=0 bit3=1 bit2=1 bit1=1 bi>>
    433                           *   bit5=1 bit4=1 bit3=0 bit2=0 bit1=0 bi>>
    434                           *   ...
    435                           *   bit5=1 bit4=1 bit3=1 bit2=1 bit1=1 bi>>
    436                           *
    437                           * Demi-Page 0 en espace ecran (4000 a 5FF>>
    438                           * --------------------------------------->>
    439                           *   $E7C3 determine la demi-page de la pa>>
    440                           *   bit0=0 : 8Ko RAMA
    441                           *   bit0=1 : 8ko RAMB
    442                           *
    443                           *****************************************>>
    444        7153               WaitVBL
    445  7     7153 7D   E7E7             tst   $E7E7              * le fai>>
    446  3     7156 2A   FB               bpl   WaitVBL            * tant q>>
    447        7158               WaitVBL_01
    448  7     7158 7D   E7E7             tst   $E7E7              * le fai>>
    449  3     715B 2B   FB               bmi   WaitVBL_01         * tant q>>
    450                            
    451        715D               SwapVideoPage
    452  5     715D F6   716B             ldb   am_SwapVideoPage+1 * charge>>
    453  2     7160 C4   40               andb  #$40               * altern>>
    454        7162               screen_border_color *@globals
    455  2     7162 CA   80               orb   #$80               * bit7=1>>
    456  5     7164 F7   E7DD             stb   $E7DD              * change>>
    457  7     7167 73   716B             com   am_SwapVideoPage+1 * altern>>
    458        716A               am_SwapVideoPage
    459  2     716A C6   00               ldb   #$00
    460  2     716C C4   01               andb  #$01               * altern>>
    461  5     716E F7   611D             stb   Glb_Cur_Wrk_Screen_Id
    462  2     7171 CA   62               orb   #$62               * bit6=1>>
    463  5     7173 F7   E7E6             stb   $E7E6              * change>>
    464  5     7176 F6   E7C3             ldb   $E7C3              * charge>>
    465  2     7179 C8   01               eorb  #$01               * altern>>
    466  5     717B F7   E7C3             stb   $E7C3
    467                            
    468  6     717E FC   7188             ldd   Vint_runcount
    469  4     7181 C3   0001             addd  #1
    470  6     7184 FD   7188             std   Vint_runcount
    471  5     7187 39                    rts
    472                            
    473        7188               Vint_runcount rmb   $2,0 *@globals
    474
    475                                   INCLUD READJPDS
    476                           * --------------------------------------->>
    477                           * Controller Buttons
    478                           *
    479                  0001     c1_button_up_mask            equ   $01 *@>>
    480                  0002     c1_button_down_mask          equ   $02 *@>>
    481                  0004     c1_button_left_mask          equ   $04 *@>>
    482                  0008     c1_button_right_mask         equ   $08 *@>>
    483                  0010     c2_button_up_mask            equ   $10 *@>>
    484                  0020     c2_button_down_mask          equ   $20 *@>>
    485                  0040     c2_button_left_mask          equ   $40 *@>>
    486                  0080     c2_button_right_mask         equ   $80 *@>>
    487                  0040     c1_button_A_mask             equ   $40 *@>>
    488                  0080     c2_button_A_mask             equ   $80 *@>>
    489
    490        718A               Joypads_Read
    491        718A 00            Dpad_Read                    fcb   $00
    492        718B 00            Fire_Read                    fcb   $00
    493                            
    494        718C               Joypads
    495        718C               Joypads_Held                           *@>>
    496        718C 00            Dpad_Held                    fcb   $00 *@>>
    497        718D 00            Fire_Held                    fcb   $00 *@>>
    498        718E               Joypads_Press                          *@>>
    499        718E 00            Dpad_Press                   fcb   $00 *@>>
    500        718F 00            Fire_Press                   fcb   $00 *@>>
    501
    502                           *****************************************>>
    503                           * Get joystick parameters
    504                           *
    505                           * Direction des Joypads
    506                           * ---------------------
    507                           * Registre: $E7CC (8bits)
    508                           *
    509                           * Joypad2     Joypad1
    510                           * 1111        1111 (0: appuye | 1: relach>>
    511                           * ||||_Haut   ||||_Haut
    512                           * |||__Bas    |||__Bas
    513                           * ||___Gauche ||___Gauche
    514                           * |____Droite |____Droite
    515                           *
    516                           * Boutons des Joypads
    517                           * -------------------
    518                           * Registre: $E7CD (8bits)
    519                           *
    520                           * 11 000000 (0: appuye | 1: relache)
    521                           * ||[------] 6 bits convertisseur numeriq>>
    522                           * ||_Fire Joypad1
    523                           * |__Fire Joypad2
    524                           *
    525                           * Variables globales: Joypads_Held, Joypa>>
    526                           * --------------------------------------->>
    527                           * (16 bits)
    528                           * Joypad2     Joypad1
    529                           * 0000        0000 (0: relache | 1: appuy>>
    530                           * ||||_Haut   ||||_Haut                  >>
    531                           * |||__Bas    |||__Bas                   >>
    532                           * ||___Gauche ||___Gauche                >>
    533                           * |____Droite |____Droite
    534                           *
    535                           *****************************************>>
    536                            
    537                                                                  *;>>
    538                                                                  *;>>
    539                                                                  *;>>
    540                                                                  *;>>
    541                                                                  *
    542                                                                  *;>>
    543        7190               ReadJoypads                            *R>>
    544                                                                  * >>
    545                                                                  * >>
    546                                                                  * >>
    547                                                                  * >>
    548                                                                  *
    549                                                                  *;>>
    550                                                                  *J>>
    551                                                                  * >>
    552                                                                  * >>
    553                                                                  * >>
    554                                                                  * >>
    555                                                                  * >>
    556                                                                  * >>
    557                                                                  * >>
    558                                                                  * >>
    559                                                                  * >>
    560                                                                  * >>
    561                                                                  * >>
    562                                                                  * >>
    563  6     7190 FC   E7CC             ldd   $E7CC
    564  2     7193 43                    coma
    565  2     7194 53                    comb                           * >>
    566  6     7195 FD   718A             std   Joypads_Read
    567  6     7198 FC   718C             ldd   Joypads_Held             * >>
    568  5     719B B8   718A             eora  Dpad_Read                * >>
    569  5     719E F8   718B             eorb  Fire_Read
    570                                                                  * >>
    571  5     71A1 B4   718A             anda  Dpad_Read                * >>
    572  5     71A4 F4   718B             andb  Fire_Read
    573  6     71A7 FD   718E             std   Joypads_Press            * >>
    574  6     71AA FC   718A             ldd   Joypads_Read
    575  6     71AD FD   718C             std   Joypads_Held
    576  5     71B0 39                    rts                            * >>
    577                                                                  *;>>
    578
    579
    580                                   INCLUD RUNOBJTS
    581                           * --------------------------------------->>
    582                           * RunObjects
    583                           * ------------
    584                           * Subroutine to run objects code
    585                           *
    586                           * input REG : none
    587                           * --------------------------------------->>
    588                                                                    >>
    589                                                                    >>
    590                                                                    >>
    591                                                                    >>
    592                                                                    >>
    593                                                                    >>
    594                                                                    >>
    595        71B1               RunObjects                               >>
    596                                                                    >>
    597                                                                    >>
    598  3     71B1 CE   6610             ldu   #Object_RAM                >>
    599                                                                    >>
    600                                                                    >>
    601                                                                    >>
    602                                                                    >>
    603                                                                    >>
    604                                                                    >>
    605                                                                    >>
    606        71B4               RunObjects_01                            >>
    607                                                                    >>
    608                                                                    >>
    609                                                                    >>
    610                                                                    >>
    611  7     71B4 7D   7152             tst   Glb_MainCharacter_Is_Dead  >>
    612  3     71B7 26   23               bne   RunObjectsWhenPlayerIsDead >>
    613                                                                    >>
    614                                                                    >>
    615                                                                    >>
    616                                                                    >>
    617                                                                    >>
    618                                                                    >>
    619                                                                    >>
    620                                                                    >>
    621                                                                    >>
    622                                                                    >>
    623        71B9               RunObject                                >>
    624  2     71B9 86   00               lda   #$00
    625  4+0   71BB E6   C4               ldb   ,u                         >>
    626  3     71BD 27   13               beq   RunNextObject              >>
    627
    628  4     71BF 108E 8756             ldy   #Obj_Index_Page
    629  4+4   71C3 A6   AB               lda   d,y                        >>
    630  5     71C5 B7   E7E5             sta   $E7E5                      >>
    631  2     71C8 86   00               lda   #$00
    632  2     71CA 58                    aslb                             >>
    633  2     71CB 49                    rola                             >>
    634  4     71CC 108E 8856             ldy   #Obj_Index_Address         >>
    635  7+7   71D0 AD   BB               jsr   [d,y]                      >>
    636                                                                    >>
    637                                                                    >>
    638                                                                    >>
    639        71D2               RunNextObject                            >>
    640  4+1   71D2 33   C8 5A            leau  next_object,u              >>
    641        71D5               am_RunNextObject
    642  5     71D5 1183 7150             cmpu  #Object_RAM_End            >>
    643  3     71D9 26   DE               bne   RunObject                  >>
    644        71DB               RunObjects_End                           >>
    645  5     71DB 39                    rts                              >>
    646                                                                    >>
    647                                                                    >>
    648                                                                    >>
    649                                                                    >>
    650        71DC               RunObjectsWhenPlayerIsDead               >>
    651  3     71DC CE   6610             ldu   #Reserved_Object_RAM
    652  3     71DF 8E   66C4             ldx   #Reserved_Object_RAM_End
    653  6     71E2 BF   71D7             stx   am_RunNextObject+2         >>
    654  7     71E5 8D   D2               bsr   RunObject                  >>
    655                                                                    >>
    656                                                                    >>
    657  3     71E7 CE   7042             ldu   #LevelOnly_Object_RAM
    658  3     71EA 8E   7150             ldx   #LevelOnly_Object_RAM_End
    659  6     71ED BF   71D7             stx   am_RunNextObject+2         >>
    660  7     71F0 8D   C7               bsr   RunObject                  >>
    661                                                                    >>
    662  3     71F2 8E   7150             ldx   #Object_RAM_End            >>
    663  6     71F5 BF   71D7             stx   am_RunNextObject+2
    664  5     71F8 39                    rts
    665                                                                    >>
    666                                                                    >>
    667                                                                    >>
    668                                                                    >>
    669                                                                    >>
    670                                                                    >>
    671                                                                    >>
    672                                                                    >>
    673                                                                    >>
    674                                                                    >>
    675                                                                    >>
    676                                                                    >>
    677                                                                    >>
    678                            
    679                                                                    >>
    680                                                                    >>
    681                                                                    >>
    682                                                                    >>
    683
    684                                   INCLUD MRKOBJGN
    685                           * --------------------------------------->>
    686                           * MarkObjGone
    687                           * -----------
    688                           * Subroutine to destroy an object that is>>
    689                           * -- TODO --
    690                           * waiting for camera implementation
    691                           *
    692                           * input REG : none
    693                           * clear REG : none
    694                           * --------------------------------------->>
    695
    696                                                                  *;>>
    697                                                                  *;>>
    698                                                                  *;>>
    699                                                                  *
    700                                                                  *;>>
    701                                                                  *;>>
    702                                                                  *;>>
    703        71F9               MarkObjGone *@globals                  *M>>
    704                                                                  * >>
    705                                                                  * >>
    706  3     71F9 20   06               bra   DisplaySprite            * >>
    707                                                                  *+>>
    708                                                                  * >>
    709                                                                  * >>
    710                                                                  * >>
    711                                                                  * >>
    712                                                                  * >>
    713                                                                  * >>
    714                                                                  *
    715                                                                  *+>>
    716                                                                  * >>
    717                                                                  * >>
    718                                                                  * >>
    719                                                                  * >>
    720                                                                  *+>>
    721                                                                  * >>
    722
    723                                   INCLUD DISPLSPR
    724                           * --------------------------------------->>
    725                           * DisplaySprite
    726                           * -------------
    727                           * Subroutine to manage sprite priority.
    728                           * Object's priority is read and object is>>
    729                           * priority: 0 - unregistred
    730                           * priority: 1 - register non moving overl>>
    731                           * priority; 2-8 - register moving sprite >>
    732                           *
    733                           * Unlike original S2 code, sprite priorit>>
    734                           * it allows to keep an exact sprite order>>
    735                           *
    736                           * DisplaySprite
    737                           * input REG : [u] object pointer (OST)
    738                           *
    739                           * DisplaySprite_x
    740                           * input REG : [x] object pointer (OST)
    741                           * --------------------------------------->>
    742                            
    743        71FB               DisplaySprite_x *@globals
    744  5+6   71FB 34   56               pshs  d,x,u
    745  6     71FD 1F   13               tfr   x,u
    746  3     71FF 20   02               bra   DSP_Start
    747                            
    748        7201               DisplaySprite *@globals
    749  5+6   7201 34   56               pshs  d,x,u
    750                            
    751        7203               DSP_Start
    752  4+1   7203 A6   42               lda   render_flags,u
    753  2     7205 84   DF               anda  #:render_hide_mask         >>
    754  4+1   7207 A7   42               sta   render_flags,u
    755
    756  5     7209 B6   611D             lda   Glb_Cur_Wrk_Screen_Id      >>
    757  3     720C 26   09               bne   DSP_SetBuffer1
    758                            
    759        720E               DSP_SetBuffer0
    760  4+1   720E 30   C8 36            leax  rsv_buffer_0,u             >>
    761  4     7211 108E 64C4             ldy   #DPS_buffer_0              >>
    762  3     7215 20   07               bra   DSP_BufferPositionned
    763                            
    764        7217               DSP_SetBuffer1
    765  4+1   7217 30   C8 48            leax  rsv_buffer_1,u             >>
    766  4     721A 108E 652A             ldy   #DPS_buffer_1              >>
    767                            
    768        721E               DSP_BufferPositionned
    769  4+1   721E A6   43               lda   priority,u                 >>
    770  4+1   7220 A1   00               cmpa  buf_priority,x
    771  3     7222 27   1C               beq   DSP_rts                    >>
    772  4+1   7224 E6   00               ldb   buf_priority,x
    773  3     7226 26   3F               bne   DSP_ChangePriority
    774                            
    775        7228               DSP_InitPriority
    776  4+1   7228 A7   00               sta   buf_priority,x             >>
    777  2     722A 48                    asla                             >>
    778                            
    779        722B               DSP_CheckLastEntry
    780  4+1   722B 31   A8 12            leay  buf_Tbl_Priority_Last_Entry>>
    781  6+1   722E 6D   A6               tst   a,y                        >>
    782  3     7230 26   10               bne   DSP_addToExistingNode      >>
    783                            
    784        7232               DSP_addFirstNode
    785  5+1   7232 EF   A6               stu   a,y                        >>
    786  4+1   7234 31   A8 EE            leay  buf_Tbl_Priority_First_Entr>>
    787  5+1   7237 EF   A6               stu   a,y                        >>
    788  3     7239 CC   0000             ldd   #0
    789  5+1   723C ED   01               std   buf_priority_prev_obj,x    >>
    790  5+1   723E ED   03               std   buf_priority_next_obj,x
    791                            
    792        7240               DSP_rts
    793  5+8   7240 35   D6               puls  d,x,u,pc                   >>
    794                            
    795        7242               DSP_addToExistingNode
    796  5+1   7242 AE   A6               ldx   a,y                        >>
    797  5     7244 F6   611D             ldb   Glb_Cur_Wrk_Screen_Id
    798  3     7247 26   0E               bne   DSP_LinkBuffer1
    799  5+1   7249 EF   88 39            stu   rsv_priority_next_obj_0,x  >>
    800  5+1   724C AF   C8 37            stx   rsv_priority_prev_obj_0,u  >>
    801  6+1   724F 6F   C8 39            clr   rsv_priority_next_obj_0,u  >>
    802  6+1   7252 6F   C8 3A            clr   rsv_priority_next_obj_0+1,u>>
    803  3     7255 20   0C               bra   DSP_LinkCurWithPrev
    804        7257               DSP_LinkBuffer1
    805  5+1   7257 EF   88 4B            stu   rsv_priority_next_obj_1,x  >>
    806  5+1   725A AF   C8 49            stx   rsv_priority_prev_obj_1,u  >>
    807  6+1   725D 6F   C8 4B            clr   rsv_priority_next_obj_1,u  >>
    808  6+1   7260 6F   C8 4C            clr   rsv_priority_next_obj_1+1,u>>
    809                            
    810        7263               DSP_LinkCurWithPrev
    811  5+1   7263 EF   A6               stu   a,y                        >>
    812  5+8   7265 35   D6               puls  d,x,u,pc                   >>
    813                            
    814        7267               DSP_ChangePriority
    815  4+1   7267 31   A8 24            leay  buf_Lst_Priority_Unset,y
    816  5+3   726A EF   B4               stu   [,y]                       >>
    817  4+1   726C 31   22               leay  2,y
    818  6+0   726E 10AF A4               sty   ,y                         >>
    819  4+1   7271 31   A8 DA            leay  -buf_Lst_Priority_Unset-2,y>>
    820  2     7274 81   00               cmpa  #0
    821  3     7276 26   B3               bne   DSP_CheckLastEntry         >>
    822  5+8   7278 35   D6               puls  d,x,u,pc                   >>
    823
    824                            
    825                                                                  *;>>
    826                                                                  *;>>
    827                                                                  *;>>
    828                                                                  *
    829                                                                  *;>>
    830                                                                  *
    831                                                                  *;>>
    832                                                                  *D>>
    833                                                                  * >>
    834                                                                  * >>
    835                                                                  * >>
    836                                                                  * >>
    837                                                                  * >>
    838                            
    839                                                                  * >>
    840                                                                  * >>
    841                                                                  * >>
    842                            
    843                                                                  * >>
    844                                                                  * >>
    845                                                                  *
    846                                                                  *r>>
    847                            
    848                                                                  * >>
    849                                                                  *;>>
    850
    851                                   INCLUD ANIMSPR
    852                           * --------------------------------------->>
    853                           * Subroutine to animate a sprite using an>>
    854                           *
    855                           *   this function also change render flag>>
    856                           *   the status byte;
    857                           *
    858                           * input REG : [u] pointeur sur l'objet
    859                           *
    860                           * --------------------------------------->>
    861
    862                  00FF     resetAnim              equ $FF
    863                  00FE     goBackNFrames          equ $FE ; followed>>
    864                  00FD     goToAnimation          equ $FD ; followed>>
    865                  00FC     nextRoutine            equ $FC
    866                  00FB     resetAnimAndSubRoutine equ $FB
    867                  00FA     nextSubRoutine         equ $FA
    868
    869                                                                    >>
    870                                                                    >>
    871                                                                    >>
    872                                                                    >>
    873                                                                    >>
    874                                                                    >>
    875                                                                    >>
    876        727A               AnimateSprite * @globals                 >>
    877                                                                    >>
    878  5+1   727A AE   44               ldx   anim,u                     >>
    879  6+1   727C AC   46               cmpx  prev_anim,u                >>
    880  3     727E 27   08               beq   Anim_Run                   >>
    881  5+1   7280 AF   46               stx   prev_anim,u                >>
    882  2     7282 C6   00                     ldb   #0
    883  4+1   7284 E7   48               stb   anim_frame,u               >>
    884  4+1   7286 E7   49               stb   anim_frame_duration,u      >>
    885                                                                    >>
    886        7288               Anim_Run                                 >>
    887  6+1   7288 6A   49               dec   anim_frame_duration,u      >>
    888  3     728A 2A   23               bpl   Anim_Wait                  >>
    889                                   * no offset table                >>
    890                                   * anim is the address of anim    >>
    891  4+1   728C E6   1F               ldb   -1,x
    892  4+1   728E E7   49                     stb   anim_frame_duration,u>>
    893                                                                    >>
    894  4+1   7290 E6   48               ldb   anim_frame,u               >>
    895  2     7292 58                    aslb
    896  4+1   7293 31   85               leay  b,x
    897  5+0   7295 EC   A4               ldd   ,y                         >>
    898                                   * bmi   Anim_End_FF              >>
    899  2     7297 81   FA                     cmpa  #$FA                 >>
    900  3     7299 24   15                     bhs   Anim_End_FF          >>
    901                                                                    >>
    902        729B               Anim_Next                                >>
    903                                      * ne pas utiliser             >>
    904  5+1   729B ED   4A               std   image_set,u                >>
    905  4+1   729D E6   C8 1A            ldb   status,u                   >>
    906  2     72A0 C4   03               andb  #status_x_orientation+statu>>
    907  5     72A2 F7   72AA             stb   Anim_dyn+1
    908                                                                    >>
    909  4+1   72A5 A6   42               lda   render_flags,u             >>
    910  2     72A7 84   FC               anda  #:(render_xmirror_mask+rend>>
    911        72A9               Anim_dyn
    912  2     72A9 8A   00               ora   #$00                       >>
    913                                                                    >>
    914  4+1   72AB A7   42               sta   render_flags,u
    915  6+1   72AD 6C   48               inc   anim_frame,u               >>
    916                                                                    >>
    917        72AF               Anim_Wait                                >>
    918  5     72AF 39                    rts                              >>
    919                                                                    >>
    920                                                                    >>
    921        72B0               Anim_End_FF                              >>
    922  2     72B0 4C                    inca                             >>
    923  3     72B1 26   08               bne   Anim_End_FE                >>
    924  2     72B3 C6   00                     ldb   #0
    925  4+1   72B5 E7   48               stb   anim_frame,u               >>
    926  5+0   72B7 EC   84               ldd   ,x                         >>
    927  3     72B9 20   E0               bra   Anim_Next                  >>
    928                                                                    >>
    929                                                                    >>
    930        72BB               Anim_End_FE                              >>
    931  2     72BB 4C                    inca                             >>
    932  3     72BC 26   0E               bne   Anim_End_FD                >>
    933  4+1   72BE A6   48               lda   anim_frame,u
    934  5     72C0 F7   72C4             stb   Anim_End_FE_dyn+1          >>
    935        72C3               Anim_End_FE_dyn
    936  2     72C3 80   00               suba  #$00                       >>
    937  4+1   72C5 A7   48               sta   anim_frame,u               >>
    938                                                                    >>
    939  2     72C7 48                    asla
    940  5+1   72C8 EC   86               ldd   a,x                        >>
    941  3     72CA 20   CF               bra   Anim_Next                  >>
    942                                                                    >>
    943                                                                    >>
    944        72CC               Anim_End_FD                              >>
    945  2     72CC 4C                    inca                             >>
    946  3     72CD 26   05               bne   Anim_End_FC                >>
    947  5+1   72CF EC   21               ldd   1,y                        >>
    948  5+1   72D1 ED   44               std   anim,u                     >>
    949  5     72D3 39                    rts                              >>
    950                                                                    >>
    951                                                                    >>
    952        72D4               Anim_End_FC                              >>
    953  2     72D4 4C                    inca                             >>
    954  3     72D5 26   0F               bne   Anim_End_FB                >>
    955  4+1   72D7 E6   C8 18            ldb   routine,u
    956  2     72DA CB   03               addb  #$03
    957  4+1   72DC E7   C8 18            stb   routine,u                  >>
    958  2     72DF 86   00               lda   #0
    959  4+1   72E1 A7   49               sta   anim_frame_duration,u      >>
    960  6+1   72E3 6C   48               inc   anim_frame,u               >>
    961  5     72E5 39                    rts                              >>
    962                                                                    >>
    963                                                                    >>
    964        72E6               Anim_End_FB                              >>
    965  2     72E6 4C                    inca                             >>
    966  3     72E7 26   08               bne   Anim_End_FA                >>
    967  2     72E9 86   00               lda   #0
    968  4+1   72EB A7   48               sta   anim_frame,u               >>
    969  4+1   72ED A7   C8 19            sta   routine_secondary,u        >>
    970  5     72F0 39                    rts                              >>
    971                                                                    >>
    972                                                                    >>
    973        72F1               Anim_End_FA                              >>
    974  2     72F1 4C                    inca                             >>
    975  3     72F2 26   08               bne   Anim_End                   >>
    976  4+1   72F4 E6   C8 19            ldb   routine_secondary,u        >>
    977  2     72F7 CB   03               addb  #$03
    978  4+1   72F9 E7   C8 19            stb   routine_secondary,u
    979        72FC               Anim_End
    980  5     72FC 39                    rts                              >>
    981                                                                    >>
    982                                                                    >>
    983                                                                    >>
    984                                                                    >>
    985                                                                    >>
    986                                                                    >>
    987                                                                    >>
    988                                                                    >>
    989                                                                    >>
    990                                                                    >>
    991
    992                                   INCLUD OBJMOVE
    993                           * --------------------------------------->>
    994                           * Subroutine translating object speed to >>
    995                           * This moves the object horizontally and >>
    996                           * but does not apply gravity to it
    997                           * --------------------------------------->>
    998
    999                                                                  *;>>
   1000                                                                  *;>>
   1001                                                                  *;>>
   1002                                                                  *;>>
   1003                                                                  *;>>
   1004                                                                  *
   1005                                                                  *;>>
   1006                                                                  *
   1007                                                                  *;>>
   1008        72FD               ObjectMove                             *O>>
   1009                                                                  * >>
   1010                                                                  * >>
   1011                                                                  * >>
   1012                                                                  * >>
   1013                                                                  * >>
   1014                                                                  * >>
   1015  4+1   72FD E6   C8 14            ldb   x_vel,u
   1016  2     7300 1D                    sex                            ; >>
   1017  5     7301 B7   730E             sta   am_ObjectMove_01+1
   1018  5+1   7304 EC   C8 14            ldd   x_vel,u
   1019  6+1   7307 E3   4D               addd  x_pos+1,u                ; >>
   1020  5+1   7309 ED   4D               std   x_pos+1,u                ; >>
   1021  4+1   730B A6   4C               lda   x_pos,u
   1022        730D               am_ObjectMove_01
   1023  2     730D 89   00               adca  #$00                     ; >>
   1024  4+1   730F A7   4C               sta   x_pos,u                  ; >>
   1025                            
   1026                                                                  * >>
   1027                                                                  * >>
   1028                                                                  * >>
   1029                                                                  * >>
   1030                                                                  * >>
   1031                                                                  * >>
   1032  4+1   7311 E6   C8 16            ldb   y_vel,u
   1033  2     7314 1D                    sex                            ; >>
   1034  5     7315 B7   7324             sta   am_ObjectMove_02+1
   1035  5+1   7318 EC   C8 16            ldd   y_vel,u
   1036  6+1   731B E3   C8 10            addd  y_pos+1,u                ; >>
   1037  5+1   731E ED   C8 10            std   y_pos+1,u                ; >>
   1038  4+1   7321 A6   4F               lda   y_pos,u
   1039        7323               am_ObjectMove_02
   1040  2     7323 89   00               adca  #$00                     ; >>
   1041  4+1   7325 A7   4F               sta   y_pos,u                  ; >>
   1042  5     7327 39                    rts                            * >>
   1043                                                                  *;>>
   1044                                                                  *;>>
   1045
   1046                                   INCLUD OBJLOAD
   1047                           * --------------------------------------->>
   1048                           * Single object loading subroutine
   1049                           * Find an empty object array
   1050                           *
   1051                           * input  REG : [u] pointeur sur l'objet c>>
   1052                           * output REG : [x] pointeur sur l'objet l>>
   1053                           * --------------------------------------->>
   1054
   1055                                                                  *;>>
   1056                                                                  *;>>
   1057                                                                  *;>>
   1058                                                                  *;>>
   1059                                                                  *;>>
   1060                                                                  *
   1061                                                                  *;>>
   1062                                                                  *S>>
   1063                                                                  * >>
   1064                                                                  * >>
   1065                                                                  * >>
   1066                                                                  * >>
   1067                                                                  * >>
   1068                                                                  *
   1069                                                                  */>>
   1070                                                                  * >>
   1071                                                                  * >>
   1072                                                                  * >>
   1073                                                                  * >>
   1074                                                                  *
   1075                                                                  *r>>
   1076                                                                  * >>
   1077                                                                  *;>>
   1078                                                                  *;>>
   1079                                                                  *;>>
   1080                                                                  *;>>
   1081                                                                  *;>>
   1082                                                                  *
   1083                                                                  *;>>
   1084                                                                  *
   1085                                                                  *;>>
   1086        7328               SingleObjLoad2                         *S>>
   1087  6     7328 1F   31               tfr   u,x                      * >>
   1088  4+1   732A 30   88 5A            leax  next_object,x            * >>
   1089  4     732D 8C   7042             cmpx  #Dynamic_Object_RAM_End  * >>
   1090  3     7330 27   0C               beq   SingleObjLoad2_02        * >>
   1091                                                                  * >>
   1092                                                                  * >>
   1093                                                                  * >>
   1094                                                                  * >>
   1095                                                                  * >>
   1096                                                                  * >>
   1097                                                                  * >>
   1098                                                                  * >>
   1099                                                                  *
   1100        7332               SingleObjLoad2_01                      *->>
   1101  6+0   7332 6D   84               tst   ,x                       * >>
   1102  3     7334 27   08               beq   SingleObjLoad2_02        * >>
   1103  4+1   7336 30   88 5A            leax  next_object,x            * >>
   1104  4     7339 8C   7042             cmpx  #Dynamic_Object_RAM_End
   1105  3     733C 26   F4               bne   SingleObjLoad2_01        * >>
   1106                                                                  *
   1107        733E               SingleObjLoad2_02                      *r>>
   1108  5     733E 39                    rts                            * >>
   1109                                                                  *
   1110                                                                  * >>
   1111                                                                  *+>>
   1112                                                                  *.>>
   1113                                                                  *.>>
   1114                                                                  *
   1115                                                                  * >>
   1116                                                                  * >>
   1117                                                                  * >>
   1118                                                                  * >>
   1119                                                                  * >>
   1120                                                                  * >>
   1121                                                                  *
   1122                                                                  *.>>
   1123                                                                  *.>>
   1124                                                                  * >>
   1125                                                                  * >>
   1126                                                                  * >>
   1127                                                                  *;>>
   1128                                                                  *;>>
   1129                                                                  *;>>
   1130                                                                  *;>>
   1131                                                                  *;>>
   1132                                                                  *
   1133                                                                  *;>>
   1134                                                                  *
   1135                                                                  *;>>
   1136                                                                  *S>>
   1137                                                                  * >>
   1138                                                                  * >>
   1139                                                                  *
   1140                                                                  *->>
   1141                                                                  * >>
   1142                                                                  * >>
   1143                                                                  * >>
   1144                                                                  * >>
   1145                                                                  *
   1146                                                                  *r>>
   1147                                                                  * >>
   1148                                                                  *;>>
   1149
   1150
   1151                                   INCLUD DELETOBJ
   1152                           * --------------------------------------->>
   1153                           * DeleteObject
   1154                           * ------------
   1155                           * Subroutine to delete an object.
   1156                           * If the object is rendered as a sprite i>>
   1157                           * routine
   1158                           *
   1159                           * DeleteObject
   1160                           * input REG : [u] object pointer (OST)
   1161                           *
   1162                           * DeleteObject_x
   1163                           * input REG : [x] object pointer (OST)
   1164                           * --------------------------------------->>
   1165
   1166                                                                  *;>>
   1167                                                                  *;>>
   1168                                                                  *;>>
   1169                                                                  *
   1170                                                                  *;>>
   1171                                                                  *
   1172                                                                  *;>>
   1173        733F               DeleteObject_x *@globals               *D>>
   1174  5+6   733F 34   56               pshs  d,x,u                    * >>
   1175  4+0   7341 33   84               leau  ,x                       *;>>
   1176  3     7343 20   02               bra   DOB_Start
   1177                            
   1178        7345               DeleteObject *@globals                 *D>>
   1179  5+6   7345 34   56               pshs  d,x,u
   1180                            
   1181        7347               DOB_Start
   1182  4+1   7347 A6   C8 47            lda   rsv_prev_render_flags_0,u
   1183  3     734A 2A   27               bpl   DOB_RemoveFromDPSB0        >>
   1184
   1185        734C               DOB_ToDeleteFlag0
   1186  4+1   734C A6   42               lda   render_flags,u
   1187  2     734E 8A   40               ora   #render_todelete_mask
   1188  4+1   7350 A7   42               sta   render_flags,u             >>
   1189                            
   1190        7352               DOB_Unset0
   1191  6     7352 BE   64E8             ldx   Lst_Priority_Unset_0       >>
   1192  5+0   7355 EF   84               stu   ,x
   1193  4+1   7357 30   02               leax  2,x
   1194  6     7359 BF   64E8             stx   Lst_Priority_Unset_0
   1195                            
   1196        735C               DOB_TestOnscreen1
   1197  4+1   735C A6   C8 59            lda   rsv_prev_render_flags_1,u
   1198  3     735F 2A   54               bpl   DOB_RemoveFromDPSB1        >>
   1199                            
   1200        7361               DOB_ToDeleteFlag1
   1201  4+1   7361 A6   42               lda   render_flags,u
   1202  2     7363 8A   40               ora   #render_todelete_mask
   1203  4+1   7365 A7   42               sta   render_flags,u             >>
   1204                            
   1205        7367               DOB_Unset1
   1206  6     7367 BE   654E             ldx   Lst_Priority_Unset_1       >>
   1207  5+0   736A EF   84               stu   ,x
   1208  4+1   736C 30   02               leax  2,x
   1209  6     736E BF   654E             stx   Lst_Priority_Unset_1
   1210  5+8   7371 35   D6               puls  d,x,u,pc                   >>
   1211
   1212        7373               DOB_RemoveFromDPSB0
   1213  5+1   7373 EC   C8 37            ldd   rsv_priority_prev_obj_0,u  >>
   1214  3     7376 26   11               bne   DOB_ChainPrevB0
   1215                            
   1216  4+1   7378 A6   C8 36            lda   rsv_priority_0,u
   1217  2     737B 48                    lsla
   1218  4     737C 108E 64C4             ldy   #Tbl_Priority_First_Entry_0>>
   1219  4+1   7380 31   A6               leay  a,y
   1220  5+1   7382 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1221  5+0   7385 ED   A4               std   ,y
   1222  3     7387 20   0A               bra   DOB_CheckPrioNextB0
   1223                            
   1224        7389               DOB_ChainPrevB0
   1225  5+1   7389 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1226  6+1   738C 10AE C8 37            ldy   rsv_priority_prev_obj_0,u
   1227  5+1   7390 ED   A8 39            std   rsv_priority_next_obj_0,y
   1228
   1229        7393               DOB_CheckPrioNextB0
   1230  5+1   7393 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1231  3     7396 26   11               bne   DOB_ChainNextB0
   1232
   1233  4+1   7398 A6   C8 36            lda   rsv_priority_0,u
   1234  2     739B 48                    lsla
   1235  4     739C 108E 64D6             ldy   #Tbl_Priority_Last_Entry_0
   1236  4+1   73A0 31   A6               leay  a,y
   1237  5+1   73A2 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   1238  5+0   73A5 ED   A4               std   ,y
   1239  3     73A7 20   B3               bra   DOB_TestOnscreen1
   1240                            
   1241        73A9               DOB_ChainNextB0
   1242  5+1   73A9 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   1243  6+1   73AC 10AE C8 39            ldy   rsv_priority_next_obj_0,u
   1244  5+1   73B0 ED   A8 37            std   rsv_priority_prev_obj_0,y
   1245  3     73B3 20   A7               bra   DOB_TestOnscreen1
   1246
   1247        73B5               DOB_RemoveFromDPSB1
   1248  5+1   73B5 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1249  3     73B8 26   11               bne   DOB_ChainPrevB1
   1250                            
   1251  4+1   73BA A6   C8 48            lda   rsv_priority_1,u
   1252  2     73BD 48                    lsla
   1253  4     73BE 108E 652A             ldy   #Tbl_Priority_First_Entry_1>>
   1254  4+1   73C2 31   A6               leay  a,y
   1255  5+1   73C4 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1256  5+0   73C7 ED   A4               std   ,y
   1257  3     73C9 20   0A               bra   DOB_CheckPrioNextB1
   1258                            
   1259        73CB               DOB_ChainPrevB1
   1260  5+1   73CB EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1261  6+1   73CE 10AE C8 49            ldy   rsv_priority_prev_obj_1,u
   1262  5+1   73D2 ED   A8 4B            std   rsv_priority_next_obj_1,y
   1263
   1264        73D5               DOB_CheckPrioNextB1
   1265  5+1   73D5 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1266  3     73D8 26   19               bne   DOB_ChainNextB1
   1267
   1268  4+1   73DA A6   C8 48            lda   rsv_priority_1,u
   1269  2     73DD 48                    lsla
   1270  4     73DE 108E 653C             ldy   #Tbl_Priority_Last_Entry_1
   1271  4+1   73E2 31   A6               leay  a,y
   1272  5+1   73E4 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1273  5+0   73E7 ED   A4               std   ,y
   1274  4+1   73E9 A6   C8 47            lda   rsv_prev_render_flags_0,u
   1275  3     73EC 2B   03               bmi   DOB_rts                    >>
   1276  8     73EE BD   7407             jsr   ClearObj                   >>
   1277        73F1               DOB_rts                                *
   1278  5+8   73F1 35   D6               puls  d,x,u,pc
   1279                            
   1280        73F3               DOB_ChainNextB1
   1281  5+1   73F3 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1282  6+1   73F6 10AE C8 4B            ldy   rsv_priority_next_obj_1,u
   1283  5+1   73FA ED   A8 49            std   rsv_priority_prev_obj_1,y
   1284  4+1   73FD A6   C8 47            lda   rsv_prev_render_flags_0,u
   1285  3     7400 2B   EF               bmi   DOB_rts                    >>
   1286  8     7402 BD   7407             jsr   ClearObj                   >>
   1287  5+8   7405 35   D6               puls  d,x,u,pc
   1288
   1289                                                                  * >>
   1290                                                                  *
   1291                                                                  * >>
   1292                                                                  * >>
   1293                                                                  *->>
   1294                                                                  * >>
   1295                                                                  * >>
   1296                                                                  * >>
   1297                                                                  * >>
   1298                                                                  *
   1299                                                                  * >>
   1300                                                                  *;>>
   1301
   1302                                   INCLUD CLEAROBJ
   1303                           * --------------------------------------->>
   1304                           * ClearObj
   1305                           * --------
   1306                           * Subroutine to clear an object data in O>>
   1307                           *
   1308                           * input REG : [u] pointer on objet (OST)
   1309                           * clear REG : [d,y]
   1310                           * --------------------------------------->>
   1311
   1312        7407               ClearObj *@globals
   1313  5+8   7407 34   76               pshs  d,x,y,u
   1314  7     7409 10FF 7430             sts   CLO_1+2
   1315  4+1   740D 32   C8 5A            leas  object_size,u
   1316  3     7410 CC   0000             ldd   #$0000
   1317  3     7413 8E   0000             ldx   #$0000
   1318  4+0   7416 31   84               leay  ,x
   1319  4+0   7418 33   84               leau  ,x
   1320  5+8   741A 34   76               pshs  d,x,y,u
   1321  5+8   741C 34   76               pshs  d,x,y,u
   1322  5+8   741E 34   76               pshs  d,x,y,u
   1323  5+8   7420 34   76               pshs  d,x,y,u
   1324  5+8   7422 34   76               pshs  d,x,y,u
   1325  5+8   7424 34   76               pshs  d,x,y,u
   1326  5+8   7426 34   76               pshs  d,x,y,u
   1327  5+8   7428 34   76               pshs  d,x,y,u
   1328  5+8   742A 34   76               pshs  d,x,y,u
   1329  4+0   742C 33   E4               leau  ,s
   1330        742E               CLO_1
   1331  4     742E 10CE 0000             lds   #$0000        ; start of ob>>
   1332  5+6   7432 36   36               pshu  d,x,y         ; saving 12 b>>
   1333  5+6   7434 36   36               pshu  d,x,y         ; DEPENDENCY >>
   1334  5+6   7436 36   36               pshu  d,x,y         ; DEPENDENCY >>
   1335        7438               CLO_2
   1336  5+10  7438 35   F6               puls  d,x,y,u,pc
   1337
   1338                                   INCLUD CHECKSPR
   1339                           * --------------------------------------->>
   1340                           * CheckSpritesRefresh
   1341                           * -------------------
   1342                           * Subroutine to determine if sprites are >>
   1343                           * Read Display Priority Structure (back t>>
   1344                           * priority: 0 - unregistred
   1345                           * priority: 1 - register non moving overl>>
   1346                           * priority; 2-8 - register moving sprite >>
   1347                           *
   1348                           * input REG : none
   1349                           * --------------------------------------->>
   1350
   1351        743A 0000          cur_priority            fdb   $00
   1352        743C 0000          cur_ptr_sub_obj_erase   fdb   $0000
   1353        743E 0000          cur_ptr_sub_obj_draw    fdb   $0000
   1354                            
   1355        7440               CheckSpritesRefresh
   1356
   1357        7440               CSR_Start
   1358  3     7440 CC   6590             ldd   #Tbl_Sub_Object_Erase
   1359  6     7443 FD   743C             std   cur_ptr_sub_obj_erase
   1360  3     7446 CC   65D0             ldd   #Tbl_Sub_Object_Draw
   1361  6     7449 FD   743E             std   cur_ptr_sub_obj_draw
   1362  5     744C B6   611D             lda   Glb_Cur_Wrk_Screen_Id      >>
   1363  3     744F 26   6E               bne   CSR_SetBuffer1
   1364                            
   1365        7451               CSR_SetBuffer0
   1366  2     7451 86   36               lda   #rsv_buffer_0              >>
   1367  5     7453 B7   752F             sta   CSR_ProcessEachPriorityLeve>>
   1368        7456               CSR_P8B0
   1369  6     7456 FE   64D4             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1370  3     7459 27   08               beq   CSR_P7B0
   1371  2     745B 86   08               lda   #$08
   1372  5     745D B7   743A             sta   cur_priority
   1373  8     7460 BD   752D             jsr   CSR_ProcessEachPriorityLeve>>
   1374        7463               CSR_P7B0
   1375  6     7463 FE   64D2             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1376  3     7466 27   08               beq   CSR_P6B0
   1377  2     7468 86   07               lda   #$07
   1378  5     746A B7   743A             sta   cur_priority
   1379  8     746D BD   752D             jsr   CSR_ProcessEachPriorityLeve>>
   1380        7470               CSR_P6B0
   1381  6     7470 FE   64D0             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1382  3     7473 27   08               beq   CSR_P5B0
   1383  2     7475 86   06               lda   #$06
   1384  5     7477 B7   743A             sta   cur_priority
   1385  8     747A BD   752D             jsr   CSR_ProcessEachPriorityLeve>>
   1386        747D               CSR_P5B0
   1387  6     747D FE   64CE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1388  3     7480 27   08               beq   CSR_P4B0
   1389  2     7482 86   05               lda   #$05
   1390  5     7484 B7   743A             sta   cur_priority
   1391  8     7487 BD   752D             jsr   CSR_ProcessEachPriorityLeve>>
   1392        748A               CSR_P4B0
   1393  6     748A FE   64CC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1394  3     748D 27   08               beq   CSR_P3B0
   1395  2     748F 86   04               lda   #$04
   1396  5     7491 B7   743A             sta   cur_priority
   1397  8     7494 BD   752D             jsr   CSR_ProcessEachPriorityLeve>>
   1398        7497               CSR_P3B0
   1399  6     7497 FE   64CA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1400  3     749A 27   08               beq   CSR_P2B0
   1401  2     749C 86   03               lda   #$03
   1402  5     749E B7   743A             sta   cur_priority
   1403  8     74A1 BD   752D             jsr   CSR_ProcessEachPriorityLeve>>
   1404        74A4               CSR_P2B0
   1405  6     74A4 FE   64C8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1406  3     74A7 27   08               beq   CSR_P1B0
   1407  2     74A9 86   02               lda   #$02
   1408  5     74AB B7   743A             sta   cur_priority
   1409  8     74AE BD   752D             jsr   CSR_ProcessEachPriorityLeve>>
   1410        74B1               CSR_P1B0
   1411  6     74B1 FE   64C6             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1412  3     74B4 27   08               beq   CSR_rtsB0
   1413  2     74B6 86   01               lda   #$01
   1414  5     74B8 B7   743A             sta   cur_priority
   1415  8     74BB BD   752D             jsr   CSR_ProcessEachPriorityLeve>>
   1416        74BE               CSR_rtsB0
   1417  5     74BE 39                    rts
   1418                            
   1419        74BF               CSR_SetBuffer1
   1420  2     74BF 86   48               lda   #rsv_buffer_1              >>
   1421  5     74C1 B7   752F             sta   CSR_ProcessEachPriorityLeve>>
   1422        74C4               CSR_P8B1
   1423  6     74C4 FE   653A             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1424  3     74C7 27   08               beq   CSR_P7B1
   1425  2     74C9 86   08               lda   #$08
   1426  5     74CB B7   743A             sta   cur_priority
   1427  8     74CE BD   752D             jsr   CSR_ProcessEachPriorityLeve>>
   1428        74D1               CSR_P7B1
   1429  6     74D1 FE   6538             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1430  3     74D4 27   08               beq   CSR_P6B1
   1431  2     74D6 86   07               lda   #$07
   1432  5     74D8 B7   743A             sta   cur_priority
   1433  8     74DB BD   752D             jsr   CSR_ProcessEachPriorityLeve>>
   1434        74DE               CSR_P6B1
   1435  6     74DE FE   6536             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1436  3     74E1 27   08               beq   CSR_P5B1
   1437  2     74E3 86   06               lda   #$06
   1438  5     74E5 B7   743A             sta   cur_priority
   1439  8     74E8 BD   752D             jsr   CSR_ProcessEachPriorityLeve>>
   1440        74EB               CSR_P5B1
   1441  6     74EB FE   6534             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1442  3     74EE 27   08               beq   CSR_P4B1
   1443  2     74F0 86   05               lda   #$05
   1444  5     74F2 B7   743A             sta   cur_priority
   1445  8     74F5 BD   752D             jsr   CSR_ProcessEachPriorityLeve>>
   1446        74F8               CSR_P4B1
   1447  6     74F8 FE   6532             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1448  3     74FB 27   08               beq   CSR_P3B1
   1449  2     74FD 86   04               lda   #$04
   1450  5     74FF B7   743A             sta   cur_priority
   1451  8     7502 BD   752D             jsr   CSR_ProcessEachPriorityLeve>>
   1452        7505               CSR_P3B1
   1453  6     7505 FE   6530             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1454  3     7508 27   08               beq   CSR_P2B1
   1455  2     750A 86   03               lda   #$03
   1456  5     750C B7   743A             sta   cur_priority
   1457  8     750F BD   752D             jsr   CSR_ProcessEachPriorityLeve>>
   1458        7512               CSR_P2B1
   1459  6     7512 FE   652E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1460  3     7515 27   08               beq   CSR_P1B1
   1461  2     7517 86   02               lda   #$02
   1462  5     7519 B7   743A             sta   cur_priority
   1463  8     751C BD   752D             jsr   CSR_ProcessEachPriorityLeve>>
   1464        751F               CSR_P1B1
   1465  6     751F FE   652C             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1466  3     7522 27   08               beq   CSR_rtsB1
   1467  2     7524 86   01               lda   #$01
   1468  5     7526 B7   743A             sta   cur_priority
   1469  8     7529 BD   752D             jsr   CSR_ProcessEachPriorityLeve>>
   1470        752C               CSR_rtsB1
   1471  5     752C 39                    rts
   1472
   1473        752D               CSR_ProcessEachPriorityLevel
   1474  4+1   752D 30   C8 10            leax  16,u                       >>
   1475                            
   1476        7530               CSR_CheckDelHide
   1477  4+1   7530 A6   42               lda   render_flags,u
   1478  2     7532 84   60               anda  #render_hide_mask!render_to>>
   1479  3     7534 26   2B               bne   CSR_DoNotDisplaySprite
   1480
   1481        7536               CSR_CheckRefresh
   1482  4+1   7536 A6   C8 29            lda   rsv_render_flags,u
   1483  2     7539 84   01               anda  #rsv_render_checkrefresh_ma>>
   1484  6     753B 1026 00FE             lbne  CSR_CheckErase
   1485
   1486        753F               CSR_UpdSpriteImageBasedOnMirror
   1487  4+1   753F A6   C8 29            lda   rsv_render_flags,u
   1488  2     7542 8A   01               ora   #rsv_render_checkrefresh_ma>>
   1489  4+1   7544 A7   C8 29            sta   rsv_render_flags,u         >>
   1490                            
   1491  4+1   7547 A6   42               lda   render_flags,u             >>
   1492  2     7549 84   03               anda  #render_xmirror_mask!render>>
   1493  6+1   754B 10AE 4A               ldy   image_set,u
   1494  4+1   754E E6   26               ldb   image_center_offset,y
   1495  4+1   7550 E7   C8 2C            stb   rsv_image_center_offset,u
   1496  4+1   7553 E6   A6               ldb   a,y
   1497  4+1   7555 31   A5               leay  b,y                        >>
   1498  6+1   7557 10AF C8 2E            sty   rsv_image_subset,u
   1499                            
   1500        755B               CSR_CheckPlayFieldCoord
   1501  4+1   755B A6   42               lda   render_flags,u
   1502  2     755D 84   10               anda  #render_playfieldcoord_mask>>
   1503  3     755F 27   2A               beq   CSR_CheckVerticalPosition  >>
   1504                            
   1505                                   * not yet implemented
   1506                                   * need to be updated with new alg>>
   1507                                   *ldd   x_pos,u
   1508                                   *subd  Glb_Camera_X_Pos
   1509                                   *ldy   rsv_mapping_frame,u
   1510                                   *addd  image_x_offset,y
   1511                                   *lbvs   CSR_SetOutOfRange        >>
   1512                                   *lbmi   CSR_SetOutOfRange        >>
   1513                                   *stb   x_pixel,u
   1514                                   *addb  image_x_size_l,y
   1515                                   *lbvs   CSR_SetOutOfRange        >>
   1516                                   *stb   rsv_x2_pixel,u
   1517                                   *cmpb  #screen_width
   1518                                   *lbgt   CSR_SetOutOfRange        >>
   1519
   1520                                   *ldd   y_pos,u
   1521                                   *subd  Glb_Camera_Y_Pos
   1522                                   *addd  image_y1_offset,y
   1523                                   *bvs   CSR_SetOutOfRange         >>
   1524                                   *bmi   CSR_SetOutOfRange         >>
   1525                                   *stb   y_pixel,u
   1526                                   *addb  image_y_size_l,y
   1527                                   *bvs   CSR_SetOutOfRange         >>
   1528                                   *stb   rsv_y2_pixel,u
   1529                                   *cmpb  #screen_bottom
   1530                                   *bhi   CSR_SetOutOfRange         >>
   1531                                   *lda   rsv_render_flags,u
   1532                                   *anda  #:rsv_render_outofrange_ma>>
   1533                                   *sta   rsv_render_flags,u
   1534                                   *bra   CSR_CheckErase
   1535                            
   1536        7561               CSR_DoNotDisplaySprite
   1537  4+1   7561 A6   43               lda   priority,u
   1538  5     7563 B1   743A             cmpa  cur_priority
   1539  3     7566 26   1C               bne   CSR_NextObject             >>
   1540                            
   1541  4+1   7568 A6   C8 29            lda   rsv_render_flags,u
   1542  2     756B 84   F9               anda  #:rsv_render_erasesprite_ma>>
   1543  4+1   756D A7   C8 29            sta   rsv_render_flags,u
   1544                            
   1545  4+1   7570 E6   88 11            ldb   buf_prev_render_flags,x
   1546  3     7573 2A   0F               bpl   CSR_NextObject             >>
   1547                            
   1548  2     7575 8A   02               ora   #rsv_render_erasesprite_mas>>
   1549  4+1   7577 A7   C8 29            sta   rsv_render_flags,u
   1550                            
   1551  7     757A 10BE 743C             ldy   cur_ptr_sub_obj_erase      >>
   1552  5+3   757E EF   A1               stu   ,y++
   1553  7     7580 10BF 743C             sty   cur_ptr_sub_obj_erase
   1554                            
   1555        7584               CSR_NextObject
   1556  5+1   7584 EE   03               ldu   buf_priority_next_obj,x
   1557  6     7586 1026 FFA3             lbne  CSR_ProcessEachPriorityLeve>>
   1558  5     758A 39                    rts
   1559
   1560        758B               CSR_CheckVerticalPosition
   1561  4+1   758B A6   C8 12            lda   x_pixel,u                  >>
   1562  4+1   758E A8   C8 2C            eora  rsv_image_center_offset,u  >>
   1563  2     7591 84   01               anda  #$01                       >>
   1564  2     7593 48                    asla                             >>
   1565  4+1   7594 E6   42               ldb   render_flags,u
   1566  2     7596 C4   04               andb  #render_overlay_mask       >>
   1567  3     7598 27   01               beq   CSR_NoOverlay
   1568  2     759A 4C                    inca
   1569        759B               CSR_NoOverlay
   1570  4+1   759B E6   A6               ldb   a,y
   1571  3     759D 27   08               beq   CSR_NoDefinedFrame
   1572  4+1   759F 31   A5               leay  b,y                        >>
   1573  6+1   75A1 10AF C8 30            sty   rsv_mapping_frame,u
   1574  3     75A5 20   16               bra CSR_CVP_Continue
   1575                            
   1576        75A7               CSR_NoDefinedFrame
   1577  2     75A7 84   01               anda  #$01                       >>
   1578  4+1   75A9 E6   A6               ldb   a,y
   1579  3     75AB 27   08               beq   CSR_NoFrameFound           >>
   1580  4+1   75AD 31   A5               leay  b,y                        >>
   1581  6+1   75AF 10AF C8 30            sty   rsv_mapping_frame,u
   1582  3     75B3 20   08               bra CSR_CVP_Continue
   1583                            
   1584        75B5               CSR_NoFrameFound
   1585  4     75B5 108E 0000             ldy   #$0000
   1586  6+1   75B9 10AF C8 30            sty   rsv_mapping_frame,u
   1587
   1588        75BD               CSR_CVP_Continue
   1589  4+1   75BD E6   C8 13            ldb   y_pixel,u                  >>
   1590  6+1   75C0 10AE C8 2E            ldy   rsv_image_subset,u
   1591  4+1   75C4 EB   25               addb  image_subset_y1_offset,y
   1592  2     75C6 C1   E3               cmpb  #screen_bottom
   1593  3     75C8 22   6B               bhi   CSR_SetOutOfRange
   1594  2     75CA C1   1C               cmpb  #screen_top
   1595  3     75CC 25   67               blo   CSR_SetOutOfRange
   1596  4+1   75CE E7   C8 33            stb   rsv_y1_pixel,u
   1597  6+1   75D1 10AE 4A               ldy   image_set,u
   1598  4+1   75D4 EB   25               addb  image_y_size,y
   1599  2     75D6 C1   E3               cmpb  #screen_bottom
   1600  3     75D8 22   5B               bhi   CSR_SetOutOfRange
   1601  2     75DA C1   1C               cmpb  #screen_top
   1602  3     75DC 25   57               blo   CSR_SetOutOfRange
   1603  4+1   75DE E7   C8 35            stb   rsv_y2_pixel,u
   1604  4+1   75E1 E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1605  3     75E4 25   4F               blo   CSR_SetOutOfRange
   1606                            
   1607  4+1   75E6 A6   42               lda   render_flags,u             >>
   1608  2     75E8 85   80               bita  #render_xloop_mask
   1609  3     75EA 26   2B               bne   CSR_DontCheckXFrontier
   1610                            
   1611  4+1   75EC E6   C8 12            ldb   x_pixel,u
   1612  6+1   75EF 10AE C8 2E            ldy   rsv_image_subset,u
   1613  4+1   75F3 EB   24               addb  image_subset_x1_offset,y
   1614  2     75F5 C1   CF               cmpb  #screen_right
   1615  3     75F7 22   3C               bhi   CSR_SetOutOfRange
   1616  2     75F9 C1   30               cmpb  #screen_left
   1617  3     75FB 25   38               blo   CSR_SetOutOfRange
   1618  4+1   75FD E7   C8 32            stb   rsv_x1_pixel,u
   1619  6+1   7600 10AE 4A               ldy   image_set,u
   1620  4+1   7603 EB   24               addb  image_x_size,y
   1621  2     7605 C1   CF               cmpb  #screen_right
   1622  3     7607 22   2C               bhi   CSR_SetOutOfRange
   1623  2     7609 C1   30               cmpb  #screen_left
   1624  3     760B 25   28               blo   CSR_SetOutOfRange
   1625  4+1   760D E7   C8 34            stb   rsv_x2_pixel,u
   1626  4+1   7610 E1   C8 32            cmpb  rsv_x1_pixel,u             >>
   1627  3     7613 25   20               blo   CSR_SetOutOfRange
   1628                            
   1629  3     7615 20   14               bra   CSR_DontCheckXFrontier_end
   1630                            
   1631        7617               CSR_DontCheckXFrontier
   1632  4+1   7617 E6   C8 12            ldb   x_pixel,u
   1633  6+1   761A 10AE C8 2E            ldy   rsv_image_subset,u
   1634  4+1   761E EB   24               addb  image_subset_x1_offset,y
   1635  4+1   7620 E7   C8 32            stb   rsv_x1_pixel,u
   1636                            
   1637  6+1   7623 10AE 4A               ldy   image_set,u
   1638  4+1   7626 EB   24               addb  image_x_size,y
   1639  4+1   7628 E7   C8 34            stb   rsv_x2_pixel,u
   1640
   1641        762B               CSR_DontCheckXFrontier_end
   1642  4+1   762B A6   C8 29            lda   rsv_render_flags,u
   1643  2     762E 84   F7               anda  #:rsv_render_outofrange_mas>>
   1644  4+1   7630 A7   C8 29            sta   rsv_render_flags,u
   1645  3     7633 20   08               bra   CSR_CheckErase
   1646                            
   1647        7635               CSR_SetOutOfRange
   1648  4+1   7635 A6   C8 29            lda   rsv_render_flags,u
   1649  2     7638 8A   08               ora   #rsv_render_outofrange_mask>>
   1650  4+1   763A A7   C8 29            sta   rsv_render_flags,u
   1651
   1652        763D               CSR_CheckErase
   1653  6     763D BF   771B             stx   CSR_CheckDraw+1
   1654  4+1   7640 A6   00               lda   buf_priority,x
   1655  5     7642 B1   743A             cmpa  cur_priority
   1656  6     7645 1026 00D1             lbne  CSR_CheckDraw
   1657                            
   1658  7     7649 10BE 743C             ldy   cur_ptr_sub_obj_erase
   1659                            
   1660  4+1   764D A6   C8 29            lda   rsv_render_flags,u
   1661  2     7650 84   08               anda  #rsv_render_outofrange_mask>>
   1662  3     7652 27   09               beq   CSR_CheckErase_InRange
   1663  4+1   7654 A6   88 11            lda   buf_prev_render_flags,x
   1664  6     7657 102A 010E             lbpl  CSR_SetEraseDrawFalse      >>
   1665  3     765B 20   20               bra   CSR_SetEraseTrue
   1666                            
   1667        765D               CSR_CheckErase_InRange
   1668  4+1   765D A6   88 11            lda   buf_prev_render_flags,x
   1669  6     7660 102A 00AE             lbpl  CSR_SetEraseFalse          >>
   1670  5+1   7664 EC   C8 12            ldd   xy_pixel,u
   1671  2     7667 44                    lsra                             >>
   1672  7+1   7668 10A3 0B               cmpd  buf_prev_xy_pixel,x
   1673  3     766B 26   10               bne   CSR_SetEraseTrue           >>
   1674  5+1   766D EC   C8 30            ldd   rsv_mapping_frame,u
   1675  7+1   7670 10A3 07               cmpd  buf_prev_mapping_frame,x
   1676  3     7673 26   08               bne   CSR_SetEraseTrue           >>
   1677  4+1   7675 A6   43               lda   priority,u
   1678  4+1   7677 A1   00               cmpa  buf_priority,x
   1679  3     7679 26   02               bne   CSR_SetEraseTrue           >>
   1680  3     767B 20   11               bra   CSR_SubEraseSpriteSearchIni>>
   1681                            
   1682        767D               CSR_SetEraseTrue
   1683  4+1   767D A6   C8 29            lda   rsv_render_flags,u
   1684  2     7680 8A   02               ora   #rsv_render_erasesprite_mas>>
   1685  4+1   7682 A7   C8 29            sta   rsv_render_flags,u
   1686                            
   1687  5+3   7685 EF   A1               stu   ,y++
   1688  7     7687 10BF 743C             sty   cur_ptr_sub_obj_erase
   1689                            
   1690  5     768B 16   008C             lbra   CSR_CheckDraw
   1691                            
   1692        768E               CSR_SubEraseSpriteSearchInit
   1693
   1694                                   * search a collision with a sprit>>
   1695                                   * the sprite under should have to>>
   1696                                   * in this case it forces the refr>>
   1697                                   * as a sub loop, this should be o>>
   1698                                   * there are two lists because a s>>
   1699                                   * and displayed at another positi>>
   1700
   1701  6     768E BE   743C             ldx   cur_ptr_sub_obj_erase
   1702  5     7691 B6   611D             lda   Glb_Cur_Wrk_Screen_Id      >>
   1703  3     7694 26   28               bne   CSR_SubEraseSearchB1
   1704                            
   1705        7696               CSR_SubEraseSearchB0
   1706  4     7696 8C   6590             cmpx  #Tbl_Sub_Object_Erase
   1707  3     7699 27   4B               beq   CSR_SubDrawSpriteSearchInit>>
   1708  6+3   769B 10AE 83               ldy   ,--x
   1709                            
   1710        769E               CSR_SubEraseCheckCollisionB0
   1711  5+1   769E EC   A8 43            ldd   rsv_prev_xy1_pixel_0,y     >>
   1712  4+1   76A1 A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1713  3     76A4 22   F0               bhi   CSR_SubEraseSearchB0
   1714  4+1   76A6 E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1715  3     76A9 22   EB               bhi   CSR_SubEraseSearchB0
   1716  5+1   76AB EC   A8 45            ldd   rsv_prev_xy2_pixel_0,y     >>
   1717  4+1   76AE A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1718  3     76B1 25   E3               blo   CSR_SubEraseSearchB0
   1719  4+1   76B3 E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1720  3     76B6 25   DE               blo   CSR_SubEraseSearchB0
   1721                            
   1722  7     76B8 10BE 743C             ldy   cur_ptr_sub_obj_erase
   1723  3     76BC 20   BF               bra   CSR_SetEraseTrue           >>
   1724
   1725        76BE               CSR_SubEraseSearchB1
   1726  4     76BE 8C   6590             cmpx  #Tbl_Sub_Object_Erase
   1727  3     76C1 27   23               beq   CSR_SubDrawSpriteSearchInit>>
   1728  6+3   76C3 10AE 83               ldy   ,--x
   1729                            
   1730        76C6               CSR_SubEraseCheckCollisionB1
   1731  5+1   76C6 EC   A8 55            ldd   rsv_prev_xy1_pixel_1,y     >>
   1732  4+1   76C9 A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1733  3     76CC 22   F0               bhi   CSR_SubEraseSearchB1
   1734  4+1   76CE E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1735  3     76D1 22   EB               bhi   CSR_SubEraseSearchB1
   1736  5+1   76D3 EC   A8 57            ldd   rsv_prev_xy2_pixel_1,y     >>
   1737  4+1   76D6 A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1738  3     76D9 25   E3               blo   CSR_SubEraseSearchB1
   1739  4+1   76DB E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1740  3     76DE 25   DE               blo   CSR_SubEraseSearchB1
   1741                            
   1742  7     76E0 10BE 743C             ldy   cur_ptr_sub_obj_erase
   1743  3     76E4 20   97               bra   CSR_SetEraseTrue           >>
   1744
   1745        76E6               CSR_SubDrawSpriteSearchInit
   1746  6     76E6 BE   743E             ldx   cur_ptr_sub_obj_draw
   1747                            
   1748        76E9               CSR_SubDrawSearch
   1749  4     76E9 8C   65D0             cmpx  #Tbl_Sub_Object_Draw
   1750  3     76EC 27   24               beq   CSR_SetEraseFalse          >>
   1751  6+3   76EE 10AE 83               ldy   ,--x
   1752
   1753        76F1               CSR_SubDrawCheckCollision
   1754  5+1   76F1 EC   A8 32            ldd   rsv_xy1_pixel,y            >>
   1755  4+1   76F4 A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1756  3     76F7 22   F0               bhi   CSR_SubDrawSearch
   1757  4+1   76F9 E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1758  3     76FC 22   EB               bhi   CSR_SubDrawSearch
   1759  5+1   76FE EC   A8 34            ldd   rsv_xy2_pixel,y            >>
   1760  4+1   7701 A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1761  3     7704 25   E3               blo   CSR_SubDrawSearch
   1762  4+1   7706 E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1763  3     7709 25   DE               blo   CSR_SubDrawSearch
   1764                            
   1765  7     770B 10BE 743C             ldy   cur_ptr_sub_obj_erase
   1766  5     770F 16   FF6B             lbra  CSR_SetEraseTrue           >>
   1767
   1768        7712               CSR_SetEraseFalse
   1769  4+1   7712 A6   C8 29            lda   rsv_render_flags,u
   1770  2     7715 84   FD               anda  #:rsv_render_erasesprite_ma>>
   1771  4+1   7717 A7   C8 29            sta   rsv_render_flags,u
   1772                            
   1773        771A               CSR_CheckDraw
   1774  3     771A 8E   FFFF             ldx   #$FFFF                     >>
   1775  4+1   771D A6   43               lda   priority,u
   1776  5     771F B1   743A             cmpa  cur_priority
   1777  6     7722 1026 FE5E             lbne  CSR_NextObject
   1778                            
   1779  7     7726 10BE 743E             ldy   cur_ptr_sub_obj_draw
   1780                            
   1781  4+1   772A A6   C8 29            lda   rsv_render_flags,u
   1782  2     772D 84   08               anda  #rsv_render_outofrange_mask>>
   1783  3     772F 26   40               bne   CSR_SetDrawFalse           >>
   1784  5+1   7731 EC   C8 30            ldd   rsv_mapping_frame,u
   1785  3     7734 27   3B               beq   CSR_SetDrawFalse           >>
   1786  4+1   7736 A6   42               lda   render_flags,u
   1787  2     7738 84   20               anda  #render_hide_mask
   1788  3     773A 26   35               bne   CSR_SetDrawFalse           >>
   1789                            
   1790        773C               CSR_SetDrawTrue
   1791  4+1   773C A6   C8 29            lda   rsv_render_flags,u
   1792  2     773F 8A   04               ora   #rsv_render_displaysprite_m>>
   1793  4+1   7741 A7   C8 29            sta   rsv_render_flags,u
   1794                            
   1795  2     7744 85   02               bita  #rsv_render_erasesprite_mas>>
   1796  3     7746 27   02               beq   CSR_SDT1
   1797  3     7748 20   07               bra   CSR_SDT2
   1798        774A               CSR_SDT1
   1799  4+1   774A E6   88 11            ldb   buf_prev_render_flags,x
   1800  3     774D 2B   0D               bmi   CSR_SetHide
   1801  3     774F 20   05               bra   CSR_SDT3
   1802        7751               CSR_SDT2
   1803  4+1   7751 E6   88 11            ldb   buf_prev_render_flags,x
   1804  3     7754 2A   06               bpl   CSR_SetHide
   1805        7756               CSR_SDT3
   1806  5+3   7756 EF   A1               stu   ,y++
   1807  7     7758 10BF 743E             sty   cur_ptr_sub_obj_draw       >>
   1808
   1809        775C               CSR_SetHide
   1810  4+1   775C A6   42               lda   render_flags,u
   1811  2     775E 8A   20               ora   #render_hide_mask          >>
   1812  4+1   7760 A7   42               sta   render_flags,u
   1813                            
   1814  5+1   7762 EE   03               ldu   buf_priority_next_obj,x
   1815  6     7764 1026 FDC5             lbne  CSR_ProcessEachPriorityLeve>>
   1816  5     7768 39                    rts
   1817
   1818        7769               CSR_SetEraseDrawFalse
   1819  4+1   7769 A6   C8 29            lda   rsv_render_flags,u
   1820  2     776C 84   FD               anda  #:rsv_render_erasesprite_ma>>
   1821  4+1   776E A7   C8 29            sta   rsv_render_flags,u
   1822
   1823        7771               CSR_SetDrawFalse
   1824  4+1   7771 A6   C8 29            lda   rsv_render_flags,u
   1825  2     7774 84   FB               anda  #:rsv_render_displaysprite_>>
   1826  4+1   7776 A7   C8 29            sta   rsv_render_flags,u
   1827                            
   1828  5+1   7779 EE   03               ldu   buf_priority_next_obj,x
   1829  6     777B 1026 FDAE             lbne   CSR_ProcessEachPriorityLev>>
   1830  5     777F 39                    rts
   1831
   1832
   1833                                   INCLUD ERASESPR
   1834                           * --------------------------------------->>
   1835                           * EraseSprites
   1836                           * ------------
   1837                           * Subroutine to erase sprites on screen
   1838                           * Read Display Priority Structure (front >>
   1839                           * priority: 0 - unregistred
   1840                           * priority: 1 - register non moving overl>>
   1841                           * priority; 2-8 - register moving sprite >>
   1842                           *
   1843                           * input REG : none
   1844                           * --------------------------------------->>
   1845                            
   1846        7780               EraseSprites
   1847
   1848        7780               ESP_Start
   1849  5     7780 B6   611D             lda   Glb_Cur_Wrk_Screen_Id      >>
   1850  3     7783 26   69               bne   ESP_P1B1
   1851
   1852        7785               ESP_P1B0
   1853  6     7785 FE   64D8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1854  3     7788 27   08               beq   ESP_P2B0
   1855  2     778A 86   01               lda   #$01
   1856  5     778C B7   785B             sta   ESP_CheckPriorityB0+1
   1857  8     778F BD   7857             jsr   ESP_ProcessEachPriorityLeve>>
   1858        7792               ESP_P2B0
   1859  6     7792 FE   64DA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1860  3     7795 27   08               beq   ESP_P3B0
   1861  2     7797 86   02               lda   #$02
   1862  5     7799 B7   785B             sta   ESP_CheckPriorityB0+1
   1863  8     779C BD   7857             jsr   ESP_ProcessEachPriorityLeve>>
   1864        779F               ESP_P3B0
   1865  6     779F FE   64DC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1866  3     77A2 27   08               beq   ESP_P4B0
   1867  2     77A4 86   03               lda   #$03
   1868  5     77A6 B7   785B             sta   ESP_CheckPriorityB0+1
   1869  8     77A9 BD   7857             jsr   ESP_ProcessEachPriorityLeve>>
   1870        77AC               ESP_P4B0
   1871  6     77AC FE   64DE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1872  3     77AF 27   08               beq   ESP_P5B0
   1873  2     77B1 86   04               lda   #$04
   1874  5     77B3 B7   785B             sta   ESP_CheckPriorityB0+1
   1875  8     77B6 BD   7857             jsr   ESP_ProcessEachPriorityLeve>>
   1876        77B9               ESP_P5B0
   1877  6     77B9 FE   64E0             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1878  3     77BC 27   08               beq   ESP_P6B0
   1879  2     77BE 86   05               lda   #$05
   1880  5     77C0 B7   785B             sta   ESP_CheckPriorityB0+1
   1881  8     77C3 BD   7857             jsr   ESP_ProcessEachPriorityLeve>>
   1882        77C6               ESP_P6B0
   1883  6     77C6 FE   64E2             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1884  3     77C9 27   08               beq   ESP_P7B0
   1885  2     77CB 86   06               lda   #$06
   1886  5     77CD B7   785B             sta   ESP_CheckPriorityB0+1
   1887  8     77D0 BD   7857             jsr   ESP_ProcessEachPriorityLeve>>
   1888        77D3               ESP_P7B0
   1889  6     77D3 FE   64E4             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1890  3     77D6 27   08               beq   ESP_P8B0
   1891  2     77D8 86   07               lda   #$07
   1892  5     77DA B7   785B             sta   ESP_CheckPriorityB0+1
   1893  8     77DD BD   7857             jsr   ESP_ProcessEachPriorityLeve>>
   1894        77E0               ESP_P8B0
   1895  6     77E0 FE   64E6             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1896  3     77E3 27   08               beq   ESP_rtsB0
   1897  2     77E5 86   08               lda   #$08
   1898  5     77E7 B7   785B             sta   ESP_CheckPriorityB0+1
   1899  8     77EA BD   7857             jsr   ESP_ProcessEachPriorityLeve>>
   1900        77ED               ESP_rtsB0
   1901  5     77ED 39                    rts
   1902                            
   1903        77EE               ESP_P1B1
   1904  6     77EE FE   653E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1905  3     77F1 27   08               beq   ESP_P2B1
   1906  2     77F3 86   01               lda   #$01
   1907  5     77F5 B7   78AC             sta   ESP_CheckPriorityB1+1
   1908  8     77F8 BD   78A8             jsr   ESP_ProcessEachPriorityLeve>>
   1909        77FB               ESP_P2B1
   1910  6     77FB FE   6540             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1911  3     77FE 27   08               beq   ESP_P3B1
   1912  2     7800 86   02               lda   #$02
   1913  5     7802 B7   78AC             sta   ESP_CheckPriorityB1+1
   1914  8     7805 BD   78A8             jsr   ESP_ProcessEachPriorityLeve>>
   1915        7808               ESP_P3B1
   1916  6     7808 FE   6542             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1917  3     780B 27   08               beq   ESP_P4B1
   1918  2     780D 86   03               lda   #$03
   1919  5     780F B7   78AC             sta   ESP_CheckPriorityB1+1
   1920  8     7812 BD   78A8             jsr   ESP_ProcessEachPriorityLeve>>
   1921        7815               ESP_P4B1
   1922  6     7815 FE   6544             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1923  3     7818 27   08               beq   ESP_P5B1
   1924  2     781A 86   04               lda   #$04
   1925  5     781C B7   78AC             sta   ESP_CheckPriorityB1+1
   1926  8     781F BD   78A8             jsr   ESP_ProcessEachPriorityLeve>>
   1927        7822               ESP_P5B1
   1928  6     7822 FE   6546             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1929  3     7825 27   08               beq   ESP_P6B1
   1930  2     7827 86   05               lda   #$05
   1931  5     7829 B7   78AC             sta   ESP_CheckPriorityB1+1
   1932  8     782C BD   78A8             jsr   ESP_ProcessEachPriorityLeve>>
   1933        782F               ESP_P6B1
   1934  6     782F FE   6548             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1935  3     7832 27   08               beq   ESP_P7B1
   1936  2     7834 86   06               lda   #$06
   1937  5     7836 B7   78AC             sta   ESP_CheckPriorityB1+1
   1938  8     7839 BD   78A8             jsr   ESP_ProcessEachPriorityLeve>>
   1939        783C               ESP_P7B1
   1940  6     783C FE   654A             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1941  3     783F 27   08               beq   ESP_P8B1
   1942  2     7841 86   07               lda   #$07
   1943  5     7843 B7   78AC             sta   ESP_CheckPriorityB1+1
   1944  8     7846 BD   78A8             jsr   ESP_ProcessEachPriorityLeve>>
   1945        7849               ESP_P8B1
   1946  6     7849 FE   654C             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1947  3     784C 27   08               beq   ESP_rtsB1
   1948  2     784E 86   08               lda   #$08
   1949  5     7850 B7   78AC             sta   ESP_CheckPriorityB1+1
   1950  8     7853 BD   78A8             jsr   ESP_ProcessEachPriorityLeve>>
   1951        7856               ESP_rtsB1
   1952  5     7856 39                    rts
   1953
   1954                           * *******
   1955                           * BUFFER0
   1956                           * *******
   1957
   1958        7857               ESP_ProcessEachPriorityLevelB0
   1959  4+1   7857 A6   C8 36            lda   rsv_priority_0,u
   1960                            
   1961        785A               ESP_CheckPriorityB0
   1962  2     785A 81   00               cmpa  #0                         >>
   1963  3     785C 26   44               bne   ESP_NextObjectB0           >>
   1964                            
   1965        785E               ESP_UnsetCheckRefreshB0
   1966  4+1   785E A6   C8 29            lda   rsv_render_flags,u
   1967  4+1   7861 E6   42               ldb   render_flags,u
   1968  2     7863 C4   08               andb  #render_motionless_mask
   1969  3     7865 26   05               bne   ESP_CheckEraseB0
   1970  2     7867 84   FE               anda  #:rsv_render_checkrefresh_m>>
   1971  4+1   7869 A7   C8 29            sta   rsv_render_flags,u
   1972                            
   1973        786C               ESP_CheckEraseB0
   1974  2     786C 84   02               anda  #rsv_render_erasesprite_mas>>
   1975  3     786E 27   32               beq   ESP_NextObjectB0
   1976  4+1   7870 E6   C8 47            ldb   rsv_prev_render_flags_0,u
   1977  2     7873 C4   01               andb  #rsv_prev_render_overlay_ma>>
   1978  3     7875 26   23               bne   ESP_UnsetOnScreenFlagB0
   1979                            
   1980        7877               ESP_CallEraseRoutineB0
   1981  6     7877 FF   788B             stu   ESP_CallEraseRoutineB0_00+1>>
   1982  5+1   787A AE   C8 3D            ldx   rsv_prev_mapping_frame_0,u >>
   1983  4+1   787D A6   03               lda   page_erase_routine,x
   1984  5     787F B7   E7E5             sta   $E7E5                      >>
   1985  5+1   7882 EE   C8 3F            ldu   rsv_bgdata_0,u             >>
   1986  7+4   7885 AD   98 04            jsr   [erase_routine,x]          >>
   1987  4+0   7888 31   C4               leay  ,u                         >>
   1988        788A               ESP_CallEraseRoutineB0_00
   1989  3     788A CE   0000             ldu   #$0000                     >>
   1990  5+1   788D EC   C8 3F            ldd   rsv_bgdata_0,u             >>
   1991  4     7890 83   0010             subd  #16
   1992  2     7893 C4   C0               andb  #256-cell_size             >>
   1993  6     7895 1F   01               tfr   d,x                        >>
   1994                            
   1995        7897               ESP_FreeEraseBufferB0
   1996  8     7897 BD   7C1E             jsr   BgBufferFree               >>
   1997                            
   1998        789A               ESP_UnsetOnScreenFlagB0
   1999  4+1   789A A6   C8 47            lda   rsv_prev_render_flags_0,u
   2000  2     789D 84   7F               anda  #:rsv_prev_render_onscreen_>>
   2001  4+1   789F A7   C8 47            sta   rsv_prev_render_flags_0,u
   2002
   2003        78A2               ESP_NextObjectB0
   2004  5+1   78A2 EE   C8 37            ldu   rsv_priority_prev_obj_0,u
   2005  3     78A5 26   B0               bne   ESP_ProcessEachPriorityLeve>>
   2006  5     78A7 39                    rts
   2007
   2008                           * *******
   2009                           * BUFFER1
   2010                           * *******
   2011                            
   2012        78A8               ESP_ProcessEachPriorityLevelB1
   2013  4+1   78A8 A6   C8 48            lda   rsv_priority_1,u
   2014                            
   2015        78AB               ESP_CheckPriorityB1
   2016  2     78AB 81   00               cmpa  #0                         >>
   2017  3     78AD 26   44               bne   ESP_NextObjectB1           >>
   2018                            
   2019        78AF               ESP_UnsetCheckRefreshB1
   2020  4+1   78AF A6   C8 29            lda   rsv_render_flags,u
   2021  4+1   78B2 E6   42               ldb   render_flags,u
   2022  2     78B4 C4   08               andb  #render_motionless_mask
   2023  3     78B6 26   05               bne   ESP_CheckEraseB1
   2024  2     78B8 84   FE               anda  #:rsv_render_checkrefresh_m>>
   2025  4+1   78BA A7   C8 29            sta   rsv_render_flags,u
   2026                            
   2027        78BD               ESP_CheckEraseB1
   2028  2     78BD 84   02               anda  #rsv_render_erasesprite_mas>>
   2029  3     78BF 27   32               beq   ESP_NextObjectB1
   2030  4+1   78C1 E6   C8 59            ldb   rsv_prev_render_flags_1,u
   2031  2     78C4 C4   01               andb  #rsv_prev_render_overlay_ma>>
   2032  3     78C6 26   23               bne   ESP_UnsetOnScreenFlagB1
   2033                            
   2034        78C8               ESP_CallEraseRoutineB1
   2035  6     78C8 FF   78DC             stu   ESP_CallEraseRoutineB1_00+1>>
   2036  5+1   78CB AE   C8 4F            ldx   rsv_prev_mapping_frame_1,u >>
   2037  4+1   78CE A6   03               lda   page_erase_routine,x
   2038  5     78D0 B7   E7E5             sta   $E7E5                      >>
   2039  5+1   78D3 EE   C8 51            ldu   rsv_bgdata_1,u             >>
   2040  7+4   78D6 AD   98 04            jsr   [erase_routine,x]          >>
   2041  4+0   78D9 31   C4               leay  ,u                         >>
   2042        78DB               ESP_CallEraseRoutineB1_00
   2043  3     78DB CE   0000             ldu   #$0000                     >>
   2044  5+1   78DE EC   C8 51            ldd   rsv_bgdata_1,u             >>
   2045  4     78E1 83   0010             subd  #16
   2046  2     78E4 C4   C0               andb  #256-cell_size             >>
   2047  6     78E6 1F   01               tfr   d,x                        >>
   2048                            
   2049        78E8               ESP_FreeEraseBufferB1
   2050  8     78E8 BD   7C1E             jsr   BgBufferFree               >>
   2051                            
   2052        78EB               ESP_UnsetOnScreenFlagB1
   2053  4+1   78EB A6   C8 59            lda   rsv_prev_render_flags_1,u
   2054  2     78EE 84   7F               anda  #:rsv_prev_render_onscreen_>>
   2055  4+1   78F0 A7   C8 59            sta   rsv_prev_render_flags_1,u
   2056                            
   2057        78F3               ESP_NextObjectB1
   2058  5+1   78F3 EE   C8 49            ldu   rsv_priority_prev_obj_1,u
   2059  3     78F6 26   B0               bne   ESP_ProcessEachPriorityLeve>>
   2060  5     78F8 39                    rts
   2061
   2062                                   INCLUD UNSETDSP
   2063                           * --------------------------------------->>
   2064                           * UnsetDisplayPriority
   2065                           * --------------------
   2066                           * Subroutine to unset sprites in Display >>
   2067                           * Read Lst_Priority_Unset_0/1
   2068                           *
   2069                           * input REG : none
   2070                           * --------------------------------------->>
   2071                            
   2072        78F9               UnsetDisplayPriority
   2073
   2074        78F9               UDP_Start
   2075  5     78F9 B6   611D             lda   Glb_Cur_Wrk_Screen_Id      >>
   2076  3     78FC 26   6D               bne   UDP_B1
   2077                            
   2078        78FE               UDP_B0
   2079  3     78FE 8E   64EA             ldx   #Lst_Priority_Unset_0+2
   2080                            
   2081        7901               UDP_CheckEndB0
   2082  7     7901 BC   64E8             cmpx  Lst_Priority_Unset_0       >>
   2083  3     7904 26   07               bne   UDP_CheckPrioPrevB0
   2084                            
   2085        7906               UDP_InitListB0
   2086  3     7906 8E   64EA             ldx   #Lst_Priority_Unset_0+2
   2087  6     7909 BF   64E8             stx   Lst_Priority_Unset_0       >>
   2088  5     790C 39                    rts
   2089                            
   2090        790D               UDP_CheckPrioPrevB0
   2091  5+3   790D EE   81               ldu   ,x++
   2092  5+1   790F EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2093  3     7912 26   11               bne   UDP_ChainPrevB0
   2094                            
   2095  4+1   7914 A6   C8 36            lda   rsv_priority_0,u
   2096  2     7917 48                    lsla
   2097  4     7918 108E 64C4             ldy   #Tbl_Priority_First_Entry_0>>
   2098  4+1   791C 31   A6               leay  a,y
   2099  5+1   791E EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2100  5+0   7921 ED   A4               std   ,y
   2101  3     7923 20   0A               bra   UDP_CheckPrioNextB0
   2102                            
   2103        7925               UDP_ChainPrevB0
   2104  5+1   7925 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2105  6+1   7928 10AE C8 37            ldy   rsv_priority_prev_obj_0,u
   2106  5+1   792C ED   A8 39            std   rsv_priority_next_obj_0,y
   2107
   2108        792F               UDP_CheckPrioNextB0
   2109  5+1   792F EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2110  3     7932 26   11               bne   UDP_ChainNextB0
   2111
   2112  4+1   7934 A6   C8 36            lda   rsv_priority_0,u
   2113  2     7937 48                    lsla
   2114  4     7938 108E 64D6             ldy   #Tbl_Priority_Last_Entry_0
   2115  4+1   793C 31   A6               leay  a,y
   2116  5+1   793E EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2117  5+0   7941 ED   A4               std   ,y
   2118  3     7943 20   0A               bra   UDP_CheckDeleteB0
   2119                            
   2120        7945               UDP_ChainNextB0
   2121  5+1   7945 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2122  6+1   7948 10AE C8 39            ldy   rsv_priority_next_obj_0,u
   2123  5+1   794C ED   A8 37            std   rsv_priority_prev_obj_0,y
   2124                            
   2125        794F               UDP_CheckDeleteB0
   2126  4+1   794F A6   42               lda   render_flags,u
   2127  2     7951 84   40               anda  #render_todelete_mask
   2128  3     7953 27   0F               beq   UDP_SetNewPrioB0
   2129  4+1   7955 A6   C8 47            lda   rsv_prev_render_flags_0,u
   2130  3     7958 2B   0A               bmi   UDP_SetNewPrioB0
   2131  4+1   795A A6   C8 59            lda   rsv_prev_render_flags_1,u
   2132  3     795D 2B   05               bmi   UDP_SetNewPrioB0
   2133  8     795F BD   7407             jsr   ClearObj
   2134  3     7962 20   9D               bra   UDP_CheckEndB0
   2135                            
   2136        7964               UDP_SetNewPrioB0
   2137  4+1   7964 A6   43               lda   priority,u
   2138  4+1   7966 A7   C8 36            sta   rsv_priority_0,u
   2139  3     7969 20   96               bra   UDP_CheckEndB0
   2140
   2141        796B               UDP_B1
   2142  3     796B 8E   6550             ldx   #Lst_Priority_Unset_1+2
   2143                            
   2144        796E               UDP_CheckEndB1
   2145  7     796E BC   654E             cmpx  Lst_Priority_Unset_1       >>
   2146  3     7971 26   07               bne   UDP_CheckPrioPrevB1
   2147                            
   2148        7973               UDP_InitListB1
   2149  3     7973 8E   6550             ldx   #Lst_Priority_Unset_1+2
   2150  6     7976 BF   654E             stx   Lst_Priority_Unset_1       >>
   2151  5     7979 39                    rts
   2152                            
   2153        797A               UDP_CheckPrioPrevB1
   2154  5+3   797A EE   81               ldu   ,x++
   2155  5+1   797C EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2156  3     797F 26   11               bne   UDP_ChainPrevB1
   2157                            
   2158  4+1   7981 A6   C8 48            lda   rsv_priority_1,u
   2159  2     7984 48                    lsla
   2160  4     7985 108E 652A             ldy   #Tbl_Priority_First_Entry_1>>
   2161  4+1   7989 31   A6               leay  a,y
   2162  5+1   798B EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2163  5+0   798E ED   A4               std   ,y
   2164  3     7990 20   0A               bra   UDP_CheckPrioNextB1
   2165                            
   2166        7992               UDP_ChainPrevB1
   2167  5+1   7992 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2168  6+1   7995 10AE C8 49            ldy   rsv_priority_prev_obj_1,u
   2169  5+1   7999 ED   A8 4B            std   rsv_priority_next_obj_1,y
   2170
   2171        799C               UDP_CheckPrioNextB1
   2172  5+1   799C EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2173  3     799F 26   11               bne   UDP_ChainNextB1
   2174
   2175  4+1   79A1 A6   C8 48            lda   rsv_priority_1,u
   2176  2     79A4 48                    lsla
   2177  4     79A5 108E 653C             ldy   #Tbl_Priority_Last_Entry_1
   2178  4+1   79A9 31   A6               leay  a,y
   2179  5+1   79AB EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2180  5+0   79AE ED   A4               std   ,y
   2181  3     79B0 20   0A               bra   UDP_CheckDeleteB1
   2182                            
   2183        79B2               UDP_ChainNextB1
   2184  5+1   79B2 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2185  6+1   79B5 10AE C8 4B            ldy   rsv_priority_next_obj_1,u
   2186  5+1   79B9 ED   A8 49            std   rsv_priority_prev_obj_1,y
   2187                            
   2188        79BC               UDP_CheckDeleteB1
   2189  4+1   79BC A6   42               lda   render_flags,u
   2190  2     79BE 84   40               anda  #render_todelete_mask
   2191  3     79C0 27   0F               beq   UDP_SetNewPrioB1
   2192  4+1   79C2 A6   C8 47            lda   rsv_prev_render_flags_0,u
   2193  3     79C5 2B   0A               bmi   UDP_SetNewPrioB1
   2194  4+1   79C7 A6   C8 59            lda   rsv_prev_render_flags_1,u
   2195  3     79CA 2B   05               bmi   UDP_SetNewPrioB1
   2196  8     79CC BD   7407             jsr   ClearObj
   2197  3     79CF 20   9D               bra   UDP_CheckEndB1
   2198                            
   2199        79D1               UDP_SetNewPrioB1
   2200  4+1   79D1 A6   43               lda   priority,u
   2201  4+1   79D3 A7   C8 48            sta   rsv_priority_1,u
   2202  3     79D6 20   96               bra   UDP_CheckEndB1
   2203
   2204                                   INCLUD DRAWSPR
   2205                           * --------------------------------------->>
   2206                           * DrawSprites
   2207                           * ------------
   2208                           * Subroutine to draw sprites on screen
   2209                           * Read Display Priority Structure (back t>>
   2210                           * priority: 0 - unregistred
   2211                           * priority: 1 - register non moving overl>>
   2212                           * priority; 2-8 - register moving sprite >>
   2213                           *
   2214                           * input REG : none
   2215                           * --------------------------------------->>
   2216                            
   2217        79D8               DrawSprites
   2218
   2219        79D8               DRS_Start
   2220  5     79D8 B6   611D             lda   Glb_Cur_Wrk_Screen_Id      >>
   2221  3     79DB 26   41               bne   DRS_P8B1
   2222                            
   2223        79DD               DRS_P8B0
   2224  6     79DD BE   64D4             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2225  3     79E0 27   03               beq   DRS_P7B0
   2226  8     79E2 BD   7A5F             jsr   DRS_ProcessEachPriorityLeve>>
   2227        79E5               DRS_P7B0
   2228  6     79E5 BE   64D2             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2229  3     79E8 27   03               beq   DRS_P6B0
   2230  8     79EA BD   7A5F             jsr   DRS_ProcessEachPriorityLeve>>
   2231        79ED               DRS_P6B0
   2232  6     79ED BE   64D0             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2233  3     79F0 27   03               beq   DRS_P5B0
   2234  8     79F2 BD   7A5F             jsr   DRS_ProcessEachPriorityLeve>>
   2235        79F5               DRS_P5B0
   2236  6     79F5 BE   64CE             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2237  3     79F8 27   03               beq   DRS_P4B0
   2238  8     79FA BD   7A5F             jsr   DRS_ProcessEachPriorityLeve>>
   2239        79FD               DRS_P4B0
   2240  6     79FD BE   64CC             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2241  3     7A00 27   03               beq   DRS_P3B0
   2242  8     7A02 BD   7A5F             jsr   DRS_ProcessEachPriorityLeve>>
   2243        7A05               DRS_P3B0
   2244  6     7A05 BE   64CA             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2245  3     7A08 27   03               beq   DRS_P2B0
   2246  8     7A0A BD   7A5F             jsr   DRS_ProcessEachPriorityLeve>>
   2247        7A0D               DRS_P2B0
   2248  6     7A0D BE   64C8             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2249  3     7A10 27   03               beq   DRS_P1B0
   2250  8     7A12 BD   7A5F             jsr   DRS_ProcessEachPriorityLeve>>
   2251        7A15               DRS_P1B0
   2252  6     7A15 BE   64C6             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2253  3     7A18 27   03               beq   DRS_rtsB0
   2254  8     7A1A BD   7A5F             jsr   DRS_ProcessEachPriorityLeve>>
   2255        7A1D               DRS_rtsB0
   2256  5     7A1D 39                    rts
   2257                            
   2258        7A1E               DRS_P8B1
   2259  6     7A1E BE   653A             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2260  3     7A21 27   03               beq   DRS_P7B1
   2261  8     7A23 BD   7B2E             jsr   DRS_ProcessEachPriorityLeve>>
   2262        7A26               DRS_P7B1
   2263  6     7A26 BE   6538             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2264  3     7A29 27   03               beq   DRS_P6B1
   2265  8     7A2B BD   7B2E             jsr   DRS_ProcessEachPriorityLeve>>
   2266        7A2E               DRS_P6B1
   2267  6     7A2E BE   6536             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2268  3     7A31 27   03               beq   DRS_P5B1
   2269  8     7A33 BD   7B2E             jsr   DRS_ProcessEachPriorityLeve>>
   2270        7A36               DRS_P5B1
   2271  6     7A36 BE   6534             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2272  3     7A39 27   03               beq   DRS_P4B1
   2273  8     7A3B BD   7B2E             jsr   DRS_ProcessEachPriorityLeve>>
   2274        7A3E               DRS_P4B1
   2275  6     7A3E BE   6532             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2276  3     7A41 27   03               beq   DRS_P3B1
   2277  8     7A43 BD   7B2E             jsr   DRS_ProcessEachPriorityLeve>>
   2278        7A46               DRS_P3B1
   2279  6     7A46 BE   6530             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2280  3     7A49 27   03               beq   DRS_P2B1
   2281  8     7A4B BD   7B2E             jsr   DRS_ProcessEachPriorityLeve>>
   2282        7A4E               DRS_P2B1
   2283  6     7A4E BE   652E             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2284  3     7A51 27   03               beq   DRS_P1B1
   2285  8     7A53 BD   7B2E             jsr   DRS_ProcessEachPriorityLeve>>
   2286        7A56               DRS_P1B1
   2287  6     7A56 BE   652C             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2288  3     7A59 27   03               beq   DRS_rtsB1
   2289  8     7A5B BD   7B2E             jsr   DRS_ProcessEachPriorityLeve>>
   2290        7A5E               DRS_rtsB1
   2291  5     7A5E 39                    rts
   2292
   2293        7A5F               DRS_ProcessEachPriorityLevelB0
   2294  4+1   7A5F A6   88 29            lda   rsv_render_flags,x
   2295  2     7A62 84   04               anda  #rsv_render_displaysprite_m>>
   2296  3     7A64 27   6A               beq   DRS_NextObjectB0
   2297  4+1   7A66 A6   88 47            lda   rsv_prev_render_flags_0,x
   2298  3     7A69 2B   65               bmi   DRS_NextObjectB0
   2299  4+1   7A6B A6   02               lda   render_flags,x
   2300  2     7A6D 84   04               anda  #render_overlay_mask
   2301  3     7A6F 26   67               bne   DRS_DrawWithoutBackupB0
   2302  5+1   7A71 EE   88 30            ldu   rsv_mapping_frame,x
   2303  4+1   7A74 A6   46               lda   erase_nb_cell,u
   2304  8     7A76 BD   7BCB             jsr   BgBufferAlloc              >>
   2305  5     7A79 108C 0000             cmpy  #$0000                     >>
   2306  3     7A7D 27   51               beq   DRS_NextObjectB0           >>
   2307  5+1   7A7F EC   88 12            ldd   xy_pixel,x                 >>
   2308  4+1   7A82 A0   88 2C            suba  rsv_image_center_offset,x
   2309  8     7A85 BD   7AFC             jsr   DRS_XYToAddress
   2310                           *        ldu   rsv_image_subset,x
   2311                           *        stu   rsv_prev_image_subset_0,x
   2312  5+1   7A88 EE   88 30            ldu   rsv_mapping_frame,x        >>
   2313  5+1   7A8B EF   88 3D            stu   rsv_prev_mapping_frame_0,x >>
   2314  4+1   7A8E A6   40               lda   page_draw_routine,u
   2315  5     7A90 B7   E7E5             sta   $E7E5                      >>
   2316  6     7A93 BF   7AA4             stx   DRS_dyn3B0+1               >>
   2317  5+1   7A96 AE   41               ldx   draw_routine,u
   2318  4+0   7A98 33   A4               leau  ,y                         >>
   2319  4     7A9A 108E 6124             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2320  6     7A9E FC   6122             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2321  7+0   7AA1 AD   84               jsr   ,x                         >>
   2322        7AA3               DRS_dyn3B0
   2323  3     7AA3 8E   0000             ldx   #$0000                     >>
   2324  5+1   7AA6 EF   88 3F            stu   rsv_bgdata_0,x             >>
   2325  5+1   7AA9 EC   88 12            ldd   xy_pixel,x                 >>
   2326  2     7AAC 44                    lsra                             >>
   2327  5+1   7AAD ED   88 41            std   rsv_prev_xy_pixel_0,x      >>
   2328  5+1   7AB0 EC   88 32            ldd   rsv_xy1_pixel,x            >>
   2329  5+1   7AB3 ED   88 43            std   rsv_prev_xy1_pixel_0,x     >>
   2330  5+1   7AB6 EC   88 34            ldd   rsv_xy2_pixel,x            >>
   2331  5+1   7AB9 ED   88 45            std   rsv_prev_xy2_pixel_0,x     >>
   2332  4+1   7ABC A6   88 47            lda   rsv_prev_render_flags_0,x
   2333  2     7ABF 8A   80               ora   #rsv_prev_render_onscreen_m>>
   2334  4+1   7AC1 E6   02               ldb   render_flags,x
   2335  2     7AC3 C5   04               bitb  #render_overlay_mask
   2336  3     7AC5 27   04               beq   DRS_NoOverlayB0
   2337  2     7AC7 8A   01               ora   #rsv_prev_render_overlay_ma>>
   2338  3     7AC9 20   02               bra   DRS_UpdateRenderFlagB0
   2339                            
   2340        7ACB               DRS_NoOverlayB0
   2341  2     7ACB 84   FE               anda   #:rsv_prev_render_overlay_>>
   2342
   2343        7ACD               DRS_UpdateRenderFlagB0
   2344  4+1   7ACD A7   88 47            sta   rsv_prev_render_flags_0,x  >>
   2345                            
   2346        7AD0               DRS_NextObjectB0
   2347  5+1   7AD0 AE   88 39            ldx   rsv_priority_next_obj_0,x
   2348  6     7AD3 1026 FF88             lbne  DRS_ProcessEachPriorityLeve>>
   2349  5     7AD7 39                    rts
   2350                            
   2351        7AD8               DRS_DrawWithoutBackupB0
   2352  5+1   7AD8 EC   88 12            ldd   xy_pixel,x                 >>
   2353  4+1   7ADB A0   88 2C            suba  rsv_image_center_offset,x
   2354  8     7ADE BD   7AFC             jsr   DRS_XYToAddress
   2355  5+1   7AE1 EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2356  5+1   7AE4 EF   88 3D            stu   rsv_prev_mapping_frame_0,x >>
   2357  4+1   7AE7 A6   40               lda   page_draw_routine,u
   2358  5     7AE9 B7   E7E5             sta   $E7E5                      >>
   2359  6     7AEC BF   7AA4             stx   DRS_dyn3B0+1               >>
   2360  5+1   7AEF AE   41               ldx   draw_routine,u
   2361  4     7AF1 108E 6124             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2362  6     7AF5 FC   6122             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2363  7+0   7AF8 AD   84               jsr   ,x                         >>
   2364  3     7AFA 20   A7               bra   DRS_dyn3B0
   2365
   2366                           *****************************************>>
   2367                           * x_pixel and y_pixel coordinate system
   2368                           * x coordinates:
   2369                           *    - off-screen left 00-2F (0-47)
   2370                           *    - on screen 30-CF (48-207)
   2371                           *    - off-screen right D0-FF (208-255)
   2372                           *
   2373                           * y coordinates:
   2374                           *    - off-screen top 00-1B (0-27)
   2375                           *    - on screen 1C-E3 (28-227)
   2376                           *    - off-screen bottom E4-FF (228-255)
   2377                           *****************************************>>
   2378
   2379        7AFC               DRS_XYToAddress
   2380  2     7AFC 80   30               suba  #$30
   2381  3     7AFE 24   03               bcc   DRS_XYToAddressPositive
   2382  2     7B00 80   60               suba  #$60                       >>
   2383  2     7B02 5A                    decb
   2384        7B03               DRS_XYToAddressPositive
   2385  2     7B03 C0   1C               subb  #$1C                       >>
   2386  2     7B05 44                    lsra                             >>
   2387  2     7B06 44                    lsra                             >>
   2388  3     7B07 25   12               bcs   DRS_XYToAddressRAM2First   >>
   2389        7B09               DRS_XYToAddressRAM1First
   2390  5     7B09 B7   7B11             sta   DRS_dyn1+2
   2391  2     7B0C 86   28               lda   #$28                       >>
   2392  11    7B0E 3D                    mul
   2393        7B0F               DRS_dyn1
   2394  4     7B0F C3   0000             addd  #$0000                     >>
   2395  6     7B12 FD   6124             std   Glb_Sprite_Screen_Pos_Part2>>
   2396  2     7B15 8A   20               ora   #$20                       >>
   2397  6     7B17 FD   6122             std   Glb_Sprite_Screen_Pos_Part1>>
   2398  5     7B1A 39                    rts
   2399        7B1B               DRS_XYToAddressRAM2First
   2400  5     7B1B B7   7B23             sta   DRS_dyn2+2
   2401  2     7B1E 86   28               lda   #$28                       >>
   2402  11    7B20 3D                    mul
   2403        7B21               DRS_dyn2
   2404  4     7B21 C3   2000             addd  #$2000                     >>
   2405  6     7B24 FD   6124             std   Glb_Sprite_Screen_Pos_Part2>>
   2406  4     7B27 83   1FFF             subd  #$1FFF
   2407  6     7B2A FD   6122             std   Glb_Sprite_Screen_Pos_Part1>>
   2408  5     7B2D 39                    rts
   2409                            
   2410        7B2E               DRS_ProcessEachPriorityLevelB1
   2411  4+1   7B2E A6   88 29            lda   rsv_render_flags,x
   2412  2     7B31 84   04               anda  #rsv_render_displaysprite_m>>
   2413  3     7B33 27   6A               beq   DRS_NextObjectB1
   2414  4+1   7B35 A6   88 59            lda   rsv_prev_render_flags_1,x
   2415  3     7B38 2B   65               bmi   DRS_NextObjectB1
   2416  4+1   7B3A A6   02               lda   render_flags,x
   2417  2     7B3C 84   04               anda  #render_overlay_mask
   2418  3     7B3E 26   67               bne   DRS_DrawWithoutBackupB1
   2419  5+1   7B40 EE   88 30            ldu   rsv_mapping_frame,x
   2420  4+1   7B43 A6   46               lda   erase_nb_cell,u
   2421  8     7B45 BD   7BCB             jsr   BgBufferAlloc              >>
   2422  5     7B48 108C 0000             cmpy  #$0000                     >>
   2423  3     7B4C 27   51               beq   DRS_NextObjectB1           >>
   2424  5+1   7B4E EC   88 12            ldd   xy_pixel,x                 >>
   2425  4+1   7B51 A0   88 2C            suba  rsv_image_center_offset,x
   2426  8     7B54 BD   7AFC             jsr   DRS_XYToAddress
   2427                                   *ldu   rsv_image_subset,x
   2428                                   *stu   rsv_prev_image_subset_1,x
   2429  5+1   7B57 EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2430  5+1   7B5A EF   88 4F            stu   rsv_prev_mapping_frame_1,x >>
   2431  4+1   7B5D A6   40               lda   page_draw_routine,u
   2432  5     7B5F B7   E7E5             sta   $E7E5                      >>
   2433  6     7B62 BF   7B73             stx   DRS_dyn3B1+1               >>
   2434  5+1   7B65 AE   41               ldx   draw_routine,u
   2435  4+0   7B67 33   A4               leau  ,y                         >>
   2436  4     7B69 108E 6124             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2437  6     7B6D FC   6122             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2438  7+0   7B70 AD   84               jsr   ,x                         >>
   2439        7B72               DRS_dyn3B1
   2440  3     7B72 8E   0000             ldx   #$0000                     >>
   2441  5+1   7B75 EF   88 51            stu   rsv_bgdata_1,x             >>
   2442  5+1   7B78 EC   88 12            ldd   xy_pixel,x                 >>
   2443  2     7B7B 44                    lsra                             >>
   2444  5+1   7B7C ED   88 53            std   rsv_prev_xy_pixel_1,x      >>
   2445  5+1   7B7F EC   88 32            ldd   rsv_xy1_pixel,x            >>
   2446  5+1   7B82 ED   88 55            std   rsv_prev_xy1_pixel_1,x     >>
   2447  5+1   7B85 EC   88 34            ldd   rsv_xy2_pixel,x            >>
   2448  5+1   7B88 ED   88 57            std   rsv_prev_xy2_pixel_1,x     >>
   2449  4+1   7B8B A6   88 59            lda   rsv_prev_render_flags_1,x
   2450  2     7B8E 8A   80               ora   #rsv_prev_render_onscreen_m>>
   2451  4+1   7B90 E6   02               ldb   render_flags,x
   2452  2     7B92 C5   04               bitb  #render_overlay_mask
   2453  3     7B94 27   04               beq   DRS_NoOverlayB1
   2454  2     7B96 8A   01               ora   #rsv_prev_render_overlay_ma>>
   2455  3     7B98 20   02               bra   DRS_UpdateRenderFlagB1
   2456                            
   2457        7B9A               DRS_NoOverlayB1
   2458  2     7B9A 84   FE               anda   #:rsv_prev_render_overlay_>>
   2459
   2460        7B9C               DRS_UpdateRenderFlagB1
   2461  4+1   7B9C A7   88 59            sta   rsv_prev_render_flags_1,x  >>
   2462                            
   2463        7B9F               DRS_NextObjectB1
   2464  5+1   7B9F AE   88 4B            ldx   rsv_priority_next_obj_1,x
   2465  6     7BA2 1026 FF88             lbne  DRS_ProcessEachPriorityLeve>>
   2466  5     7BA6 39                    rts
   2467                            
   2468        7BA7               DRS_DrawWithoutBackupB1
   2469  5+1   7BA7 EC   88 12            ldd   xy_pixel,x                 >>
   2470  4+1   7BAA A0   88 2C            suba  rsv_image_center_offset,x
   2471  8     7BAD BD   7AFC             jsr   DRS_XYToAddress
   2472  5+1   7BB0 EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2473  5+1   7BB3 EF   88 4F            stu   rsv_prev_mapping_frame_1,x >>
   2474  4+1   7BB6 A6   40               lda   page_draw_routine,u
   2475  5     7BB8 B7   E7E5             sta   $E7E5                      >>
   2476  6     7BBB BF   7B73             stx   DRS_dyn3B1+1               >>
   2477  5+1   7BBE AE   41               ldx   draw_routine,u
   2478  4     7BC0 108E 6124             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2479  6     7BC4 FC   6122             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2480  7+0   7BC7 AD   84               jsr   ,x                         >>
   2481  3     7BC9 20   A7               bra   DRS_dyn3B1
   2482
   2483                                   INCLUD BGBALLOC
   2484                           * --------------------------------------->>
   2485                           * BgBufferAlloc
   2486                           * -------------
   2487                           * Subroutine to allocate memory into back>>
   2488                           *
   2489                           * input  REG : [a] number of requested ce>>
   2490                           * output REG : [y] cell_end or 0000 if no>>
   2491                           * --------------------------------------->>
   2492
   2493        7BCB               BgBufferAlloc
   2494  5+3   7BCB 34   14               pshs  b,x
   2495  5     7BCD F6   611D             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2496  3     7BD0 26   09               bne   BBA1                       >>
   2497                            
   2498        7BD2               BBA0
   2499  3     7BD2 8E   6126             ldx   #Lst_FreeCellFirstEntry_0  >>
   2500  7     7BD5 10BE 6126             ldy   Lst_FreeCellFirstEntry_0   >>
   2501  3     7BD9 20   07               bra   BBA_Next
   2502                            
   2503        7BDB               BBA1
   2504  3     7BDB 8E   62F5             ldx   #Lst_FreeCellFirstEntry_1  >>
   2505  7     7BDE 10BE 62F5             ldy   Lst_FreeCellFirstEntry_1   >>
   2506                            
   2507        7BE2               BBA_Next
   2508  3     7BE2 27   38               beq   BBA_rts                    >>
   2509  4+1   7BE4 A1   20               cmpa  nb_cells,y                 >>
   2510  3     7BE6 27   09               beq   BBA_FitCell                >>
   2511  3     7BE8 23   12               bls   BBA_DivideCell             >>
   2512  4+1   7BEA 30   25               leax  next_entry,y               >>
   2513  6+1   7BEC 10AE 25               ldy   next_entry,y               >>
   2514  3     7BEF 20   F1               bra   BBA_Next
   2515                            
   2516        7BF1               BBA_FitCell
   2517  5+1   7BF1 EC   25               ldd   next_entry,y
   2518  5+0   7BF3 ED   84               std   ,x                         >>
   2519  6+1   7BF5 6F   20               clr   nb_cells,y                 >>
   2520  6+1   7BF7 10AE 23               ldy   cell_end,y                 >>
   2521  3     7BFA 20   20               bra   BBA_rts
   2522                            
   2523        7BFC               BBA_DivideCell
   2524  5     7BFC B7   7C02             sta   BBA_dyn+1
   2525  4+1   7BFF E6   20               ldb   nb_cells,y
   2526        7C01               BBA_dyn
   2527  2     7C01 C0   00               subb  #$00                       >>
   2528  4+1   7C03 E7   20               stb   nb_cells,y                 >>
   2529                            
   2530  2     7C05 C6   40               ldb   #cell_size
   2531  11    7C07 3D                    mul
   2532  2     7C08 88   FF               eora  #$FF                       >>
   2533  2     7C0A C8   FF               eorb  #$FF                       >>
   2534  4     7C0C C3   0001             addd  #$01
   2535  5+1   7C0F AE   23               ldx   cell_end,y
   2536  6     7C11 BF   7C1A             stx   cell_end_return+2
   2537  4+4   7C14 30   8B               leax  d,x                        >>
   2538  5+1   7C16 AF   23               stx   cell_end,y                 >>
   2539        7C18               cell_end_return
   2540  4     7C18 108E 0000             ldy   #$0000
   2541        7C1C               BBA_rts
   2542  5+5   7C1C 35   94               puls  b,x,pc
   2543
   2544                                   INCLUD BGBFREE
   2545                           * --------------------------------------->>
   2546                           * BgBufferFree
   2547                           * ------------
   2548                           * Subroutine to free memory from backgrou>>
   2549                           *
   2550                           * input  REG : [x] cell_start
   2551                           *              [y] cell_end
   2552                           * output REG : none
   2553                           * --------------------------------------->>
   2554
   2555        7C1E               BgBufferFree
   2556  5+4   7C1E 34   46               pshs  d,u
   2557  3     7C20 CC   0000             ldd   #$0000
   2558  6     7C23 FD   7C80             std   BBF_SetNewEntryNextentry+1 >>
   2559  5     7C26 F6   611D             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2560  3     7C29 26   16               bne   BBF1                       >>
   2561                            
   2562        7C2B               BBF0
   2563  5+1   7C2B EE   C8 3D            ldu   rsv_prev_mapping_frame_0,u >>
   2564  4+1   7C2E A6   46               lda   erase_nb_cell,u            >>
   2565  3     7C30 CE   6126             ldu   #Lst_FreeCellFirstEntry_0
   2566  6     7C33 FF   7C85             stu   BBF_SetNewEntryPrevLink+1  >>
   2567  3     7C36 CE   6128             ldu   #Lst_FreeCell_0            >>
   2568  6     7C39 FF   7C6E             stu   BBF_AddNewEntryAtEnd+1     >>
   2569  6     7C3C FE   6126             ldu   Lst_FreeCellFirstEntry_0   >>
   2570  3     7C3F 20   14               bra   BBF_Next
   2571                            
   2572        7C41               BBF1
   2573  5+1   7C41 EE   C8 4F            ldu   rsv_prev_mapping_frame_1,u
   2574  4+1   7C44 A6   46               lda   erase_nb_cell,u
   2575  3     7C46 CE   62F5             ldu   #Lst_FreeCellFirstEntry_1
   2576  6     7C49 FF   7C85             stu   BBF_SetNewEntryPrevLink+1
   2577  3     7C4C CE   62F7             ldu   #Lst_FreeCell_1
   2578  6     7C4F FF   7C6E             stu   BBF_AddNewEntryAtEnd+1
   2579  6     7C52 FE   62F5             ldu   Lst_FreeCellFirstEntry_1
   2580                            
   2581        7C55               BBF_Next
   2582  3     7C55 27   16               beq   BBF_AddNewEntryAtEnd       >>
   2583  7+1   7C57 10AC 41               cmpy  cell_start,u               >>
   2584  3     7C5A 27   2D               beq   BBF_ExpandAtStart          >>
   2585  3     7C5C 22   4C               bhi   BBF_ExpandAtEnd            >>
   2586  5+1   7C5E EE   45               ldu   next_entry,u               >>
   2587  6     7C60 1F   30               tfr   u,d
   2588  4     7C62 C3   0005             addd  #next_entry                >>
   2589  6     7C65 FD   7C85             std   BBF_SetNewEntryPrevLink+1
   2590  3     7C68 20   EB               bra   BBF_Next
   2591
   2592        7C6A               BBF_AddNewEntry
   2593  6     7C6A FF   7C80             stu   BBF_SetNewEntryNextentry+1
   2594        7C6D               BBF_AddNewEntryAtEnd
   2595  3     7C6D CE   0000             ldu   #$0000                     >>
   2596        7C70               BBF_FindFreeSlot
   2597  4+1   7C70 E6   40               ldb   nb_cells,u                 >>
   2598  3     7C72 27   04               beq   BBF_SetNewEntry            >>
   2599  4+1   7C74 33   47               leau  entry_size,u               >>
   2600  3     7C76 20   F8               bra   BBF_FindFreeSlot           >>
   2601        7C78               BBF_SetNewEntry
   2602  4+1   7C78 A7   40               sta   nb_cells,u                 >>
   2603  5+1   7C7A AF   41               stx   cell_start,u               >>
   2604  6+1   7C7C 10AF 43               sty   cell_end,u                 >>
   2605        7C7F               BBF_SetNewEntryNextentry
   2606  3     7C7F 8E   0000             ldx   #$0000                     >>
   2607  5+1   7C82 AF   45               stx   next_entry,u               >>
   2608        7C84               BBF_SetNewEntryPrevLink
   2609  6     7C84 FF   FFFF             stu   $FFFF                      >>
   2610  3     7C87 20   2C               bra   BBF_rts
   2611
   2612        7C89               BBF_ExpandAtStart
   2613  5+1   7C89 AF   41               stx   cell_start,u
   2614  4+1   7C8B AB   40               adda  nb_cells,u
   2615  4+1   7C8D A7   40               sta   nb_cells,u
   2616  6+1   7C8F 10AE 45               ldy   next_entry,u
   2617  3     7C92 27   21               beq   BBF_rts
   2618        7C94               BBF_Join
   2619  6+1   7C94 AC   23               cmpx  cell_end,y
   2620  3     7C96 26   1D               bne   BBF_rts
   2621  5+1   7C98 EC   21               ldd   cell_start,y
   2622  5+1   7C9A ED   41               std   cell_start,u
   2623  4+1   7C9C A6   20               lda   nb_cells,y
   2624  4+1   7C9E AB   40               adda  nb_cells,u
   2625  4+1   7CA0 A7   40               sta   nb_cells,u
   2626  6+1   7CA2 6F   20               clr   nb_cells,y                 >>
   2627  5+1   7CA4 EC   25               ldd   next_entry,y
   2628  5+1   7CA6 ED   45               std   next_entry,u               >>
   2629  3     7CA8 20   0B               bra   BBF_rts
   2630
   2631        7CAA               BBF_ExpandAtEnd
   2632  6+1   7CAA AC   43               cmpx  cell_end,u
   2633  3     7CAC 26   BC               bne   BBF_AddNewEntry
   2634  6+1   7CAE 10AF 43               sty   cell_end,u
   2635  4+1   7CB1 AB   40               adda  nb_cells,u
   2636  4+1   7CB3 A7   40               sta   nb_cells,u
   2637                            
   2638        7CB5               BBF_rts
   2639  5+6   7CB5 35   C6               puls  d,u,pc
   2640
   2641                                   INCLUD CLRCARTM
   2642                           *****************************************>>
   2643                           * Clear memory in cardtridge area
   2644                           *****************************************>>
   2645
   2646        7CB7               ClearCartMem *@globals
   2647  5+3   7CB7 34   48               pshs  u,dp
   2648  7     7CB9 10FF 7CE7             sts   ClearCartMem_3+2
   2649  4     7CBD 10CE 4000             lds   #$4000
   2650  4+0   7CC1 33   84               leau  ,x
   2651  4+0   7CC3 31   84               leay  ,x
   2652  6     7CC5 1F   10               tfr   x,d
   2653  6     7CC7 1F   8B               tfr   a,dp
   2654        7CC9               ClearCartMem_2
   2655  5+9   7CC9 34   7E               pshs  u,y,x,dp,b,a
   2656  5+9   7CCB 34   7E               pshs  u,y,x,dp,b,a
   2657  5+9   7CCD 34   7E               pshs  u,y,x,dp,b,a
   2658  5+9   7CCF 34   7E               pshs  u,y,x,dp,b,a
   2659  5+9   7CD1 34   7E               pshs  u,y,x,dp,b,a
   2660  5+9   7CD3 34   7E               pshs  u,y,x,dp,b,a
   2661  5+9   7CD5 34   7E               pshs  u,y,x,dp,b,a
   2662  5+9   7CD7 34   7E               pshs  u,y,x,dp,b,a
   2663  5+9   7CD9 34   7E               pshs  u,y,x,dp,b,a
   2664  5+7   7CDB 34   78               pshs  u,y,x,dp
   2665  5     7CDD 118C 0010             cmps  #$0010
   2666  3     7CE1 26   E6               bne   ClearCartMem_2
   2667  4+0   7CE3 33   E4               leau  ,s
   2668        7CE5               ClearCartMem_3
   2669  4     7CE5 10CE 0000             lds   #$0000        ; start of me>>
   2670  5+6   7CE9 36   36               pshu  d,x,y         ; saving 12 b>>
   2671  5+6   7CEB 36   36               pshu  d,x,y         ; DEPENDENCY >>
   2672  5+4   7CED 36   16               pshu  d,x
   2673  5+5   7CEF 35   C8               puls  dp,u,pc
   2674
   2675
   2676                                   INCLUD UPDTPAL
   2677                           * --------------------------------------->>
   2678                           * UpdatePalette
   2679                           * -------------
   2680                           * Subroutine to update palette
   2681                           * should be called just after WaitVBL
   2682                           *
   2683                           * input REG : none
   2684                           * reset REG : [d] [x] [y]
   2685                           * --------------------------------------->>
   2686
   2687        7CF1 FF            Refresh_palette fcb   $FF            *@gl>>
   2688        7CF2 7CF4          Cur_palette     fdb   Dyn_palette    *@gl>>
   2689        7CF4               Dyn_palette     rmb   $20,0          *@gl>>
   2690        7D14               Black_palette   rmb   $20,0          *@gl>>
   2691        7D34 FF0F          White_palette   fdb   $ff0f          *@gl>>
   2692        7D36 FF0F                          fdb   $ff0f
   2693        7D38 FF0F                          fdb   $ff0f
   2694        7D3A FF0F                          fdb   $ff0f
   2695        7D3C FF0F                          fdb   $ff0f
   2696        7D3E FF0F                          fdb   $ff0f
   2697        7D40 FF0F                          fdb   $ff0f
   2698        7D42 FF0F                          fdb   $ff0f
   2699        7D44 FF0F                          fdb   $ff0f
   2700        7D46 FF0F                          fdb   $ff0f
   2701        7D48 FF0F                          fdb   $ff0f
   2702        7D4A FF0F                          fdb   $ff0f
   2703        7D4C FF0F                          fdb   $ff0f
   2704        7D4E FF0F                          fdb   $ff0f
   2705        7D50 FF0F                          fdb   $ff0f
   2706        7D52 FF0F                          fdb   $ff0f
   2707
   2708        7D54               UpdatePalette *@globals
   2709  7     7D54 7D   7CF1             tst   Refresh_palette
   2710  3     7D57 26   22               bne   UPP_return
   2711                            
   2712  4     7D59 108E 0195             ldy   #0405                    * >>
   2713        7D5D               UPP_Tempo
   2714  4+1   7D5D 31   3F               leay  -1,y
   2715  3     7D5F 26   FC               bne   UPP_Tempo                * >>
   2716  2     7D61 C6   E7               ldb   #$E7
   2717  6     7D63 1F   9B               tfr   B,DP
   2718  6     7D65 BE   7CF2            ldx   Cur_palette
   2719  6     7D68 0F   DB              clr   <$DB                     * i>>
   2720  4     7D6A 108E 0010             LDY   #$0010                     >>
   2721        7D6E               UPP_SetColor
   2722  5+3   7D6E EC   81              ldd   ,x++                        >>
   2723  4     7D70 97   DA              sta   <$DA                        >>
   2724  4     7D72 D7   DA              stb   <$DA                     * s>>
   2725  4+1   7D74 31   3F              leay  -1,y
   2726  3     7D76 26   F6              bne   UPP_SetColor             * o>>
   2727  7     7D78 73   7CF1            com   Refresh_palette          * u>>
   2728        7D7B               UPP_return
   2729  5     7D7B 39                    rts
   2730
   2731                            
   2732                            
   2733
   2734
   2735                                   INCLUD PLAYPCM
   2736                           * --------------------------------------->>
   2737                           * PlayPCM
   2738                           * ------------
   2739                           * Subroutine to play a PCM sample at 16kH>>
   2740                           * This will freeze anything running
   2741                           * DAC Init from Mission: Liftoff (merci P>>
   2742                           *
   2743                           * input REG : [y] Pcm_ index to play
   2744                           * reset REG : [d] [x] [y]
   2745                           * --------------------------------------->>
   2746
   2747        7D7C               PlayPCM *@globals
   2748
   2749  5     7D7C B6   E7E5             lda   $E7E5
   2750  5     7D7F B7   7DCE             sta   PlayPCM_RestorePage+1
   2751
   2752  3     7D82 CC   FB3F             ldd   #$fb3f  ! Mute by CRA to
   2753  5     7D85 B4   E7CF             anda  $e7cf   ! avoid sound when
   2754  5     7D88 B7   E7CF             sta   $e7cf   ! $e7cd written
   2755  5     7D8B F7   E7CD             stb   $e7cd   ! Full sound line
   2756  2     7D8E 8A   04               ora   #$04    ! Disable mute by
   2757  5     7D90 B7   E7CF             sta   $e7cf   ! CRA and sound
   2758                            
   2759        7D93               PlayPCM_ReadChunk
   2760  4+1   7D93 A6   20               lda   pcm_page,y                 >>
   2761  2     7D95 81   FF               cmpa  #$FF
   2762  3     7D97 27   1B               beq   PlayPCM_End
   2763  5     7D99 B7   E7E5             sta   $E7E5                      >>
   2764  5+1   7D9C AE   21               ldx   pcm_start_addr,y           >>
   2765                            
   2766        7D9E               PlayPCM_Loop
   2767  4+2   7D9E A6   80               lda   ,x+
   2768  5     7DA0 B7   E7CD             sta   $e7cd                      >>
   2769  6+1   7DA3 AC   23               cmpx  pcm_end_addr,y
   2770  3     7DA5 27   07               beq   PlayPCM_NextChunk
   2771  11    7DA7 3D                    mul                              >>
   2772  11    7DA8 3D                    mul
   2773  11    7DA9 3D                    mul
   2774  6     7DAA 1F   89               tfr   a,b
   2775  3     7DAC 20   F0               bra   PlayPCM_Loop               >>
   2776                            
   2777        7DAE               PlayPCM_NextChunk
   2778  4+1   7DAE 31   25               leay  pcm_meta_size,y
   2779  11    7DB0 3D                    mul                              >>
   2780  2     7DB1 12                    nop
   2781  3     7DB2 20   DF               bra   PlayPCM_ReadChunk
   2782                            
   2783        7DB4               PlayPCM_End
   2784  2     7DB4 86   00               lda   #$00
   2785  5     7DB6 B7   E7CD             sta   $e7cd
   2786                            
   2787  3     7DB9 CC   FBFC             ldd   #$fbfc  ! Mute by CRA to
   2788  5     7DBC B4   E7CF             anda  $e7cf   ! avoid sound when
   2789  5     7DBF B7   E7CF             sta   $e7cf   ! $e7cd is written
   2790  5     7DC2 F4   E7CD             andb  $e7cd   ! Activate
   2791  5     7DC5 F7   E7CD             stb   $e7cd   ! joystick port
   2792  2     7DC8 8A   04               ora   #$04    ! Disable mute by
   2793  5     7DCA B7   E7CF             sta   $e7cf   ! CRA + joystick
   2794
   2795        7DCD               PlayPCM_RestorePage
   2796  2     7DCD 86   00               lda   #$00
   2797  5     7DCF B7   E7E5             sta   $E7E5
   2798                            
   2799  5     7DD2 39                    rts
   2800
   2801
   2802                                   INCLUD PSGLIB
   2803                           * --------------------------------------->>
   2804                           * PSGlib
   2805                           * ------------
   2806                           * Converted to 6809 from:
   2807                           * PSGlib - Programmable Sound Generator a>>
   2808                           *          https://github.com/sverx/PSGli>>
   2809                           *
   2810                           * Typical workflow:
   2811                           * 1) You (or a friend of yours) track one>>
   2812                           * 2) Optional, but warmly suggested: opti>>
   2813                           * 3) Convert the VGM to PSG file(s) using>>
   2814                           * 4) Optional, suggested: compress the PS>>
   2815                           * 5) include the library and 'incbin' the>>
   2816                           * 6) call PSGInit once somewhere near the>>
   2817                           * 7) Set up a steady interrupt (vertical >>
   2818                           * 8) Start/stop tunes when needed using P>>
   2819                           * - Looping SFXs are supported too: fire >>
   2820                           * - Tunes can be set to run just once ins>>
   2821                           * - To check if a tune is still playing u>>
   2822                           *
   2823                           * PSGlib functions reference
   2824                           * ==========================
   2825                           *
   2826                           * engine initializer function
   2827                           * ---------------------------
   2828                           *
   2829                           * **PSGInit**: initializes the PSG engine>>
   2830                           * - no required parameters
   2831                           * - no return values
   2832                           * - destroys A
   2833                           *
   2834                           * functions for music
   2835                           * -------------------
   2836                           *
   2837                           * **PSGFrame**: processes a music frame
   2838                           * - no required parameters
   2839                           * - no return values
   2840                           * - destroys A,B,X
   2841                           *
   2842                           * **PSGPlay** / **PSGPlayNoRepeat**: star>>
   2843                           * - *needs* the address of the PSG to sta>>
   2844                           * - no return values
   2845                           * - destroys A
   2846                           *
   2847                           * **PSGStop**: stops (pauses) the music (>>
   2848                           * - no required parameters
   2849                           * - no return values
   2850                           * - destroys A
   2851                           *
   2852                           * **PSGResume**: resume the previously st>>
   2853                           * - no required parameters
   2854                           * - no return values
   2855                           * - destroys A
   2856                           *
   2857                           * **PSGCancelLoop**: sets the currently l>>
   2858                           * - no required parameters
   2859                           * - no return values
   2860                           * - destroys A
   2861                           *
   2862                           * **PSGGetStatus**: gets the current stat>>
   2863                           * - no required parameters
   2864                           * - *returns* `PSG_PLAYING` in register A>>
   2865                           *
   2866                           * functions for SFX
   2867                           * -----------------
   2868                           *
   2869                           * **PSGSFXFrame**: processes a SFX frame
   2870                           * - no required parameters
   2871                           * - no return values
   2872                           * - destroys A,B,Y
   2873                           *
   2874                           * **PSGSFXPlay** / **PSGSFXPlayLoop**: st>>
   2875                           * - *needs* the address of the SFX to sta>>
   2876                           * - *needs* a mask indicating which chann>>
   2877                           * - destroys A
   2878                           *
   2879                           * **PSGSFXStop**: stops the SFX (leaving >>
   2880                           * - no required parameters
   2881                           * - no return values
   2882                           * - destroys A
   2883                           *
   2884                           * **PSGSFXCancelLoop**: sets the currentl>>
   2885                           * - no required parameters
   2886                           * - no return values
   2887                           * - destroys A
   2888                           *
   2889                           * **PSGSFXGetStatus**: gets the current s>>
   2890                           * - no required parameters
   2891                           * - *returns* `PSG_PLAYING` in register A>>
   2892                           *
   2893                           * functions for music volume and hardware>>
   2894                           * --------------------------------------->>
   2895                           *
   2896                           * **PSGSetMusicVolumeAttenuation**: sets >>
   2897                           * - *needs* the volume attenuation value >>
   2898                           * - no return values
   2899                           * - destroys A
   2900                           *
   2901                           * **PSGSilenceChannels**: sets all hardwa>>
   2902                           * - no required parameters
   2903                           * - no return values
   2904                           * - destroys A
   2905                           *
   2906                           * **PSGRestoreVolumes**: resets silenced >>
   2907                           * - no required parameters
   2908                           * - no return values
   2909                           * - destroys A
   2910                           *
   2911                           * --------------------------------------->>
   2912
   2913                  0000     PSG_STOPPED         equ 0
   2914                  0001     PSG_PLAYING         equ 1
   2915
   2916                  E7B0     PSGDataPort         equ $e7b0
   2917
   2918                  0080     PSGLatch            equ $80
   2919                  0040     PSGData             equ $40
   2920
   2921                  0000     PSGChannel0         equ $00
   2922                  0020     PSGChannel1         equ $20
   2923                  0040     PSGChannel2         equ $40
   2924                  0060     PSGChannel3         equ $60
   2925                  0010     PSGVolumeData       equ $10
   2926
   2927                  0038     PSGWait             equ $38
   2928                  0008     PSGSubString        equ $08
   2929                  0001     PSGLoop             equ $01
   2930                  0000     PSGEnd              equ $00
   2931
   2932                  0001     SFX_CHANNEL2        equ $01
   2933                  0002     SFX_CHANNEL3        equ $02
   2934                  0003     SFX_CHANNELS2AND3   equ SFX_CHANNEL2!SFX_>>
   2935
   2936                           * ***************************************>>
   2937                           * initializes the PSG 'engine'
   2938                           * destroys A
   2939
   2940        7DD3               PSGInit *@globals
   2941  2     7DD3 86   00               lda   #PSG_STOPPED               >>
   2942  5     7DD5 B7   81D0             sta   PSGMusicStatus             >>
   2943  5     7DD8 B7   81EA             sta   PSGSFXStatus               >>
   2944  5     7DDB B7   81E6             sta   PSGChannel2SFX             >>
   2945  5     7DDE B7   81E7             sta   PSGChannel3SFX             >>
   2946  5     7DE1 B7   81E5             sta   PSGMusicVolumeAttenuation  >>
   2947  5     7DE4 39                    rts
   2948
   2949                           * ***************************************>>
   2950                           * receives in X the address of the PSG to>>
   2951                           * destroys A
   2952
   2953        7DE5               PSGPlayNoRepeat *@globals
   2954  2     7DE5 86   00               lda   #0                         >>
   2955  3     7DE7 20   02               bra   PSGPlay1
   2956        7DE9               PSGPlay
   2957  2     7DE9 86   01               lda   #1                         >>
   2958        7DEB               PSGPlay1
   2959  5     7DEB B7   81D9             sta   PSGLoopFlag
   2960  7     7DEE 8D   23               bsr   PSGStop                    >>
   2961                            
   2962  4+0   7DF0 A6   84               lda   ,x
   2963  5     7DF2 B7   81D1             sta   PSGMusicPage
   2964  5+1   7DF5 AE   01               ldx   1,x
   2965  6     7DF7 BF   81D2             stx   PSGMusicStart              >>
   2966  6     7DFA BF   81D4             stx   PSGMusicPointer            >>
   2967  6     7DFD BF   81D6             stx   PSGMusicLoopPoint          >>
   2968  2     7E00 86   00               lda   #0
   2969  5     7E02 B7   81D8             sta   PSGMusicSkipFrames         >>
   2970  5     7E05 B7   81DB             sta   PSGMusicSubstringLen       >>
   2971  2     7E08 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   2972  5     7E0A B7   81DA             sta   PSGMusicLastLatch          >>
   2973  2     7E0D 86   01               lda   #PSG_PLAYING
   2974  5     7E0F B7   81D0             sta   PSGMusicStatus             >>
   2975  5     7E12 39                    rts
   2976
   2977                           * ***************************************>>
   2978                           * stops the music (leaving the SFX on, if>>
   2979                           * destroys A
   2980
   2981        7E13               PSGStop *@globals
   2982  5     7E13 B6   81D0             lda   PSGMusicStatus             >>
   2983  3     7E16 27   23               beq   PSGStop_end
   2984  2     7E18 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   2985  5     7E1A B7   E7B0             sta   PSGDataPort
   2986  2     7E1D 86   BF               lda   #PSGLatch!PSGChannel1!PSGVo>>
   2987  5     7E1F B7   E7B0             sta   PSGDataPort
   2988  5     7E22 B6   81E6             lda   PSGChannel2SFX
   2989  3     7E25 26   05               bne   PSGStop2
   2990  2     7E27 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   2991  5     7E29 B7   E7B0             sta   PSGDataPort
   2992        7E2C               PSGStop2
   2993  5     7E2C B6   81E7             lda   PSGChannel3SFX
   2994  3     7E2F 26   05               bne   PSGStop3
   2995  2     7E31 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   2996  5     7E33 B7   E7B0             sta   PSGDataPort
   2997        7E36               PSGStop3
   2998  2     7E36 86   00               lda   #PSG_STOPPED               >>
   2999  5     7E38 B7   81D0             sta   PSGMusicStatus             >>
   3000        7E3B               PSGStop_end
   3001  5     7E3B 39              rts
   3002
   3003
   3004                           * ***************************************>>
   3005                           * resume a previously stopped music
   3006                           * destroys A
   3007
   3008        7E3C               PSGResume *@globals
   3009  5     7E3C B6   81D0             lda   PSGMusicStatus             >>
   3010  3     7E3F 26   45               bne   PSGResume_end
   3011  5     7E41 B6   81DE             lda   PSGChan0Volume             >>
   3012  2     7E44 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   3013  5     7E46 B7   E7B0             sta   PSGDataPort
   3014  5     7E49 B6   81DF             lda   PSGChan1Volume             >>
   3015  2     7E4C 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   3016  5     7E4E B7   E7B0             sta   PSGDataPort
   3017  5     7E51 B6   81E6             lda   PSGChannel2SFX
   3018  3     7E54 26   16               bne   PSGResume1
   3019  5     7E56 B6   81E2             lda   PSGChan2LowTone            >>
   3020  2     7E59 8A   C0               ora   #PSGLatch!PSGChannel2
   3021  5     7E5B B7   E7B0             sta   PSGDataPort
   3022  5     7E5E B6   81E4             lda   PSGChan2HighTone
   3023  5     7E61 B7   E7B0             sta   PSGDataPort
   3024  5     7E64 B6   81E0             lda   PSGChan2Volume             >>
   3025  2     7E67 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3026  5     7E69 B7   E7B0             sta   PSGDataPort
   3027        7E6C               PSGResume1
   3028  5     7E6C B6   81E7             lda   PSGChannel3SFX
   3029  3     7E6F 26   10               bne   PSGResume2
   3030  5     7E71 B6   81E3             lda   PSGChan3LowTone            >>
   3031  2     7E74 8A   E0               ora   #PSGLatch!PSGChannel3
   3032  5     7E76 B7   E7B0             sta   PSGDataPort
   3033  5     7E79 B6   81E1             lda   PSGChan3Volume             >>
   3034  2     7E7C 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3035  5     7E7E B7   E7B0             sta   PSGDataPort
   3036        7E81               PSGResume2
   3037  2     7E81 86   01               lda   #PSG_PLAYING
   3038  5     7E83 B7   81D0             sta   PSGMusicStatus             >>
   3039        7E86               PSGResume_end
   3040  5     7E86 39                    rts
   3041
   3042                           * ***************************************>>
   3043                           * sets the currently looping music to no >>
   3044                           * destroys A
   3045
   3046        7E87               PSGCancelLoop *@globals
   3047  7     7E87 7F   81D9               clr   PSGLoopFlag
   3048  5     7E8A 39                      rts
   3049
   3050                           * ***************************************>>
   3051                           * gets the current status of music into r>>
   3052
   3053        7E8B               PSGGetStatus *@globals
   3054  5     7E8B B6   81D0             lda   PSGMusicStatus
   3055  5     7E8E 39                    rts
   3056
   3057                           * ***************************************>>
   3058                           * receives in A the volume attenuation fo>>
   3059                           * destroys A
   3060
   3061        7E8F               PSGSetMusicVolumeAttenuation *@globals
   3062  5     7E8F B7   81E5             sta   PSGMusicVolumeAttenuation
   3063  5     7E92 B6   81D0             lda   PSGMusicStatus             >>
   3064  3     7E95 27   56               beq   PSGSetMusicVolumeAttenuatio>>
   3065
   3066  5     7E97 B6   81DE             lda   PSGChan0Volume
   3067  2     7E9A 84   0F               anda  #$0F
   3068  5     7E9C BB   81E5             adda  PSGMusicVolumeAttenuation
   3069  2     7E9F 81   10               cmpa  #$10                       >>
   3070  3     7EA1 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3071  2     7EA3 86   0F               lda   #$0F                       >>
   3072        7EA5               PSGSetMusicVolumeAttenuation1
   3073  2     7EA5 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   3074  5     7EA7 B7   E7B0             sta   PSGDataPort                >>
   3075                            
   3076  5     7EAA B6   81DF             lda   PSGChan1Volume
   3077  2     7EAD 84   0F               anda  #$0F
   3078  5     7EAF BB   81E5             adda  PSGMusicVolumeAttenuation
   3079  2     7EB2 81   10               cmpa  #$10                       >>
   3080  3     7EB4 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3081  2     7EB6 86   0F               lda   #$0F                       >>
   3082        7EB8               PSGSetMusicVolumeAttenuation2
   3083  2     7EB8 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   3084  5     7EBA B7   E7B0             sta   PSGDataPort                >>
   3085                            
   3086
   3087  5     7EBD B6   81E6             lda   PSGChannel2SFX             >>
   3088  3     7EC0 26   13               bne   _restore_channel3          >>
   3089
   3090  5     7EC2 B6   81E0             lda   PSGChan2Volume
   3091  2     7EC5 84   0F               anda  #$0F
   3092  5     7EC7 BB   81E5             adda  PSGMusicVolumeAttenuation
   3093  2     7ECA 81   10               cmpa  #$10                       >>
   3094  3     7ECC 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3095  2     7ECE 86   0F               lda   #$0F                       >>
   3096        7ED0               PSGSetMusicVolumeAttenuation3
   3097  2     7ED0 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3098  5     7ED2 B7   E7B0             sta   PSGDataPort
   3099
   3100        7ED5               _restore_channel3
   3101  5     7ED5 B6   81E7             lda   PSGChannel3SFX             >>
   3102  3     7ED8 26   13               bne   PSGSetMusicVolumeAttenuatio>>
   3103
   3104  5     7EDA B6   81E1             lda   PSGChan3Volume
   3105  2     7EDD 84   0F               anda  #$0F
   3106  5     7EDF BB   81E5             adda  PSGMusicVolumeAttenuation
   3107  2     7EE2 81   10               cmpa  #$10                       >>
   3108  3     7EE4 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3109  2     7EE6 86   0F               lda   #$0F                       >>
   3110        7EE8               PSGSetMusicVolumeAttenuation4
   3111  2     7EE8 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   3112  5     7EEA B7   E7B0             sta   PSGDataPort
   3113                            
   3114        7EED               PSGSetMusicVolumeAttenuation_end
   3115  5     7EED 39                    rts
   3116
   3117                           * ***************************************>>
   3118                           * sets all PSG channels to volume ZERO (u>>
   3119                           * destroys A
   3120
   3121        7EEE               PSGSilenceChannels *@globals
   3122  2     7EEE 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   3123  5     7EF0 B7   E7B0             sta   PSGDataPort
   3124  2     7EF3 86   BF               lda   #PSGLatch!PSGChannel1!PSGVo>>
   3125  5     7EF5 B7   E7B0             sta   PSGDataPort
   3126  2     7EF8 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   3127  5     7EFA B7   E7B0             sta   PSGDataPort
   3128  2     7EFD 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3129  5     7EFF B7   E7B0             sta   PSGDataPort
   3130  5     7F02 39                    rts
   3131
   3132                           * ***************************************>>
   3133                           * resets all PSG channels to previous vol>>
   3134                           * destroys A
   3135
   3136        7F03               PSGRestoreVolumes *@globals
   3137  5     7F03 B6   81D0             lda   PSGMusicStatus             >>
   3138  3     7F06 27   26               beq   _chkchn2                   >>
   3139
   3140  5     7F08 B6   81DE             lda   PSGChan0Volume
   3141  2     7F0B 84   0F               anda  #$0F
   3142  5     7F0D BB   81E5             adda  PSGMusicVolumeAttenuation
   3143  2     7F10 81   10               cmpa  #$10                       >>
   3144  3     7F12 25   02               bcs   PSGRestoreVolumes1         >>
   3145  2     7F14 86   0F               lda   #$0F                       >>
   3146        7F16               PSGRestoreVolumes1
   3147  2     7F16 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   3148  5     7F18 B7   E7B0             sta   PSGDataPort                >>
   3149
   3150  5     7F1B B6   81DF             lda   PSGChan1Volume
   3151  2     7F1E 84   0F               anda  #$0F
   3152  5     7F20 BB   81E5             adda  PSGMusicVolumeAttenuation
   3153  2     7F23 81   10               cmpa  #$10                       >>
   3154  3     7F25 25   02               bcs   PSGRestoreVolumes2         >>
   3155  2     7F27 86   0F               lda   #$0F                       >>
   3156        7F29               PSGRestoreVolumes2
   3157  2     7F29 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   3158  5     7F2B B7   E7B0             sta   PSGDataPort                >>
   3159                            
   3160        7F2E               _chkchn2
   3161  5     7F2E B6   81E6             lda   PSGChannel2SFX             >>
   3162  3     7F31 26   15               bne   _restoreSFX2
   3163                            
   3164  5     7F33 B6   81D0             lda   PSGMusicStatus             >>
   3165  3     7F36 27   1A               beq   _chkchn3                   >>
   3166
   3167  5     7F38 B6   81E0             lda   PSGChan2Volume
   3168  2     7F3B 84   0F               anda  #$0F
   3169  5     7F3D BB   81E5             adda  PSGMusicVolumeAttenuation
   3170  2     7F40 81   10               cmpa  #$10                       >>
   3171  3     7F42 25   09               bcs   PSGRestoreVolumes3         >>
   3172  2     7F44 86   0F               lda   #$0F                       >>
   3173  3     7F46 20   05               bra   PSGRestoreVolumes3
   3174
   3175        7F48               _restoreSFX2
   3176  5     7F48 B6   81E8             lda   PSGSFXChan2Volume
   3177  4     7F4B 94   0F               anda  $0F
   3178        7F4D               PSGRestoreVolumes3
   3179  2     7F4D 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3180  5     7F4F B7   E7B0             sta   PSGDataPort                >>
   3181
   3182        7F52               _chkchn3
   3183  5     7F52 B6   81E7             lda   PSGChannel3SFX             >>
   3184  3     7F55 26   15               bne   _restoreSFX3
   3185                            
   3186  5     7F57 B6   81D0             lda   PSGMusicStatus             >>
   3187  3     7F5A 27   1A               beq   _restoreSFX2_end           >>
   3188
   3189  5     7F5C B6   81E1             lda   PSGChan3Volume
   3190  2     7F5F 84   0F               anda  #$0F
   3191  5     7F61 BB   81E5             adda  PSGMusicVolumeAttenuation
   3192  2     7F64 81   10               cmpa  #$10                       >>
   3193  3     7F66 25   09               bcs   PSGRestoreVolumes4         >>
   3194  2     7F68 86   0F               lda   #$0F                       >>
   3195  3     7F6A 20   05               bra   PSGRestoreVolumes4
   3196
   3197        7F6C               _restoreSFX3
   3198  5     7F6C B6   81E9             lda   PSGSFXChan3Volume
   3199  2     7F6F 84   0F               anda  #$0F
   3200        7F71               PSGRestoreVolumes4
   3201  2     7F71 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   3202  5     7F73 B7   E7B0             sta   PSGDataPort                >>
   3203        7F76               _restoreSFX2_end
   3204  5     7F76 39                    rts
   3205
   3206
   3207                           * ***************************************>>
   3208                           * receives in X the address of the SFX PS>>
   3209                           * receives in B the mask that indicates w>>
   3210                           * destroys A
   3211
   3212        7F77               PSGSFXPlayLoop *@globals
   3213  2     7F77 86   01               lda   #1                         >>
   3214  3     7F79 20   02               bra   PSGSFXPlay1
   3215        7F7B               PSGSFXPlay
   3216  2     7F7B 86   00               lda   #0                         >>
   3217        7F7D               PSGSFXPlay1
   3218  5     7F7D B7   81F3             sta   PSGSFXLoopFlag
   3219  7     7F80 8D   41               bsr   PSGSFXStop                 >>
   3220
   3221  4+0   7F82 A6   84               lda   ,x
   3222  5     7F84 B7   81EB             sta   PSGSFXPage
   3223  5+1   7F87 AE   01               ldx   1,x
   3224  6     7F89 BF   81EC             stx   PSGSFXStart                >>
   3225  6     7F8C BF   81EE             stx   PSGSFXPointer              >>
   3226  6     7F8F BF   81F0             stx   PSGSFXLoopPoint            >>
   3227  2     7F92 86   00               lda   #0
   3228  5     7F94 B7   81F2             sta   PSGSFXSkipFrames           >>
   3229  5     7F97 B7   81F4             sta   PSGSFXSubstringLen         >>
   3230  2     7F9A C5   01               bitb  #SFX_CHANNEL2              >>
   3231  3     7F9C 27   05               beq   PSGSFXPlay2
   3232  2     7F9E 86   01               lda   #PSG_PLAYING
   3233  5     7FA0 B7   81E6             sta   PSGChannel2SFX
   3234        7FA3               PSGSFXPlay2
   3235  2     7FA3 C5   02               bitb  #SFX_CHANNEL3              >>
   3236  3     7FA5 27   05               beq   PSGSFXPlay3
   3237  2     7FA7 86   01               lda   #PSG_PLAYING
   3238  5     7FA9 B7   81E7             sta   PSGChannel3SFX
   3239        7FAC               PSGSFXPlay3
   3240  5     7FAC B7   81EA             sta   PSGSFXStatus               >>
   3241  5     7FAF B6   81E3             lda   PSGChan3LowTone            >>
   3242  2     7FB2 84   03               anda  #SFX_CHANNELS2AND3
   3243  2     7FB4 81   03               cmpa  #SFX_CHANNELS2AND3
   3244  3     7FB6 26   0A               bne   PSGSFXPlayLoop_end         >>
   3245  2     7FB8 86   01               lda   #PSG_PLAYING
   3246  5     7FBA B7   81E7             sta   PSGChannel3SFX             >>
   3247  2     7FBD 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3248  5     7FBF B7   E7B0             sta   PSGDataPort
   3249        7FC2               PSGSFXPlayLoop_end
   3250  5     7FC2 39                    rts
   3251
   3252
   3253                           * ***************************************>>
   3254                           * stops the SFX (leaving the music on, if>>
   3255                           * destroys A
   3256
   3257        7FC3               PSGSFXStop *@globals
   3258  5     7FC3 B6   81EA             lda   PSGSFXStatus               >>
   3259  3     7FC6 27   70               beq   PSGSFXStop_end             >>
   3260  5     7FC8 B6   81E6             lda   PSGChannel2SFX             >>
   3261  3     7FCB 27   05               beq   PSGSFXStop1
   3262  2     7FCD 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   3263  5     7FCF B7   E7B0             sta   PSGDataPort
   3264        7FD2               PSGSFXStop1
   3265  5     7FD2 B6   81E7             lda   PSGChannel3SFX             >>
   3266  3     7FD5 27   05               beq   PSGSFXStop2
   3267  2     7FD7 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3268  5     7FD9 B7   E7B0             sta   PSGDataPort
   3269        7FDC               PSGSFXStop2
   3270  5     7FDC B6   81D0             lda   PSGMusicStatus             >>
   3271  3     7FDF 27   4E               beq   _skipRestore               >>
   3272  5     7FE1 B6   81E6             lda   PSGChannel2SFX             >>
   3273  3     7FE4 27   25               beq   _skip_chn2
   3274  5     7FE6 B6   81E2             lda   PSGChan2LowTone
   3275  2     7FE9 84   0F               anda  #$0F                       >>
   3276  2     7FEB 8A   80               ora   #PSGLatch|PSGChannel2      >>
   3277  5     7FED B7   E7B0             sta   PSGDataPort
   3278  5     7FF0 B6   81E4             lda   PSGChan2HighTone           >>
   3279  2     7FF3 84   3F               anda  #$3F                       >>
   3280  5     7FF5 B7   E7B0             sta   PSGDataPort
   3281  5     7FF8 B6   81E0             lda   PSGChan2Volume             >>
   3282  2     7FFB 84   0F               anda  #$0F                       >>
   3283  5     7FFD BB   81E5             adda  PSGMusicVolumeAttenuation
   3284  2     8000 81   10               cmpa  #$10                       >>
   3285  3     8002 25   02               bcs   PSGSFXStop3                >>
   3286  2     8004 86   0F               lda   #$0F                       >>
   3287        8006               PSGSFXStop3
   3288  2     8006 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3289  5     8008 B7   E7B0             sta   PSGDataPort                >>
   3290        800B               _skip_chn2
   3291  5     800B B6   81E7             lda   PSGChannel3SFX             >>
   3292  3     800E 27   1D               beq   _skip_chn3
   3293  5     8010 B6   81E3             lda   PSGChan3LowTone
   3294  4     8013 94   07               anda  $07                        >>
   3295  2     8015 8A   E0               ora   #PSGLatch!PSGChannel3      >>
   3296  5     8017 B7   E7B0             sta   PSGDataPort
   3297  5     801A B6   81E1             lda   PSGChan3Volume             >>
   3298  2     801D 84   0F               anda  #$0F                       >>
   3299  5     801F BB   81E5             adda  PSGMusicVolumeAttenuation
   3300  2     8022 81   10               cmpa  #$10                       >>
   3301  3     8024 25   02               bcs   PSGSFXStop4                >>
   3302  2     8026 86   0F               lda   #$0F                       >>
   3303        8028               PSGSFXStop4
   3304  2     8028 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   3305  5     802A B7   E7B0             sta   PSGDataPort                >>
   3306
   3307        802D               _skip_chn3
   3308  2     802D 86   00               lda   #PSG_STOPPED               >>
   3309        802F               _skipRestore
   3310  5     802F B7   81E6             sta   PSGChannel2SFX
   3311  5     8032 B7   81E7             sta   PSGChannel3SFX
   3312  5     8035 B7   81EA             sta   PSGSFXStatus               >>
   3313        8038               PSGSFXStop_end
   3314  5     8038 39                    rts
   3315
   3316                           * ***************************************>>
   3317                           * sets the currently looping SFX to no mo>>
   3318                           * destroys A
   3319
   3320        8039               PSGSFXCancelLoop *@globals
   3321  7     8039 7F   81F3             clr   PSGSFXLoopFlag
   3322  5     803C 39                    rts
   3323
   3324
   3325                           * ***************************************>>
   3326                           * gets the current SFX status into regist>>
   3327
   3328        803D               PSGSFXGetStatus *@globals
   3329  5     803D B6   81EA             lda   PSGSFXStatus
   3330  5     8040 39                    rts
   3331
   3332
   3333                           * ***************************************>>
   3334                           * processes a music frame
   3335                           * destroys A,B,X
   3336                            
   3337        8041               PSGFrame *@globals
   3338
   3339  5     8041 B6   81D1             lda   PSGMusicPage
   3340  5     8044 B7   E7E5             sta   $E7E5
   3341
   3342  5     8047 B6   81D0             lda   PSGMusicStatus             >>
   3343  3     804A 26   01               bne   PSGFrame_continue
   3344  5     804C 39                    rts
   3345
   3346        804D               PSGFrame_continue
   3347  5     804D B6   81D8             lda   PSGMusicSkipFrames         >>
   3348  3     8050 26   7F               bne   _skipFrame
   3349  6     8052 BE   81D4             ldx   PSGMusicPointer            >>
   3350
   3351        8055               _intLoop
   3352  4+2   8055 E6   80               ldb   ,x+                        >>
   3353  5     8057 B6   81DB             lda   PSGMusicSubstringLen       >>
   3354  3     805A 27   09               beq   _continue                  >>
   3355  2     805C 4A                    deca                             >>
   3356  5     805D B7   81DB             sta   PSGMusicSubstringLen       >>
   3357  3     8060 26   03               bne   _continue
   3358  6     8062 BE   81DC             ldx   PSGMusicSubstringRetAddr   >>
   3359
   3360        8065               _continue
   3361  2     8065 C1   80               cmpb  #PSGLatch                  >>
   3362  3     8067 25   6D               bcs   _noLatch                   >>
   3363  5     8069 F7   81DA             stb   PSGMusicLastLatch          >>
   3364                            
   3365  2     806C C5   04               bitb  #4                         >>
   3366  3     806E 26   32               bne   _latch_Volume              >>
   3367  2     8070 C5   06               bitb  #6                         >>
   3368  3     8072 27   58               beq   _send2PSG                  >>
   3369
   3370  2     8074 C5   05               bitb  #5                         >>
   3371  3     8076 27   20               beq   _ifchn2                    >>
   3372  5     8078 F7   81E3             stb   PSGChan3LowTone            >>
   3373  5     807B B6   81E7             lda   PSGChannel3SFX             >>
   3374  3     807E 26   D5               bne   _intLoop
   3375  5     8080 B6   81E3             lda   PSGChan3LowTone
   3376  2     8083 84   03               anda  #3                         >>
   3377  2     8085 81   03               cmpa  #3
   3378  3     8087 26   43               bne   _send2PSG                  >>
   3379  5     8089 B6   81EA             lda   PSGSFXStatus               >>
   3380  3     808C 27   3E               beq   _send2PSG                  >>
   3381  5     808E B7   81E7             sta   PSGChannel3SFX             >>
   3382  2     8091 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3383  5     8093 B7   E7B0             sta   PSGDataPort
   3384  3     8096 20   BD               bra   _intLoop
   3385
   3386        8098               _ifchn2
   3387  5     8098 F7   81E2             stb   PSGChan2LowTone            >>
   3388  5     809B B6   81E6             lda   PSGChannel2SFX             >>
   3389  3     809E 27   2C               beq   _send2PSG
   3390  3     80A0 20   B3               bra   _intLoop
   3391                            
   3392        80A2               _latch_Volume
   3393  2     80A2 C5   06               bitb  #6                         >>
   3394  3     80A4 26   0E               bne   _latch_Volume_23           >>
   3395  2     80A6 C5   05               bitb  #5                         >>
   3396  3     80A8 27   05               beq   _ifchn0                    >>
   3397  5     80AA F7   81DF             stb   PSGChan1Volume             >>
   3398  3     80AD 20   4C               bra   _sendVolume2PSG
   3399                            
   3400        80AF               _ifchn0
   3401  5     80AF F7   81DE             stb   PSGChan0Volume             >>
   3402  3     80B2 20   47               bra   _sendVolume2PSG
   3403
   3404        80B4               _latch_Volume_23
   3405  2     80B4 C5   05               bitb  #5                         >>
   3406  3     80B6 27   0A               beq   _chn2                      >>
   3407  5     80B8 F7   81E1             stb   PSGChan3Volume             >>
   3408  5     80BB B6   81E7             lda   PSGChannel3SFX             >>
   3409  3     80BE 27   3B               beq   _sendVolume2PSG
   3410  3     80C0 20   93               bra   _intLoop
   3411
   3412        80C2               _chn2
   3413  5     80C2 F7   81E0             stb   PSGChan2Volume             >>
   3414  5     80C5 B6   81E6             lda   PSGChannel2SFX             >>
   3415  3     80C8 27   31               beq   _sendVolume2PSG
   3416  3     80CA 20   89               bra   _intLoop
   3417                            
   3418        80CC               _send2PSG
   3419  5     80CC F7   E7B0             stb   PSGDataPort                >>
   3420  3     80CF 20   84               bra   _intLoop
   3421                            
   3422        80D1               _skipFrame
   3423  2     80D1 4A                    deca
   3424  5     80D2 B7   81D8             sta   PSGMusicSkipFrames
   3425  5     80D5 39                    rts
   3426
   3427        80D6               _noLatch
   3428  2     80D6 C1   40               cmpb  #PSGData
   3429  3     80D8 25   05               bcs   _command                   >>
   3430                                                                    >>
   3431  5     80DA B6   81DA             lda   PSGMusicLastLatch          >>
   3432  3     80DD 20   39               bra   _output_NoLatch
   3433
   3434        80DF               _command
   3435  2     80DF C1   38               cmpb  #PSGWait
   3436  3     80E1 27   07               beq   _done                      >>
   3437  3     80E3 25   09               bcs   _otherCommands             >>
   3438  2     80E5 C4   07               andb  #$07                       >>
   3439  5     80E7 F7   81D8             stb   PSGMusicSkipFrames         >>
   3440                            
   3441        80EA               _done
   3442  6     80EA BF   81D4             stx   PSGMusicPointer            >>
   3443  5     80ED 39                    rts                              >>
   3444
   3445        80EE               _otherCommands
   3446  2     80EE C1   08               cmpb  #PSGSubString
   3447  3     80F0 24   3F               bcc   _substring
   3448  2     80F2 C1   00               cmpb  #PSGEnd
   3449  3     80F4 27   2E               beq   _musicLoop
   3450  2     80F6 C1   01               cmpb  #PSGLoop
   3451  3     80F8 27   24               beq   _setLoopPoint
   3452
   3453                             * *************************************>>
   3454                             * we should never get here!
   3455                             * if we do, it means the PSG file is pr>>
   3456                             * *************************************>>
   3457
   3458  5     80FA 39                    rts
   3459
   3460        80FB               _sendVolume2PSG *@globals
   3461  5     80FB F7   810A             stb   _sendVolume2PSG1+1         >>
   3462  2     80FE C4   0F               andb  #$0F                       >>
   3463  5     8100 FB   81E5             addb  PSGMusicVolumeAttenuation  >>
   3464  2     8103 C1   10               cmpb  #$10                       >>
   3465  3     8105 25   02               bcs   _sendVolume2PSG1           >>
   3466  2     8107 C6   0F               ldb   #$0F                       >>
   3467        8109               _sendVolume2PSG1
   3468  2     8109 86   00               lda   #0                         >>
   3469  5     810B F7   8111             stb   _sendVolume2PSG2+1
   3470  2     810E 84   F0               anda  #$F0                       >>
   3471        8110               _sendVolume2PSG2
   3472  2     8110 8A   00               ora   #0                         >>
   3473  5     8112 B7   E7B0             sta   PSGDataPort                >>
   3474  5     8115 16   FF3D             lbra   _intLoop
   3475
   3476        8118               _output_NoLatch
   3477                             * we got the last latch in A and the PS>>
   3478                             * and we have to check if the value sho>>
   3479                             * note that non-latch commands can be o>>
   3480                             * for channels 0,1,2 only (no noise)
   3481  2     8118 85   06               bita  #6                         >>
   3482  3     811A 26   27               bne   _high_part_Tone            >>
   3483  3     811C 20   AE               bra   _send2PSG                  >>
   3484
   3485        811E               _setLoopPoint
   3486  6     811E BF   81D6             stx   PSGMusicLoopPoint
   3487  5     8121 16   FF31             lbra   _intLoop
   3488
   3489        8124               _musicLoop
   3490  5     8124 B6   81D9             lda   PSGLoopFlag                >>
   3491  6     8127 1027 FCE8             lbeq   PSGStop                   >>
   3492  6     812B BE   81D6             ldx   PSGMusicLoopPoint
   3493  5     812E 16   FF24             lbra   _intLoop
   3494
   3495        8131               _substring
   3496  2     8131 C0   04               subb  #PSGSubString-4            >>
   3497  5     8133 F7   81DB             stb   PSGMusicSubstringLen       >>
   3498  5+3   8136 EC   81               ldd   ,x++                       >>
   3499  6     8138 BF   81DC             stx   PSGMusicSubstringRetAddr   >>
   3500  6     813B BE   81D2             ldx   PSGMusicStart
   3501  4+4   813E 30   8B               leax  d,x                        >>
   3502  5     8140 16   FF12             lbra   _intLoop
   3503
   3504        8143               _high_part_Tone
   3505  5     8143 F7   81E4             stb   PSGChan2HighTone           >>
   3506  5     8146 B6   81E6             lda   PSGChannel2SFX             >>
   3507  3     8149 27   81               beq   _send2PSG
   3508  5     814B 16   FF07             lbra   _intLoop
   3509
   3510
   3511                           * ***************************************>>
   3512                           * processes a SFX frame
   3513                           * destroys A,B,X
   3514
   3515        814E               PSGSFXFrame *@globals
   3516
   3517  5     814E B6   81EB             lda   PSGSFXPage
   3518  5     8151 B7   E7E5             sta   $E7E5
   3519                            
   3520  5     8154 B6   81EA             lda   PSGSFXStatus               >>
   3521  3     8157 27   35               beq   PSGSFXFrame_end
   3522
   3523  5     8159 B6   81F2             lda   PSGSFXSkipFrames           >>
   3524  3     815C 26   2C               bne   _skipSFXFrame
   3525                            
   3526  6     815E BE   81EE             ldx   PSGSFXPointer              >>
   3527
   3528        8161               _intSFXLoop
   3529  4+2   8161 E6   80               ldb   ,x+                        >>
   3530  5     8163 B6   81F4             lda   PSGSFXSubstringLen         >>
   3531  3     8166 27   09               beq   _SFXcontinue               >>
   3532  2     8168 4A                    deca                             >>
   3533  5     8169 B7   81F4             sta   PSGSFXSubstringLen         >>
   3534  3     816C 26   03               bne   _SFXcontinue
   3535  6     816E BE   81F5             ldx   PSGSFXSubstringRetAddr     >>
   3536
   3537        8171               _SFXcontinue
   3538  2     8171 C1   40               cmpb   #PSGData
   3539  3     8173 25   1A               bcs    _SFXcommand               >>
   3540  2     8175 C5   04               bitb   #4                        >>
   3541  3     8177 27   0C               beq    _SFXoutbyte               >>
   3542  2     8179 C5   05               bitb   #5                        >>
   3543  3     817B 26   05               bne    _SFXvolumechn3
   3544  5     817D F7   81E8             stb    PSGSFXChan2Volume
   3545  3     8180 20   03               bra   _SFXoutbyte
   3546
   3547        8182               _SFXvolumechn3
   3548  5     8182 F7   81E9             stb   PSGSFXChan3Volume
   3549
   3550        8185               _SFXoutbyte
   3551  5     8185 F7   E7B0             stb   PSGDataPort                >>
   3552  3     8188 20   D7               bra   _intSFXLoop
   3553                            
   3554        818A               _skipSFXFrame
   3555  2     818A 4A                    deca
   3556  5     818B B7   81F2             sta   PSGSFXSkipFrames
   3557        818E               PSGSFXFrame_end
   3558  5     818E 39                    rts
   3559
   3560        818F               _SFXcommand
   3561  2     818F C1   38               cmpb   #PSGWait
   3562  3     8191 27   07               beq    _SFXdone                  >>
   3563  3     8193 25   09               bcs    _SFXotherCommands         >>
   3564  2     8195 C4   07               andb   #$07                      >>
   3565  5     8197 F7   81F2             stb    PSGSFXSkipFrames          >>
   3566        819A               _SFXdone
   3567  6     819A BF   81EE             stx    PSGSFXPointer             >>
   3568  5     819D 39                    rts                              >>
   3569
   3570        819E               _SFXotherCommands
   3571  2     819E C1   08               cmpb   #PSGSubString
   3572  3     81A0 24   1D               bcc    _SFXsubstring
   3573  2     81A2 C1   00               cmpb   #PSGEnd
   3574  3     81A4 27   0A               beq    _sfxLoop
   3575  2     81A6 C1   01               cmpb   #PSGLoop
   3576  3     81A8 27   01               beq    _SFXsetLoopPoint
   3577                            
   3578                             * *************************************>>
   3579                             * we should never get here!
   3580                             * if we do, it means the PSG SFX file i>>
   3581                             * *************************************>>
   3582
   3583  5     81AA 39                    rts
   3584
   3585        81AB               _SFXsetLoopPoint *@globals
   3586  6     81AB BF   81F0             stx   PSGSFXLoopPoint
   3587  3     81AE 20   B1               bra   _intSFXLoop
   3588                            
   3589        81B0               _sfxLoop
   3590  5     81B0 B6   81F3             lda   PSGSFXLoopFlag             >>
   3591  6     81B3 1027 FE0C             lbeq   PSGSFXStop                >>
   3592  6     81B7 BE   81F0             ldx   PSGSFXLoopPoint
   3593  6     81BA BF   81EE             stx   PSGSFXPointer
   3594  3     81BD 20   A2               bra   _intSFXLoop
   3595
   3596        81BF               _SFXsubstring
   3597  2     81BF C0   04               subb  #PSGSubString-4            >>
   3598  5     81C1 F7   81F4             stb   PSGSFXSubstringLen         >>
   3599  5+3   81C4 EC   81               ldd   ,x++                       >>
   3600  6     81C6 BF   81F5             stx   PSGSFXSubstringRetAddr     >>
   3601  6     81C9 BE   81EC             ldx   PSGSFXStart
   3602  4+4   81CC 30   8B               leax  d,x                        >>
   3603  3     81CE 20   91               bra   _intSFXLoop
   3604
   3605                             * fundamental vars
   3606        81D0               PSGMusicStatus             rmb 1,0 ; are >>
   3607        81D1               PSGMusicPage               rmb 1,0 ; Memo>>
   3608        81D2               PSGMusicStart              rmb 2,0 ; the >>
   3609        81D4               PSGMusicPointer            rmb 2,0 ; the >>
   3610        81D6               PSGMusicLoopPoint          rmb 2,0 ; the >>
   3611        81D8               PSGMusicSkipFrames         rmb 1,0 ; the >>
   3612        81D9               PSGLoopFlag                rmb 1,0 ; the >>
   3613        81DA               PSGMusicLastLatch          rmb 1,0 ; the >>
   3614
   3615                             * decompression vars
   3616        81DB               PSGMusicSubstringLen       rmb 1,0 ; leng>>
   3617        81DC               PSGMusicSubstringRetAddr   rmb 2,0 ; retu>>
   3618
   3619                             * command buffers
   3620        81DE               PSGChan0Volume             rmb 1,0 ; the >>
   3621        81DF               PSGChan1Volume             rmb 1,0 ; the >>
   3622        81E0               PSGChan2Volume             rmb 1,0 ; the >>
   3623        81E1               PSGChan3Volume             rmb 1,0 ; the >>
   3624        81E2               PSGChan2LowTone            rmb 1,0 ; the >>
   3625        81E3               PSGChan3LowTone            rmb 1,0 ; the >>
   3626        81E4               PSGChan2HighTone           rmb 1,0 ; the >>
   3627
   3628        81E5               PSGMusicVolumeAttenuation  rmb 1,0 ; the >>
   3629
   3630                             * ******* SFX *************
   3631
   3632                             * flags for channels 2-3 access
   3633        81E6               PSGChannel2SFX             rmb 1,0 ; !0 m>>
   3634        81E7               PSGChannel3SFX             rmb 1,0 ; !0 m>>
   3635
   3636                             * command buffers for SFX
   3637        81E8               PSGSFXChan2Volume          rmb 1,0 ; the >>
   3638        81E9               PSGSFXChan3Volume          rmb 1,0 ; the >>
   3639
   3640                             * fundamental vars for SFX
   3641        81EA               PSGSFXStatus               rmb 1,0 ; are >>
   3642        81EB               PSGSFXPage                 rmb 1,0 ; Memo>>
   3643        81EC               PSGSFXStart                rmb 2,0 ; the >>
   3644        81EE               PSGSFXPointer              rmb 2,0 ; the >>
   3645        81F0               PSGSFXLoopPoint            rmb 2,0 ; the >>
   3646        81F2               PSGSFXSkipFrames           rmb 1,0 ; the >>
   3647        81F3               PSGSFXLoopFlag             rmb 1,0 ; the >>
   3648
   3649                             * decompression vars for SFX
   3650        81F4               PSGSFXSubstringLen         rmb 1,0 ; leng>>
   3651        81F5               PSGSFXSubstringRetAddr     rmb 2,0 ; retu>>
   3652
   3653
   3654
   3655                                   INCLUD IRQPSGRR
   3656                           * --------------------------------------->>
   3657                           * IrqPsgRaster/IrqPsg
   3658                           * ------
   3659                           * IRQ Subroutine to play sound with SN764>>
   3660                           *
   3661                           * input REG : [dp] with value E7 (from Mo>>
   3662                           * reset REG : none
   3663                           *
   3664                           * IrqOn
   3665                           * reset REG : [a]
   3666                           *
   3667                           * IrqOff
   3668                           * reset REG : [a]
   3669                           *
   3670                           * IrqSync
   3671                           * input REG : [a] screen line (0-199)
   3672                           *             [x] timer value
   3673                           * reset REG : [d]
   3674                           *
   3675                           * IrqSync
   3676                           * reset REG : [d]
   3677                           * --------------------------------------->>
   3678                            
   3679                  6027     irq_routine       equ $6027 *@globals
   3680                  E7C5     irq_timer_ctrl    equ $E7C5 *@globals
   3681                  E7C6     irq_timer         equ $E7C6 *@globals
   3682                  4DFF     irq_one_frame     equ 312*64-1 *@globals >>
   3683        81F7 0000          Irq_Raster_Page   fdb $00 *@globals
   3684        81F9 0000          Irq_Raster_Start  fdb $0000 *@globals
   3685        81FB 0000          Irq_Raster_End    fdb $0000 *@globals
   3686                            
   3687        81FD               IrqOn *@globals
   3688  5     81FD B6   6019             lda   $6019
   3689  2     8200 8A   20               ora   #$20
   3690  5     8202 B7   6019             sta   $6019                      >>
   3691  2     8205 1C   EF               andcc #$EF                       >>
   3692  5     8207 39                    rts
   3693                            
   3694        8208               IrqOff *@globals
   3695  5     8208 B6   6019             lda   $6019
   3696  2     820B 84   DF               anda  #$DF
   3697  5     820D B7   6019             sta   $6019                      >>
   3698  2     8210 1A   10               orcc  #$10                       >>
   3699  5     8212 39                    rts
   3700
   3701        8213               IrqSync *@globals
   3702  2     8213 C6   42               ldb   #$42
   3703  5     8215 F7   E7C5             stb   irq_timer_ctrl
   3704                            
   3705  2     8218 C6   08               ldb   #8                         >>
   3706  11    821A 3D                    mul
   3707  6     821B 1F   02               tfr   d,y
   3708  4+1   821D 31   A8 E0            leay  -32,y                      >>
   3709
   3710        8220               IrqSync_1
   3711  7     8220 7D   E7E7             tst   $E7E7                      >>
   3712  3     8223 2B   FB               bmi   IrqSync_1                  >>
   3713        8225               IrqSync_2
   3714  7     8225 7D   E7E7             tst   $E7E7                      >>
   3715  3     8228 2A   FB               bpl   IrqSync_2                  >>
   3716        822A               IrqSync_3
   3717  4+1   822A 31   3F               leay  -1,y                       >>
   3718  3     822C 26   FC               bne   IrqSync_3                  >>
   3719                            
   3720  6     822E BF   E7C6             stx   irq_timer                  >>
   3721  5     8231 39                    rts
   3722                            
   3723        8232               IrqPsg *@globals
   3724  4     8232 96   E5               lda   <$E5
   3725  5     8234 B7   823B             sta   IrqPsg_end+1               >>
   3726  8     8237 BD   8041             jsr   PSGFrame
   3727                                  *jsr   PSGSFXFrame
   3728        823A               IrqPsg_end
   3729  2     823A 86   00               lda   #$00
   3730  4     823C 97   E5               sta   <$E5                       >>
   3731  4     823E 7E   E830             jmp   $E830                      >>
   3732                            
   3733        8241               IrqPsgRaster *@globals
   3734  4     8241 96   E5               lda   <$E5
   3735  5     8243 B7   8272             sta   IrqPsgRaster_end+1         >>
   3736                            
   3737  5     8246 B6   81F7             lda   Irq_Raster_Page
   3738  4     8249 97   E5               sta   <$E5                       >>
   3739  6     824B BE   81F9             ldx   Irq_Raster_Start
   3740  2     824E 86   20               lda   #32
   3741        8250               IrqPsgRaster_1
   3742  4     8250 95   E7               bita  <$E7
   3743  3     8252 27   FC               beq   IrqPsgRaster_1             >>
   3744        8254               IrqPsgRaster_2
   3745  4     8254 95   E7               bita  <$E7
   3746  3     8256 26   FC               bne   IrqPsgRaster_2             >>
   3747                            
   3748  11    8258 3D                    mul                              >>
   3749        8259               IrqPsgRaster_render
   3750  2     8259 12                    nop                              >>
   3751  2     825A 12                    nop                              >>
   3752  11    825B 3D                    mul                              >>
   3753  11    825C 3D                    mul                              >>
   3754  6     825D 1F   89               tfr   a,b                        >>
   3755  2     825F 86   1E               lda   #$1E
   3756  4     8261 97   DB               sta   <$DB
   3757  5+3   8263 EC   81               ldd   ,x++
   3758  4     8265 D7   DA               stb   <$DA                       >>
   3759  4     8267 97   DA               sta   <$DA                       >>
   3760  7     8269 BC   81FB             cmpx  Irq_Raster_End
   3761  3     826C 26   EB               bne   IrqPsgRaster_render
   3762
   3763  8     826E BD   8041            jsr   PSGFrame
   3764                                  *jsr   PSGSFXFrame
   3765        8271               IrqPsgRaster_end
   3766  2     8271 86   00               lda   #$00
   3767  4     8273 97   E5               sta   <$E5                       >>
   3768  4     8275 7E   E830             jmp   $E830                      >>
   3769
   3770
    165                            
    166                           * =======================================>>
    167                           * Level Specific Generated Data
    168                           * IMG and ANI should be in first position>>
    169                           * =======================================>>
   3771                                   INCLUD IMAGEIDX
   3772                           * Generated Code
   3773
   3774        8278               Img_SonicAndTailsIn *@globals
   3775        8278 07 00 00 00           fcb   $07,$00,$00,$00,$88,$4F,$00>>
               827C 88 4F 00 00
               8280 06 00 00 BB
               8284 D9 0A
   3776        8286 D1 01                 fcb   $D1,$01
   3777        8288               Img_SegaLogo_2 *@globals
   3778        8288 07 00 00 00           fcb   $07,$00,$00,$00,$5C,$39,$03>>
               828C 5C 39 03 00
               8290 06 00 00 D2
               8294 E4 0C
   3779        8296 C3 98                 fcb   $C3,$98
   3780        8298               Img_SegaLogo_1 *@globals
   3781        8298 07 00 00 00           fcb   $07,$00,$00,$00,$5C,$38,$03>>
               829C 5C 38 03 00
               82A0 06 00 00 D2
               82A4 E5 0A
   3782        82A6 C4 74                 fcb   $C4,$74
   3783        82A8               Img_SegaTrails_1 *@globals
   3784        82A8 07 10 00 00           fcb   $07,$10,$00,$00,$07,$3E,$00>>
               82AC 07 3E 00 00
               82B0 06 00 00 10
               82B4 E0 05
   3785        82B6 DD BA 00 06           fcb   $DD,$BA,$00,$06,$00,$00,$E8>>
               82BA 00 00 E8 E0
               82BE 05 DC 43
   3786        82C1               Img_SegaSonic_12 *@globals
   3787        82C1 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$45,$00>>
               82C5 0F 45 00 06
               82C9 00 00 00 F8
               82CD E3 08
   3788        82CF D8 0A 05 D9           fcb   $D8,$0A,$05,$D9,$93,$0A,$06>>
               82D3 93 0A 06 00
               82D7 00 00 F8 E3
               82DB 08 D0
   3789        82DD 45 06 DD 4F           fcb   $45,$06,$DD,$4F,$0A
               82E1 0A
   3790        82E2               Img_SegaSonic_23 *@globals
   3791        82E2 07 14 00 00           fcb   $07,$14,$00,$00,$06,$1F,$00>>
               82E6 06 1F 00 06
               82EA 00 00 00 F1
               82EE 01 05
   3792        82F0 D7 46 05 D6           fcb   $D7,$46,$05,$D6,$60,$02,$06>>
               82F4 60 02 06 00
               82F8 00 00 08 01
               82FC 05 D4
   3793        82FE 11 05 D3 2B           fcb   $11,$05,$D3,$2B,$02
               8302 02
   3794        8303               Img_SegaSonic_13 *@globals
   3795        8303 07 14 00 00           fcb   $07,$14,$00,$00,$06,$25,$00>>
               8307 06 25 00 06
               830B 00 00 00 F1
               830F 01 06
   3796        8311 DA 85 05 D2           fcb   $DA,$85,$05,$D2,$1B,$03,$06>>
               8315 1B 03 06 00
               8319 00 00 08 01
               831D 06 D7
   3797        831F B9 05 D1 0C           fcb   $B9,$05,$D1,$0C,$03
               8323 03
   3798        8324               Img_SegaSonic_32 *@globals
   3799        8324 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$45,$00>>
               8328 0F 45 00 06
               832C 00 00 00 F8
               8330 E3 09
   3800        8332 D6 DB 06 D4           fcb   $D6,$DB,$06,$D4,$CD,$0A,$06>>
               8336 CD 0A 06 00
               833A 00 00 F8 E3
               833E 09 CE
   3801        8340 7B 06 D1 DA           fcb   $7B,$06,$D1,$DA,$0A
               8344 0A
   3802        8345               Img_SegaSonic_21 *@globals
   3803        8345 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               8349 07 3F 00 06
               834D 00 00 00 08
               8351 E5 06
   3804        8353 CD 39 05 CF           fcb   $CD,$39,$05,$CF,$3E,$04,$06>>
               8357 3E 04 06 00
               835B 00 00 F0 E5
               835F 07 DB
   3805        8361 5E 05 CD 6F           fcb   $5E,$05,$CD,$6F,$04
               8365 04
   3806        8366               Img_SegaSonic_43 *@globals
   3807        8366 07 14 00 00           fcb   $07,$14,$00,$00,$06,$1F,$00>>
               836A 06 1F 00 06
               836E 00 00 00 F1
               8372 01 05
   3808        8374 CB 22 05 CA           fcb   $CB,$22,$05,$CA,$3A,$02,$06>>
               8378 3A 02 06 00
               837C 00 00 08 01
               8380 06 CA
   3809        8382 EC 05 C9 52           fcb   $EC,$05,$C9,$52,$02
               8386 02
   3810        8387               Img_SegaSonic_11 *@globals
   3811        8387 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               838B 07 3F 00 06
               838F 00 00 00 08
               8393 E5 08
   3812        8395 CB 71 05 C7           fcb   $CB,$71,$05,$C7,$58,$04,$06>>
               8399 58 04 06 00
               839D 00 00 F0 E5
               83A1 08 C6
   3813        83A3 9D 05 C5 5D           fcb   $9D,$05,$C5,$5D,$04
               83A7 04
   3814        83A8               Img_SegaSonic_33 *@globals
   3815        83A8 07 14 00 00           fcb   $07,$14,$00,$00,$05,$25,$00>>
               83AC 05 25 00 06
               83B0 00 00 00 F2
               83B4 01 05
   3816        83B6 C3 27 05 C2           fcb   $C3,$27,$05,$C2,$38,$02,$06>>
               83BA 38 02 06 00
               83BE 00 00 08 01
               83C2 05 C0
   3817        83C4 02 05 BF 13           fcb   $02,$05,$BF,$13,$02
               83C8 02
   3818        83C9               Img_SegaSonic_22 *@globals
   3819        83C9 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$47,$00>>
               83CD 0F 47 00 06
               83D1 00 00 00 F8
               83D5 E1 08
   3820        83D7 BE 76 06 C8           fcb   $BE,$76,$06,$C8,$2D,$0A,$06>>
               83DB 2D 0A 06 00
               83DF 00 00 F8 E1
               83E3 09 C6
   3821        83E5 3C 06 C5 71           fcb   $3C,$06,$C5,$71,$0A
               83E9 0A
   3822        83EA               Img_SegaSonic_41 *@globals
   3823        83EA 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               83EE 07 3F 00 06
               83F2 00 00 00 08
               83F6 E5 07
   3824        83F8 D6 E1 05 BD           fcb   $D6,$E1,$05,$BD,$54,$04,$06>>
               83FC 54 04 06 00
               8400 00 00 F0 E5
               8404 07 D2
   3825        8406 64 05 BB 95           fcb   $64,$05,$BB,$95,$04
               840A 04
   3826        840B               Img_SegaSonic_31 *@globals
   3827        840B 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               840F 07 3F 00 06
               8413 00 00 00 08
               8417 E5 08
   3828        8419 B9 A1 05 B9           fcb   $B9,$A1,$05,$B9,$A8,$04,$06>>
               841D A8 04 06 00
               8421 00 00 F0 E5
               8425 08 B4
   3829        8427 CE 05 B7 BB           fcb   $CE,$05,$B7,$BB,$04
               842B 04
   3830        842C               Img_SegaSonic_42 *@globals
   3831        842C 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$47,$00>>
               8430 0F 47 00 06
               8434 00 00 00 F8
               8438 E1 09
   3832        843A BD E6 06 C2           fcb   $BD,$E6,$06,$C2,$A5,$0A,$06>>
               843E A5 0A 06 00
               8442 00 00 F8 E1
               8446 09 B5
   3833        8448 82 06 BF DA           fcb   $82,$06,$BF,$DA,$0A
               844C 0A
   3834        844D               Img_SegaTrails_6 *@globals
   3835        844D 00 07 00 00           fcb   $00,$07,$00,$00,$0F,$44,$00>>
               8451 0F 44 00 00
               8455 06 00 00 10
               8459 DE 05
   3836        845B B6 45                 fcb   $B6,$45
   3837        845D               Img_SegaTrails_5 *@globals
   3838        845D 00 07 00 00           fcb   $00,$07,$00,$00,$0F,$44,$00>>
               8461 0F 44 00 00
               8465 06 00 00 00
               8469 DE 05
   3839        846B B4 CF                 fcb   $B4,$CF
   3840        846D               Img_SegaTrails_4 *@globals
   3841        846D 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$44,$00>>
               8471 0F 44 00 00
               8475 06 00 00 E0
               8479 DE 05
   3842        847B B3 59                 fcb   $B3,$59
   3843        847D               Img_SegaTrails_3 *@globals
   3844        847D 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$44,$00>>
               8481 0F 44 00 00
               8485 06 00 00 F0
               8489 DE 05
   3845        848B B1 E3                 fcb   $B1,$E3
   3846        848D               Img_SegaTrails_2 *@globals
   3847        848D 07 10 00 00           fcb   $07,$10,$00,$00,$0F,$44,$00>>
               8491 0F 44 00 00
               8495 06 00 00 00
               8499 DE 05
   3848        849B B0 11 00 06           fcb   $B0,$11,$00,$06,$00,$00,$F0>>
               849F 00 00 F0 DE
               84A3 05 AE 37
   3849        84A6               Img_star_4 *@globals
   3850        84A6 07 00 00 00           fcb   $07,$00,$00,$00,$0A,$16,$00>>
               84AA 0A 16 00 06
               84AE 00 00 00 FB
               84B2 F5 05
   3851        84B4 AB 96 05 AB           fcb   $AB,$96,$05,$AB,$01,$02
               84B8 01 02
   3852        84BA               Img_star_3 *@globals
   3853        84BA 07 00 00 00           fcb   $07,$00,$00,$00,$06,$0E,$00>>
               84BE 06 0E 00 06
               84C2 00 00 00 FD
               84C6 F9 05
   3854        84C8 A9 FF 05 A9           fcb   $A9,$FF,$05,$A9,$A1,$01
               84CC A1 01
   3855        84CE               Img_sonicHand *@globals
   3856        84CE 07 00 00 00           fcb   $07,$00,$00,$00,$0E,$2A,$00>>
               84D2 0E 2A 00 06
               84D6 0D 00 00 04
               84DA 01 08
   3857        84DC AF 79 05 A7           fcb   $AF,$79,$05,$A7,$D1,$05,$06>>
               84E0 D1 05 06 B9
               84E4 4F
   3858        84E5               Img_star_2 *@globals
   3859        84E5 07 00 00 00           fcb   $07,$00,$00,$00,$02,$06,$00>>
               84E9 02 06 00 06
               84ED 00 0D 00 FF
               84F1 FD 05
   3860        84F3 A7 60 05 A7           fcb   $A7,$60,$05,$A7,$32,$01,$05>>
               84F7 32 01 05 A6
               84FB C3 05 A6 95
               84FF 01
   3861        8500               Img_star_1 *@globals
   3862        8500 07 00 00 00           fcb   $07,$00,$00,$00,$02,$04,$00>>
               8504 02 04 00 06
               8508 00 0D 00 FF
               850C FE 05
   3863        850E A6 42 05 A6           fcb   $A6,$42,$05,$A6,$1E,$01,$05>>
               8512 1E 01 05 A5
               8516 CD 05 A5 A9
               851A 01
   3864        851B               Img_emblemBack08 *@globals
   3865        851B 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$27,$00>>
               851F 1F 27 00 00
               8523 06 00 00 10
               8527 DD 07
   3866        8529 CD D8                 fcb   $CD,$D8
   3867        852B               Img_emblemBack07 *@globals
   3868        852B 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               852F 1F 1F 00 00
               8533 06 00 00 10
               8537 BD 06
   3869        8539 B5 B7                 fcb   $B5,$B7
   3870        853B               Img_emblemBack09 *@globals
   3871        853B 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$38,$00>>
               853F 0F 38 00 00
               8543 06 00 00 30
               8547 B3 06
   3872        8549 B2 4A                 fcb   $B2,$4A
   3873        854B               Img_emblemBack04 *@globals
   3874        854B 07 00 00 00           fcb   $07,$00,$00,$00,$24,$09,$00>>
               854F 24 09 00 00
               8553 06 00 00 EE
               8557 B3 05
   3875        8559 A4 0E                 fcb   $A4,$0E
   3876        855B               Img_emblemBack03 *@globals
   3877        855B 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$26,$00>>
               855F 1F 26 00 00
               8563 06 00 00 D0
               8567 DD 06
   3878        8569 AE 6C                 fcb   $AE,$6C
   3879        856B               Img_emblemBack06 *@globals
   3880        856B 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1C,$00>>
               856F 1F 1C 00 00
               8573 06 00 00 F0
               8577 DD 05
   3881        8579 A2 53                 fcb   $A2,$53
   3882        857B               Img_emblemBack05 *@globals
   3883        857B 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               857F 1F 1F 00 00
               8583 06 00 00 F0
               8587 BD 06
   3884        8589 AA B6                 fcb   $AA,$B6
   3885        858B               Img_tails_5 *@globals
   3886        858B 07 00 00 00           fcb   $07,$00,$00,$00,$2B,$3F,$00>>
               858F 2B 3F 00 06
               8593 0D 00 00 03
               8597 0D 0A
   3887        8599 B5 8E 07 C9           fcb   $B5,$8E,$07,$C9,$60,$11,$09>>
               859D 60 11 09 AB
               85A1 27
   3888        85A2               Img_tails_4 *@globals
   3889        85A2 07 00 00 00           fcb   $07,$00,$00,$00,$2C,$3A,$00>>
               85A6 2C 3A 00 06
               85AA 00 00 00 03
               85AE 12 0B
   3890        85B0 CE 89 07 C5           fcb   $CE,$89,$07,$C5,$1F,$10
               85B4 1F 10
   3891        85B6               Img_tails_3 *@globals
   3892        85B6 07 00 00 00           fcb   $07,$00,$00,$00,$2B,$3C,$00>>
               85BA 2B 3C 00 06
               85BE 00 00 00 04
               85C2 11 0B
   3893        85C4 C0 33 07 C0           fcb   $C0,$33,$07,$C0,$B4,$0F
               85C8 B4 0F
   3894        85CA               Img_tails_2 *@globals
   3895        85CA 07 00 00 00           fcb   $07,$00,$00,$00,$2B,$37,$00>>
               85CE 2B 37 00 06
               85D2 00 00 00 02
               85D6 16 0A
   3896        85D8 A9 2B 06 A7           fcb   $A9,$2B,$06,$A7,$05,$0F
               85DC 05 0F
   3897        85DE               Img_tails_1 *@globals
   3898        85DE 07 00 00 00           fcb   $07,$00,$00,$00,$1B,$3F,$00>>
               85E2 1B 3F 00 06
               85E6 00 00 00 0C
               85EA 11 0B
   3899        85EC B4 C9 06 A3           fcb   $B4,$C9,$06,$A3,$99,$0E
               85F0 99 0E
   3900        85F2               Img_tailsHand *@globals
   3901        85F2 07 00 00 00           fcb   $07,$00,$00,$00,$07,$12,$00>>
               85F6 07 12 00 06
               85FA 0D 00 00 04
               85FE 06 06
   3902        8600 A2 05 05 A1           fcb   $A2,$05,$05,$A1,$B1,$02,$05>>
               8604 B1 02 05 A0
               8608 AE
   3903        8609               Img_island *@globals
   3904        8609 07 00 00 00           fcb   $07,$00,$00,$00,$87,$29,$00>>
               860D 87 29 00 06
               8611 00 00 00 BC
               8615 F6 0C
   3905        8617 B0 8A 09 A6           fcb   $B0,$8A,$09,$A6,$08,$18
               861B 08 18
   3906        861D               Img_sonic_1 *@globals
   3907        861D 07 00 00 00           fcb   $07,$00,$00,$00,$23,$42,$00>>
               8621 23 42 00 06
               8625 00 00 00 02
               8629 0E 0B
   3908        862B A6 2E 07 BC           fcb   $A6,$2E,$07,$BC,$85,$14
               862F 85 14
   3909        8631               Img_sonic_2 *@globals
   3910        8631 07 00 00 00           fcb   $07,$00,$00,$00,$24,$53,$00>>
               8635 24 53 00 06
               8639 00 00 00 03
               863D 0D 0C
   3911        863F A0 00 07 B7           fcb   $A0,$00,$07,$B7,$D8,$17
               8643 D8 17
   3912        8645               Img_emblemBack02 *@globals
   3913        8645 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               8649 1F 1F 00 00
               864D 06 00 00 D0
               8651 BD 07
   3914        8653 B4 3A                 fcb   $B4,$3A
   3915        8655               Img_emblemBack01 *@globals
   3916        8655 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$37,$00>>
               8659 0F 37 00 00
               865D 06 00 00 C0
               8661 B3 07
   3917        8663 B0 D6                 fcb   $B0,$D6
   3918        8665               Img_sonic_3 *@globals
   3919        8665 07 00 00 00           fcb   $07,$00,$00,$00,$24,$46,$00>>
               8669 24 46 00 06
               866D 00 00 00 0B
               8671 0D 0D
   3920        8673 AE DF 07 AC           fcb   $AE,$DF,$07,$AC,$72,$15
               8677 72 15
   3921        8679               Img_sonic_4 *@globals
   3922        8679 07 00 00 00           fcb   $07,$00,$00,$00,$23,$49,$00>>
               867D 23 49 00 06
               8681 0D 00 00 0C
               8685 0A 0D
   3923        8687 A0 00 07 A8           fcb   $A0,$00,$07,$A8,$3D,$14,$0A>>
               868B 3D 14 0A A0
               868F 00
   3924        8690               Img_emblemFront07 *@globals
   3925        8690 07 00 00 00           fcb   $07,$00,$00,$00,$12,$12,$00>>
               8694 12 12 00 00
               8698 06 00 00 F7
               869C 3D 06
   3926        869E A0 00                 fcb   $A0,$00
   3927        86A0               Img_emblemFront08 *@globals
   3928        86A0 07 00 00 00           fcb   $07,$00,$00,$00,$26,$25,$00>>
               86A4 26 25 00 00
               86A8 06 00 00 10
               86AC 1D 08
   3929        86AE AA D0                 fcb   $AA,$D0
   3930        86B0               Img_emblemFront05 *@globals
   3931        86B0 07 00 00 00           fcb   $07,$00,$00,$00,$26,$25,$00>>
               86B4 26 25 00 00
               86B8 06 00 00 C9
               86BC 1D 08
   3932        86BE A6 0B                 fcb   $A6,$0B
   3933        86C0               Img_emblemFront06 *@globals
   3934        86C0 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               86C4 1F 1F 00 00
               86C8 06 00 00 F0
               86CC 1D 07
   3935        86CE A4 06                 fcb   $A4,$06
   3936        86D0               Img_emblemFront03 *@globals
   3937        86D0 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               86D4 1F 1F 00 00
               86D8 06 00 00 F0
               86DC FD 07
   3938        86DE A0 00                 fcb   $A0,$00
   3939        86E0               Img_emblemFront04 *@globals
   3940        86E0 07 00 00 00           fcb   $07,$00,$00,$00,$1B,$1F,$00>>
               86E4 1B 1F 00 00
               86E8 06 00 00 10
               86EC FD 08
   3941        86EE A2 F6                 fcb   $A2,$F6
   3942        86F0               Img_emblemFront01 *@globals
   3943        86F0 07 00 00 00           fcb   $07,$00,$00,$00,$3D,$03,$00>>
               86F4 3D 03 00 00
               86F8 06 00 00 E1
               86FC F9 05
   3944        86FE A0 00                 fcb   $A0,$00
   3945        8700               Img_emblemFront02 *@globals
   3946        8700 07 00 00 00           fcb   $07,$00,$00,$00,$1A,$1F,$00>>
               8704 1A 1F 00 00
               8708 06 00 00 D5
               870C FD 08
   3947        870E A0 00                 fcb   $A0,$00
   3948
   3949                                   INCLUD ANIMSCPT
   3950                           * Generated Code
   3951
   3952        8710 00                    fcb   0
   3953        8711               Ani_SegaSonic_3 *@globals
   3954        8711 8303                  fdb   Img_SegaSonic_13
   3955        8713 82E2                  fdb   Img_SegaSonic_23
   3956        8715 83A8                  fdb   Img_SegaSonic_33
   3957        8717 8366                  fdb   Img_SegaSonic_43
   3958        8719 FF                    fcb   _resetAnim
   3959        871A 00                    fcb   0
   3960        871B               Ani_SegaSonic_2 *@globals
   3961        871B 82C1                  fdb   Img_SegaSonic_12
   3962        871D 83C9                  fdb   Img_SegaSonic_22
   3963        871F 8324                  fdb   Img_SegaSonic_32
   3964        8721 842C                  fdb   Img_SegaSonic_42
   3965        8723 FF                    fcb   _resetAnim
   3966        8724 00                    fcb   0
   3967        8725               Ani_SegaSonic_1 *@globals
   3968        8725 8387                  fdb   Img_SegaSonic_11
   3969        8727 8345                  fdb   Img_SegaSonic_21
   3970        8729 840B                  fdb   Img_SegaSonic_31
   3971        872B 83EA                  fdb   Img_SegaSonic_41
   3972        872D FF                    fcb   _resetAnim
   3973        872E 03                    fcb   3
   3974        872F               Ani_smallStar *@globals
   3975        872F 84E5                  fdb   Img_star_2
   3976        8731 8500                  fdb   Img_star_1
   3977        8733 FF                    fcb   _resetAnim
   3978        8734 01                    fcb   1
   3979        8735               Ani_largeStar *@globals
   3980        8735 8500                  fdb   Img_star_1
   3981        8737 84E5                  fdb   Img_star_2
   3982        8739 84BA                  fdb   Img_star_3
   3983        873B 84E5                  fdb   Img_star_2
   3984        873D 8500                  fdb   Img_star_1
   3985        873F FA                    fcb   _nextSubRoutine
   3986        8740 01                    fcb   1
   3987        8741               Ani_tails *@globals
   3988        8741 85DE                  fdb   Img_tails_1
   3989        8743 85CA                  fdb   Img_tails_2
   3990        8745 85B6                  fdb   Img_tails_3
   3991        8747 85A2                  fdb   Img_tails_4
   3992        8749 858B                  fdb   Img_tails_5
   3993        874B FA                    fcb   _nextSubRoutine
   3994        874C 01                    fcb   1
   3995        874D               Ani_sonic *@globals
   3996        874D 861D                  fdb   Img_sonic_1
   3997        874F 8631                  fdb   Img_sonic_2
   3998        8751 8665                  fdb   Img_sonic_3
   3999        8753 8679                  fdb   Img_sonic_4
   4000        8755 FA                    fcb   _nextSubRoutine
   4001
   4002                                   INCLUD OBJINDEX
   4003                           * Generated Code
   4004
   4005        8756               Obj_Index_Page
   4006        8756 00                    fcb   $00
   4007        8757 05                    fcb   $05
   4008        8758 06                    fcb   $06
   4009        8759 05                    fcb   $05
   4010        875A 0B                    fcb   $0B
   4011        875B 00                    fcb   $00
   4012        875C 00                    fcb   $00
   4013        875D 00                    fcb   $00
   4014        875E 00                    fcb   $00
   4015        875F 00                    fcb   $00
   4016        8760 00                    fcb   $00
   4017        8761 00                    fcb   $00
   4018        8762 00                    fcb   $00
   4019        8763 00                    fcb   $00
   4020        8764 00                    fcb   $00
   4021        8765 00                    fcb   $00
   4022        8766 00                    fcb   $00
   4023        8767 00                    fcb   $00
   4024        8768 00                    fcb   $00
   4025        8769 00                    fcb   $00
   4026        876A 00                    fcb   $00
   4027        876B 00                    fcb   $00
   4028        876C 00                    fcb   $00
   4029        876D 00                    fcb   $00
   4030        876E 00                    fcb   $00
   4031        876F 00                    fcb   $00
   4032        8770 00                    fcb   $00
   4033        8771 00                    fcb   $00
   4034        8772 00                    fcb   $00
   4035        8773 00                    fcb   $00
   4036        8774 00                    fcb   $00
   4037        8775 00                    fcb   $00
   4038        8776 00                    fcb   $00
   4039        8777 00                    fcb   $00
   4040        8778 00                    fcb   $00
   4041        8779 00                    fcb   $00
   4042        877A 00                    fcb   $00
   4043        877B 00                    fcb   $00
   4044        877C 00                    fcb   $00
   4045        877D 00                    fcb   $00
   4046        877E 00                    fcb   $00
   4047        877F 00                    fcb   $00
   4048        8780 00                    fcb   $00
   4049        8781 00                    fcb   $00
   4050        8782 00                    fcb   $00
   4051        8783 00                    fcb   $00
   4052        8784 00                    fcb   $00
   4053        8785 00                    fcb   $00
   4054        8786 00                    fcb   $00
   4055        8787 00                    fcb   $00
   4056        8788 00                    fcb   $00
   4057        8789 00                    fcb   $00
   4058        878A 00                    fcb   $00
   4059        878B 00                    fcb   $00
   4060        878C 00                    fcb   $00
   4061        878D 00                    fcb   $00
   4062        878E 00                    fcb   $00
   4063        878F 00                    fcb   $00
   4064        8790 00                    fcb   $00
   4065        8791 00                    fcb   $00
   4066        8792 00                    fcb   $00
   4067        8793 00                    fcb   $00
   4068        8794 00                    fcb   $00
   4069        8795 00                    fcb   $00
   4070        8796 00                    fcb   $00
   4071        8797 00                    fcb   $00
   4072        8798 00                    fcb   $00
   4073        8799 00                    fcb   $00
   4074        879A 00                    fcb   $00
   4075        879B 00                    fcb   $00
   4076        879C 00                    fcb   $00
   4077        879D 00                    fcb   $00
   4078        879E 00                    fcb   $00
   4079        879F 00                    fcb   $00
   4080        87A0 00                    fcb   $00
   4081        87A1 00                    fcb   $00
   4082        87A2 00                    fcb   $00
   4083        87A3 00                    fcb   $00
   4084        87A4 00                    fcb   $00
   4085        87A5 00                    fcb   $00
   4086        87A6 00                    fcb   $00
   4087        87A7 00                    fcb   $00
   4088        87A8 00                    fcb   $00
   4089        87A9 00                    fcb   $00
   4090        87AA 00                    fcb   $00
   4091        87AB 00                    fcb   $00
   4092        87AC 00                    fcb   $00
   4093        87AD 00                    fcb   $00
   4094        87AE 00                    fcb   $00
   4095        87AF 00                    fcb   $00
   4096        87B0 00                    fcb   $00
   4097        87B1 00                    fcb   $00
   4098        87B2 00                    fcb   $00
   4099        87B3 00                    fcb   $00
   4100        87B4 00                    fcb   $00
   4101        87B5 00                    fcb   $00
   4102        87B6 00                    fcb   $00
   4103        87B7 00                    fcb   $00
   4104        87B8 00                    fcb   $00
   4105        87B9 00                    fcb   $00
   4106        87BA 00                    fcb   $00
   4107        87BB 00                    fcb   $00
   4108        87BC 00                    fcb   $00
   4109        87BD 00                    fcb   $00
   4110        87BE 00                    fcb   $00
   4111        87BF 00                    fcb   $00
   4112        87C0 00                    fcb   $00
   4113        87C1 00                    fcb   $00
   4114        87C2 00                    fcb   $00
   4115        87C3 00                    fcb   $00
   4116        87C4 00                    fcb   $00
   4117        87C5 00                    fcb   $00
   4118        87C6 00                    fcb   $00
   4119        87C7 00                    fcb   $00
   4120        87C8 00                    fcb   $00
   4121        87C9 00                    fcb   $00
   4122        87CA 00                    fcb   $00
   4123        87CB 00                    fcb   $00
   4124        87CC 00                    fcb   $00
   4125        87CD 00                    fcb   $00
   4126        87CE 00                    fcb   $00
   4127        87CF 00                    fcb   $00
   4128        87D0 00                    fcb   $00
   4129        87D1 00                    fcb   $00
   4130        87D2 00                    fcb   $00
   4131        87D3 00                    fcb   $00
   4132        87D4 00                    fcb   $00
   4133        87D5 00                    fcb   $00
   4134        87D6 00                    fcb   $00
   4135        87D7 00                    fcb   $00
   4136        87D8 00                    fcb   $00
   4137        87D9 00                    fcb   $00
   4138        87DA 00                    fcb   $00
   4139        87DB 00                    fcb   $00
   4140        87DC 00                    fcb   $00
   4141        87DD 00                    fcb   $00
   4142        87DE 00                    fcb   $00
   4143        87DF 00                    fcb   $00
   4144        87E0 00                    fcb   $00
   4145        87E1 00                    fcb   $00
   4146        87E2 00                    fcb   $00
   4147        87E3 00                    fcb   $00
   4148        87E4 00                    fcb   $00
   4149        87E5 00                    fcb   $00
   4150        87E6 00                    fcb   $00
   4151        87E7 00                    fcb   $00
   4152        87E8 00                    fcb   $00
   4153        87E9 00                    fcb   $00
   4154        87EA 00                    fcb   $00
   4155        87EB 00                    fcb   $00
   4156        87EC 00                    fcb   $00
   4157        87ED 00                    fcb   $00
   4158        87EE 00                    fcb   $00
   4159        87EF 00                    fcb   $00
   4160        87F0 00                    fcb   $00
   4161        87F1 00                    fcb   $00
   4162        87F2 00                    fcb   $00
   4163        87F3 00                    fcb   $00
   4164        87F4 00                    fcb   $00
   4165        87F5 00                    fcb   $00
   4166        87F6 00                    fcb   $00
   4167        87F7 00                    fcb   $00
   4168        87F8 00                    fcb   $00
   4169        87F9 00                    fcb   $00
   4170        87FA 00                    fcb   $00
   4171        87FB 00                    fcb   $00
   4172        87FC 00                    fcb   $00
   4173        87FD 00                    fcb   $00
   4174        87FE 00                    fcb   $00
   4175        87FF 00                    fcb   $00
   4176        8800 00                    fcb   $00
   4177        8801 00                    fcb   $00
   4178        8802 00                    fcb   $00
   4179        8803 00                    fcb   $00
   4180        8804 00                    fcb   $00
   4181        8805 00                    fcb   $00
   4182        8806 00                    fcb   $00
   4183        8807 00                    fcb   $00
   4184        8808 00                    fcb   $00
   4185        8809 00                    fcb   $00
   4186        880A 00                    fcb   $00
   4187        880B 00                    fcb   $00
   4188        880C 00                    fcb   $00
   4189        880D 00                    fcb   $00
   4190        880E 00                    fcb   $00
   4191        880F 00                    fcb   $00
   4192        8810 00                    fcb   $00
   4193        8811 00                    fcb   $00
   4194        8812 00                    fcb   $00
   4195        8813 00                    fcb   $00
   4196        8814 00                    fcb   $00
   4197        8815 00                    fcb   $00
   4198        8816 00                    fcb   $00
   4199        8817 00                    fcb   $00
   4200        8818 00                    fcb   $00
   4201        8819 00                    fcb   $00
   4202        881A 00                    fcb   $00
   4203        881B 00                    fcb   $00
   4204        881C 00                    fcb   $00
   4205        881D 00                    fcb   $00
   4206        881E 00                    fcb   $00
   4207        881F 00                    fcb   $00
   4208        8820 00                    fcb   $00
   4209        8821 00                    fcb   $00
   4210        8822 00                    fcb   $00
   4211        8823 00                    fcb   $00
   4212        8824 00                    fcb   $00
   4213        8825 00                    fcb   $00
   4214        8826 00                    fcb   $00
   4215        8827 00                    fcb   $00
   4216        8828 00                    fcb   $00
   4217        8829 00                    fcb   $00
   4218        882A 00                    fcb   $00
   4219        882B 00                    fcb   $00
   4220        882C 00                    fcb   $00
   4221        882D 00                    fcb   $00
   4222        882E 00                    fcb   $00
   4223        882F 00                    fcb   $00
   4224        8830 00                    fcb   $00
   4225        8831 00                    fcb   $00
   4226        8832 00                    fcb   $00
   4227        8833 00                    fcb   $00
   4228        8834 00                    fcb   $00
   4229        8835 00                    fcb   $00
   4230        8836 00                    fcb   $00
   4231        8837 00                    fcb   $00
   4232        8838 00                    fcb   $00
   4233        8839 00                    fcb   $00
   4234        883A 00                    fcb   $00
   4235        883B 00                    fcb   $00
   4236        883C 00                    fcb   $00
   4237        883D 00                    fcb   $00
   4238        883E 00                    fcb   $00
   4239        883F 00                    fcb   $00
   4240        8840 00                    fcb   $00
   4241        8841 00                    fcb   $00
   4242        8842 00                    fcb   $00
   4243        8843 00                    fcb   $00
   4244        8844 00                    fcb   $00
   4245        8845 00                    fcb   $00
   4246        8846 00                    fcb   $00
   4247        8847 00                    fcb   $00
   4248        8848 00                    fcb   $00
   4249        8849 00                    fcb   $00
   4250        884A 00                    fcb   $00
   4251        884B 00                    fcb   $00
   4252        884C 00                    fcb   $00
   4253        884D 00                    fcb   $00
   4254        884E 00                    fcb   $00
   4255        884F 00                    fcb   $00
   4256        8850 00                    fcb   $00
   4257        8851 00                    fcb   $00
   4258        8852 00                    fcb   $00
   4259        8853 00                    fcb   $00
   4260        8854 00                    fcb   $00
   4261        8855 00                    fcb   $00
   4262        8856               Obj_Index_Address
   4263        8856 00 00                 fcb   $00,$00
   4264        8858 DF 31                 fcb   $DF,$31
   4265        885A BC F6                 fcb   $BC,$F6
   4266        885C AD 49                 fcb   $AD,$49
   4267        885E A0 00                 fcb   $A0,$00
   4268        8860 00 00                 fcb   $00,$00
   4269        8862 00 00                 fcb   $00,$00
   4270        8864 00 00                 fcb   $00,$00
   4271        8866 00 00                 fcb   $00,$00
   4272        8868 00 00                 fcb   $00,$00
   4273        886A 00 00                 fcb   $00,$00
   4274        886C 00 00                 fcb   $00,$00
   4275        886E 00 00                 fcb   $00,$00
   4276        8870 00 00                 fcb   $00,$00
   4277        8872 00 00                 fcb   $00,$00
   4278        8874 00 00                 fcb   $00,$00
   4279        8876 00 00                 fcb   $00,$00
   4280        8878 00 00                 fcb   $00,$00
   4281        887A 00 00                 fcb   $00,$00
   4282        887C 00 00                 fcb   $00,$00
   4283        887E 00 00                 fcb   $00,$00
   4284        8880 00 00                 fcb   $00,$00
   4285        8882 00 00                 fcb   $00,$00
   4286        8884 00 00                 fcb   $00,$00
   4287        8886 00 00                 fcb   $00,$00
   4288        8888 00 00                 fcb   $00,$00
   4289        888A 00 00                 fcb   $00,$00
   4290        888C 00 00                 fcb   $00,$00
   4291        888E 00 00                 fcb   $00,$00
   4292        8890 00 00                 fcb   $00,$00
   4293        8892 00 00                 fcb   $00,$00
   4294        8894 00 00                 fcb   $00,$00
   4295        8896 00 00                 fcb   $00,$00
   4296        8898 00 00                 fcb   $00,$00
   4297        889A 00 00                 fcb   $00,$00
   4298        889C 00 00                 fcb   $00,$00
   4299        889E 00 00                 fcb   $00,$00
   4300        88A0 00 00                 fcb   $00,$00
   4301        88A2 00 00                 fcb   $00,$00
   4302        88A4 00 00                 fcb   $00,$00
   4303        88A6 00 00                 fcb   $00,$00
   4304        88A8 00 00                 fcb   $00,$00
   4305        88AA 00 00                 fcb   $00,$00
   4306        88AC 00 00                 fcb   $00,$00
   4307        88AE 00 00                 fcb   $00,$00
   4308        88B0 00 00                 fcb   $00,$00
   4309        88B2 00 00                 fcb   $00,$00
   4310        88B4 00 00                 fcb   $00,$00
   4311        88B6 00 00                 fcb   $00,$00
   4312        88B8 00 00                 fcb   $00,$00
   4313        88BA 00 00                 fcb   $00,$00
   4314        88BC 00 00                 fcb   $00,$00
   4315        88BE 00 00                 fcb   $00,$00
   4316        88C0 00 00                 fcb   $00,$00
   4317        88C2 00 00                 fcb   $00,$00
   4318        88C4 00 00                 fcb   $00,$00
   4319        88C6 00 00                 fcb   $00,$00
   4320        88C8 00 00                 fcb   $00,$00
   4321        88CA 00 00                 fcb   $00,$00
   4322        88CC 00 00                 fcb   $00,$00
   4323        88CE 00 00                 fcb   $00,$00
   4324        88D0 00 00                 fcb   $00,$00
   4325        88D2 00 00                 fcb   $00,$00
   4326        88D4 00 00                 fcb   $00,$00
   4327        88D6 00 00                 fcb   $00,$00
   4328        88D8 00 00                 fcb   $00,$00
   4329        88DA 00 00                 fcb   $00,$00
   4330        88DC 00 00                 fcb   $00,$00
   4331        88DE 00 00                 fcb   $00,$00
   4332        88E0 00 00                 fcb   $00,$00
   4333        88E2 00 00                 fcb   $00,$00
   4334        88E4 00 00                 fcb   $00,$00
   4335        88E6 00 00                 fcb   $00,$00
   4336        88E8 00 00                 fcb   $00,$00
   4337        88EA 00 00                 fcb   $00,$00
   4338        88EC 00 00                 fcb   $00,$00
   4339        88EE 00 00                 fcb   $00,$00
   4340        88F0 00 00                 fcb   $00,$00
   4341        88F2 00 00                 fcb   $00,$00
   4342        88F4 00 00                 fcb   $00,$00
   4343        88F6 00 00                 fcb   $00,$00
   4344        88F8 00 00                 fcb   $00,$00
   4345        88FA 00 00                 fcb   $00,$00
   4346        88FC 00 00                 fcb   $00,$00
   4347        88FE 00 00                 fcb   $00,$00
   4348        8900 00 00                 fcb   $00,$00
   4349        8902 00 00                 fcb   $00,$00
   4350        8904 00 00                 fcb   $00,$00
   4351        8906 00 00                 fcb   $00,$00
   4352        8908 00 00                 fcb   $00,$00
   4353        890A 00 00                 fcb   $00,$00
   4354        890C 00 00                 fcb   $00,$00
   4355        890E 00 00                 fcb   $00,$00
   4356        8910 00 00                 fcb   $00,$00
   4357        8912 00 00                 fcb   $00,$00
   4358        8914 00 00                 fcb   $00,$00
   4359        8916 00 00                 fcb   $00,$00
   4360        8918 00 00                 fcb   $00,$00
   4361        891A 00 00                 fcb   $00,$00
   4362        891C 00 00                 fcb   $00,$00
   4363        891E 00 00                 fcb   $00,$00
   4364        8920 00 00                 fcb   $00,$00
   4365        8922 00 00                 fcb   $00,$00
   4366        8924 00 00                 fcb   $00,$00
   4367        8926 00 00                 fcb   $00,$00
   4368        8928 00 00                 fcb   $00,$00
   4369        892A 00 00                 fcb   $00,$00
   4370        892C 00 00                 fcb   $00,$00
   4371        892E 00 00                 fcb   $00,$00
   4372        8930 00 00                 fcb   $00,$00
   4373        8932 00 00                 fcb   $00,$00
   4374        8934 00 00                 fcb   $00,$00
   4375        8936 00 00                 fcb   $00,$00
   4376        8938 00 00                 fcb   $00,$00
   4377        893A 00 00                 fcb   $00,$00
   4378        893C 00 00                 fcb   $00,$00
   4379        893E 00 00                 fcb   $00,$00
   4380        8940 00 00                 fcb   $00,$00
   4381        8942 00 00                 fcb   $00,$00
   4382        8944 00 00                 fcb   $00,$00
   4383        8946 00 00                 fcb   $00,$00
   4384        8948 00 00                 fcb   $00,$00
   4385        894A 00 00                 fcb   $00,$00
   4386        894C 00 00                 fcb   $00,$00
   4387        894E 00 00                 fcb   $00,$00
   4388        8950 00 00                 fcb   $00,$00
   4389        8952 00 00                 fcb   $00,$00
   4390        8954 00 00                 fcb   $00,$00
   4391        8956 00 00                 fcb   $00,$00
   4392        8958 00 00                 fcb   $00,$00
   4393        895A 00 00                 fcb   $00,$00
   4394        895C 00 00                 fcb   $00,$00
   4395        895E 00 00                 fcb   $00,$00
   4396        8960 00 00                 fcb   $00,$00
   4397        8962 00 00                 fcb   $00,$00
   4398        8964 00 00                 fcb   $00,$00
   4399        8966 00 00                 fcb   $00,$00
   4400        8968 00 00                 fcb   $00,$00
   4401        896A 00 00                 fcb   $00,$00
   4402        896C 00 00                 fcb   $00,$00
   4403        896E 00 00                 fcb   $00,$00
   4404        8970 00 00                 fcb   $00,$00
   4405        8972 00 00                 fcb   $00,$00
   4406        8974 00 00                 fcb   $00,$00
   4407        8976 00 00                 fcb   $00,$00
   4408        8978 00 00                 fcb   $00,$00
   4409        897A 00 00                 fcb   $00,$00
   4410        897C 00 00                 fcb   $00,$00
   4411        897E 00 00                 fcb   $00,$00
   4412        8980 00 00                 fcb   $00,$00
   4413        8982 00 00                 fcb   $00,$00
   4414        8984 00 00                 fcb   $00,$00
   4415        8986 00 00                 fcb   $00,$00
   4416        8988 00 00                 fcb   $00,$00
   4417        898A 00 00                 fcb   $00,$00
   4418        898C 00 00                 fcb   $00,$00
   4419        898E 00 00                 fcb   $00,$00
   4420        8990 00 00                 fcb   $00,$00
   4421        8992 00 00                 fcb   $00,$00
   4422        8994 00 00                 fcb   $00,$00
   4423        8996 00 00                 fcb   $00,$00
   4424        8998 00 00                 fcb   $00,$00
   4425        899A 00 00                 fcb   $00,$00
   4426        899C 00 00                 fcb   $00,$00
   4427        899E 00 00                 fcb   $00,$00
   4428        89A0 00 00                 fcb   $00,$00
   4429        89A2 00 00                 fcb   $00,$00
   4430        89A4 00 00                 fcb   $00,$00
   4431        89A6 00 00                 fcb   $00,$00
   4432        89A8 00 00                 fcb   $00,$00
   4433        89AA 00 00                 fcb   $00,$00
   4434        89AC 00 00                 fcb   $00,$00
   4435        89AE 00 00                 fcb   $00,$00
   4436        89B0 00 00                 fcb   $00,$00
   4437        89B2 00 00                 fcb   $00,$00
   4438        89B4 00 00                 fcb   $00,$00
   4439        89B6 00 00                 fcb   $00,$00
   4440        89B8 00 00                 fcb   $00,$00
   4441        89BA 00 00                 fcb   $00,$00
   4442        89BC 00 00                 fcb   $00,$00
   4443        89BE 00 00                 fcb   $00,$00
   4444        89C0 00 00                 fcb   $00,$00
   4445        89C2 00 00                 fcb   $00,$00
   4446        89C4 00 00                 fcb   $00,$00
   4447        89C6 00 00                 fcb   $00,$00
   4448        89C8 00 00                 fcb   $00,$00
   4449        89CA 00 00                 fcb   $00,$00
   4450        89CC 00 00                 fcb   $00,$00
   4451        89CE 00 00                 fcb   $00,$00
   4452        89D0 00 00                 fcb   $00,$00
   4453        89D2 00 00                 fcb   $00,$00
   4454        89D4 00 00                 fcb   $00,$00
   4455        89D6 00 00                 fcb   $00,$00
   4456        89D8 00 00                 fcb   $00,$00
   4457        89DA 00 00                 fcb   $00,$00
   4458        89DC 00 00                 fcb   $00,$00
   4459        89DE 00 00                 fcb   $00,$00
   4460        89E0 00 00                 fcb   $00,$00
   4461        89E2 00 00                 fcb   $00,$00
   4462        89E4 00 00                 fcb   $00,$00
   4463        89E6 00 00                 fcb   $00,$00
   4464        89E8 00 00                 fcb   $00,$00
   4465        89EA 00 00                 fcb   $00,$00
   4466        89EC 00 00                 fcb   $00,$00
   4467        89EE 00 00                 fcb   $00,$00
   4468        89F0 00 00                 fcb   $00,$00
   4469        89F2 00 00                 fcb   $00,$00
   4470        89F4 00 00                 fcb   $00,$00
   4471        89F6 00 00                 fcb   $00,$00
   4472        89F8 00 00                 fcb   $00,$00
   4473        89FA 00 00                 fcb   $00,$00
   4474        89FC 00 00                 fcb   $00,$00
   4475        89FE 00 00                 fcb   $00,$00
   4476        8A00 00 00                 fcb   $00,$00
   4477        8A02 00 00                 fcb   $00,$00
   4478        8A04 00 00                 fcb   $00,$00
   4479        8A06 00 00                 fcb   $00,$00
   4480        8A08 00 00                 fcb   $00,$00
   4481        8A0A 00 00                 fcb   $00,$00
   4482        8A0C 00 00                 fcb   $00,$00
   4483        8A0E 00 00                 fcb   $00,$00
   4484        8A10 00 00                 fcb   $00,$00
   4485        8A12 00 00                 fcb   $00,$00
   4486        8A14 00 00                 fcb   $00,$00
   4487        8A16 00 00                 fcb   $00,$00
   4488        8A18 00 00                 fcb   $00,$00
   4489        8A1A 00 00                 fcb   $00,$00
   4490        8A1C 00 00                 fcb   $00,$00
   4491        8A1E 00 00                 fcb   $00,$00
   4492        8A20 00 00                 fcb   $00,$00
   4493        8A22 00 00                 fcb   $00,$00
   4494        8A24 00 00                 fcb   $00,$00
   4495        8A26 00 00                 fcb   $00,$00
   4496        8A28 00 00                 fcb   $00,$00
   4497        8A2A 00 00                 fcb   $00,$00
   4498        8A2C 00 00                 fcb   $00,$00
   4499        8A2E 00 00                 fcb   $00,$00
   4500        8A30 00 00                 fcb   $00,$00
   4501        8A32 00 00                 fcb   $00,$00
   4502        8A34 00 00                 fcb   $00,$00
   4503        8A36 00 00                 fcb   $00,$00
   4504        8A38 00 00                 fcb   $00,$00
   4505        8A3A 00 00                 fcb   $00,$00
   4506        8A3C 00 00                 fcb   $00,$00
   4507        8A3E 00 00                 fcb   $00,$00
   4508        8A40 00 00                 fcb   $00,$00
   4509        8A42 00 00                 fcb   $00,$00
   4510        8A44 00 00                 fcb   $00,$00
   4511        8A46 00 00                 fcb   $00,$00
   4512        8A48 00 00                 fcb   $00,$00
   4513        8A4A 00 00                 fcb   $00,$00
   4514        8A4C 00 00                 fcb   $00,$00
   4515        8A4E 00 00                 fcb   $00,$00
   4516        8A50 00 00                 fcb   $00,$00
   4517        8A52 00 00                 fcb   $00,$00
   4518        8A54 00 00                 fcb   $00,$00
   4519
   4520                                   INCLUD SOUNDIDX * A rendre dynami>>
   4521                           * Generated Code
   4522
   4523        8A56               Pcm_SEGA *@globals
   4524        8A56 0E A0 00 DF           fcb   $0E,$A0,$00,$DF,$F6
               8A5A F6
   4525        8A5B 0D BE 6F DF           fcb   $0D,$BE,$6F,$DF,$ED
               8A5F ED
   4526        8A60 FF                    fcb   $FF
   4527        8A61               Psg_TitleScreen *@globals
   4528        8A61 09 A0 00 A6           fcb   $09,$A0,$00,$A6,$08
               8A65 08
   4529        8A66 FF                    fcb   $FF
   4530
   4531                                   INCLUD LOADACT
   4532                           * Generated Code
   4533
   4534        8A67               LoadAct
   4535  3     8A67 8E   0000             ldx   #$0000                   * >>
   4536  2     8A6A C6   62               ldb   #$62                     * >>
   4537  5     8A6C F7   E7E6             stb   $E7E6                    * >>
   4538  8     8A6F BD   7CB7             jsr   ClearCartMem
   4539  5     8A72 B6   E7DD             lda   $E7DD                    * >>
   4540  2     8A75 84   F0               anda  #$F0
   4541  2     8A77 8B   00               adda  #$00                     * >>
   4542  5     8A79 B7   E7DD             sta   $E7DD
   4543  2     8A7C 84   0F               anda  #$0F
   4544  2     8A7E 8B   80               adda  #$80
   4545  5     8A80 B7   7163             sta   screen_border_color+1    * >>
   4546  8     8A83 BD   7153             jsr   WaitVBL
   4547  3     8A86 8E   0000             ldx   #$0000                   * >>
   4548  2     8A89 C6   63               ldb   #$63                     * >>
   4549  5     8A8B F7   E7E6             stb   $E7E6                    * >>
   4550  8     8A8E BD   7CB7             jsr   ClearCartMem
   4551  3     8A91 CC   8A9B             ldd   #Pal_SEGA
   4552  6     8A94 FD   7CF2             std   Cur_palette
   4553  7     8A97 7F   7CF1             clr   Refresh_palette
   4554  5     8A9A 39                    rts
   4555
    175                            
    176
   4556                                   INCLUD PALETTE
   4557                           * Generated Code
   4558
   4559        8A9B               Pal_SEGA * @globals
   4560        8A9B FF0F                  fdb   $ff0f
   4561        8A9D 4404                  fdb   $4404
   4562        8A9F 1101                  fdb   $1101
   4563        8AA1 0000                  fdb   $0000
   4564        8AA3 0300                  fdb   $0300
   4565        8AA5 0F00                  fdb   $0f00
   4566        8AA7 5E03                  fdb   $5e03
   4567        8AA9 2501                  fdb   $2501
   4568        8AAB B70B                  fdb   $b70b
   4569        8AAD 740B                  fdb   $740b
   4570        8AAF 410B                  fdb   $410b
   4571        8AB1 100B                  fdb   $100b
   4572        8AB3 110C                  fdb   $110c
   4573        8AB5 0008                  fdb   $0008
   4574        8AB7 100B                  fdb   $100b
   4575        8AB9 100B                  fdb   $100b
   4576
   4577        8ABB               Pal_TitleScreen * @globals
   4578        8ABB FF0F                  fdb   $ff0f
   4579        8ABD 0000                  fdb   $0000
   4580        8ABF 0800                  fdb   $0800
   4581        8AC1 0200                  fdb   $0200
   4582        8AC3 5D03                  fdb   $5d03
   4583        8AC5 1600                  fdb   $1600
   4584        8AC7 4F00                  fdb   $4f00
   4585        8AC9 2700                  fdb   $2700
   4586        8ACB FF00                  fdb   $ff00
   4587        8ACD F300                  fdb   $f300
   4588        8ACF F80F                  fdb   $f80f
   4589        8AD1 640E                  fdb   $640e
   4590        8AD3 2205                  fdb   $2205
   4591        8AD5 000E                  fdb   $000e
   4592        8AD7 0100                  fdb   $0100
   4593        8AD9 0000                  fdb   $0000
   4594
   4595        8ADB               Pal_SEGAMid * @globals
   4596        8ADB FF0F                  fdb   $ff0f
   4597        8ADD 4404                  fdb   $4404
   4598        8ADF 1101                  fdb   $1101
   4599        8AE1 0000                  fdb   $0000
   4600        8AE3 0300                  fdb   $0300
   4601        8AE5 0F00                  fdb   $0f00
   4602        8AE7 5E03                  fdb   $5e03
   4603        8AE9 2501                  fdb   $2501
   4604        8AEB B70B                  fdb   $b70b
   4605        8AED 740B                  fdb   $740b
   4606        8AEF 410B                  fdb   $410b
   4607        8AF1 100B                  fdb   $100b
   4608        8AF3 110C                  fdb   $110c
   4609        8AF5 0008                  fdb   $0008
   4610        8AF7 FF0F                  fdb   $ff0f
   4611        8AF9 100B                  fdb   $100b
   4612
   4613        8AFB               Pal_SonicAndTailsIn * @globals
   4614        8AFB 0000                  fdb   $0000
   4615        8AFD FF0F                  fdb   $ff0f
   4616        8AFF 0000                  fdb   $0000
   4617        8B01 0000                  fdb   $0000
   4618        8B03 0000                  fdb   $0000
   4619        8B05 0000                  fdb   $0000
   4620        8B07 0000                  fdb   $0000
   4621        8B09 0000                  fdb   $0000
   4622        8B0B 0000                  fdb   $0000
   4623        8B0D 0000                  fdb   $0000
   4624        8B0F 0000                  fdb   $0000
   4625        8B11 0000                  fdb   $0000
   4626        8B13 0000                  fdb   $0000
   4627        8B15 0000                  fdb   $0000
   4628        8B17 FF0F                  fdb   $ff0f
   4629        8B19 FF0F                  fdb   $ff0f
   4630
   4631        8B1B               Pal_SEGAEnd * @globals
   4632        8B1B FF0F                  fdb   $ff0f
   4633        8B1D 4404                  fdb   $4404
   4634        8B1F 1101                  fdb   $1101
   4635        8B21 0000                  fdb   $0000
   4636        8B23 0300                  fdb   $0300
   4637        8B25 0F00                  fdb   $0f00
   4638        8B27 5E03                  fdb   $5e03
   4639        8B29 2501                  fdb   $2501
   4640        8B2B B70B                  fdb   $b70b
   4641        8B2D 740B                  fdb   $740b
   4642        8B2F 410B                  fdb   $410b
   4643        8B31 100B                  fdb   $100b
   4644        8B33 110C                  fdb   $110c
   4645        8B35 0008                  fdb   $0008
   4646        8B37 FF0F                  fdb   $ff0f
   4647        8B39 FF0F                  fdb   $ff0f
    178
    179

000000 Total Errors

000706 Total Symbols
     1x          Label 730D am_ObjectMove_01
     1x          Label 7323 am_ObjectMove_02
     3x          Label 71D5 am_RunNextObject
     2x          Label 716A am_SwapVideoPage
     2x          Equ   0004 anim
     0x          Label 727A AnimateSprite
     1x          Label 72A9 Anim_dyn
     1x          Label 72FC Anim_End
     1x          Label 72F1 Anim_End_FA
     1x          Label 72E6 Anim_End_FB
     1x          Label 72D4 Anim_End_FC
     1x          Label 72CC Anim_End_FD
     1x          Label 72BB Anim_End_FE
     1x          Label 72C3 Anim_End_FE_dyn
     1x          Label 72B0 Anim_End_FF
     8x          Equ   0008 anim_frame
     4x          Equ   0009 anim_frame_duration
     2x          Label 729B Anim_Next
     1x          Label 7288 Anim_Run
     1x          Label 72AF Anim_Wait
     0x          Label 8735 Ani_largeStar
     0x          Label 8725 Ani_SegaSonic_1
     0x          Label 871B Ani_SegaSonic_2
     0x          Label 8711 Ani_SegaSonic_3
     0x          Label 872F Ani_smallStar
     0x          Label 874D Ani_sonic
     0x          Label 8741 Ani_tails
     0x          Label 7BD2 BBA0
     1x          Label 7BDB BBA1
     1x          Label 7BFC BBA_DivideCell
     1x          Label 7C01 BBA_dyn
     1x          Label 7BF1 BBA_FitCell
     2x          Label 7BE2 BBA_Next
     2x          Label 7C1C BBA_rts
     0x          Label 7C2B BBF0
     1x          Label 7C41 BBF1
     1x          Label 7C6A BBF_AddNewEntry
     3x          Label 7C6D BBF_AddNewEntryAtEnd
     1x          Label 7CAA BBF_ExpandAtEnd
     1x          Label 7C89 BBF_ExpandAtStart
     1x          Label 7C70 BBF_FindFreeSlot
     0x          Label 7C94 BBF_Join
     2x          Label 7C55 BBF_Next
     4x          Label 7CB5 BBF_rts
     1x          Label 7C78 BBF_SetNewEntry
     2x          Label 7C7F BBF_SetNewEntryNextentry
     3x          Label 7C84 BBF_SetNewEntryPrevLink
     2x          Label 7BCB BgBufferAlloc
     2x          Label 7C1E BgBufferFree
     0x          Label 7D14 Black_palette
     0x          Equ   0009 buf_bgdata
     2x          Equ   0024 buf_Lst_Priority_Unset
     1x          Equ   0007 buf_prev_mapping_frame
     5x          Equ   0011 buf_prev_render_flags
     0x          Equ   000D buf_prev_x1_pixel
     0x          Equ   000F buf_prev_x2_pixel
     0x          Equ   000D buf_prev_xy1_pixel
     0x          Equ   000F buf_prev_xy2_pixel
     1x          Equ   000B buf_prev_xy_pixel
     0x          Equ   000B buf_prev_x_pixel
     0x          Equ   000E buf_prev_y1_pixel
     0x          Equ   0010 buf_prev_y2_pixel
     0x          Equ   000C buf_prev_y_pixel
     5x          Equ   0000 buf_priority
     4x          Equ   0003 buf_priority_next_obj
     1x          Equ   0001 buf_priority_prev_obj
    33x          Equ   0000 buf_Tbl_Priority_First_Entry
    18x          Equ   0012 buf_Tbl_Priority_Last_Entry
     0x          Equ   0040 c1_button_A_mask
     0x          Equ   0002 c1_button_down_mask
     0x          Equ   0004 c1_button_left_mask
     0x          Equ   0008 c1_button_right_mask
     0x          Equ   0001 c1_button_up_mask
     0x          Equ   0080 c2_button_A_mask
     0x          Equ   0020 c2_button_down_mask
     0x          Equ   0040 c2_button_left_mask
     0x          Equ   0080 c2_button_right_mask
     0x          Equ   0010 c2_button_up_mask
     7x          Equ   0003 cell_end
     1x          Label 7C18 cell_end_return
     5x          Equ   0040 cell_size
     5x          Equ   0001 cell_start
     4x          Equ   6000 cell_start_adr
     1x          Label 7440 CheckSpritesRefresh
     2x          Label 7CB7 ClearCartMem
     1x          Label 7CC9 ClearCartMem_2
     1x          Label 7CE5 ClearCartMem_3
     4x          Label 7407 ClearObj
     1x          Label 742E CLO_1
     0x          Label 7438 CLO_2
     0x          Label 7530 CSR_CheckDelHide
     3x          Label 771A CSR_CheckDraw
     2x          Label 763D CSR_CheckErase
     1x          Label 765D CSR_CheckErase_InRange
     0x          Label 755B CSR_CheckPlayFieldCoord
     0x          Label 7536 CSR_CheckRefresh
     1x          Label 758B CSR_CheckVerticalPosition
     2x          Label 75BD CSR_CVP_Continue
     1x          Label 7561 CSR_DoNotDisplaySprite
     1x          Label 7617 CSR_DontCheckXFrontier
     1x          Label 762B CSR_DontCheckXFrontier_end
     3x          Label 7584 CSR_NextObject
     1x          Label 75A7 CSR_NoDefinedFrame
     1x          Label 75B5 CSR_NoFrameFound
     1x          Label 759B CSR_NoOverlay
     1x          Label 74B1 CSR_P1B0
     1x          Label 751F CSR_P1B1
     1x          Label 74A4 CSR_P2B0
     1x          Label 7512 CSR_P2B1
     1x          Label 7497 CSR_P3B0
     1x          Label 7505 CSR_P3B1
     1x          Label 748A CSR_P4B0
     1x          Label 74F8 CSR_P4B1
     1x          Label 747D CSR_P5B0
     1x          Label 74EB CSR_P5B1
     1x          Label 7470 CSR_P6B0
     1x          Label 74DE CSR_P6B1
     1x          Label 7463 CSR_P7B0
     1x          Label 74D1 CSR_P7B1
     0x          Label 7456 CSR_P8B0
     0x          Label 74C4 CSR_P8B1
    21x          Label 752D CSR_ProcessEachPriorityLevel
     1x          Label 74BE CSR_rtsB0
     1x          Label 752C CSR_rtsB1
     1x          Label 774A CSR_SDT1
     1x          Label 7751 CSR_SDT2
     1x          Label 7756 CSR_SDT3
     0x          Label 7451 CSR_SetBuffer0
     1x          Label 74BF CSR_SetBuffer1
     3x          Label 7771 CSR_SetDrawFalse
     0x          Label 773C CSR_SetDrawTrue
     1x          Label 7769 CSR_SetEraseDrawFalse
     2x          Label 7712 CSR_SetEraseFalse
     7x          Label 767D CSR_SetEraseTrue
     2x          Label 775C CSR_SetHide
    10x          Label 7635 CSR_SetOutOfRange
     0x          Label 7440 CSR_Start
     0x          Label 76F1 CSR_SubDrawCheckCollision
     4x          Label 76E9 CSR_SubDrawSearch
     2x          Label 76E6 CSR_SubDrawSpriteSearchInit
     0x          Label 769E CSR_SubEraseCheckCollisionB0
     0x          Label 76C6 CSR_SubEraseCheckCollisionB1
     4x          Label 7696 CSR_SubEraseSearchB0
     5x          Label 76BE CSR_SubEraseSearchB1
     1x          Label 768E CSR_SubEraseSpriteSearchInit
     0x          Label 753F CSR_UpdSpriteImageBasedOnMirror
     2x          Label 7CF2 Cur_palette
    19x          Label 743A cur_priority
     4x          Label 743E cur_ptr_sub_obj_draw
     9x          Label 743C cur_ptr_sub_obj_erase
     0x          Label 7345 DeleteObject
     0x          Label 733F DeleteObject_x
     1x          Label 7201 DisplaySprite
     0x          Label 71FB DisplaySprite_x
     0x          Equ   604F dk_destination
     0x          Equ   6049 dk_lecteur
     0x          Equ   604A dk_piste
     0x          Equ   604B dk_pisteL
     0x          Equ   604C dk_secteur
     1x          Label 73A9 DOB_ChainNextB0
     1x          Label 73F3 DOB_ChainNextB1
     1x          Label 7389 DOB_ChainPrevB0
     1x          Label 73CB DOB_ChainPrevB1
     1x          Label 7393 DOB_CheckPrioNextB0
     1x          Label 73D5 DOB_CheckPrioNextB1
     1x          Label 7373 DOB_RemoveFromDPSB0
     1x          Label 73B5 DOB_RemoveFromDPSB1
     2x          Label 73F1 DOB_rts
     1x          Label 7347 DOB_Start
     2x          Label 735C DOB_TestOnscreen1
     0x          Label 734C DOB_ToDeleteFlag0
     0x          Label 7361 DOB_ToDeleteFlag1
     0x          Label 7352 DOB_Unset0
     0x          Label 7367 DOB_Unset1
     0x          Label 718C Dpad_Held
     0x          Label 718E Dpad_Press
     2x          Label 718A Dpad_Read
    27x          Label 64C4 DPS_buffer_0
    25x          Label 652A DPS_buffer_1
     1x          Label 79D8 DrawSprites
     4x          Equ   0001 draw_routine
     1x          Label 7AD8 DRS_DrawWithoutBackupB0
     1x          Label 7BA7 DRS_DrawWithoutBackupB1
     1x          Label 7B0F DRS_dyn1
     1x          Label 7B21 DRS_dyn2
     3x          Label 7AA3 DRS_dyn3B0
     3x          Label 7B72 DRS_dyn3B1
     3x          Label 7AD0 DRS_NextObjectB0
     3x          Label 7B9F DRS_NextObjectB1
     1x          Label 7ACB DRS_NoOverlayB0
     1x          Label 7B9A DRS_NoOverlayB1
     1x          Label 7A15 DRS_P1B0
     1x          Label 7A56 DRS_P1B1
     1x          Label 7A0D DRS_P2B0
     1x          Label 7A4E DRS_P2B1
     1x          Label 7A05 DRS_P3B0
     1x          Label 7A46 DRS_P3B1
     1x          Label 79FD DRS_P4B0
     1x          Label 7A3E DRS_P4B1
     1x          Label 79F5 DRS_P5B0
     1x          Label 7A36 DRS_P5B1
     1x          Label 79ED DRS_P6B0
     1x          Label 7A2E DRS_P6B1
     1x          Label 79E5 DRS_P7B0
     1x          Label 7A26 DRS_P7B1
     0x          Label 79DD DRS_P8B0
     1x          Label 7A1E DRS_P8B1
     9x          Label 7A5F DRS_ProcessEachPriorityLevelB0
     9x          Label 7B2E DRS_ProcessEachPriorityLevelB1
     1x          Label 7A1D DRS_rtsB0
     1x          Label 7A5E DRS_rtsB1
     0x          Label 79D8 DRS_Start
     1x          Label 7ACD DRS_UpdateRenderFlagB0
     1x          Label 7B9C DRS_UpdateRenderFlagB1
     4x          Label 7AFC DRS_XYToAddress
     1x          Label 7B03 DRS_XYToAddressPositive
     0x          Label 7B09 DRS_XYToAddressRAM1First
     1x          Label 7B1B DRS_XYToAddressRAM2First
     0x          Label 7232 DSP_addFirstNode
     1x          Label 7242 DSP_addToExistingNode
     1x          Label 721E DSP_BufferPositionned
     1x          Label 7267 DSP_ChangePriority
     1x          Label 722B DSP_CheckLastEntry
     0x          Label 7228 DSP_InitPriority
     1x          Label 7257 DSP_LinkBuffer1
     1x          Label 7263 DSP_LinkCurWithPrev
     1x          Label 7240 DSP_rts
     0x          Label 720E DSP_SetBuffer0
     1x          Label 7217 DSP_SetBuffer1
     1x          Label 7203 DSP_Start
     0x          Label 66C4 Dynamic_Object_RAM
     2x          Label 7042 Dynamic_Object_RAM_End
     1x          Label 7CF4 Dyn_palette
     3x          Equ   0007 entry_size
     1x          Label 7780 EraseSprites
     4x          Equ   0006 erase_nb_cell
     2x          Equ   0004 erase_routine
     0x          Label 7877 ESP_CallEraseRoutineB0
     1x          Label 788A ESP_CallEraseRoutineB0_00
     0x          Label 78C8 ESP_CallEraseRoutineB1
     1x          Label 78DB ESP_CallEraseRoutineB1_00
     1x          Label 786C ESP_CheckEraseB0
     1x          Label 78BD ESP_CheckEraseB1
     8x          Label 785A ESP_CheckPriorityB0
     8x          Label 78AB ESP_CheckPriorityB1
     0x          Label 7897 ESP_FreeEraseBufferB0
     0x          Label 78E8 ESP_FreeEraseBufferB1
     2x          Label 78A2 ESP_NextObjectB0
     2x          Label 78F3 ESP_NextObjectB1
     0x          Label 7785 ESP_P1B0
     1x          Label 77EE ESP_P1B1
     1x          Label 7792 ESP_P2B0
     1x          Label 77FB ESP_P2B1
     1x          Label 779F ESP_P3B0
     1x          Label 7808 ESP_P3B1
     1x          Label 77AC ESP_P4B0
     1x          Label 7815 ESP_P4B1
     1x          Label 77B9 ESP_P5B0
     1x          Label 7822 ESP_P5B1
     1x          Label 77C6 ESP_P6B0
     1x          Label 782F ESP_P6B1
     1x          Label 77D3 ESP_P7B0
     1x          Label 783C ESP_P7B1
     1x          Label 77E0 ESP_P8B0
     1x          Label 7849 ESP_P8B1
     9x          Label 7857 ESP_ProcessEachPriorityLevelB0
     9x          Label 78A8 ESP_ProcessEachPriorityLevelB1
     1x          Label 77ED ESP_rtsB0
     1x          Label 7856 ESP_rtsB1
     0x          Label 7780 ESP_Start
     0x          Label 785E ESP_UnsetCheckRefreshB0
     0x          Label 78AF ESP_UnsetCheckRefreshB1
     1x          Label 789A ESP_UnsetOnScreenFlagB0
     1x          Label 78EB ESP_UnsetOnScreenFlagB1
     0x          Equ   001B ext_variables
     0x          Label 718D Fire_Held
     0x          Label 718F Fire_Press
     2x          Label 718B Fire_Read
     0x          Label 611E Glb_Camera_X_Pos
     0x          Label 6120 Glb_Camera_Y_Pos
    10x          Label 611D Glb_Cur_Wrk_Screen_Id
     1x          Label 7152 Glb_MainCharacter_Is_Dead
     6x          Label 6122 Glb_Sprite_Screen_Pos_Part1
     6x          Label 6124 Glb_Sprite_Screen_Pos_Part2
     0x          Equ   00FE goBackNFrames
     0x          Equ   00FD goToAnimation
     0x          Equ   0038 gravity
     0x          Equ   0000 id
     1x          Equ   0006 image_center_offset
     5x          Equ   000A image_set
     2x          Equ   0004 image_subset_x1_offset
     1x          Equ   0005 image_subset_y1_offset
     2x          Equ   0004 image_x_size
     1x          Equ   0005 image_y_size
     0x          Label 8655 Img_emblemBack01
     0x          Label 8645 Img_emblemBack02
     0x          Label 855B Img_emblemBack03
     0x          Label 854B Img_emblemBack04
     0x          Label 857B Img_emblemBack05
     0x          Label 856B Img_emblemBack06
     0x          Label 852B Img_emblemBack07
     0x          Label 851B Img_emblemBack08
     0x          Label 853B Img_emblemBack09
     0x          Label 86F0 Img_emblemFront01
     0x          Label 8700 Img_emblemFront02
     0x          Label 86D0 Img_emblemFront03
     0x          Label 86E0 Img_emblemFront04
     0x          Label 86B0 Img_emblemFront05
     0x          Label 86C0 Img_emblemFront06
     0x          Label 8690 Img_emblemFront07
     0x          Label 86A0 Img_emblemFront08
     0x          Label 8609 Img_island
     0x          Label 8298 Img_SegaLogo_1
     0x          Label 8288 Img_SegaLogo_2
     1x          Label 8387 Img_SegaSonic_11
     1x          Label 82C1 Img_SegaSonic_12
     1x          Label 8303 Img_SegaSonic_13
     1x          Label 8345 Img_SegaSonic_21
     1x          Label 83C9 Img_SegaSonic_22
     1x          Label 82E2 Img_SegaSonic_23
     1x          Label 840B Img_SegaSonic_31
     1x          Label 8324 Img_SegaSonic_32
     1x          Label 83A8 Img_SegaSonic_33
     1x          Label 83EA Img_SegaSonic_41
     1x          Label 842C Img_SegaSonic_42
     1x          Label 8366 Img_SegaSonic_43
     0x          Label 82A8 Img_SegaTrails_1
     0x          Label 848D Img_SegaTrails_2
     0x          Label 847D Img_SegaTrails_3
     0x          Label 846D Img_SegaTrails_4
     0x          Label 845D Img_SegaTrails_5
     0x          Label 844D Img_SegaTrails_6
     0x          Label 8278 Img_SonicAndTailsIn
     0x          Label 84CE Img_sonicHand
     1x          Label 861D Img_sonic_1
     1x          Label 8631 Img_sonic_2
     1x          Label 8665 Img_sonic_3
     1x          Label 8679 Img_sonic_4
     3x          Label 8500 Img_star_1
     3x          Label 84E5 Img_star_2
     1x          Label 84BA Img_star_3
     0x          Label 84A6 Img_star_4
     0x          Label 85F2 Img_tailsHand
     1x          Label 85DE Img_tails_1
     1x          Label 85CA Img_tails_2
     1x          Label 85B6 Img_tails_3
     1x          Label 85A2 Img_tails_4
     1x          Label 858B Img_tails_5
     0x          Label 8208 IrqOff
     0x          Label 81FD IrqOn
     0x          Label 8232 IrqPsg
     0x          Label 8241 IrqPsgRaster
     1x          Label 8250 IrqPsgRaster_1
     1x          Label 8254 IrqPsgRaster_2
     1x          Label 8271 IrqPsgRaster_end
     1x          Label 8259 IrqPsgRaster_render
     1x          Label 823A IrqPsg_end
     0x          Label 8213 IrqSync
     1x          Label 8220 IrqSync_1
     1x          Label 8225 IrqSync_2
     1x          Label 822A IrqSync_3
     0x          Equ   4DFF irq_one_frame
     1x          Label 81FB Irq_Raster_End
     1x          Label 81F7 Irq_Raster_Page
     1x          Label 81F9 Irq_Raster_Start
     0x          Equ   6027 irq_routine
     1x          Equ   E7C6 irq_timer
     1x          Equ   E7C5 irq_timer_ctrl
     0x          Label 718C Joypads
     2x          Label 718C Joypads_Held
     1x          Label 718E Joypads_Press
     2x          Label 718A Joypads_Read
     1x          Label 6103 LevelMainLoop
     1x          Label 7042 LevelOnly_Object_RAM
     1x          Label 7150 LevelOnly_Object_RAM_End
     1x          Label 8A67 LoadAct
     4x          Label 6126 Lst_FreeCellFirstEntry_0
     4x          Label 62F5 Lst_FreeCellFirstEntry_1
     2x          Label 6128 Lst_FreeCell_0
     2x          Label 62F7 Lst_FreeCell_1
     8x          Label 64E8 Lst_Priority_Unset_0
     7x          Label 654E Lst_Priority_Unset_1
     0x          Label 71F9 MarkObjGone
    14x          Equ   0000 nb_cells
     1x          Equ   001B nb_dynamic_objects
     6x          Equ   0082 nb_free_cells
     0x          Equ   0003 nb_level_objects
     4x          Equ   0020 nb_objects
     4x          Equ   0008 nb_priority_levels
     0x          Equ   0002 nb_reserved_objects
     0x          Equ   00FC nextRoutine
     0x          Equ   00FA nextSubRoutine
     9x          Equ   0005 next_entry
     3x          Equ   005A next_object
     0x          Label 72FD ObjectMove
     1x          Label 6610 Object_RAM
     2x          Label 7150 Object_RAM_End
     8x          Equ   005A object_size
     1x          Label 8856 Obj_Index_Address
     1x          Label 8756 Obj_Index_Page
     0x          Label 6610 Obj_MainCharacter
     0x          Label 666A Obj_Sidekick
     0x          Label 709C Obj_SonicDust
     0x          Label 70F6 Obj_TailsDust
     0x          Label 7042 Obj_TailsTails
     4x          Equ   0000 page_draw_routine
     2x          Equ   0003 page_erase_routine
     1x          Label 8A9B Pal_SEGA
     0x          Label 8B1B Pal_SEGAEnd
     0x          Label 8ADB Pal_SEGAMid
     0x          Label 8AFB Pal_SonicAndTailsIn
     0x          Label 8ABB Pal_TitleScreen
     1x          Equ   0003 pcm_end_addr
     1x          Equ   0005 pcm_meta_size
     1x          Equ   0000 pcm_page
     0x          Label 8A56 Pcm_SEGA
     1x          Equ   0001 pcm_start_addr
     0x          Label 7D7C PlayPCM
     1x          Label 7DB4 PlayPCM_End
     1x          Label 7D9E PlayPCM_Loop
     1x          Label 7DAE PlayPCM_NextChunk
     1x          Label 7D93 PlayPCM_ReadChunk
     1x          Label 7DCD PlayPCM_RestorePage
     2x          Equ   0006 prev_anim
     6x          Equ   0003 priority
     0x          Label 7E87 PSGCancelLoop
     4x          Label 81DE PSGChan0Volume
     4x          Label 81DF PSGChan1Volume
     3x          Label 81E4 PSGChan2HighTone
     3x          Label 81E2 PSGChan2LowTone
     5x          Label 81E0 PSGChan2Volume
     5x          Label 81E3 PSGChan3LowTone
     5x          Label 81E1 PSGChan3Volume
     6x          Equ   0000 PSGChannel0
     5x          Equ   0020 PSGChannel1
     9x          Equ   0040 PSGChannel2
    12x          Label 81E6 PSGChannel2SFX
    10x          Equ   0060 PSGChannel3
    13x          Label 81E7 PSGChannel3SFX
     2x          Equ   0040 PSGData
    35x          Equ   E7B0 PSGDataPort
     2x          Equ   0000 PSGEnd
     2x          Label 8041 PSGFrame
     1x          Label 804D PSGFrame_continue
     0x          Label 7E8B PSGGetStatus
     0x          Label 7DD3 PSGInit
    32x          Equ   0080 PSGLatch
     2x          Equ   0001 PSGLoop
     3x          Label 81D9 PSGLoopFlag
     3x          Label 81DA PSGMusicLastLatch
     3x          Label 81D6 PSGMusicLoopPoint
     2x          Label 81D1 PSGMusicPage
     3x          Label 81D4 PSGMusicPointer
     4x          Label 81D8 PSGMusicSkipFrames
     2x          Label 81D2 PSGMusicStart
    13x          Label 81D0 PSGMusicStatus
     4x          Label 81DB PSGMusicSubstringLen
     2x          Label 81DC PSGMusicSubstringRetAddr
    13x          Label 81E5 PSGMusicVolumeAttenuation
     0x          Label 7DE9 PSGPlay
     1x          Label 7DEB PSGPlay1
     0x          Label 7DE5 PSGPlayNoRepeat
     0x          Label 7F03 PSGRestoreVolumes
     1x          Label 7F16 PSGRestoreVolumes1
     1x          Label 7F29 PSGRestoreVolumes2
     2x          Label 7F4D PSGRestoreVolumes3
     2x          Label 7F71 PSGRestoreVolumes4
     0x          Label 7E3C PSGResume
     1x          Label 7E6C PSGResume1
     1x          Label 7E81 PSGResume2
     1x          Label 7E86 PSGResume_end
     0x          Label 7E8F PSGSetMusicVolumeAttenuation
     1x          Label 7EA5 PSGSetMusicVolumeAttenuation1
     1x          Label 7EB8 PSGSetMusicVolumeAttenuation2
     1x          Label 7ED0 PSGSetMusicVolumeAttenuation3
     1x          Label 7EE8 PSGSetMusicVolumeAttenuation4
     2x          Label 7EED PSGSetMusicVolumeAttenuation_end
     0x          Label 8039 PSGSFXCancelLoop
     2x          Label 81E8 PSGSFXChan2Volume
     2x          Label 81E9 PSGSFXChan3Volume
     0x          Label 814E PSGSFXFrame
     1x          Label 818E PSGSFXFrame_end
     0x          Label 803D PSGSFXGetStatus
     3x          Label 81F3 PSGSFXLoopFlag
     3x          Label 81F0 PSGSFXLoopPoint
     2x          Label 81EB PSGSFXPage
     0x          Label 7F7B PSGSFXPlay
     1x          Label 7F7D PSGSFXPlay1
     1x          Label 7FA3 PSGSFXPlay2
     1x          Label 7FAC PSGSFXPlay3
     0x          Label 7F77 PSGSFXPlayLoop
     1x          Label 7FC2 PSGSFXPlayLoop_end
     4x          Label 81EE PSGSFXPointer
     4x          Label 81F2 PSGSFXSkipFrames
     2x          Label 81EC PSGSFXStart
     7x          Label 81EA PSGSFXStatus
     2x          Label 7FC3 PSGSFXStop
     1x          Label 7FD2 PSGSFXStop1
     1x          Label 7FDC PSGSFXStop2
     1x          Label 8006 PSGSFXStop3
     1x          Label 8028 PSGSFXStop4
     1x          Label 8038 PSGSFXStop_end
     4x          Label 81F4 PSGSFXSubstringLen
     2x          Label 81F5 PSGSFXSubstringRetAddr
     0x          Label 7EEE PSGSilenceChannels
     2x          Label 7E13 PSGStop
     1x          Label 7E2C PSGStop2
     1x          Label 7E36 PSGStop3
     1x          Label 7E3B PSGStop_end
     4x          Equ   0008 PSGSubString
    27x          Equ   0010 PSGVolumeData
     2x          Equ   0038 PSGWait
     5x          Equ   0001 PSG_PLAYING
     3x          Equ   0000 PSG_STOPPED
     0x          Label 8A61 Psg_TitleScreen
     1x          Label 7190 ReadJoypads
     3x          Label 7CF1 Refresh_palette
    24x          Equ   0002 render_flags
     4x          Equ   0020 render_hide_mask
     2x          Equ   0008 render_motionless_mask
     5x          Equ   0004 render_overlay_mask
     1x          Equ   0010 render_playfieldcoord_mask
     5x          Equ   0040 render_todelete_mask
     1x          Equ   0080 render_xloop_mask
     2x          Equ   0001 render_xmirror_mask
     2x          Equ   0002 render_ymirror_mask
     1x          Label 6610 Reserved_Object_RAM
     1x          Label 66C4 Reserved_Object_RAM_End
     0x          Equ   00FF resetAnim
     0x          Equ   00FB resetAnimAndSubRoutine
     2x          Equ   0018 routine
     3x          Equ   0019 routine_secondary
     3x          Equ   003F rsv_bgdata_0
     3x          Equ   0051 rsv_bgdata_1
     2x          Equ   0036 rsv_buffer_0
     2x          Equ   0048 rsv_buffer_1
     6x          Equ   002C rsv_image_center_offset
     4x          Equ   002E rsv_image_subset
    11x          Equ   0030 rsv_mapping_frame
     0x          Equ   002A rsv_prev_anim
     4x          Equ   003D rsv_prev_mapping_frame_0
     4x          Equ   004F rsv_prev_mapping_frame_1
    11x          Equ   0047 rsv_prev_render_flags_0
     9x          Equ   0059 rsv_prev_render_flags_1
     4x          Equ   0080 rsv_prev_render_onscreen_mask
     6x          Equ   0001 rsv_prev_render_overlay_mask
     0x          Equ   0043 rsv_prev_x1_pixel_0
     0x          Equ   0055 rsv_prev_x1_pixel_1
     0x          Equ   0045 rsv_prev_x2_pixel_0
     0x          Equ   0057 rsv_prev_x2_pixel_1
     2x          Equ   0043 rsv_prev_xy1_pixel_0
     2x          Equ   0055 rsv_prev_xy1_pixel_1
     2x          Equ   0045 rsv_prev_xy2_pixel_0
     2x          Equ   0057 rsv_prev_xy2_pixel_1
     1x          Equ   0041 rsv_prev_xy_pixel_0
     1x          Equ   0053 rsv_prev_xy_pixel_1
     0x          Equ   0041 rsv_prev_x_pixel_0
     0x          Equ   0053 rsv_prev_x_pixel_1
     0x          Equ   0044 rsv_prev_y1_pixel_0
     0x          Equ   0056 rsv_prev_y1_pixel_1
     0x          Equ   0046 rsv_prev_y2_pixel_0
     0x          Equ   0058 rsv_prev_y2_pixel_1
     0x          Equ   0042 rsv_prev_y_pixel_0
     0x          Equ   0054 rsv_prev_y_pixel_1
     6x          Equ   0036 rsv_priority_0
     6x          Equ   0048 rsv_priority_1
    14x          Equ   0039 rsv_priority_next_obj_0
    14x          Equ   004B rsv_priority_next_obj_1
    12x          Equ   0037 rsv_priority_prev_obj_0
    12x          Equ   0049 rsv_priority_prev_obj_1
     4x          Equ   0001 rsv_render_checkrefresh_mask
     5x          Equ   0004 rsv_render_displaysprite_mask
     8x          Equ   0002 rsv_render_erasesprite_mask
    28x          Equ   0029 rsv_render_flags
     4x          Equ   0008 rsv_render_outofrange_mask
     6x          Equ   0032 rsv_x1_pixel
     5x          Equ   0034 rsv_x2_pixel
     3x          Equ   0032 rsv_xy1_pixel
     3x          Equ   0034 rsv_xy2_pixel
     5x          Equ   0033 rsv_y1_pixel
     4x          Equ   0035 rsv_y2_pixel
     1x          Label 71D2 RunNextObject
     3x          Label 71B9 RunObject
     1x          Label 71B1 RunObjects
     1x          Label 71DC RunObjectsWhenPlayerIsDead
     0x          Label 71B4 RunObjects_01
     0x          Label 71DB RunObjects_End
     1x          Label 7162 screen_border_color
     2x          Equ   00E3 screen_bottom
     2x          Equ   0030 screen_left
     2x          Equ   00CF screen_right
     2x          Equ   001C screen_top
     0x          Equ   00A0 screen_width
     2x          Equ   0001 SFX_CHANNEL2
     2x          Equ   0002 SFX_CHANNEL3
     2x          Equ   0003 SFX_CHANNELS2AND3
     0x          Label 7328 SingleObjLoad2
     1x          Label 7332 SingleObjLoad2_01
     2x          Label 733E SingleObjLoad2_02
     1x          Equ   001A status
     0x          Equ   0004 status_bit2
     0x          Equ   0080 status_bit7
     0x          Equ   0002 status_inair
     0x          Equ   0010 status_jumpingafterrolling
     0x          Equ   0004 status_jumporroll
     0x          Equ   0020 status_mainchar_pushing
     0x          Equ   0008 status_mainchar_standing
     0x          Equ   0008 status_norgroundnorfall
     0x          Equ   0020 status_pushing
     0x          Equ   0040 status_sidekick_pushing
     0x          Equ   0010 status_sidekick_standing
     0x          Equ   0040 status_underwater
     1x          Equ   0001 status_x_orientation
     1x          Equ   0002 status_y_orientation
     0x          Equ   0001 subtype
     0x          Label 715D SwapVideoPage
     2x          Label 64C4 Tbl_Priority_First_Entry_0
     2x          Label 652A Tbl_Priority_First_Entry_1
     3x          Label 64D6 Tbl_Priority_Last_Entry_0
     2x          Label 653C Tbl_Priority_Last_Entry_1
     2x          Label 65D0 Tbl_Sub_Object_Draw
     3x          Label 6590 Tbl_Sub_Object_Erase
     0x          Label 78FE UDP_B0
     1x          Label 796B UDP_B1
     1x          Label 7945 UDP_ChainNextB0
     1x          Label 79B2 UDP_ChainNextB1
     1x          Label 7925 UDP_ChainPrevB0
     1x          Label 7992 UDP_ChainPrevB1
     1x          Label 794F UDP_CheckDeleteB0
     1x          Label 79BC UDP_CheckDeleteB1
     2x          Label 7901 UDP_CheckEndB0
     2x          Label 796E UDP_CheckEndB1
     1x          Label 792F UDP_CheckPrioNextB0
     1x          Label 799C UDP_CheckPrioNextB1
     1x          Label 790D UDP_CheckPrioPrevB0
     1x          Label 797A UDP_CheckPrioPrevB1
     0x          Label 7906 UDP_InitListB0
     0x          Label 7973 UDP_InitListB1
     3x          Label 7964 UDP_SetNewPrioB0
     3x          Label 79D1 UDP_SetNewPrioB1
     0x          Label 78F9 UDP_Start
     1x          Label 78F9 UnsetDisplayPriority
     1x          Label 7D54 UpdatePalette
     1x          Label 7D7B UPP_return
     1x          Label 7D6E UPP_SetColor
     1x          Label 7D5D UPP_Tempo
     2x          Label 7188 Vint_runcount
     3x          Label 7153 WaitVBL
     1x          Label 7158 WaitVBL_01
     0x          Label 7D34 White_palette
     7x          Equ   0012 xy_pixel
     3x          Equ   0012 x_pixel
     4x          Equ   000C x_pos
     0x          Equ   000E x_sub
     2x          Equ   0014 x_vel
     1x          Equ   0013 y_pixel
     4x          Equ   000F y_pos
     0x          Equ   0011 y_sub
     2x          Equ   0016 y_vel
     1x          Label 7F2E _chkchn2
     1x          Label 7F52 _chkchn3
     1x          Label 80C2 _chn2
     1x          Label 80DF _command
     2x          Label 8065 _continue
     1x          Label 80EA _done
     0x          Equ   00FE _goBackNFrames
     0x          Equ   00FD _goToAnimation
     1x          Label 8143 _high_part_Tone
     1x          Label 80AF _ifchn0
     1x          Label 8098 _ifchn2
    11x          Label 8055 _intLoop
     4x          Label 8161 _intSFXLoop
     1x          Label 80A2 _latch_Volume
     1x          Label 80B4 _latch_Volume_23
     1x          Label 8124 _musicLoop
     0x          Equ   00FC _nextRoutine
     3x          Equ   00FA _nextSubRoutine
     1x          Label 80D6 _noLatch
     1x          Label 80EE _otherCommands
     1x          Label 8118 _output_NoLatch
     4x          Equ   00FF _resetAnim
     0x          Equ   00FB _resetAnimAndSubRoutine
     1x          Label 7F48 _restoreSFX2
     1x          Label 7F76 _restoreSFX2_end
     1x          Label 7F6C _restoreSFX3
     1x          Label 7ED5 _restore_channel3
     6x          Label 80CC _send2PSG
     4x          Label 80FB _sendVolume2PSG
     2x          Label 8109 _sendVolume2PSG1
     1x          Label 8110 _sendVolume2PSG2
     1x          Label 811E _setLoopPoint
     1x          Label 818F _SFXcommand
     2x          Label 8171 _SFXcontinue
     1x          Label 819A _SFXdone
     1x          Label 81B0 _sfxLoop
     1x          Label 819E _SFXotherCommands
     2x          Label 8185 _SFXoutbyte
     1x          Label 81AB _SFXsetLoopPoint
     1x          Label 81BF _SFXsubstring
     1x          Label 8182 _SFXvolumechn3
     1x          Label 80D1 _skipFrame
     1x          Label 802F _skipRestore
     1x          Label 818A _skipSFXFrame
     1x          Label 800B _skip_chn2
     1x          Label 802D _skip_chn3
     1x          Label 8131 _substring

