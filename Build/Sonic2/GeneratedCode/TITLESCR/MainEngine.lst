/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : .\Sonic2\GeneratedCode\TITLESCR\MainEngine.asm
 * Fichier destination : .\Sonic2\GeneratedCode\TMP.BIN
 * Contenu :
 *     Main     0:MAIN.ASM     3813
 *     Include  0:CONSTANT.ASM 5845
 *     Include  0:WAITVBL.ASM  1795
 *     Include  0:READJPDS.ASM 1855
 *     Include  0:RUNOBJTS.ASM 1312
 *     Include  0:MRKOBJGN.ASM 481
 *     Include  0:DISPLSPR.ASM 2223
 *     Include  0:ANIMSPR.ASM  1998
 *     Include  0:OBJMOVE.ASM  752
 *     Include  0:OBJLOAD.ASM  1109
 *     Include  0:DELETOBJ.ASM 2732
 *     Include  0:CLEAROBJ.ASM 647
 *     Include  0:CHECKSPR.ASM 10494
 *     Include  0:ERASESPR.ASM 4868
 *     Include  0:UNSETDSP.ASM 2832
 *     Include  0:DRAWSPR.ASM  6323
 *     Include  0:BGBALLOC.ASM 1029
 *     Include  0:BGBFREE.ASM  1879
 *     Include  0:CLRCARTM.ASM 642
 *     Include  0:UPDTPAL.ASM  953
 *     Include  0:PLAYPCM.ASM  1216
 *     Include  0:PSGLIB.ASM   16960
 *     Include  0:IRQPSGRR.ASM 1810
 *     Include  0:IMAGEIDX.ASM 6653
 *     Include  0:ANIMSCPT.ASM 991
 *     Include  0:OBJINDEX.ASM 6715
 *     Include  0:SOUNDIDX.ASM 174
 *     Include  0:LOADACT.ASM  364
 *     Include  0:PALETTE.ASM  1443
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
    179                                   INCLUD CONSTANT
    180                           * --------------------------------------->>
    181                           * Constants
    182                           *
    183                           * Naming convention
    184                           * -----------------
    185                           * - lower case
    186                           * - underscore-separated names
    187                           *
    188                           * --------------------------------------->>
    189
    190                           * =======================================>>
    191                           * TO8 Registers
    192                           * =======================================>>
    193
    194                  6049     dk_lecteur                    equ $6049
    195                  604A     dk_piste                      equ $604A
    196                  604B     dk_pisteL                     equ $604B
    197                  604C     dk_secteur                    equ $604C
    198                  604F     dk_destination                equ $604F
    199
    200                           * =======================================>>
    201                           * Display Constants
    202                           * =======================================>>
    203
    204                  00A0     screen_width                  equ 160 ; s>>
    205                  001C     screen_top                    equ 28 ; in>>
    206                  00E3     screen_bottom                 equ 28+199 >>
    207                  0030     screen_left                   equ 48 ; in>>
    208                  00CF     screen_right                  equ 48+159 >>
    209                  0008     nb_priority_levels            equ 8   ; n>>
    210
    211                           * =======================================>>
    212                           * Physics Constants
    213                           * =======================================>>
    214
    215                  0038     gravity                       equ $38 ; G>>
    216
    217                           * =======================================>>
    218                           * Animation Constants
    219                           * =======================================>>
    220
    221                  00FF     _resetAnim                    equ $FF
    222                  00FE     _goBackNFrames                equ $FE
    223                  00FD     _goToAnimation                equ $FD
    224                  00FC     _nextRoutine                  equ $FC
    225                  00FB     _resetAnimAndSubRoutine       equ $FB
    226                  00FA     _nextSubRoutine               equ $FA
    227
    228                           * =======================================>>
    229                           * Images Constants
    230                           * =======================================>>
    231
    232                  0004     image_x_size                  equ 4
    233                  0005     image_y_size                  equ 5
    234                  0006     image_center_offset           equ 6
    235
    236                  0004     image_subset_x1_offset        equ 4
    237                  0005     image_subset_y1_offset        equ 5
    238
    239                  0000     page_draw_routine             equ 0
    240                  0001     draw_routine                  equ 1
    241                  0003     page_erase_routine            equ 3
    242                  0004     erase_routine                 equ 4
    243                  0006     erase_nb_cell                 equ 6
    244
    245                           * =======================================>>
    246                           * Sound Constants
    247                           * =======================================>>
    248
    249                  0000     pcm_page        equ 0
    250                  0001     pcm_start_addr  equ 1
    251                  0003     pcm_end_addr    equ 3
    252                  0005     pcm_meta_size   equ 5
    253
    254                           * =======================================>>
    255                           * Object Constants
    256                           * =======================================>>
    257
    258                  0002     nb_reserved_objects           equ 2
    259                  0025     nb_dynamic_objects            equ 37
    260                  0003     nb_level_objects              equ 3
    261                  002A     nb_objects                    equ 42 * ma>>
    262
    263                           * --------------------------------------->>
    264                           * Object Status Table offsets
    265                           * --------------------------------------->>
    266
    267                  005A     object_size                   equ 90 ; th>>
    268                  005A     next_object                   equ object_>>
    269
    270                  0000     id                            equ 0      >>
    271                  0001     subtype                       equ 1      >>
    272                  0002     render_flags                  equ 2
    273
    274                           * --- render_flags bitfield variables --->>
    275                  0001     render_xmirror_mask           equ $01 ; (>>
    276                  0002     render_ymirror_mask           equ $02 ; (>>
    277                  0004     render_overlay_mask           equ $04 ; (>>
    278                  0008     render_motionless_mask        equ $08 ; (>>
    279                  0010     render_playfieldcoord_mask    equ $10 ; (>>
    280                  0020     render_hide_mask              equ $20 ; (>>
    281                  0040     render_todelete_mask          equ $40 ; (>>
    282                  0080     render_xloop_mask             equ $80 ; (>>
    283                            
    284                  0003     priority                      equ 3      >>
    285                  0004     anim                          equ 4  ; an>>
    286                  0006     prev_anim                     equ 6  ; an>>
    287                  0008     anim_frame                    equ 8      >>
    288                  0009     anim_frame_duration           equ 9      >>
    289                  000A     image_set                     equ 10 ; an>>
    290                  000C     x_pos                         equ 12 ; an>>
    291                  000E     x_sub                         equ 14     >>
    292                  000F     y_pos                         equ 15 ; an>>
    293                  0011     y_sub                         equ 17     >>
    294                  0012     xy_pixel                      equ 18     >>
    295                  0012     x_pixel                       equ 18     >>
    296                  0013     y_pixel                       equ 19     >>
    297                  0014     x_vel                         equ 20 ; an>>
    298                  0016     y_vel                         equ 22 ; an>>
    299                  0018     routine                       equ 24     >>
    300                  0019     routine_secondary             equ 25     >>
    301                  001A     status                        equ 26
    302
    303                           * --- status bitfield variables for objec>>
    304                  0001     status_x_orientation          equ   $01 ;>>
    305                  0002     status_y_orientation          equ   $02 ;>>
    306                  0004     status_bit2                   equ   $04 ;>>
    307                  0008     status_mainchar_standing      equ   $08 ;>>
    308                  0010     status_sidekick_standing      equ   $10 ;>>
    309                  0020     status_mainchar_pushing       equ   $20 ;>>
    310                  0040     status_sidekick_pushing       equ   $40 ;>>
    311                  0080     status_bit7                   equ   $80 ;>>
    312
    313                           * --- status bitfield variables for Main >>
    314                  0002     status_inair                  equ   $02 ;>>
    315                  0004     status_jumporroll             equ   $04 ;>>
    316                  0008     status_norgroundnorfall       equ   $08 ;>>
    317                  0010     status_jumpingafterrolling    equ   $10 ;>>
    318                  0020     status_pushing                equ   $20 ;>>
    319                  0040     status_underwater             equ   $40 ;>>
    320
    321                  001B     ext_variables                 equ 27 ; to>>
    322
    323                           * --------------------------------------->>
    324                           * reserved variables (engine)
    325
    326                  0029     rsv_render_flags              equ 41
    327
    328                           * --- rsv_render_flags bitfield variables>>
    329                  0001     rsv_render_checkrefresh_mask  equ $01 ; (>>
    330                  0002     rsv_render_erasesprite_mask   equ $02 ; (>>
    331                  0004     rsv_render_displaysprite_mask equ $04 ; (>>
    332                  0008     rsv_render_outofrange_mask    equ $08 ; (>>
    333
    334                  002A     rsv_prev_anim                 equ 42 ; an>>
    335                  002C     rsv_image_center_offset       equ 44 ; 0 >>
    336                           * ne sert plus                       ; an>>
    337                  002E     rsv_image_subset              equ 46 ; an>>
    338                  0030     rsv_mapping_frame             equ 48 ; an>>
    339                  0032     rsv_xy1_pixel                 equ 50     >>
    340                  0032     rsv_x1_pixel                  equ 50     >>
    341                  0033     rsv_y1_pixel                  equ 51     >>
    342                  0034     rsv_xy2_pixel                 equ 52     >>
    343                  0034     rsv_x2_pixel                  equ 52     >>
    344                  0035     rsv_y2_pixel                  equ 53     >>
    345
    346                           * --------------------------------------->>
    347                           * reserved variables (engine) - buffer sp>>
    348
    349                  0036     rsv_buffer_0                  equ 54 ; St>>
    350                  0036     rsv_priority_0                equ 54 ; in>>
    351                  0037     rsv_priority_prev_obj_0       equ 55 ; an>>
    352                  0039     rsv_priority_next_obj_0       equ 57 ; an>>
    353                           *rsv_prev_image_subset_0       equ 59 ; a>>
    354                  003D     rsv_prev_mapping_frame_0      equ 61 ; an>>
    355                  003F     rsv_bgdata_0                  equ 63 ; an>>
    356                  0041     rsv_prev_xy_pixel_0           equ 65 ;
    357                  0041     rsv_prev_x_pixel_0            equ 65 ; pr>>
    358                  0042     rsv_prev_y_pixel_0            equ 66 ; pr>>
    359                  0043     rsv_prev_xy1_pixel_0          equ 67 ;
    360                  0043     rsv_prev_x1_pixel_0           equ 67 ; pr>>
    361                  0044     rsv_prev_y1_pixel_0           equ 68 ; pr>>
    362                  0045     rsv_prev_xy2_pixel_0          equ 69 ;
    363                  0045     rsv_prev_x2_pixel_0           equ 69 ; pr>>
    364                  0046     rsv_prev_y2_pixel_0           equ 70 ; pr>>
    365                  0047     rsv_prev_render_flags_0       equ 71 ;
    366                           * --- rsv_prev_render_flags_0 bitfield va>>
    367                  0001     rsv_prev_render_overlay_mask  equ $01 ; (>>
    368                  0080     rsv_prev_render_onscreen_mask equ $80 ; (>>
    369
    370                  0048     rsv_buffer_1                  equ 72 ; St>>
    371                  0048     rsv_priority_1                equ 72 ; in>>
    372                  0049     rsv_priority_prev_obj_1       equ 73 ; an>>
    373                  004B     rsv_priority_next_obj_1       equ 75 ; an>>
    374                           *rsv_prev_image_subset_1       equ 77 ; a>>
    375                  004F     rsv_prev_mapping_frame_1      equ 79 ; an>>
    376                  0051     rsv_bgdata_1                  equ 81 ; an>>
    377                  0053     rsv_prev_xy_pixel_1           equ 83 ;
    378                  0053     rsv_prev_x_pixel_1            equ 83 ; pr>>
    379                  0054     rsv_prev_y_pixel_1            equ 84 ; pr>>
    380                  0055     rsv_prev_xy1_pixel_1          equ 85 ;
    381                  0055     rsv_prev_x1_pixel_1           equ 85 ; pr>>
    382                  0056     rsv_prev_y1_pixel_1           equ 86 ; pr>>
    383                  0057     rsv_prev_xy2_pixel_1          equ 87 ;
    384                  0057     rsv_prev_x2_pixel_1           equ 87 ; pr>>
    385                  0058     rsv_prev_y2_pixel_1           equ 88 ; pr>>
    386                  0059     rsv_prev_render_flags_1       equ 89 ;
    387
    388                  0000     buf_priority                  equ 0  ; of>>
    389                  0001     buf_priority_prev_obj         equ 1  ;
    390                  0003     buf_priority_next_obj         equ 3  ;
    391                           *buf_prev_image_subset         equ 5  ;
    392                  0007     buf_prev_mapping_frame        equ 7  ;
    393                  0009     buf_bgdata                    equ 9  ;
    394                  000B     buf_prev_xy_pixel             equ 11 ;
    395                  000B     buf_prev_x_pixel              equ 11 ;
    396                  000C     buf_prev_y_pixel              equ 12 ;
    397                  000D     buf_prev_xy1_pixel            equ 13 ;
    398                  000D     buf_prev_x1_pixel             equ 13 ;
    399                  000E     buf_prev_y1_pixel             equ 14 ;
    400                  000F     buf_prev_xy2_pixel            equ 15 ;
    401                  000F     buf_prev_x2_pixel             equ 15 ;
    402                  0010     buf_prev_y2_pixel             equ 16 ;
    403                  0011     buf_prev_render_flags         equ 17 ;
    404
    405                           * TODO Doit etre gere dynamiquement par l>>
    406                  0000     PalID_TitleScreenRaster       equ 0
    407
     10        6100                       org   $6100
     11
     12  8     6100 BD   9001             jsr   LoadAct
     13
     14                           * =======================================>>
     15                           * Main Loop
     16                           * =======================================>>
     17        6103               LevelMainLoop
     18  8     6103 BD   7527             jsr   WaitVBL
     19  8     6106 BD   8128             jsr   UpdatePalette
     20  8     6109 BD   7564             jsr   ReadJoypads
     21  8     610C BD   7585             jsr   RunObjects
     22  8     610F BD   7814             jsr   CheckSpritesRefresh
     23  8     6112 BD   7B54             jsr   EraseSprites
     24  8     6115 BD   7CCD             jsr   UnsetDisplayPriority
     25  8     6118 BD   7DAC             jsr   DrawSprites
     26  3     611B 20   E6               bra   LevelMainLoop
     27                            
     28                           * =======================================>>
     29                           * Global Data
     30                           *
     31                           * Naming convention
     32                           * -----------------
     33                           * - underscore-separated names
     34                           * - first letter of each word in upper ca>>
     35                           *
     36                           * Templates
     37                           * ---------
     38                           * - Glb_*        : global variable
     39                           * - Tbl_*        : data table
     40                           * - Lst_*        : list is a data table w>>
     41                           * - Obj_*        : address of an object i>>
     42                           *
     43                           * - *_Object_RAM : sub group of objects
     44                           * - *_end        : data end label
     45                           *
     46                           * =======================================>>
     47
     48                           * --------------------------------------->>
     49                           * Display
     50                           * --------------------------------------->>
     51                            
     52        611D 00            Glb_Cur_Wrk_Screen_Id         fcb   $00  >>
     53        611E 0000          Glb_Camera_X_Pos              fdb   $0000>>
     54        6120 0000          Glb_Camera_Y_Pos              fdb   $0000>>
     55        6122 0000          Glb_Sprite_Screen_Pos_Part1   fdb   $0000>>
     56        6124 0000          Glb_Sprite_Screen_Pos_Part2   fdb   $0000>>
     57
     58                           * --------------------------------------->>
     59                           * Background Backup Cells - BBC
     60                           * --------------------------------------->>
     61
     62                           * ----- Cell variables
     63                  0000     nb_cells                      equ   0
     64                  0001     cell_start                    equ   1
     65                  0003     cell_end                      equ   3
     66                  0005     next_entry                    equ   5
     67                  0007     entry_size                    equ   7
     68
     69                           * ----- Cells List
     70                  0082     nb_free_cells                 equ   130
     71                  0040     cell_size                     equ   64   >>
     72                  6000     cell_start_adr                equ   $6000>>
     73
     74        6126 6128          Lst_FreeCellFirstEntry_0      fdb   Lst_F>>
     75        6128 82            Lst_FreeCell_0                fcb   nb_fr>>
     76        6129 3F80                                        fdb   cell_>>
     77        612B 6000                                        fdb   cell_>>
     78        612D 0000                                        fdb   $0000>>
     79        612F                                             rmb   (entr>>
     80                            
     81        62F5 62F7          Lst_FreeCellFirstEntry_1      fdb   Lst_F>>
     82        62F7 82            Lst_FreeCell_1                fcb   nb_fr>>
     83        62F8 3F80                                        fdb   cell_>>
     84        62FA 6000                                        fdb   cell_>>
     85        62FC 0000                                        fdb   $0000>>
     86        62FE                                             rmb   (entr>>
     87                           * --------------------------------------->>
     88                           * Display Priority Structure - DPS
     89                           * --------------------------------------->>
     90
     91        64C4               DPS_buffer_0
     92        64C4               Tbl_Priority_First_Entry_0    rmb   2+(nb>>
     93        64D6               Tbl_Priority_Last_Entry_0     rmb   2+(nb>>
     94        64E8 64EA          Lst_Priority_Unset_0          fdb   Lst_P>>
     95        64EA                                             rmb   (nb_o>>
     96        653E               DPS_buffer_1
     97        653E               Tbl_Priority_First_Entry_1    rmb   2+(nb>>
     98        6550               Tbl_Priority_Last_Entry_1     rmb   2+(nb>>
     99        6562 6564          Lst_Priority_Unset_1          fdb   Lst_P>>
    100        6564                                             rmb   (nb_o>>
    101                            
    102                  0000     buf_Tbl_Priority_First_Entry  equ   0
    103                  0012     buf_Tbl_Priority_Last_Entry   equ   Tbl_P>>
    104                  0024     buf_Lst_Priority_Unset        equ   Lst_P>>
    105
    106                           * --------------------------------------->>
    107                           * Sub Priority Objects List - SOL
    108                           * --------------------------------------->>
    109
    110        65B8               Tbl_Sub_Object_Erase          rmb   nb_ob>>
    111        660C               Tbl_Sub_Object_Draw           rmb   nb_ob>>
    112
    113                           * --------------------------------------->>
    114                           * Object Status Table - OST
    115                           * --------------------------------------->>
    116                            
    117        6660               Object_RAM *@globals
    118        6660               Reserved_Object_RAM
    119        6660 0403          Obj_MainCharacter             fdb   $0403>>
    120        6662                                             rmb   objec>>
    121        66BA               Obj_Sidekick                  rmb   objec>>
    122        6714               Reserved_Object_RAM_End
    123
    124        6714               Dynamic_Object_RAM            rmb   nb_dy>>
    125        7416               Dynamic_Object_RAM_End
    126
    127        7416               LevelOnly_Object_RAM                     >>
    128        7416               Obj_TailsTails                rmb   objec>>
    129        7470               Obj_SonicDust                 rmb   objec>>
    130        74CA               Obj_TailsDust                 rmb   objec>>
    131        7524               LevelOnly_Object_RAM_End
    132        7524 7524          Object_RAM_End                fdb *
    133
    134                           * --------------------------------------->>
    135                           * Lifecycle
    136                           * --------------------------------------->>
    137
    138        7526               Glb_MainCharacter_Is_Dead     rmb   $1,0
    139
    140                           * =======================================>>
    141                           * Routines
    142                           * =======================================>>
    143                                   * a rendre dynamique a partir des>>
    408                                   INCLUD WAITVBL
    409                           *****************************************>>
    410                           * Attente VBL
    411                           * Alternance de la page 2 et 3 entre affi>>
    412                           * Alternance de la RAMA et RAM B dans l'e>>
    413                           * --------------------------------------->>
    414                           *
    415                           * Page Affichee par l'automate Video
    416                           * ----------------------------------
    417                           *   $E7DD determine la page affichee a l'>>
    418                           *   bit7=0 bit6=0 bit5=0 bit4=0 (#$0_) : >>
    419                           *   bit7=0 bit6=1 bit5=0 bit4=0 (#$4_) : >>
    420                           *   bit7=1 bit6=0 bit5=0 bit4=0 (#$8_) : >>
    421                           *   bit7=1 bit6=1 bit5=0 bit4=0 (#$C_) : >>
    422                           *   bit3 bit2 bit1 bit0  (#$_0 a #$_F) : >>
    423                           *   Remarque : bit5 et bit4 utilisable un>>
    424                           *
    425                           * Page en espace cartouche (ecriture dans>>
    426                           * --------------------------------------->>
    427                           *   $E7E6 determine la page visible dans >>
    428                           *   bit7 toujours a 0
    429                           *   bit6=1 : ecriture autorisee
    430                           *   bit5=1 : espace cartouche recouvert p>>
    431                           *   bit4=0 : CAS1N valide : banques 0-15 >>
    432                           *   bit5=1 bit4=0 bit3=0 bit2=0 bit1=0 bi>>
    433                           *   ...
    434                           *   bit5=1 bit4=0 bit3=1 bit2=1 bit1=1 bi>>
    435                           *   bit5=1 bit4=1 bit3=0 bit2=0 bit1=0 bi>>
    436                           *   ...
    437                           *   bit5=1 bit4=1 bit3=1 bit2=1 bit1=1 bi>>
    438                           *
    439                           * Demi-Page 0 en espace ecran (4000 a 5FF>>
    440                           * --------------------------------------->>
    441                           *   $E7C3 determine la demi-page de la pa>>
    442                           *   bit0=0 : 8Ko RAMA
    443                           *   bit0=1 : 8ko RAMB
    444                           *
    445                           *****************************************>>
    446        7527               WaitVBL
    447  7     7527 7D   E7E7             tst   $E7E7              * le fai>>
    448  3     752A 2A   FB               bpl   WaitVBL            * tant q>>
    449        752C               WaitVBL_01
    450  7     752C 7D   E7E7             tst   $E7E7              * le fai>>
    451  3     752F 2B   FB               bmi   WaitVBL_01         * tant q>>
    452                            
    453        7531               SwapVideoPage
    454  5     7531 F6   753F             ldb   am_SwapVideoPage+1 * charge>>
    455  2     7534 C4   40               andb  #$40               * altern>>
    456        7536               screen_border_color *@globals
    457  2     7536 CA   80               orb   #$80               * bit7=1>>
    458  5     7538 F7   E7DD             stb   $E7DD              * change>>
    459  7     753B 73   753F             com   am_SwapVideoPage+1 * altern>>
    460        753E               am_SwapVideoPage
    461  2     753E C6   00               ldb   #$00
    462  2     7540 C4   01               andb  #$01               * altern>>
    463  5     7542 F7   611D             stb   Glb_Cur_Wrk_Screen_Id
    464  2     7545 CA   62               orb   #$62               * bit6=1>>
    465  5     7547 F7   E7E6             stb   $E7E6              * change>>
    466  5     754A F6   E7C3             ldb   $E7C3              * charge>>
    467  2     754D C8   01               eorb  #$01               * altern>>
    468  5     754F F7   E7C3             stb   $E7C3
    469                            
    470  6     7552 FC   755C             ldd   Vint_runcount
    471  4     7555 C3   0001             addd  #1
    472  6     7558 FD   755C             std   Vint_runcount
    473  5     755B 39                    rts
    474                            
    475        755C               Vint_runcount rmb   $2,0 *@globals
    476
    477                                   INCLUD READJPDS
    478                           * --------------------------------------->>
    479                           * Controller Buttons
    480                           *
    481                  0001     c1_button_up_mask            equ   $01 *@>>
    482                  0002     c1_button_down_mask          equ   $02 *@>>
    483                  0004     c1_button_left_mask          equ   $04 *@>>
    484                  0008     c1_button_right_mask         equ   $08 *@>>
    485                  0010     c2_button_up_mask            equ   $10 *@>>
    486                  0020     c2_button_down_mask          equ   $20 *@>>
    487                  0040     c2_button_left_mask          equ   $40 *@>>
    488                  0080     c2_button_right_mask         equ   $80 *@>>
    489                  0040     c1_button_A_mask             equ   $40 *@>>
    490                  0080     c2_button_A_mask             equ   $80 *@>>
    491
    492        755E               Joypads_Read
    493        755E 00            Dpad_Read                    fcb   $00
    494        755F 00            Fire_Read                    fcb   $00
    495                            
    496        7560               Joypads
    497        7560               Joypads_Held                           *@>>
    498        7560 00            Dpad_Held                    fcb   $00 *@>>
    499        7561 00            Fire_Held                    fcb   $00 *@>>
    500        7562               Joypads_Press                          *@>>
    501        7562 00            Dpad_Press                   fcb   $00 *@>>
    502        7563 00            Fire_Press                   fcb   $00 *@>>
    503
    504                           *****************************************>>
    505                           * Get joystick parameters
    506                           *
    507                           * Direction des Joypads
    508                           * ---------------------
    509                           * Registre: $E7CC (8bits)
    510                           *
    511                           * Joypad2     Joypad1
    512                           * 1111        1111 (0: appuye | 1: relach>>
    513                           * ||||_Haut   ||||_Haut
    514                           * |||__Bas    |||__Bas
    515                           * ||___Gauche ||___Gauche
    516                           * |____Droite |____Droite
    517                           *
    518                           * Boutons des Joypads
    519                           * -------------------
    520                           * Registre: $E7CD (8bits)
    521                           *
    522                           * 11 000000 (0: appuye | 1: relache)
    523                           * ||[------] 6 bits convertisseur numeriq>>
    524                           * ||_Fire Joypad1
    525                           * |__Fire Joypad2
    526                           *
    527                           * Variables globales: Joypads_Held, Joypa>>
    528                           * --------------------------------------->>
    529                           * (16 bits)
    530                           * Joypad2     Joypad1
    531                           * 0000        0000 (0: relache | 1: appuy>>
    532                           * ||||_Haut   ||||_Haut                  >>
    533                           * |||__Bas    |||__Bas                   >>
    534                           * ||___Gauche ||___Gauche                >>
    535                           * |____Droite |____Droite
    536                           *
    537                           *****************************************>>
    538                            
    539                                                                  *;>>
    540                                                                  *;>>
    541                                                                  *;>>
    542                                                                  *;>>
    543                                                                  *
    544                                                                  *;>>
    545        7564               ReadJoypads                            *R>>
    546                                                                  * >>
    547                                                                  * >>
    548                                                                  * >>
    549                                                                  * >>
    550                                                                  *
    551                                                                  *;>>
    552                                                                  *J>>
    553                                                                  * >>
    554                                                                  * >>
    555                                                                  * >>
    556                                                                  * >>
    557                                                                  * >>
    558                                                                  * >>
    559                                                                  * >>
    560                                                                  * >>
    561                                                                  * >>
    562                                                                  * >>
    563                                                                  * >>
    564                                                                  * >>
    565  6     7564 FC   E7CC             ldd   $E7CC
    566  2     7567 43                    coma
    567  2     7568 53                    comb                           * >>
    568  6     7569 FD   755E             std   Joypads_Read
    569  6     756C FC   7560             ldd   Joypads_Held             * >>
    570  5     756F B8   755E             eora  Dpad_Read                * >>
    571  5     7572 F8   755F             eorb  Fire_Read
    572                                                                  * >>
    573  5     7575 B4   755E             anda  Dpad_Read                * >>
    574  5     7578 F4   755F             andb  Fire_Read
    575  6     757B FD   7562             std   Joypads_Press            * >>
    576  6     757E FC   755E             ldd   Joypads_Read
    577  6     7581 FD   7560             std   Joypads_Held
    578  5     7584 39                    rts                            * >>
    579                                                                  *;>>
    580
    581
    582                                   INCLUD RUNOBJTS
    583                           * --------------------------------------->>
    584                           * RunObjects
    585                           * ------------
    586                           * Subroutine to run objects code
    587                           *
    588                           * input REG : none
    589                           * --------------------------------------->>
    590                                                                    >>
    591                                                                    >>
    592                                                                    >>
    593                                                                    >>
    594                                                                    >>
    595                                                                    >>
    596                                                                    >>
    597        7585               RunObjects                               >>
    598                                                                    >>
    599                                                                    >>
    600  3     7585 CE   6660             ldu   #Object_RAM                >>
    601                                                                    >>
    602                                                                    >>
    603                                                                    >>
    604                                                                    >>
    605                                                                    >>
    606                                                                    >>
    607                                                                    >>
    608        7588               RunObjects_01                            >>
    609                                                                    >>
    610                                                                    >>
    611                                                                    >>
    612                                                                    >>
    613  7     7588 7D   7526             tst   Glb_MainCharacter_Is_Dead  >>
    614  3     758B 26   23               bne   RunObjectsWhenPlayerIsDead >>
    615                                                                    >>
    616                                                                    >>
    617                                                                    >>
    618                                                                    >>
    619                                                                    >>
    620                                                                    >>
    621                                                                    >>
    622                                                                    >>
    623                                                                    >>
    624                                                                    >>
    625        758D               RunObject                                >>
    626  2     758D 86   00               lda   #$00
    627  4+0   758F E6   C4               ldb   ,u                         >>
    628  3     7591 27   13               beq   RunNextObject              >>
    629
    630  4     7593 108E 8CF0             ldy   #Obj_Index_Page
    631  4+4   7597 A6   AB               lda   d,y                        >>
    632  5     7599 B7   E7E5             sta   $E7E5                      >>
    633  2     759C 86   00               lda   #$00
    634  2     759E 58                    aslb                             >>
    635  2     759F 49                    rola                             >>
    636  4     75A0 108E 8DF0             ldy   #Obj_Index_Address         >>
    637  7+7   75A4 AD   BB               jsr   [d,y]                      >>
    638                                                                    >>
    639                                                                    >>
    640                                                                    >>
    641        75A6               RunNextObject                            >>
    642  4+1   75A6 33   C8 5A            leau  next_object,u              >>
    643        75A9               am_RunNextObject
    644  5     75A9 1183 7524             cmpu  #Object_RAM_End            >>
    645  3     75AD 26   DE               bne   RunObject                  >>
    646        75AF               RunObjects_End                           >>
    647  5     75AF 39                    rts                              >>
    648                                                                    >>
    649                                                                    >>
    650                                                                    >>
    651                                                                    >>
    652        75B0               RunObjectsWhenPlayerIsDead               >>
    653  3     75B0 CE   6660             ldu   #Reserved_Object_RAM
    654  3     75B3 8E   6714             ldx   #Reserved_Object_RAM_End
    655  6     75B6 BF   75AB             stx   am_RunNextObject+2         >>
    656  7     75B9 8D   D2               bsr   RunObject                  >>
    657                                                                    >>
    658                                                                    >>
    659  3     75BB CE   7416             ldu   #LevelOnly_Object_RAM
    660  3     75BE 8E   7524             ldx   #LevelOnly_Object_RAM_End
    661  6     75C1 BF   75AB             stx   am_RunNextObject+2         >>
    662  7     75C4 8D   C7               bsr   RunObject                  >>
    663                                                                    >>
    664  3     75C6 8E   7524             ldx   #Object_RAM_End            >>
    665  6     75C9 BF   75AB             stx   am_RunNextObject+2
    666  5     75CC 39                    rts
    667                                                                    >>
    668                                                                    >>
    669                                                                    >>
    670                                                                    >>
    671                                                                    >>
    672                                                                    >>
    673                                                                    >>
    674                                                                    >>
    675                                                                    >>
    676                                                                    >>
    677                                                                    >>
    678                                                                    >>
    679                                                                    >>
    680                            
    681                                                                    >>
    682                                                                    >>
    683                                                                    >>
    684                                                                    >>
    685
    686                                   INCLUD MRKOBJGN
    687                           * --------------------------------------->>
    688                           * MarkObjGone
    689                           * -----------
    690                           * Subroutine to destroy an object that is>>
    691                           * -- TODO --
    692                           * waiting for camera implementation
    693                           *
    694                           * input REG : none
    695                           * clear REG : none
    696                           * --------------------------------------->>
    697
    698                                                                  *;>>
    699                                                                  *;>>
    700                                                                  *;>>
    701                                                                  *
    702                                                                  *;>>
    703                                                                  *;>>
    704                                                                  *;>>
    705        75CD               MarkObjGone *@globals                  *M>>
    706                                                                  * >>
    707                                                                  * >>
    708  3     75CD 20   06               bra   DisplaySprite            * >>
    709                                                                  *+>>
    710                                                                  * >>
    711                                                                  * >>
    712                                                                  * >>
    713                                                                  * >>
    714                                                                  * >>
    715                                                                  * >>
    716                                                                  *
    717                                                                  *+>>
    718                                                                  * >>
    719                                                                  * >>
    720                                                                  * >>
    721                                                                  * >>
    722                                                                  *+>>
    723                                                                  * >>
    724
    725                                   INCLUD DISPLSPR
    726                           * --------------------------------------->>
    727                           * DisplaySprite
    728                           * -------------
    729                           * Subroutine to manage sprite priority.
    730                           * Object's priority is read and object is>>
    731                           * priority: 0 - unregistred
    732                           * priority: 1 - register non moving overl>>
    733                           * priority; 2-8 - register moving sprite >>
    734                           *
    735                           * Unlike original S2 code, sprite priorit>>
    736                           * it allows to keep an exact sprite order>>
    737                           *
    738                           * DisplaySprite
    739                           * input REG : [u] object pointer (OST)
    740                           *
    741                           * DisplaySprite_x
    742                           * input REG : [x] object pointer (OST)
    743                           * --------------------------------------->>
    744                            
    745        75CF               DisplaySprite_x *@globals
    746  5+6   75CF 34   56               pshs  d,x,u
    747  6     75D1 1F   13               tfr   x,u
    748  3     75D3 20   02               bra   DSP_Start
    749                            
    750        75D5               DisplaySprite *@globals
    751  5+6   75D5 34   56               pshs  d,x,u
    752                            
    753        75D7               DSP_Start
    754  4+1   75D7 A6   42               lda   render_flags,u
    755  2     75D9 84   DF               anda  #:render_hide_mask         >>
    756  4+1   75DB A7   42               sta   render_flags,u
    757
    758  5     75DD B6   611D             lda   Glb_Cur_Wrk_Screen_Id      >>
    759  3     75E0 26   09               bne   DSP_SetBuffer1
    760                            
    761        75E2               DSP_SetBuffer0
    762  4+1   75E2 30   C8 36            leax  rsv_buffer_0,u             >>
    763  4     75E5 108E 64C4             ldy   #DPS_buffer_0              >>
    764  3     75E9 20   07               bra   DSP_BufferPositionned
    765                            
    766        75EB               DSP_SetBuffer1
    767  4+1   75EB 30   C8 48            leax  rsv_buffer_1,u             >>
    768  4     75EE 108E 653E             ldy   #DPS_buffer_1              >>
    769                            
    770        75F2               DSP_BufferPositionned
    771  4+1   75F2 A6   43               lda   priority,u                 >>
    772  4+1   75F4 A1   00               cmpa  buf_priority,x
    773  3     75F6 27   1C               beq   DSP_rts                    >>
    774  4+1   75F8 E6   00               ldb   buf_priority,x
    775  3     75FA 26   3F               bne   DSP_ChangePriority
    776                            
    777        75FC               DSP_InitPriority
    778  4+1   75FC A7   00               sta   buf_priority,x             >>
    779  2     75FE 48                    asla                             >>
    780                            
    781        75FF               DSP_CheckLastEntry
    782  4+1   75FF 31   A8 12            leay  buf_Tbl_Priority_Last_Entry>>
    783  6+1   7602 6D   A6               tst   a,y                        >>
    784  3     7604 26   10               bne   DSP_addToExistingNode      >>
    785                            
    786        7606               DSP_addFirstNode
    787  5+1   7606 EF   A6               stu   a,y                        >>
    788  4+1   7608 31   A8 EE            leay  buf_Tbl_Priority_First_Entr>>
    789  5+1   760B EF   A6               stu   a,y                        >>
    790  3     760D CC   0000             ldd   #0
    791  5+1   7610 ED   01               std   buf_priority_prev_obj,x    >>
    792  5+1   7612 ED   03               std   buf_priority_next_obj,x
    793                            
    794        7614               DSP_rts
    795  5+8   7614 35   D6               puls  d,x,u,pc                   >>
    796                            
    797        7616               DSP_addToExistingNode
    798  5+1   7616 AE   A6               ldx   a,y                        >>
    799  5     7618 F6   611D             ldb   Glb_Cur_Wrk_Screen_Id
    800  3     761B 26   0E               bne   DSP_LinkBuffer1
    801  5+1   761D EF   88 39            stu   rsv_priority_next_obj_0,x  >>
    802  5+1   7620 AF   C8 37            stx   rsv_priority_prev_obj_0,u  >>
    803  6+1   7623 6F   C8 39            clr   rsv_priority_next_obj_0,u  >>
    804  6+1   7626 6F   C8 3A            clr   rsv_priority_next_obj_0+1,u>>
    805  3     7629 20   0C               bra   DSP_LinkCurWithPrev
    806        762B               DSP_LinkBuffer1
    807  5+1   762B EF   88 4B            stu   rsv_priority_next_obj_1,x  >>
    808  5+1   762E AF   C8 49            stx   rsv_priority_prev_obj_1,u  >>
    809  6+1   7631 6F   C8 4B            clr   rsv_priority_next_obj_1,u  >>
    810  6+1   7634 6F   C8 4C            clr   rsv_priority_next_obj_1+1,u>>
    811                            
    812        7637               DSP_LinkCurWithPrev
    813  5+1   7637 EF   A6               stu   a,y                        >>
    814  5+8   7639 35   D6               puls  d,x,u,pc                   >>
    815                            
    816        763B               DSP_ChangePriority
    817  4+1   763B 31   A8 24            leay  buf_Lst_Priority_Unset,y
    818  5+3   763E EF   B4               stu   [,y]                       >>
    819  4+1   7640 31   22               leay  2,y
    820  6+0   7642 10AF A4               sty   ,y                         >>
    821  4+1   7645 31   A8 DA            leay  -buf_Lst_Priority_Unset-2,y>>
    822  2     7648 81   00               cmpa  #0
    823  3     764A 26   B3               bne   DSP_CheckLastEntry         >>
    824  5+8   764C 35   D6               puls  d,x,u,pc                   >>
    825
    826                            
    827                                                                  *;>>
    828                                                                  *;>>
    829                                                                  *;>>
    830                                                                  *
    831                                                                  *;>>
    832                                                                  *
    833                                                                  *;>>
    834                                                                  *D>>
    835                                                                  * >>
    836                                                                  * >>
    837                                                                  * >>
    838                                                                  * >>
    839                                                                  * >>
    840                            
    841                                                                  * >>
    842                                                                  * >>
    843                                                                  * >>
    844                            
    845                                                                  * >>
    846                                                                  * >>
    847                                                                  *
    848                                                                  *r>>
    849                            
    850                                                                  * >>
    851                                                                  *;>>
    852
    853                                   INCLUD ANIMSPR
    854                           * --------------------------------------->>
    855                           * Subroutine to animate a sprite using an>>
    856                           *
    857                           *   this function also change render flag>>
    858                           *   the status byte;
    859                           *
    860                           * input REG : [u] pointeur sur l'objet
    861                           *
    862                           * --------------------------------------->>
    863
    864                  00FF     resetAnim              equ $FF
    865                  00FE     goBackNFrames          equ $FE ; followed>>
    866                  00FD     goToAnimation          equ $FD ; followed>>
    867                  00FC     nextRoutine            equ $FC
    868                  00FB     resetAnimAndSubRoutine equ $FB
    869                  00FA     nextSubRoutine         equ $FA
    870
    871                                                                    >>
    872                                                                    >>
    873                                                                    >>
    874                                                                    >>
    875                                                                    >>
    876                                                                    >>
    877                                                                    >>
    878        764E               AnimateSprite * @globals                 >>
    879                                                                    >>
    880  5+1   764E AE   44               ldx   anim,u                     >>
    881  6+1   7650 AC   46               cmpx  prev_anim,u                >>
    882  3     7652 27   08               beq   Anim_Run                   >>
    883  5+1   7654 AF   46               stx   prev_anim,u                >>
    884  2     7656 C6   00                     ldb   #0
    885  4+1   7658 E7   48               stb   anim_frame,u               >>
    886  4+1   765A E7   49               stb   anim_frame_duration,u      >>
    887                                                                    >>
    888        765C               Anim_Run                                 >>
    889  6+1   765C 6A   49               dec   anim_frame_duration,u      >>
    890  3     765E 2A   23               bpl   Anim_Wait                  >>
    891                                   * no offset table                >>
    892                                   * anim is the address of anim    >>
    893  4+1   7660 E6   1F               ldb   -1,x
    894  4+1   7662 E7   49                     stb   anim_frame_duration,u>>
    895                                                                    >>
    896  4+1   7664 E6   48               ldb   anim_frame,u               >>
    897  2     7666 58                    aslb
    898  4+1   7667 31   85               leay  b,x
    899  5+0   7669 EC   A4               ldd   ,y                         >>
    900                                   * bmi   Anim_End_FF              >>
    901  2     766B 81   FA                     cmpa  #$FA                 >>
    902  3     766D 24   15                     bhs   Anim_End_FF          >>
    903                                                                    >>
    904        766F               Anim_Next                                >>
    905                                      * ne pas utiliser             >>
    906  5+1   766F ED   4A               std   image_set,u                >>
    907  4+1   7671 E6   C8 1A            ldb   status,u                   >>
    908  2     7674 C4   03               andb  #status_x_orientation+statu>>
    909  5     7676 F7   767E             stb   Anim_dyn+1
    910                                                                    >>
    911  4+1   7679 A6   42               lda   render_flags,u             >>
    912  2     767B 84   FC               anda  #:(render_xmirror_mask+rend>>
    913        767D               Anim_dyn
    914  2     767D 8A   00               ora   #$00                       >>
    915                                                                    >>
    916  4+1   767F A7   42               sta   render_flags,u
    917  6+1   7681 6C   48               inc   anim_frame,u               >>
    918                                                                    >>
    919        7683               Anim_Wait                                >>
    920  5     7683 39                    rts                              >>
    921                                                                    >>
    922                                                                    >>
    923        7684               Anim_End_FF                              >>
    924  2     7684 4C                    inca                             >>
    925  3     7685 26   08               bne   Anim_End_FE                >>
    926  2     7687 C6   00                     ldb   #0
    927  4+1   7689 E7   48               stb   anim_frame,u               >>
    928  5+0   768B EC   84               ldd   ,x                         >>
    929  3     768D 20   E0               bra   Anim_Next                  >>
    930                                                                    >>
    931                                                                    >>
    932        768F               Anim_End_FE                              >>
    933  2     768F 4C                    inca                             >>
    934  3     7690 26   0E               bne   Anim_End_FD                >>
    935  4+1   7692 A6   48               lda   anim_frame,u
    936  5     7694 F7   7698             stb   Anim_End_FE_dyn+1          >>
    937        7697               Anim_End_FE_dyn
    938  2     7697 80   00               suba  #$00                       >>
    939  4+1   7699 A7   48               sta   anim_frame,u               >>
    940                                                                    >>
    941  2     769B 48                    asla
    942  5+1   769C EC   86               ldd   a,x                        >>
    943  3     769E 20   CF               bra   Anim_Next                  >>
    944                                                                    >>
    945                                                                    >>
    946        76A0               Anim_End_FD                              >>
    947  2     76A0 4C                    inca                             >>
    948  3     76A1 26   05               bne   Anim_End_FC                >>
    949  5+1   76A3 EC   21               ldd   1,y                        >>
    950  5+1   76A5 ED   44               std   anim,u                     >>
    951  5     76A7 39                    rts                              >>
    952                                                                    >>
    953                                                                    >>
    954        76A8               Anim_End_FC                              >>
    955  2     76A8 4C                    inca                             >>
    956  3     76A9 26   0F               bne   Anim_End_FB                >>
    957  4+1   76AB E6   C8 18            ldb   routine,u
    958  2     76AE CB   03               addb  #$03
    959  4+1   76B0 E7   C8 18            stb   routine,u                  >>
    960  2     76B3 86   00               lda   #0
    961  4+1   76B5 A7   49               sta   anim_frame_duration,u      >>
    962  6+1   76B7 6C   48               inc   anim_frame,u               >>
    963  5     76B9 39                    rts                              >>
    964                                                                    >>
    965                                                                    >>
    966        76BA               Anim_End_FB                              >>
    967  2     76BA 4C                    inca                             >>
    968  3     76BB 26   08               bne   Anim_End_FA                >>
    969  2     76BD 86   00               lda   #0
    970  4+1   76BF A7   48               sta   anim_frame,u               >>
    971  4+1   76C1 A7   C8 19            sta   routine_secondary,u        >>
    972  5     76C4 39                    rts                              >>
    973                                                                    >>
    974                                                                    >>
    975        76C5               Anim_End_FA                              >>
    976  2     76C5 4C                    inca                             >>
    977  3     76C6 26   08               bne   Anim_End                   >>
    978  4+1   76C8 E6   C8 19            ldb   routine_secondary,u        >>
    979  2     76CB CB   03               addb  #$03
    980  4+1   76CD E7   C8 19            stb   routine_secondary,u
    981        76D0               Anim_End
    982  5     76D0 39                    rts                              >>
    983                                                                    >>
    984                                                                    >>
    985                                                                    >>
    986                                                                    >>
    987                                                                    >>
    988                                                                    >>
    989                                                                    >>
    990                                                                    >>
    991                                                                    >>
    992                                                                    >>
    993
    994                                   INCLUD OBJMOVE
    995                           * --------------------------------------->>
    996                           * Subroutine translating object speed to >>
    997                           * This moves the object horizontally and >>
    998                           * but does not apply gravity to it
    999                           * --------------------------------------->>
   1000
   1001                                                                  *;>>
   1002                                                                  *;>>
   1003                                                                  *;>>
   1004                                                                  *;>>
   1005                                                                  *;>>
   1006                                                                  *
   1007                                                                  *;>>
   1008                                                                  *
   1009                                                                  *;>>
   1010        76D1               ObjectMove                             *O>>
   1011                                                                  * >>
   1012                                                                  * >>
   1013                                                                  * >>
   1014                                                                  * >>
   1015                                                                  * >>
   1016                                                                  * >>
   1017  4+1   76D1 E6   C8 14            ldb   x_vel,u
   1018  2     76D4 1D                    sex                            ; >>
   1019  5     76D5 B7   76E2             sta   am_ObjectMove_01+1
   1020  5+1   76D8 EC   C8 14            ldd   x_vel,u
   1021  6+1   76DB E3   4D               addd  x_pos+1,u                ; >>
   1022  5+1   76DD ED   4D               std   x_pos+1,u                ; >>
   1023  4+1   76DF A6   4C               lda   x_pos,u
   1024        76E1               am_ObjectMove_01
   1025  2     76E1 89   00               adca  #$00                     ; >>
   1026  4+1   76E3 A7   4C               sta   x_pos,u                  ; >>
   1027                            
   1028                                                                  * >>
   1029                                                                  * >>
   1030                                                                  * >>
   1031                                                                  * >>
   1032                                                                  * >>
   1033                                                                  * >>
   1034  4+1   76E5 E6   C8 16            ldb   y_vel,u
   1035  2     76E8 1D                    sex                            ; >>
   1036  5     76E9 B7   76F8             sta   am_ObjectMove_02+1
   1037  5+1   76EC EC   C8 16            ldd   y_vel,u
   1038  6+1   76EF E3   C8 10            addd  y_pos+1,u                ; >>
   1039  5+1   76F2 ED   C8 10            std   y_pos+1,u                ; >>
   1040  4+1   76F5 A6   4F               lda   y_pos,u
   1041        76F7               am_ObjectMove_02
   1042  2     76F7 89   00               adca  #$00                     ; >>
   1043  4+1   76F9 A7   4F               sta   y_pos,u                  ; >>
   1044  5     76FB 39                    rts                            * >>
   1045                                                                  *;>>
   1046                                                                  *;>>
   1047
   1048                                   INCLUD OBJLOAD
   1049                           * --------------------------------------->>
   1050                           * Single object loading subroutine
   1051                           * Find an empty object array
   1052                           *
   1053                           * input  REG : [u] pointeur sur l'objet c>>
   1054                           * output REG : [x] pointeur sur l'objet l>>
   1055                           * --------------------------------------->>
   1056
   1057                                                                  *;>>
   1058                                                                  *;>>
   1059                                                                  *;>>
   1060                                                                  *;>>
   1061                                                                  *;>>
   1062                                                                  *
   1063                                                                  *;>>
   1064                                                                  *S>>
   1065                                                                  * >>
   1066                                                                  * >>
   1067                                                                  * >>
   1068                                                                  * >>
   1069                                                                  * >>
   1070                                                                  *
   1071                                                                  */>>
   1072                                                                  * >>
   1073                                                                  * >>
   1074                                                                  * >>
   1075                                                                  * >>
   1076                                                                  *
   1077                                                                  *r>>
   1078                                                                  * >>
   1079                                                                  *;>>
   1080                                                                  *;>>
   1081                                                                  *;>>
   1082                                                                  *;>>
   1083                                                                  *;>>
   1084                                                                  *
   1085                                                                  *;>>
   1086                                                                  *
   1087                                                                  *;>>
   1088        76FC               SingleObjLoad2                         *S>>
   1089  6     76FC 1F   31               tfr   u,x                      * >>
   1090  4+1   76FE 30   88 5A            leax  next_object,x            * >>
   1091  4     7701 8C   7416             cmpx  #Dynamic_Object_RAM_End  * >>
   1092  3     7704 27   0C               beq   SingleObjLoad2_02        * >>
   1093                                                                  * >>
   1094                                                                  * >>
   1095                                                                  * >>
   1096                                                                  * >>
   1097                                                                  * >>
   1098                                                                  * >>
   1099                                                                  * >>
   1100                                                                  * >>
   1101                                                                  *
   1102        7706               SingleObjLoad2_01                      *->>
   1103  6+0   7706 6D   84               tst   ,x                       * >>
   1104  3     7708 27   08               beq   SingleObjLoad2_02        * >>
   1105  4+1   770A 30   88 5A            leax  next_object,x            * >>
   1106  4     770D 8C   7416             cmpx  #Dynamic_Object_RAM_End
   1107  3     7710 26   F4               bne   SingleObjLoad2_01        * >>
   1108                                                                  *
   1109        7712               SingleObjLoad2_02                      *r>>
   1110  5     7712 39                    rts                            * >>
   1111                                                                  *
   1112                                                                  * >>
   1113                                                                  *+>>
   1114                                                                  *.>>
   1115                                                                  *.>>
   1116                                                                  *
   1117                                                                  * >>
   1118                                                                  * >>
   1119                                                                  * >>
   1120                                                                  * >>
   1121                                                                  * >>
   1122                                                                  * >>
   1123                                                                  *
   1124                                                                  *.>>
   1125                                                                  *.>>
   1126                                                                  * >>
   1127                                                                  * >>
   1128                                                                  * >>
   1129                                                                  *;>>
   1130                                                                  *;>>
   1131                                                                  *;>>
   1132                                                                  *;>>
   1133                                                                  *;>>
   1134                                                                  *
   1135                                                                  *;>>
   1136                                                                  *
   1137                                                                  *;>>
   1138                                                                  *S>>
   1139                                                                  * >>
   1140                                                                  * >>
   1141                                                                  *
   1142                                                                  *->>
   1143                                                                  * >>
   1144                                                                  * >>
   1145                                                                  * >>
   1146                                                                  * >>
   1147                                                                  *
   1148                                                                  *r>>
   1149                                                                  * >>
   1150                                                                  *;>>
   1151
   1152
   1153                                   INCLUD DELETOBJ
   1154                           * --------------------------------------->>
   1155                           * DeleteObject
   1156                           * ------------
   1157                           * Subroutine to delete an object.
   1158                           * If the object is rendered as a sprite i>>
   1159                           * routine
   1160                           *
   1161                           * DeleteObject
   1162                           * input REG : [u] object pointer (OST)
   1163                           *
   1164                           * DeleteObject_x
   1165                           * input REG : [x] object pointer (OST)
   1166                           * --------------------------------------->>
   1167
   1168                                                                  *;>>
   1169                                                                  *;>>
   1170                                                                  *;>>
   1171                                                                  *
   1172                                                                  *;>>
   1173                                                                  *
   1174                                                                  *;>>
   1175        7713               DeleteObject_x *@globals               *D>>
   1176  5+6   7713 34   56               pshs  d,x,u                    * >>
   1177  4+0   7715 33   84               leau  ,x                       *;>>
   1178  3     7717 20   02               bra   DOB_Start
   1179                            
   1180        7719               DeleteObject *@globals                 *D>>
   1181  5+6   7719 34   56               pshs  d,x,u
   1182                            
   1183        771B               DOB_Start
   1184  4+1   771B A6   C8 47            lda   rsv_prev_render_flags_0,u
   1185  3     771E 2A   27               bpl   DOB_RemoveFromDPSB0        >>
   1186
   1187        7720               DOB_ToDeleteFlag0
   1188  4+1   7720 A6   42               lda   render_flags,u
   1189  2     7722 8A   40               ora   #render_todelete_mask
   1190  4+1   7724 A7   42               sta   render_flags,u             >>
   1191                            
   1192        7726               DOB_Unset0
   1193  6     7726 BE   64E8             ldx   Lst_Priority_Unset_0       >>
   1194  5+0   7729 EF   84               stu   ,x
   1195  4+1   772B 30   02               leax  2,x
   1196  6     772D BF   64E8             stx   Lst_Priority_Unset_0
   1197                            
   1198        7730               DOB_TestOnscreen1
   1199  4+1   7730 A6   C8 59            lda   rsv_prev_render_flags_1,u
   1200  3     7733 2A   54               bpl   DOB_RemoveFromDPSB1        >>
   1201                            
   1202        7735               DOB_ToDeleteFlag1
   1203  4+1   7735 A6   42               lda   render_flags,u
   1204  2     7737 8A   40               ora   #render_todelete_mask
   1205  4+1   7739 A7   42               sta   render_flags,u             >>
   1206                            
   1207        773B               DOB_Unset1
   1208  6     773B BE   6562             ldx   Lst_Priority_Unset_1       >>
   1209  5+0   773E EF   84               stu   ,x
   1210  4+1   7740 30   02               leax  2,x
   1211  6     7742 BF   6562             stx   Lst_Priority_Unset_1
   1212  5+8   7745 35   D6               puls  d,x,u,pc                   >>
   1213
   1214        7747               DOB_RemoveFromDPSB0
   1215  5+1   7747 EC   C8 37            ldd   rsv_priority_prev_obj_0,u  >>
   1216  3     774A 26   11               bne   DOB_ChainPrevB0
   1217                            
   1218  4+1   774C A6   C8 36            lda   rsv_priority_0,u
   1219  2     774F 48                    lsla
   1220  4     7750 108E 64C4             ldy   #Tbl_Priority_First_Entry_0>>
   1221  4+1   7754 31   A6               leay  a,y
   1222  5+1   7756 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1223  5+0   7759 ED   A4               std   ,y
   1224  3     775B 20   0A               bra   DOB_CheckPrioNextB0
   1225                            
   1226        775D               DOB_ChainPrevB0
   1227  5+1   775D EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1228  6+1   7760 10AE C8 37            ldy   rsv_priority_prev_obj_0,u
   1229  5+1   7764 ED   A8 39            std   rsv_priority_next_obj_0,y
   1230
   1231        7767               DOB_CheckPrioNextB0
   1232  5+1   7767 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1233  3     776A 26   11               bne   DOB_ChainNextB0
   1234
   1235  4+1   776C A6   C8 36            lda   rsv_priority_0,u
   1236  2     776F 48                    lsla
   1237  4     7770 108E 64D6             ldy   #Tbl_Priority_Last_Entry_0
   1238  4+1   7774 31   A6               leay  a,y
   1239  5+1   7776 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   1240  5+0   7779 ED   A4               std   ,y
   1241  3     777B 20   B3               bra   DOB_TestOnscreen1
   1242                            
   1243        777D               DOB_ChainNextB0
   1244  5+1   777D EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   1245  6+1   7780 10AE C8 39            ldy   rsv_priority_next_obj_0,u
   1246  5+1   7784 ED   A8 37            std   rsv_priority_prev_obj_0,y
   1247  3     7787 20   A7               bra   DOB_TestOnscreen1
   1248
   1249        7789               DOB_RemoveFromDPSB1
   1250  5+1   7789 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1251  3     778C 26   11               bne   DOB_ChainPrevB1
   1252                            
   1253  4+1   778E A6   C8 48            lda   rsv_priority_1,u
   1254  2     7791 48                    lsla
   1255  4     7792 108E 653E             ldy   #Tbl_Priority_First_Entry_1>>
   1256  4+1   7796 31   A6               leay  a,y
   1257  5+1   7798 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1258  5+0   779B ED   A4               std   ,y
   1259  3     779D 20   0A               bra   DOB_CheckPrioNextB1
   1260                            
   1261        779F               DOB_ChainPrevB1
   1262  5+1   779F EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1263  6+1   77A2 10AE C8 49            ldy   rsv_priority_prev_obj_1,u
   1264  5+1   77A6 ED   A8 4B            std   rsv_priority_next_obj_1,y
   1265
   1266        77A9               DOB_CheckPrioNextB1
   1267  5+1   77A9 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1268  3     77AC 26   19               bne   DOB_ChainNextB1
   1269
   1270  4+1   77AE A6   C8 48            lda   rsv_priority_1,u
   1271  2     77B1 48                    lsla
   1272  4     77B2 108E 6550             ldy   #Tbl_Priority_Last_Entry_1
   1273  4+1   77B6 31   A6               leay  a,y
   1274  5+1   77B8 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1275  5+0   77BB ED   A4               std   ,y
   1276  4+1   77BD A6   C8 47            lda   rsv_prev_render_flags_0,u
   1277  3     77C0 2B   03               bmi   DOB_rts                    >>
   1278  8     77C2 BD   77DB             jsr   ClearObj                   >>
   1279        77C5               DOB_rts                                *
   1280  5+8   77C5 35   D6               puls  d,x,u,pc
   1281                            
   1282        77C7               DOB_ChainNextB1
   1283  5+1   77C7 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1284  6+1   77CA 10AE C8 4B            ldy   rsv_priority_next_obj_1,u
   1285  5+1   77CE ED   A8 49            std   rsv_priority_prev_obj_1,y
   1286  4+1   77D1 A6   C8 47            lda   rsv_prev_render_flags_0,u
   1287  3     77D4 2B   EF               bmi   DOB_rts                    >>
   1288  8     77D6 BD   77DB             jsr   ClearObj                   >>
   1289  5+8   77D9 35   D6               puls  d,x,u,pc
   1290
   1291                                                                  * >>
   1292                                                                  *
   1293                                                                  * >>
   1294                                                                  * >>
   1295                                                                  *->>
   1296                                                                  * >>
   1297                                                                  * >>
   1298                                                                  * >>
   1299                                                                  * >>
   1300                                                                  *
   1301                                                                  * >>
   1302                                                                  *;>>
   1303
   1304                                   INCLUD CLEAROBJ
   1305                           * --------------------------------------->>
   1306                           * ClearObj
   1307                           * --------
   1308                           * Subroutine to clear an object data in O>>
   1309                           *
   1310                           * input REG : [u] pointer on objet (OST)
   1311                           * clear REG : [d,y]
   1312                           * --------------------------------------->>
   1313
   1314        77DB               ClearObj *@globals
   1315  5+8   77DB 34   76               pshs  d,x,y,u
   1316  7     77DD 10FF 7804             sts   CLO_1+2
   1317  4+1   77E1 32   C8 5A            leas  object_size,u
   1318  3     77E4 CC   0000             ldd   #$0000
   1319  3     77E7 8E   0000             ldx   #$0000
   1320  4+0   77EA 31   84               leay  ,x
   1321  4+0   77EC 33   84               leau  ,x
   1322  5+8   77EE 34   76               pshs  d,x,y,u
   1323  5+8   77F0 34   76               pshs  d,x,y,u
   1324  5+8   77F2 34   76               pshs  d,x,y,u
   1325  5+8   77F4 34   76               pshs  d,x,y,u
   1326  5+8   77F6 34   76               pshs  d,x,y,u
   1327  5+8   77F8 34   76               pshs  d,x,y,u
   1328  5+8   77FA 34   76               pshs  d,x,y,u
   1329  5+8   77FC 34   76               pshs  d,x,y,u
   1330  5+8   77FE 34   76               pshs  d,x,y,u
   1331  4+0   7800 33   E4               leau  ,s
   1332        7802               CLO_1
   1333  4     7802 10CE 0000             lds   #$0000        ; start of ob>>
   1334  5+6   7806 36   36               pshu  d,x,y         ; saving 12 b>>
   1335  5+6   7808 36   36               pshu  d,x,y         ; DEPENDENCY >>
   1336  5+6   780A 36   36               pshu  d,x,y         ; DEPENDENCY >>
   1337        780C               CLO_2
   1338  5+10  780C 35   F6               puls  d,x,y,u,pc
   1339
   1340                                   INCLUD CHECKSPR
   1341                           * --------------------------------------->>
   1342                           * CheckSpritesRefresh
   1343                           * -------------------
   1344                           * Subroutine to determine if sprites are >>
   1345                           * Read Display Priority Structure (back t>>
   1346                           * priority: 0 - unregistred
   1347                           * priority: 1 - register non moving overl>>
   1348                           * priority; 2-8 - register moving sprite >>
   1349                           *
   1350                           * input REG : none
   1351                           * --------------------------------------->>
   1352
   1353        780E 0000          cur_priority            fdb   $00
   1354        7810 0000          cur_ptr_sub_obj_erase   fdb   $0000
   1355        7812 0000          cur_ptr_sub_obj_draw    fdb   $0000
   1356                            
   1357        7814               CheckSpritesRefresh
   1358
   1359        7814               CSR_Start
   1360  3     7814 CC   65B8             ldd   #Tbl_Sub_Object_Erase
   1361  6     7817 FD   7810             std   cur_ptr_sub_obj_erase
   1362  3     781A CC   660C             ldd   #Tbl_Sub_Object_Draw
   1363  6     781D FD   7812             std   cur_ptr_sub_obj_draw
   1364  5     7820 B6   611D             lda   Glb_Cur_Wrk_Screen_Id      >>
   1365  3     7823 26   6E               bne   CSR_SetBuffer1
   1366                            
   1367        7825               CSR_SetBuffer0
   1368  2     7825 86   36               lda   #rsv_buffer_0              >>
   1369  5     7827 B7   7903             sta   CSR_ProcessEachPriorityLeve>>
   1370        782A               CSR_P8B0
   1371  6     782A FE   64D4             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1372  3     782D 27   08               beq   CSR_P7B0
   1373  2     782F 86   08               lda   #$08
   1374  5     7831 B7   780E             sta   cur_priority
   1375  8     7834 BD   7901             jsr   CSR_ProcessEachPriorityLeve>>
   1376        7837               CSR_P7B0
   1377  6     7837 FE   64D2             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1378  3     783A 27   08               beq   CSR_P6B0
   1379  2     783C 86   07               lda   #$07
   1380  5     783E B7   780E             sta   cur_priority
   1381  8     7841 BD   7901             jsr   CSR_ProcessEachPriorityLeve>>
   1382        7844               CSR_P6B0
   1383  6     7844 FE   64D0             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1384  3     7847 27   08               beq   CSR_P5B0
   1385  2     7849 86   06               lda   #$06
   1386  5     784B B7   780E             sta   cur_priority
   1387  8     784E BD   7901             jsr   CSR_ProcessEachPriorityLeve>>
   1388        7851               CSR_P5B0
   1389  6     7851 FE   64CE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1390  3     7854 27   08               beq   CSR_P4B0
   1391  2     7856 86   05               lda   #$05
   1392  5     7858 B7   780E             sta   cur_priority
   1393  8     785B BD   7901             jsr   CSR_ProcessEachPriorityLeve>>
   1394        785E               CSR_P4B0
   1395  6     785E FE   64CC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1396  3     7861 27   08               beq   CSR_P3B0
   1397  2     7863 86   04               lda   #$04
   1398  5     7865 B7   780E             sta   cur_priority
   1399  8     7868 BD   7901             jsr   CSR_ProcessEachPriorityLeve>>
   1400        786B               CSR_P3B0
   1401  6     786B FE   64CA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1402  3     786E 27   08               beq   CSR_P2B0
   1403  2     7870 86   03               lda   #$03
   1404  5     7872 B7   780E             sta   cur_priority
   1405  8     7875 BD   7901             jsr   CSR_ProcessEachPriorityLeve>>
   1406        7878               CSR_P2B0
   1407  6     7878 FE   64C8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1408  3     787B 27   08               beq   CSR_P1B0
   1409  2     787D 86   02               lda   #$02
   1410  5     787F B7   780E             sta   cur_priority
   1411  8     7882 BD   7901             jsr   CSR_ProcessEachPriorityLeve>>
   1412        7885               CSR_P1B0
   1413  6     7885 FE   64C6             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1414  3     7888 27   08               beq   CSR_rtsB0
   1415  2     788A 86   01               lda   #$01
   1416  5     788C B7   780E             sta   cur_priority
   1417  8     788F BD   7901             jsr   CSR_ProcessEachPriorityLeve>>
   1418        7892               CSR_rtsB0
   1419  5     7892 39                    rts
   1420                            
   1421        7893               CSR_SetBuffer1
   1422  2     7893 86   48               lda   #rsv_buffer_1              >>
   1423  5     7895 B7   7903             sta   CSR_ProcessEachPriorityLeve>>
   1424        7898               CSR_P8B1
   1425  6     7898 FE   654E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1426  3     789B 27   08               beq   CSR_P7B1
   1427  2     789D 86   08               lda   #$08
   1428  5     789F B7   780E             sta   cur_priority
   1429  8     78A2 BD   7901             jsr   CSR_ProcessEachPriorityLeve>>
   1430        78A5               CSR_P7B1
   1431  6     78A5 FE   654C             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1432  3     78A8 27   08               beq   CSR_P6B1
   1433  2     78AA 86   07               lda   #$07
   1434  5     78AC B7   780E             sta   cur_priority
   1435  8     78AF BD   7901             jsr   CSR_ProcessEachPriorityLeve>>
   1436        78B2               CSR_P6B1
   1437  6     78B2 FE   654A             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1438  3     78B5 27   08               beq   CSR_P5B1
   1439  2     78B7 86   06               lda   #$06
   1440  5     78B9 B7   780E             sta   cur_priority
   1441  8     78BC BD   7901             jsr   CSR_ProcessEachPriorityLeve>>
   1442        78BF               CSR_P5B1
   1443  6     78BF FE   6548             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1444  3     78C2 27   08               beq   CSR_P4B1
   1445  2     78C4 86   05               lda   #$05
   1446  5     78C6 B7   780E             sta   cur_priority
   1447  8     78C9 BD   7901             jsr   CSR_ProcessEachPriorityLeve>>
   1448        78CC               CSR_P4B1
   1449  6     78CC FE   6546             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1450  3     78CF 27   08               beq   CSR_P3B1
   1451  2     78D1 86   04               lda   #$04
   1452  5     78D3 B7   780E             sta   cur_priority
   1453  8     78D6 BD   7901             jsr   CSR_ProcessEachPriorityLeve>>
   1454        78D9               CSR_P3B1
   1455  6     78D9 FE   6544             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1456  3     78DC 27   08               beq   CSR_P2B1
   1457  2     78DE 86   03               lda   #$03
   1458  5     78E0 B7   780E             sta   cur_priority
   1459  8     78E3 BD   7901             jsr   CSR_ProcessEachPriorityLeve>>
   1460        78E6               CSR_P2B1
   1461  6     78E6 FE   6542             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1462  3     78E9 27   08               beq   CSR_P1B1
   1463  2     78EB 86   02               lda   #$02
   1464  5     78ED B7   780E             sta   cur_priority
   1465  8     78F0 BD   7901             jsr   CSR_ProcessEachPriorityLeve>>
   1466        78F3               CSR_P1B1
   1467  6     78F3 FE   6540             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1468  3     78F6 27   08               beq   CSR_rtsB1
   1469  2     78F8 86   01               lda   #$01
   1470  5     78FA B7   780E             sta   cur_priority
   1471  8     78FD BD   7901             jsr   CSR_ProcessEachPriorityLeve>>
   1472        7900               CSR_rtsB1
   1473  5     7900 39                    rts
   1474
   1475        7901               CSR_ProcessEachPriorityLevel
   1476  4+1   7901 30   C8 10            leax  16,u                       >>
   1477                            
   1478        7904               CSR_CheckDelHide
   1479  4+1   7904 A6   42               lda   render_flags,u
   1480  2     7906 84   60               anda  #render_hide_mask!render_to>>
   1481  3     7908 26   2B               bne   CSR_DoNotDisplaySprite
   1482
   1483        790A               CSR_CheckRefresh
   1484  4+1   790A A6   C8 29            lda   rsv_render_flags,u
   1485  2     790D 84   01               anda  #rsv_render_checkrefresh_ma>>
   1486  6     790F 1026 00FE             lbne  CSR_CheckErase
   1487
   1488        7913               CSR_UpdSpriteImageBasedOnMirror
   1489  4+1   7913 A6   C8 29            lda   rsv_render_flags,u
   1490  2     7916 8A   01               ora   #rsv_render_checkrefresh_ma>>
   1491  4+1   7918 A7   C8 29            sta   rsv_render_flags,u         >>
   1492                            
   1493  4+1   791B A6   42               lda   render_flags,u             >>
   1494  2     791D 84   03               anda  #render_xmirror_mask!render>>
   1495  6+1   791F 10AE 4A               ldy   image_set,u
   1496  4+1   7922 E6   26               ldb   image_center_offset,y
   1497  4+1   7924 E7   C8 2C            stb   rsv_image_center_offset,u
   1498  4+1   7927 E6   A6               ldb   a,y
   1499  4+1   7929 31   A5               leay  b,y                        >>
   1500  6+1   792B 10AF C8 2E            sty   rsv_image_subset,u
   1501                            
   1502        792F               CSR_CheckPlayFieldCoord
   1503  4+1   792F A6   42               lda   render_flags,u
   1504  2     7931 84   10               anda  #render_playfieldcoord_mask>>
   1505  3     7933 27   2A               beq   CSR_CheckVerticalPosition  >>
   1506                            
   1507                                   * not yet implemented
   1508                                   * need to be updated with new alg>>
   1509                                   *ldd   x_pos,u
   1510                                   *subd  Glb_Camera_X_Pos
   1511                                   *ldy   rsv_mapping_frame,u
   1512                                   *addd  image_x_offset,y
   1513                                   *lbvs   CSR_SetOutOfRange        >>
   1514                                   *lbmi   CSR_SetOutOfRange        >>
   1515                                   *stb   x_pixel,u
   1516                                   *addb  image_x_size_l,y
   1517                                   *lbvs   CSR_SetOutOfRange        >>
   1518                                   *stb   rsv_x2_pixel,u
   1519                                   *cmpb  #screen_width
   1520                                   *lbgt   CSR_SetOutOfRange        >>
   1521
   1522                                   *ldd   y_pos,u
   1523                                   *subd  Glb_Camera_Y_Pos
   1524                                   *addd  image_y1_offset,y
   1525                                   *bvs   CSR_SetOutOfRange         >>
   1526                                   *bmi   CSR_SetOutOfRange         >>
   1527                                   *stb   y_pixel,u
   1528                                   *addb  image_y_size_l,y
   1529                                   *bvs   CSR_SetOutOfRange         >>
   1530                                   *stb   rsv_y2_pixel,u
   1531                                   *cmpb  #screen_bottom
   1532                                   *bhi   CSR_SetOutOfRange         >>
   1533                                   *lda   rsv_render_flags,u
   1534                                   *anda  #:rsv_render_outofrange_ma>>
   1535                                   *sta   rsv_render_flags,u
   1536                                   *bra   CSR_CheckErase
   1537                            
   1538        7935               CSR_DoNotDisplaySprite
   1539  4+1   7935 A6   43               lda   priority,u
   1540  5     7937 B1   780E             cmpa  cur_priority
   1541  3     793A 26   1C               bne   CSR_NextObject             >>
   1542                            
   1543  4+1   793C A6   C8 29            lda   rsv_render_flags,u
   1544  2     793F 84   F9               anda  #:rsv_render_erasesprite_ma>>
   1545  4+1   7941 A7   C8 29            sta   rsv_render_flags,u
   1546                            
   1547  4+1   7944 E6   88 11            ldb   buf_prev_render_flags,x
   1548  3     7947 2A   0F               bpl   CSR_NextObject             >>
   1549                            
   1550  2     7949 8A   02               ora   #rsv_render_erasesprite_mas>>
   1551  4+1   794B A7   C8 29            sta   rsv_render_flags,u
   1552                            
   1553  7     794E 10BE 7810             ldy   cur_ptr_sub_obj_erase      >>
   1554  5+3   7952 EF   A1               stu   ,y++
   1555  7     7954 10BF 7810             sty   cur_ptr_sub_obj_erase
   1556                            
   1557        7958               CSR_NextObject
   1558  5+1   7958 EE   03               ldu   buf_priority_next_obj,x
   1559  6     795A 1026 FFA3             lbne  CSR_ProcessEachPriorityLeve>>
   1560  5     795E 39                    rts
   1561
   1562        795F               CSR_CheckVerticalPosition
   1563  4+1   795F A6   C8 12            lda   x_pixel,u                  >>
   1564  4+1   7962 A8   C8 2C            eora  rsv_image_center_offset,u  >>
   1565  2     7965 84   01               anda  #$01                       >>
   1566  2     7967 48                    asla                             >>
   1567  4+1   7968 E6   42               ldb   render_flags,u
   1568  2     796A C4   04               andb  #render_overlay_mask       >>
   1569  3     796C 27   01               beq   CSR_NoOverlay
   1570  2     796E 4C                    inca
   1571        796F               CSR_NoOverlay
   1572  4+1   796F E6   A6               ldb   a,y
   1573  3     7971 27   08               beq   CSR_NoDefinedFrame
   1574  4+1   7973 31   A5               leay  b,y                        >>
   1575  6+1   7975 10AF C8 30            sty   rsv_mapping_frame,u
   1576  3     7979 20   16               bra CSR_CVP_Continue
   1577                            
   1578        797B               CSR_NoDefinedFrame
   1579  2     797B 84   01               anda  #$01                       >>
   1580  4+1   797D E6   A6               ldb   a,y
   1581  3     797F 27   08               beq   CSR_NoFrameFound           >>
   1582  4+1   7981 31   A5               leay  b,y                        >>
   1583  6+1   7983 10AF C8 30            sty   rsv_mapping_frame,u
   1584  3     7987 20   08               bra CSR_CVP_Continue
   1585                            
   1586        7989               CSR_NoFrameFound
   1587  4     7989 108E 0000             ldy   #$0000
   1588  6+1   798D 10AF C8 30            sty   rsv_mapping_frame,u
   1589
   1590        7991               CSR_CVP_Continue
   1591  4+1   7991 E6   C8 13            ldb   y_pixel,u                  >>
   1592  6+1   7994 10AE C8 2E            ldy   rsv_image_subset,u
   1593  4+1   7998 EB   25               addb  image_subset_y1_offset,y
   1594  2     799A C1   E3               cmpb  #screen_bottom
   1595  3     799C 22   6B               bhi   CSR_SetOutOfRange
   1596  2     799E C1   1C               cmpb  #screen_top
   1597  3     79A0 25   67               blo   CSR_SetOutOfRange
   1598  4+1   79A2 E7   C8 33            stb   rsv_y1_pixel,u
   1599  6+1   79A5 10AE 4A               ldy   image_set,u
   1600  4+1   79A8 EB   25               addb  image_y_size,y
   1601  2     79AA C1   E3               cmpb  #screen_bottom
   1602  3     79AC 22   5B               bhi   CSR_SetOutOfRange
   1603  2     79AE C1   1C               cmpb  #screen_top
   1604  3     79B0 25   57               blo   CSR_SetOutOfRange
   1605  4+1   79B2 E7   C8 35            stb   rsv_y2_pixel,u
   1606  4+1   79B5 E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1607  3     79B8 25   4F               blo   CSR_SetOutOfRange
   1608                            
   1609  4+1   79BA A6   42               lda   render_flags,u             >>
   1610  2     79BC 85   80               bita  #render_xloop_mask
   1611  3     79BE 26   2B               bne   CSR_DontCheckXFrontier
   1612                            
   1613  4+1   79C0 E6   C8 12            ldb   x_pixel,u
   1614  6+1   79C3 10AE C8 2E            ldy   rsv_image_subset,u
   1615  4+1   79C7 EB   24               addb  image_subset_x1_offset,y
   1616  2     79C9 C1   CF               cmpb  #screen_right
   1617  3     79CB 22   3C               bhi   CSR_SetOutOfRange
   1618  2     79CD C1   30               cmpb  #screen_left
   1619  3     79CF 25   38               blo   CSR_SetOutOfRange
   1620  4+1   79D1 E7   C8 32            stb   rsv_x1_pixel,u
   1621  6+1   79D4 10AE 4A               ldy   image_set,u
   1622  4+1   79D7 EB   24               addb  image_x_size,y
   1623  2     79D9 C1   CF               cmpb  #screen_right
   1624  3     79DB 22   2C               bhi   CSR_SetOutOfRange
   1625  2     79DD C1   30               cmpb  #screen_left
   1626  3     79DF 25   28               blo   CSR_SetOutOfRange
   1627  4+1   79E1 E7   C8 34            stb   rsv_x2_pixel,u
   1628  4+1   79E4 E1   C8 32            cmpb  rsv_x1_pixel,u             >>
   1629  3     79E7 25   20               blo   CSR_SetOutOfRange
   1630                            
   1631  3     79E9 20   14               bra   CSR_DontCheckXFrontier_end
   1632                            
   1633        79EB               CSR_DontCheckXFrontier
   1634  4+1   79EB E6   C8 12            ldb   x_pixel,u
   1635  6+1   79EE 10AE C8 2E            ldy   rsv_image_subset,u
   1636  4+1   79F2 EB   24               addb  image_subset_x1_offset,y
   1637  4+1   79F4 E7   C8 32            stb   rsv_x1_pixel,u
   1638                            
   1639  6+1   79F7 10AE 4A               ldy   image_set,u
   1640  4+1   79FA EB   24               addb  image_x_size,y
   1641  4+1   79FC E7   C8 34            stb   rsv_x2_pixel,u
   1642
   1643        79FF               CSR_DontCheckXFrontier_end
   1644  4+1   79FF A6   C8 29            lda   rsv_render_flags,u
   1645  2     7A02 84   F7               anda  #:rsv_render_outofrange_mas>>
   1646  4+1   7A04 A7   C8 29            sta   rsv_render_flags,u
   1647  3     7A07 20   08               bra   CSR_CheckErase
   1648                            
   1649        7A09               CSR_SetOutOfRange
   1650  4+1   7A09 A6   C8 29            lda   rsv_render_flags,u
   1651  2     7A0C 8A   08               ora   #rsv_render_outofrange_mask>>
   1652  4+1   7A0E A7   C8 29            sta   rsv_render_flags,u
   1653
   1654        7A11               CSR_CheckErase
   1655  6     7A11 BF   7AEF             stx   CSR_CheckDraw+1
   1656  4+1   7A14 A6   00               lda   buf_priority,x
   1657  5     7A16 B1   780E             cmpa  cur_priority
   1658  6     7A19 1026 00D1             lbne  CSR_CheckDraw
   1659                            
   1660  7     7A1D 10BE 7810             ldy   cur_ptr_sub_obj_erase
   1661                            
   1662  4+1   7A21 A6   C8 29            lda   rsv_render_flags,u
   1663  2     7A24 84   08               anda  #rsv_render_outofrange_mask>>
   1664  3     7A26 27   09               beq   CSR_CheckErase_InRange
   1665  4+1   7A28 A6   88 11            lda   buf_prev_render_flags,x
   1666  6     7A2B 102A 010E             lbpl  CSR_SetEraseDrawFalse      >>
   1667  3     7A2F 20   20               bra   CSR_SetEraseTrue
   1668                            
   1669        7A31               CSR_CheckErase_InRange
   1670  4+1   7A31 A6   88 11            lda   buf_prev_render_flags,x
   1671  6     7A34 102A 00AE             lbpl  CSR_SetEraseFalse          >>
   1672  5+1   7A38 EC   C8 12            ldd   xy_pixel,u
   1673  2     7A3B 44                    lsra                             >>
   1674  7+1   7A3C 10A3 0B               cmpd  buf_prev_xy_pixel,x
   1675  3     7A3F 26   10               bne   CSR_SetEraseTrue           >>
   1676  5+1   7A41 EC   C8 30            ldd   rsv_mapping_frame,u
   1677  7+1   7A44 10A3 07               cmpd  buf_prev_mapping_frame,x
   1678  3     7A47 26   08               bne   CSR_SetEraseTrue           >>
   1679  4+1   7A49 A6   43               lda   priority,u
   1680  4+1   7A4B A1   00               cmpa  buf_priority,x
   1681  3     7A4D 26   02               bne   CSR_SetEraseTrue           >>
   1682  3     7A4F 20   11               bra   CSR_SubEraseSpriteSearchIni>>
   1683                            
   1684        7A51               CSR_SetEraseTrue
   1685  4+1   7A51 A6   C8 29            lda   rsv_render_flags,u
   1686  2     7A54 8A   02               ora   #rsv_render_erasesprite_mas>>
   1687  4+1   7A56 A7   C8 29            sta   rsv_render_flags,u
   1688                            
   1689  5+3   7A59 EF   A1               stu   ,y++
   1690  7     7A5B 10BF 7810             sty   cur_ptr_sub_obj_erase
   1691                            
   1692  5     7A5F 16   008C             lbra   CSR_CheckDraw
   1693                            
   1694        7A62               CSR_SubEraseSpriteSearchInit
   1695
   1696                                   * search a collision with a sprit>>
   1697                                   * the sprite under should have to>>
   1698                                   * in this case it forces the refr>>
   1699                                   * as a sub loop, this should be o>>
   1700                                   * there are two lists because a s>>
   1701                                   * and displayed at another positi>>
   1702
   1703  6     7A62 BE   7810             ldx   cur_ptr_sub_obj_erase
   1704  5     7A65 B6   611D             lda   Glb_Cur_Wrk_Screen_Id      >>
   1705  3     7A68 26   28               bne   CSR_SubEraseSearchB1
   1706                            
   1707        7A6A               CSR_SubEraseSearchB0
   1708  4     7A6A 8C   65B8             cmpx  #Tbl_Sub_Object_Erase
   1709  3     7A6D 27   4B               beq   CSR_SubDrawSpriteSearchInit>>
   1710  6+3   7A6F 10AE 83               ldy   ,--x
   1711                            
   1712        7A72               CSR_SubEraseCheckCollisionB0
   1713  5+1   7A72 EC   A8 43            ldd   rsv_prev_xy1_pixel_0,y     >>
   1714  4+1   7A75 A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1715  3     7A78 22   F0               bhi   CSR_SubEraseSearchB0
   1716  4+1   7A7A E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1717  3     7A7D 22   EB               bhi   CSR_SubEraseSearchB0
   1718  5+1   7A7F EC   A8 45            ldd   rsv_prev_xy2_pixel_0,y     >>
   1719  4+1   7A82 A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1720  3     7A85 25   E3               blo   CSR_SubEraseSearchB0
   1721  4+1   7A87 E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1722  3     7A8A 25   DE               blo   CSR_SubEraseSearchB0
   1723                            
   1724  7     7A8C 10BE 7810             ldy   cur_ptr_sub_obj_erase
   1725  3     7A90 20   BF               bra   CSR_SetEraseTrue           >>
   1726
   1727        7A92               CSR_SubEraseSearchB1
   1728  4     7A92 8C   65B8             cmpx  #Tbl_Sub_Object_Erase
   1729  3     7A95 27   23               beq   CSR_SubDrawSpriteSearchInit>>
   1730  6+3   7A97 10AE 83               ldy   ,--x
   1731                            
   1732        7A9A               CSR_SubEraseCheckCollisionB1
   1733  5+1   7A9A EC   A8 55            ldd   rsv_prev_xy1_pixel_1,y     >>
   1734  4+1   7A9D A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1735  3     7AA0 22   F0               bhi   CSR_SubEraseSearchB1
   1736  4+1   7AA2 E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1737  3     7AA5 22   EB               bhi   CSR_SubEraseSearchB1
   1738  5+1   7AA7 EC   A8 57            ldd   rsv_prev_xy2_pixel_1,y     >>
   1739  4+1   7AAA A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1740  3     7AAD 25   E3               blo   CSR_SubEraseSearchB1
   1741  4+1   7AAF E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1742  3     7AB2 25   DE               blo   CSR_SubEraseSearchB1
   1743                            
   1744  7     7AB4 10BE 7810             ldy   cur_ptr_sub_obj_erase
   1745  3     7AB8 20   97               bra   CSR_SetEraseTrue           >>
   1746
   1747        7ABA               CSR_SubDrawSpriteSearchInit
   1748  6     7ABA BE   7812             ldx   cur_ptr_sub_obj_draw
   1749                            
   1750        7ABD               CSR_SubDrawSearch
   1751  4     7ABD 8C   660C             cmpx  #Tbl_Sub_Object_Draw
   1752  3     7AC0 27   24               beq   CSR_SetEraseFalse          >>
   1753  6+3   7AC2 10AE 83               ldy   ,--x
   1754
   1755        7AC5               CSR_SubDrawCheckCollision
   1756  5+1   7AC5 EC   A8 32            ldd   rsv_xy1_pixel,y            >>
   1757  4+1   7AC8 A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1758  3     7ACB 22   F0               bhi   CSR_SubDrawSearch
   1759  4+1   7ACD E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1760  3     7AD0 22   EB               bhi   CSR_SubDrawSearch
   1761  5+1   7AD2 EC   A8 34            ldd   rsv_xy2_pixel,y            >>
   1762  4+1   7AD5 A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1763  3     7AD8 25   E3               blo   CSR_SubDrawSearch
   1764  4+1   7ADA E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1765  3     7ADD 25   DE               blo   CSR_SubDrawSearch
   1766                            
   1767  7     7ADF 10BE 7810             ldy   cur_ptr_sub_obj_erase
   1768  5     7AE3 16   FF6B             lbra  CSR_SetEraseTrue           >>
   1769
   1770        7AE6               CSR_SetEraseFalse
   1771  4+1   7AE6 A6   C8 29            lda   rsv_render_flags,u
   1772  2     7AE9 84   FD               anda  #:rsv_render_erasesprite_ma>>
   1773  4+1   7AEB A7   C8 29            sta   rsv_render_flags,u
   1774                            
   1775        7AEE               CSR_CheckDraw
   1776  3     7AEE 8E   FFFF             ldx   #$FFFF                     >>
   1777  4+1   7AF1 A6   43               lda   priority,u
   1778  5     7AF3 B1   780E             cmpa  cur_priority
   1779  6     7AF6 1026 FE5E             lbne  CSR_NextObject
   1780                            
   1781  7     7AFA 10BE 7812             ldy   cur_ptr_sub_obj_draw
   1782                            
   1783  4+1   7AFE A6   C8 29            lda   rsv_render_flags,u
   1784  2     7B01 84   08               anda  #rsv_render_outofrange_mask>>
   1785  3     7B03 26   40               bne   CSR_SetDrawFalse           >>
   1786  5+1   7B05 EC   C8 30            ldd   rsv_mapping_frame,u
   1787  3     7B08 27   3B               beq   CSR_SetDrawFalse           >>
   1788  4+1   7B0A A6   42               lda   render_flags,u
   1789  2     7B0C 84   20               anda  #render_hide_mask
   1790  3     7B0E 26   35               bne   CSR_SetDrawFalse           >>
   1791                            
   1792        7B10               CSR_SetDrawTrue
   1793  4+1   7B10 A6   C8 29            lda   rsv_render_flags,u
   1794  2     7B13 8A   04               ora   #rsv_render_displaysprite_m>>
   1795  4+1   7B15 A7   C8 29            sta   rsv_render_flags,u
   1796                            
   1797  2     7B18 85   02               bita  #rsv_render_erasesprite_mas>>
   1798  3     7B1A 27   02               beq   CSR_SDT1
   1799  3     7B1C 20   07               bra   CSR_SDT2
   1800        7B1E               CSR_SDT1
   1801  4+1   7B1E E6   88 11            ldb   buf_prev_render_flags,x
   1802  3     7B21 2B   0D               bmi   CSR_SetHide
   1803  3     7B23 20   05               bra   CSR_SDT3
   1804        7B25               CSR_SDT2
   1805  4+1   7B25 E6   88 11            ldb   buf_prev_render_flags,x
   1806  3     7B28 2A   06               bpl   CSR_SetHide
   1807        7B2A               CSR_SDT3
   1808  5+3   7B2A EF   A1               stu   ,y++
   1809  7     7B2C 10BF 7812             sty   cur_ptr_sub_obj_draw       >>
   1810
   1811        7B30               CSR_SetHide
   1812  4+1   7B30 A6   42               lda   render_flags,u
   1813  2     7B32 8A   20               ora   #render_hide_mask          >>
   1814  4+1   7B34 A7   42               sta   render_flags,u
   1815                            
   1816  5+1   7B36 EE   03               ldu   buf_priority_next_obj,x
   1817  6     7B38 1026 FDC5             lbne  CSR_ProcessEachPriorityLeve>>
   1818  5     7B3C 39                    rts
   1819
   1820        7B3D               CSR_SetEraseDrawFalse
   1821  4+1   7B3D A6   C8 29            lda   rsv_render_flags,u
   1822  2     7B40 84   FD               anda  #:rsv_render_erasesprite_ma>>
   1823  4+1   7B42 A7   C8 29            sta   rsv_render_flags,u
   1824
   1825        7B45               CSR_SetDrawFalse
   1826  4+1   7B45 A6   C8 29            lda   rsv_render_flags,u
   1827  2     7B48 84   FB               anda  #:rsv_render_displaysprite_>>
   1828  4+1   7B4A A7   C8 29            sta   rsv_render_flags,u
   1829                            
   1830  5+1   7B4D EE   03               ldu   buf_priority_next_obj,x
   1831  6     7B4F 1026 FDAE             lbne   CSR_ProcessEachPriorityLev>>
   1832  5     7B53 39                    rts
   1833
   1834
   1835                                   INCLUD ERASESPR
   1836                           * --------------------------------------->>
   1837                           * EraseSprites
   1838                           * ------------
   1839                           * Subroutine to erase sprites on screen
   1840                           * Read Display Priority Structure (front >>
   1841                           * priority: 0 - unregistred
   1842                           * priority: 1 - register non moving overl>>
   1843                           * priority; 2-8 - register moving sprite >>
   1844                           *
   1845                           * input REG : none
   1846                           * --------------------------------------->>
   1847                            
   1848        7B54               EraseSprites
   1849
   1850        7B54               ESP_Start
   1851  5     7B54 B6   611D             lda   Glb_Cur_Wrk_Screen_Id      >>
   1852  3     7B57 26   69               bne   ESP_P1B1
   1853
   1854        7B59               ESP_P1B0
   1855  6     7B59 FE   64D8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1856  3     7B5C 27   08               beq   ESP_P2B0
   1857  2     7B5E 86   01               lda   #$01
   1858  5     7B60 B7   7C2F             sta   ESP_CheckPriorityB0+1
   1859  8     7B63 BD   7C2B             jsr   ESP_ProcessEachPriorityLeve>>
   1860        7B66               ESP_P2B0
   1861  6     7B66 FE   64DA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1862  3     7B69 27   08               beq   ESP_P3B0
   1863  2     7B6B 86   02               lda   #$02
   1864  5     7B6D B7   7C2F             sta   ESP_CheckPriorityB0+1
   1865  8     7B70 BD   7C2B             jsr   ESP_ProcessEachPriorityLeve>>
   1866        7B73               ESP_P3B0
   1867  6     7B73 FE   64DC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1868  3     7B76 27   08               beq   ESP_P4B0
   1869  2     7B78 86   03               lda   #$03
   1870  5     7B7A B7   7C2F             sta   ESP_CheckPriorityB0+1
   1871  8     7B7D BD   7C2B             jsr   ESP_ProcessEachPriorityLeve>>
   1872        7B80               ESP_P4B0
   1873  6     7B80 FE   64DE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1874  3     7B83 27   08               beq   ESP_P5B0
   1875  2     7B85 86   04               lda   #$04
   1876  5     7B87 B7   7C2F             sta   ESP_CheckPriorityB0+1
   1877  8     7B8A BD   7C2B             jsr   ESP_ProcessEachPriorityLeve>>
   1878        7B8D               ESP_P5B0
   1879  6     7B8D FE   64E0             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1880  3     7B90 27   08               beq   ESP_P6B0
   1881  2     7B92 86   05               lda   #$05
   1882  5     7B94 B7   7C2F             sta   ESP_CheckPriorityB0+1
   1883  8     7B97 BD   7C2B             jsr   ESP_ProcessEachPriorityLeve>>
   1884        7B9A               ESP_P6B0
   1885  6     7B9A FE   64E2             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1886  3     7B9D 27   08               beq   ESP_P7B0
   1887  2     7B9F 86   06               lda   #$06
   1888  5     7BA1 B7   7C2F             sta   ESP_CheckPriorityB0+1
   1889  8     7BA4 BD   7C2B             jsr   ESP_ProcessEachPriorityLeve>>
   1890        7BA7               ESP_P7B0
   1891  6     7BA7 FE   64E4             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1892  3     7BAA 27   08               beq   ESP_P8B0
   1893  2     7BAC 86   07               lda   #$07
   1894  5     7BAE B7   7C2F             sta   ESP_CheckPriorityB0+1
   1895  8     7BB1 BD   7C2B             jsr   ESP_ProcessEachPriorityLeve>>
   1896        7BB4               ESP_P8B0
   1897  6     7BB4 FE   64E6             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1898  3     7BB7 27   08               beq   ESP_rtsB0
   1899  2     7BB9 86   08               lda   #$08
   1900  5     7BBB B7   7C2F             sta   ESP_CheckPriorityB0+1
   1901  8     7BBE BD   7C2B             jsr   ESP_ProcessEachPriorityLeve>>
   1902        7BC1               ESP_rtsB0
   1903  5     7BC1 39                    rts
   1904                            
   1905        7BC2               ESP_P1B1
   1906  6     7BC2 FE   6552             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1907  3     7BC5 27   08               beq   ESP_P2B1
   1908  2     7BC7 86   01               lda   #$01
   1909  5     7BC9 B7   7C80             sta   ESP_CheckPriorityB1+1
   1910  8     7BCC BD   7C7C             jsr   ESP_ProcessEachPriorityLeve>>
   1911        7BCF               ESP_P2B1
   1912  6     7BCF FE   6554             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1913  3     7BD2 27   08               beq   ESP_P3B1
   1914  2     7BD4 86   02               lda   #$02
   1915  5     7BD6 B7   7C80             sta   ESP_CheckPriorityB1+1
   1916  8     7BD9 BD   7C7C             jsr   ESP_ProcessEachPriorityLeve>>
   1917        7BDC               ESP_P3B1
   1918  6     7BDC FE   6556             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1919  3     7BDF 27   08               beq   ESP_P4B1
   1920  2     7BE1 86   03               lda   #$03
   1921  5     7BE3 B7   7C80             sta   ESP_CheckPriorityB1+1
   1922  8     7BE6 BD   7C7C             jsr   ESP_ProcessEachPriorityLeve>>
   1923        7BE9               ESP_P4B1
   1924  6     7BE9 FE   6558             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1925  3     7BEC 27   08               beq   ESP_P5B1
   1926  2     7BEE 86   04               lda   #$04
   1927  5     7BF0 B7   7C80             sta   ESP_CheckPriorityB1+1
   1928  8     7BF3 BD   7C7C             jsr   ESP_ProcessEachPriorityLeve>>
   1929        7BF6               ESP_P5B1
   1930  6     7BF6 FE   655A             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1931  3     7BF9 27   08               beq   ESP_P6B1
   1932  2     7BFB 86   05               lda   #$05
   1933  5     7BFD B7   7C80             sta   ESP_CheckPriorityB1+1
   1934  8     7C00 BD   7C7C             jsr   ESP_ProcessEachPriorityLeve>>
   1935        7C03               ESP_P6B1
   1936  6     7C03 FE   655C             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1937  3     7C06 27   08               beq   ESP_P7B1
   1938  2     7C08 86   06               lda   #$06
   1939  5     7C0A B7   7C80             sta   ESP_CheckPriorityB1+1
   1940  8     7C0D BD   7C7C             jsr   ESP_ProcessEachPriorityLeve>>
   1941        7C10               ESP_P7B1
   1942  6     7C10 FE   655E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1943  3     7C13 27   08               beq   ESP_P8B1
   1944  2     7C15 86   07               lda   #$07
   1945  5     7C17 B7   7C80             sta   ESP_CheckPriorityB1+1
   1946  8     7C1A BD   7C7C             jsr   ESP_ProcessEachPriorityLeve>>
   1947        7C1D               ESP_P8B1
   1948  6     7C1D FE   6560             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1949  3     7C20 27   08               beq   ESP_rtsB1
   1950  2     7C22 86   08               lda   #$08
   1951  5     7C24 B7   7C80             sta   ESP_CheckPriorityB1+1
   1952  8     7C27 BD   7C7C             jsr   ESP_ProcessEachPriorityLeve>>
   1953        7C2A               ESP_rtsB1
   1954  5     7C2A 39                    rts
   1955
   1956                           * *******
   1957                           * BUFFER0
   1958                           * *******
   1959
   1960        7C2B               ESP_ProcessEachPriorityLevelB0
   1961  4+1   7C2B A6   C8 36            lda   rsv_priority_0,u
   1962                            
   1963        7C2E               ESP_CheckPriorityB0
   1964  2     7C2E 81   00               cmpa  #0                         >>
   1965  3     7C30 26   44               bne   ESP_NextObjectB0           >>
   1966                            
   1967        7C32               ESP_UnsetCheckRefreshB0
   1968  4+1   7C32 A6   C8 29            lda   rsv_render_flags,u
   1969  4+1   7C35 E6   42               ldb   render_flags,u
   1970  2     7C37 C4   08               andb  #render_motionless_mask
   1971  3     7C39 26   05               bne   ESP_CheckEraseB0
   1972  2     7C3B 84   FE               anda  #:rsv_render_checkrefresh_m>>
   1973  4+1   7C3D A7   C8 29            sta   rsv_render_flags,u
   1974                            
   1975        7C40               ESP_CheckEraseB0
   1976  2     7C40 84   02               anda  #rsv_render_erasesprite_mas>>
   1977  3     7C42 27   32               beq   ESP_NextObjectB0
   1978  4+1   7C44 E6   C8 47            ldb   rsv_prev_render_flags_0,u
   1979  2     7C47 C4   01               andb  #rsv_prev_render_overlay_ma>>
   1980  3     7C49 26   23               bne   ESP_UnsetOnScreenFlagB0
   1981                            
   1982        7C4B               ESP_CallEraseRoutineB0
   1983  6     7C4B FF   7C5F             stu   ESP_CallEraseRoutineB0_00+1>>
   1984  5+1   7C4E AE   C8 3D            ldx   rsv_prev_mapping_frame_0,u >>
   1985  4+1   7C51 A6   03               lda   page_erase_routine,x
   1986  5     7C53 B7   E7E5             sta   $E7E5                      >>
   1987  5+1   7C56 EE   C8 3F            ldu   rsv_bgdata_0,u             >>
   1988  7+4   7C59 AD   98 04            jsr   [erase_routine,x]          >>
   1989  4+0   7C5C 31   C4               leay  ,u                         >>
   1990        7C5E               ESP_CallEraseRoutineB0_00
   1991  3     7C5E CE   0000             ldu   #$0000                     >>
   1992  5+1   7C61 EC   C8 3F            ldd   rsv_bgdata_0,u             >>
   1993  4     7C64 83   0010             subd  #16
   1994  2     7C67 C4   C0               andb  #256-cell_size             >>
   1995  6     7C69 1F   01               tfr   d,x                        >>
   1996                            
   1997        7C6B               ESP_FreeEraseBufferB0
   1998  8     7C6B BD   7FF2             jsr   BgBufferFree               >>
   1999                            
   2000        7C6E               ESP_UnsetOnScreenFlagB0
   2001  4+1   7C6E A6   C8 47            lda   rsv_prev_render_flags_0,u
   2002  2     7C71 84   7F               anda  #:rsv_prev_render_onscreen_>>
   2003  4+1   7C73 A7   C8 47            sta   rsv_prev_render_flags_0,u
   2004
   2005        7C76               ESP_NextObjectB0
   2006  5+1   7C76 EE   C8 37            ldu   rsv_priority_prev_obj_0,u
   2007  3     7C79 26   B0               bne   ESP_ProcessEachPriorityLeve>>
   2008  5     7C7B 39                    rts
   2009
   2010                           * *******
   2011                           * BUFFER1
   2012                           * *******
   2013                            
   2014        7C7C               ESP_ProcessEachPriorityLevelB1
   2015  4+1   7C7C A6   C8 48            lda   rsv_priority_1,u
   2016                            
   2017        7C7F               ESP_CheckPriorityB1
   2018  2     7C7F 81   00               cmpa  #0                         >>
   2019  3     7C81 26   44               bne   ESP_NextObjectB1           >>
   2020                            
   2021        7C83               ESP_UnsetCheckRefreshB1
   2022  4+1   7C83 A6   C8 29            lda   rsv_render_flags,u
   2023  4+1   7C86 E6   42               ldb   render_flags,u
   2024  2     7C88 C4   08               andb  #render_motionless_mask
   2025  3     7C8A 26   05               bne   ESP_CheckEraseB1
   2026  2     7C8C 84   FE               anda  #:rsv_render_checkrefresh_m>>
   2027  4+1   7C8E A7   C8 29            sta   rsv_render_flags,u
   2028                            
   2029        7C91               ESP_CheckEraseB1
   2030  2     7C91 84   02               anda  #rsv_render_erasesprite_mas>>
   2031  3     7C93 27   32               beq   ESP_NextObjectB1
   2032  4+1   7C95 E6   C8 59            ldb   rsv_prev_render_flags_1,u
   2033  2     7C98 C4   01               andb  #rsv_prev_render_overlay_ma>>
   2034  3     7C9A 26   23               bne   ESP_UnsetOnScreenFlagB1
   2035                            
   2036        7C9C               ESP_CallEraseRoutineB1
   2037  6     7C9C FF   7CB0             stu   ESP_CallEraseRoutineB1_00+1>>
   2038  5+1   7C9F AE   C8 4F            ldx   rsv_prev_mapping_frame_1,u >>
   2039  4+1   7CA2 A6   03               lda   page_erase_routine,x
   2040  5     7CA4 B7   E7E5             sta   $E7E5                      >>
   2041  5+1   7CA7 EE   C8 51            ldu   rsv_bgdata_1,u             >>
   2042  7+4   7CAA AD   98 04            jsr   [erase_routine,x]          >>
   2043  4+0   7CAD 31   C4               leay  ,u                         >>
   2044        7CAF               ESP_CallEraseRoutineB1_00
   2045  3     7CAF CE   0000             ldu   #$0000                     >>
   2046  5+1   7CB2 EC   C8 51            ldd   rsv_bgdata_1,u             >>
   2047  4     7CB5 83   0010             subd  #16
   2048  2     7CB8 C4   C0               andb  #256-cell_size             >>
   2049  6     7CBA 1F   01               tfr   d,x                        >>
   2050                            
   2051        7CBC               ESP_FreeEraseBufferB1
   2052  8     7CBC BD   7FF2             jsr   BgBufferFree               >>
   2053                            
   2054        7CBF               ESP_UnsetOnScreenFlagB1
   2055  4+1   7CBF A6   C8 59            lda   rsv_prev_render_flags_1,u
   2056  2     7CC2 84   7F               anda  #:rsv_prev_render_onscreen_>>
   2057  4+1   7CC4 A7   C8 59            sta   rsv_prev_render_flags_1,u
   2058                            
   2059        7CC7               ESP_NextObjectB1
   2060  5+1   7CC7 EE   C8 49            ldu   rsv_priority_prev_obj_1,u
   2061  3     7CCA 26   B0               bne   ESP_ProcessEachPriorityLeve>>
   2062  5     7CCC 39                    rts
   2063
   2064                                   INCLUD UNSETDSP
   2065                           * --------------------------------------->>
   2066                           * UnsetDisplayPriority
   2067                           * --------------------
   2068                           * Subroutine to unset sprites in Display >>
   2069                           * Read Lst_Priority_Unset_0/1
   2070                           *
   2071                           * input REG : none
   2072                           * --------------------------------------->>
   2073                            
   2074        7CCD               UnsetDisplayPriority
   2075
   2076        7CCD               UDP_Start
   2077  5     7CCD B6   611D             lda   Glb_Cur_Wrk_Screen_Id      >>
   2078  3     7CD0 26   6D               bne   UDP_B1
   2079                            
   2080        7CD2               UDP_B0
   2081  3     7CD2 8E   64EA             ldx   #Lst_Priority_Unset_0+2
   2082                            
   2083        7CD5               UDP_CheckEndB0
   2084  7     7CD5 BC   64E8             cmpx  Lst_Priority_Unset_0       >>
   2085  3     7CD8 26   07               bne   UDP_CheckPrioPrevB0
   2086                            
   2087        7CDA               UDP_InitListB0
   2088  3     7CDA 8E   64EA             ldx   #Lst_Priority_Unset_0+2
   2089  6     7CDD BF   64E8             stx   Lst_Priority_Unset_0       >>
   2090  5     7CE0 39                    rts
   2091                            
   2092        7CE1               UDP_CheckPrioPrevB0
   2093  5+3   7CE1 EE   81               ldu   ,x++
   2094  5+1   7CE3 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2095  3     7CE6 26   11               bne   UDP_ChainPrevB0
   2096                            
   2097  4+1   7CE8 A6   C8 36            lda   rsv_priority_0,u
   2098  2     7CEB 48                    lsla
   2099  4     7CEC 108E 64C4             ldy   #Tbl_Priority_First_Entry_0>>
   2100  4+1   7CF0 31   A6               leay  a,y
   2101  5+1   7CF2 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2102  5+0   7CF5 ED   A4               std   ,y
   2103  3     7CF7 20   0A               bra   UDP_CheckPrioNextB0
   2104                            
   2105        7CF9               UDP_ChainPrevB0
   2106  5+1   7CF9 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2107  6+1   7CFC 10AE C8 37            ldy   rsv_priority_prev_obj_0,u
   2108  5+1   7D00 ED   A8 39            std   rsv_priority_next_obj_0,y
   2109
   2110        7D03               UDP_CheckPrioNextB0
   2111  5+1   7D03 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2112  3     7D06 26   11               bne   UDP_ChainNextB0
   2113
   2114  4+1   7D08 A6   C8 36            lda   rsv_priority_0,u
   2115  2     7D0B 48                    lsla
   2116  4     7D0C 108E 64D6             ldy   #Tbl_Priority_Last_Entry_0
   2117  4+1   7D10 31   A6               leay  a,y
   2118  5+1   7D12 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2119  5+0   7D15 ED   A4               std   ,y
   2120  3     7D17 20   0A               bra   UDP_CheckDeleteB0
   2121                            
   2122        7D19               UDP_ChainNextB0
   2123  5+1   7D19 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2124  6+1   7D1C 10AE C8 39            ldy   rsv_priority_next_obj_0,u
   2125  5+1   7D20 ED   A8 37            std   rsv_priority_prev_obj_0,y
   2126                            
   2127        7D23               UDP_CheckDeleteB0
   2128  4+1   7D23 A6   42               lda   render_flags,u
   2129  2     7D25 84   40               anda  #render_todelete_mask
   2130  3     7D27 27   0F               beq   UDP_SetNewPrioB0
   2131  4+1   7D29 A6   C8 47            lda   rsv_prev_render_flags_0,u
   2132  3     7D2C 2B   0A               bmi   UDP_SetNewPrioB0
   2133  4+1   7D2E A6   C8 59            lda   rsv_prev_render_flags_1,u
   2134  3     7D31 2B   05               bmi   UDP_SetNewPrioB0
   2135  8     7D33 BD   77DB             jsr   ClearObj
   2136  3     7D36 20   9D               bra   UDP_CheckEndB0
   2137                            
   2138        7D38               UDP_SetNewPrioB0
   2139  4+1   7D38 A6   43               lda   priority,u
   2140  4+1   7D3A A7   C8 36            sta   rsv_priority_0,u
   2141  3     7D3D 20   96               bra   UDP_CheckEndB0
   2142
   2143        7D3F               UDP_B1
   2144  3     7D3F 8E   6564             ldx   #Lst_Priority_Unset_1+2
   2145                            
   2146        7D42               UDP_CheckEndB1
   2147  7     7D42 BC   6562             cmpx  Lst_Priority_Unset_1       >>
   2148  3     7D45 26   07               bne   UDP_CheckPrioPrevB1
   2149                            
   2150        7D47               UDP_InitListB1
   2151  3     7D47 8E   6564             ldx   #Lst_Priority_Unset_1+2
   2152  6     7D4A BF   6562             stx   Lst_Priority_Unset_1       >>
   2153  5     7D4D 39                    rts
   2154                            
   2155        7D4E               UDP_CheckPrioPrevB1
   2156  5+3   7D4E EE   81               ldu   ,x++
   2157  5+1   7D50 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2158  3     7D53 26   11               bne   UDP_ChainPrevB1
   2159                            
   2160  4+1   7D55 A6   C8 48            lda   rsv_priority_1,u
   2161  2     7D58 48                    lsla
   2162  4     7D59 108E 653E             ldy   #Tbl_Priority_First_Entry_1>>
   2163  4+1   7D5D 31   A6               leay  a,y
   2164  5+1   7D5F EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2165  5+0   7D62 ED   A4               std   ,y
   2166  3     7D64 20   0A               bra   UDP_CheckPrioNextB1
   2167                            
   2168        7D66               UDP_ChainPrevB1
   2169  5+1   7D66 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2170  6+1   7D69 10AE C8 49            ldy   rsv_priority_prev_obj_1,u
   2171  5+1   7D6D ED   A8 4B            std   rsv_priority_next_obj_1,y
   2172
   2173        7D70               UDP_CheckPrioNextB1
   2174  5+1   7D70 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2175  3     7D73 26   11               bne   UDP_ChainNextB1
   2176
   2177  4+1   7D75 A6   C8 48            lda   rsv_priority_1,u
   2178  2     7D78 48                    lsla
   2179  4     7D79 108E 6550             ldy   #Tbl_Priority_Last_Entry_1
   2180  4+1   7D7D 31   A6               leay  a,y
   2181  5+1   7D7F EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2182  5+0   7D82 ED   A4               std   ,y
   2183  3     7D84 20   0A               bra   UDP_CheckDeleteB1
   2184                            
   2185        7D86               UDP_ChainNextB1
   2186  5+1   7D86 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2187  6+1   7D89 10AE C8 4B            ldy   rsv_priority_next_obj_1,u
   2188  5+1   7D8D ED   A8 49            std   rsv_priority_prev_obj_1,y
   2189                            
   2190        7D90               UDP_CheckDeleteB1
   2191  4+1   7D90 A6   42               lda   render_flags,u
   2192  2     7D92 84   40               anda  #render_todelete_mask
   2193  3     7D94 27   0F               beq   UDP_SetNewPrioB1
   2194  4+1   7D96 A6   C8 47            lda   rsv_prev_render_flags_0,u
   2195  3     7D99 2B   0A               bmi   UDP_SetNewPrioB1
   2196  4+1   7D9B A6   C8 59            lda   rsv_prev_render_flags_1,u
   2197  3     7D9E 2B   05               bmi   UDP_SetNewPrioB1
   2198  8     7DA0 BD   77DB             jsr   ClearObj
   2199  3     7DA3 20   9D               bra   UDP_CheckEndB1
   2200                            
   2201        7DA5               UDP_SetNewPrioB1
   2202  4+1   7DA5 A6   43               lda   priority,u
   2203  4+1   7DA7 A7   C8 48            sta   rsv_priority_1,u
   2204  3     7DAA 20   96               bra   UDP_CheckEndB1
   2205
   2206                                   INCLUD DRAWSPR
   2207                           * --------------------------------------->>
   2208                           * DrawSprites
   2209                           * ------------
   2210                           * Subroutine to draw sprites on screen
   2211                           * Read Display Priority Structure (back t>>
   2212                           * priority: 0 - unregistred
   2213                           * priority: 1 - register non moving overl>>
   2214                           * priority; 2-8 - register moving sprite >>
   2215                           *
   2216                           * input REG : none
   2217                           * --------------------------------------->>
   2218                            
   2219        7DAC               DrawSprites
   2220
   2221        7DAC               DRS_Start
   2222  5     7DAC B6   611D             lda   Glb_Cur_Wrk_Screen_Id      >>
   2223  3     7DAF 26   41               bne   DRS_P8B1
   2224                            
   2225        7DB1               DRS_P8B0
   2226  6     7DB1 BE   64D4             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2227  3     7DB4 27   03               beq   DRS_P7B0
   2228  8     7DB6 BD   7E33             jsr   DRS_ProcessEachPriorityLeve>>
   2229        7DB9               DRS_P7B0
   2230  6     7DB9 BE   64D2             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2231  3     7DBC 27   03               beq   DRS_P6B0
   2232  8     7DBE BD   7E33             jsr   DRS_ProcessEachPriorityLeve>>
   2233        7DC1               DRS_P6B0
   2234  6     7DC1 BE   64D0             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2235  3     7DC4 27   03               beq   DRS_P5B0
   2236  8     7DC6 BD   7E33             jsr   DRS_ProcessEachPriorityLeve>>
   2237        7DC9               DRS_P5B0
   2238  6     7DC9 BE   64CE             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2239  3     7DCC 27   03               beq   DRS_P4B0
   2240  8     7DCE BD   7E33             jsr   DRS_ProcessEachPriorityLeve>>
   2241        7DD1               DRS_P4B0
   2242  6     7DD1 BE   64CC             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2243  3     7DD4 27   03               beq   DRS_P3B0
   2244  8     7DD6 BD   7E33             jsr   DRS_ProcessEachPriorityLeve>>
   2245        7DD9               DRS_P3B0
   2246  6     7DD9 BE   64CA             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2247  3     7DDC 27   03               beq   DRS_P2B0
   2248  8     7DDE BD   7E33             jsr   DRS_ProcessEachPriorityLeve>>
   2249        7DE1               DRS_P2B0
   2250  6     7DE1 BE   64C8             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2251  3     7DE4 27   03               beq   DRS_P1B0
   2252  8     7DE6 BD   7E33             jsr   DRS_ProcessEachPriorityLeve>>
   2253        7DE9               DRS_P1B0
   2254  6     7DE9 BE   64C6             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2255  3     7DEC 27   03               beq   DRS_rtsB0
   2256  8     7DEE BD   7E33             jsr   DRS_ProcessEachPriorityLeve>>
   2257        7DF1               DRS_rtsB0
   2258  5     7DF1 39                    rts
   2259                            
   2260        7DF2               DRS_P8B1
   2261  6     7DF2 BE   654E             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2262  3     7DF5 27   03               beq   DRS_P7B1
   2263  8     7DF7 BD   7F02             jsr   DRS_ProcessEachPriorityLeve>>
   2264        7DFA               DRS_P7B1
   2265  6     7DFA BE   654C             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2266  3     7DFD 27   03               beq   DRS_P6B1
   2267  8     7DFF BD   7F02             jsr   DRS_ProcessEachPriorityLeve>>
   2268        7E02               DRS_P6B1
   2269  6     7E02 BE   654A             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2270  3     7E05 27   03               beq   DRS_P5B1
   2271  8     7E07 BD   7F02             jsr   DRS_ProcessEachPriorityLeve>>
   2272        7E0A               DRS_P5B1
   2273  6     7E0A BE   6548             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2274  3     7E0D 27   03               beq   DRS_P4B1
   2275  8     7E0F BD   7F02             jsr   DRS_ProcessEachPriorityLeve>>
   2276        7E12               DRS_P4B1
   2277  6     7E12 BE   6546             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2278  3     7E15 27   03               beq   DRS_P3B1
   2279  8     7E17 BD   7F02             jsr   DRS_ProcessEachPriorityLeve>>
   2280        7E1A               DRS_P3B1
   2281  6     7E1A BE   6544             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2282  3     7E1D 27   03               beq   DRS_P2B1
   2283  8     7E1F BD   7F02             jsr   DRS_ProcessEachPriorityLeve>>
   2284        7E22               DRS_P2B1
   2285  6     7E22 BE   6542             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2286  3     7E25 27   03               beq   DRS_P1B1
   2287  8     7E27 BD   7F02             jsr   DRS_ProcessEachPriorityLeve>>
   2288        7E2A               DRS_P1B1
   2289  6     7E2A BE   6540             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2290  3     7E2D 27   03               beq   DRS_rtsB1
   2291  8     7E2F BD   7F02             jsr   DRS_ProcessEachPriorityLeve>>
   2292        7E32               DRS_rtsB1
   2293  5     7E32 39                    rts
   2294
   2295        7E33               DRS_ProcessEachPriorityLevelB0
   2296  4+1   7E33 A6   88 29            lda   rsv_render_flags,x
   2297  2     7E36 84   04               anda  #rsv_render_displaysprite_m>>
   2298  3     7E38 27   6A               beq   DRS_NextObjectB0
   2299  4+1   7E3A A6   88 47            lda   rsv_prev_render_flags_0,x
   2300  3     7E3D 2B   65               bmi   DRS_NextObjectB0
   2301  4+1   7E3F A6   02               lda   render_flags,x
   2302  2     7E41 84   04               anda  #render_overlay_mask
   2303  3     7E43 26   67               bne   DRS_DrawWithoutBackupB0
   2304  5+1   7E45 EE   88 30            ldu   rsv_mapping_frame,x
   2305  4+1   7E48 A6   46               lda   erase_nb_cell,u
   2306  8     7E4A BD   7F9F             jsr   BgBufferAlloc              >>
   2307  5     7E4D 108C 0000             cmpy  #$0000                     >>
   2308  3     7E51 27   51               beq   DRS_NextObjectB0           >>
   2309  5+1   7E53 EC   88 12            ldd   xy_pixel,x                 >>
   2310  4+1   7E56 A0   88 2C            suba  rsv_image_center_offset,x
   2311  8     7E59 BD   7ED0             jsr   DRS_XYToAddress
   2312                           *        ldu   rsv_image_subset,x
   2313                           *        stu   rsv_prev_image_subset_0,x
   2314  5+1   7E5C EE   88 30            ldu   rsv_mapping_frame,x        >>
   2315  5+1   7E5F EF   88 3D            stu   rsv_prev_mapping_frame_0,x >>
   2316  4+1   7E62 A6   40               lda   page_draw_routine,u
   2317  5     7E64 B7   E7E5             sta   $E7E5                      >>
   2318  6     7E67 BF   7E78             stx   DRS_dyn3B0+1               >>
   2319  5+1   7E6A AE   41               ldx   draw_routine,u
   2320  4+0   7E6C 33   A4               leau  ,y                         >>
   2321  4     7E6E 108E 6124             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2322  6     7E72 FC   6122             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2323  7+0   7E75 AD   84               jsr   ,x                         >>
   2324        7E77               DRS_dyn3B0
   2325  3     7E77 8E   0000             ldx   #$0000                     >>
   2326  5+1   7E7A EF   88 3F            stu   rsv_bgdata_0,x             >>
   2327  5+1   7E7D EC   88 12            ldd   xy_pixel,x                 >>
   2328  2     7E80 44                    lsra                             >>
   2329  5+1   7E81 ED   88 41            std   rsv_prev_xy_pixel_0,x      >>
   2330  5+1   7E84 EC   88 32            ldd   rsv_xy1_pixel,x            >>
   2331  5+1   7E87 ED   88 43            std   rsv_prev_xy1_pixel_0,x     >>
   2332  5+1   7E8A EC   88 34            ldd   rsv_xy2_pixel,x            >>
   2333  5+1   7E8D ED   88 45            std   rsv_prev_xy2_pixel_0,x     >>
   2334  4+1   7E90 A6   88 47            lda   rsv_prev_render_flags_0,x
   2335  2     7E93 8A   80               ora   #rsv_prev_render_onscreen_m>>
   2336  4+1   7E95 E6   02               ldb   render_flags,x
   2337  2     7E97 C5   04               bitb  #render_overlay_mask
   2338  3     7E99 27   04               beq   DRS_NoOverlayB0
   2339  2     7E9B 8A   01               ora   #rsv_prev_render_overlay_ma>>
   2340  3     7E9D 20   02               bra   DRS_UpdateRenderFlagB0
   2341                            
   2342        7E9F               DRS_NoOverlayB0
   2343  2     7E9F 84   FE               anda   #:rsv_prev_render_overlay_>>
   2344
   2345        7EA1               DRS_UpdateRenderFlagB0
   2346  4+1   7EA1 A7   88 47            sta   rsv_prev_render_flags_0,x  >>
   2347                            
   2348        7EA4               DRS_NextObjectB0
   2349  5+1   7EA4 AE   88 39            ldx   rsv_priority_next_obj_0,x
   2350  6     7EA7 1026 FF88             lbne  DRS_ProcessEachPriorityLeve>>
   2351  5     7EAB 39                    rts
   2352                            
   2353        7EAC               DRS_DrawWithoutBackupB0
   2354  5+1   7EAC EC   88 12            ldd   xy_pixel,x                 >>
   2355  4+1   7EAF A0   88 2C            suba  rsv_image_center_offset,x
   2356  8     7EB2 BD   7ED0             jsr   DRS_XYToAddress
   2357  5+1   7EB5 EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2358  5+1   7EB8 EF   88 3D            stu   rsv_prev_mapping_frame_0,x >>
   2359  4+1   7EBB A6   40               lda   page_draw_routine,u
   2360  5     7EBD B7   E7E5             sta   $E7E5                      >>
   2361  6     7EC0 BF   7E78             stx   DRS_dyn3B0+1               >>
   2362  5+1   7EC3 AE   41               ldx   draw_routine,u
   2363  4     7EC5 108E 6124             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2364  6     7EC9 FC   6122             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2365  7+0   7ECC AD   84               jsr   ,x                         >>
   2366  3     7ECE 20   A7               bra   DRS_dyn3B0
   2367
   2368                           *****************************************>>
   2369                           * x_pixel and y_pixel coordinate system
   2370                           * x coordinates:
   2371                           *    - off-screen left 00-2F (0-47)
   2372                           *    - on screen 30-CF (48-207)
   2373                           *    - off-screen right D0-FF (208-255)
   2374                           *
   2375                           * y coordinates:
   2376                           *    - off-screen top 00-1B (0-27)
   2377                           *    - on screen 1C-E3 (28-227)
   2378                           *    - off-screen bottom E4-FF (228-255)
   2379                           *****************************************>>
   2380
   2381        7ED0               DRS_XYToAddress
   2382  2     7ED0 80   30               suba  #$30
   2383  3     7ED2 24   03               bcc   DRS_XYToAddressPositive
   2384  2     7ED4 80   60               suba  #$60                       >>
   2385  2     7ED6 5A                    decb
   2386        7ED7               DRS_XYToAddressPositive
   2387  2     7ED7 C0   1C               subb  #$1C                       >>
   2388  2     7ED9 44                    lsra                             >>
   2389  2     7EDA 44                    lsra                             >>
   2390  3     7EDB 25   12               bcs   DRS_XYToAddressRAM2First   >>
   2391        7EDD               DRS_XYToAddressRAM1First
   2392  5     7EDD B7   7EE5             sta   DRS_dyn1+2
   2393  2     7EE0 86   28               lda   #$28                       >>
   2394  11    7EE2 3D                    mul
   2395        7EE3               DRS_dyn1
   2396  4     7EE3 C3   0000             addd  #$0000                     >>
   2397  6     7EE6 FD   6124             std   Glb_Sprite_Screen_Pos_Part2>>
   2398  2     7EE9 8A   20               ora   #$20                       >>
   2399  6     7EEB FD   6122             std   Glb_Sprite_Screen_Pos_Part1>>
   2400  5     7EEE 39                    rts
   2401        7EEF               DRS_XYToAddressRAM2First
   2402  5     7EEF B7   7EF7             sta   DRS_dyn2+2
   2403  2     7EF2 86   28               lda   #$28                       >>
   2404  11    7EF4 3D                    mul
   2405        7EF5               DRS_dyn2
   2406  4     7EF5 C3   2000             addd  #$2000                     >>
   2407  6     7EF8 FD   6124             std   Glb_Sprite_Screen_Pos_Part2>>
   2408  4     7EFB 83   1FFF             subd  #$1FFF
   2409  6     7EFE FD   6122             std   Glb_Sprite_Screen_Pos_Part1>>
   2410  5     7F01 39                    rts
   2411                            
   2412        7F02               DRS_ProcessEachPriorityLevelB1
   2413  4+1   7F02 A6   88 29            lda   rsv_render_flags,x
   2414  2     7F05 84   04               anda  #rsv_render_displaysprite_m>>
   2415  3     7F07 27   6A               beq   DRS_NextObjectB1
   2416  4+1   7F09 A6   88 59            lda   rsv_prev_render_flags_1,x
   2417  3     7F0C 2B   65               bmi   DRS_NextObjectB1
   2418  4+1   7F0E A6   02               lda   render_flags,x
   2419  2     7F10 84   04               anda  #render_overlay_mask
   2420  3     7F12 26   67               bne   DRS_DrawWithoutBackupB1
   2421  5+1   7F14 EE   88 30            ldu   rsv_mapping_frame,x
   2422  4+1   7F17 A6   46               lda   erase_nb_cell,u
   2423  8     7F19 BD   7F9F             jsr   BgBufferAlloc              >>
   2424  5     7F1C 108C 0000             cmpy  #$0000                     >>
   2425  3     7F20 27   51               beq   DRS_NextObjectB1           >>
   2426  5+1   7F22 EC   88 12            ldd   xy_pixel,x                 >>
   2427  4+1   7F25 A0   88 2C            suba  rsv_image_center_offset,x
   2428  8     7F28 BD   7ED0             jsr   DRS_XYToAddress
   2429                                   *ldu   rsv_image_subset,x
   2430                                   *stu   rsv_prev_image_subset_1,x
   2431  5+1   7F2B EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2432  5+1   7F2E EF   88 4F            stu   rsv_prev_mapping_frame_1,x >>
   2433  4+1   7F31 A6   40               lda   page_draw_routine,u
   2434  5     7F33 B7   E7E5             sta   $E7E5                      >>
   2435  6     7F36 BF   7F47             stx   DRS_dyn3B1+1               >>
   2436  5+1   7F39 AE   41               ldx   draw_routine,u
   2437  4+0   7F3B 33   A4               leau  ,y                         >>
   2438  4     7F3D 108E 6124             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2439  6     7F41 FC   6122             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2440  7+0   7F44 AD   84               jsr   ,x                         >>
   2441        7F46               DRS_dyn3B1
   2442  3     7F46 8E   0000             ldx   #$0000                     >>
   2443  5+1   7F49 EF   88 51            stu   rsv_bgdata_1,x             >>
   2444  5+1   7F4C EC   88 12            ldd   xy_pixel,x                 >>
   2445  2     7F4F 44                    lsra                             >>
   2446  5+1   7F50 ED   88 53            std   rsv_prev_xy_pixel_1,x      >>
   2447  5+1   7F53 EC   88 32            ldd   rsv_xy1_pixel,x            >>
   2448  5+1   7F56 ED   88 55            std   rsv_prev_xy1_pixel_1,x     >>
   2449  5+1   7F59 EC   88 34            ldd   rsv_xy2_pixel,x            >>
   2450  5+1   7F5C ED   88 57            std   rsv_prev_xy2_pixel_1,x     >>
   2451  4+1   7F5F A6   88 59            lda   rsv_prev_render_flags_1,x
   2452  2     7F62 8A   80               ora   #rsv_prev_render_onscreen_m>>
   2453  4+1   7F64 E6   02               ldb   render_flags,x
   2454  2     7F66 C5   04               bitb  #render_overlay_mask
   2455  3     7F68 27   04               beq   DRS_NoOverlayB1
   2456  2     7F6A 8A   01               ora   #rsv_prev_render_overlay_ma>>
   2457  3     7F6C 20   02               bra   DRS_UpdateRenderFlagB1
   2458                            
   2459        7F6E               DRS_NoOverlayB1
   2460  2     7F6E 84   FE               anda   #:rsv_prev_render_overlay_>>
   2461
   2462        7F70               DRS_UpdateRenderFlagB1
   2463  4+1   7F70 A7   88 59            sta   rsv_prev_render_flags_1,x  >>
   2464                            
   2465        7F73               DRS_NextObjectB1
   2466  5+1   7F73 AE   88 4B            ldx   rsv_priority_next_obj_1,x
   2467  6     7F76 1026 FF88             lbne  DRS_ProcessEachPriorityLeve>>
   2468  5     7F7A 39                    rts
   2469                            
   2470        7F7B               DRS_DrawWithoutBackupB1
   2471  5+1   7F7B EC   88 12            ldd   xy_pixel,x                 >>
   2472  4+1   7F7E A0   88 2C            suba  rsv_image_center_offset,x
   2473  8     7F81 BD   7ED0             jsr   DRS_XYToAddress
   2474  5+1   7F84 EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2475  5+1   7F87 EF   88 4F            stu   rsv_prev_mapping_frame_1,x >>
   2476  4+1   7F8A A6   40               lda   page_draw_routine,u
   2477  5     7F8C B7   E7E5             sta   $E7E5                      >>
   2478  6     7F8F BF   7F47             stx   DRS_dyn3B1+1               >>
   2479  5+1   7F92 AE   41               ldx   draw_routine,u
   2480  4     7F94 108E 6124             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2481  6     7F98 FC   6122             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2482  7+0   7F9B AD   84               jsr   ,x                         >>
   2483  3     7F9D 20   A7               bra   DRS_dyn3B1
   2484
   2485                                   INCLUD BGBALLOC
   2486                           * --------------------------------------->>
   2487                           * BgBufferAlloc
   2488                           * -------------
   2489                           * Subroutine to allocate memory into back>>
   2490                           *
   2491                           * input  REG : [a] number of requested ce>>
   2492                           * output REG : [y] cell_end or 0000 if no>>
   2493                           * --------------------------------------->>
   2494
   2495        7F9F               BgBufferAlloc
   2496  5+3   7F9F 34   14               pshs  b,x
   2497  5     7FA1 F6   611D             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2498  3     7FA4 26   09               bne   BBA1                       >>
   2499                            
   2500        7FA6               BBA0
   2501  3     7FA6 8E   6126             ldx   #Lst_FreeCellFirstEntry_0  >>
   2502  7     7FA9 10BE 6126             ldy   Lst_FreeCellFirstEntry_0   >>
   2503  3     7FAD 20   07               bra   BBA_Next
   2504                            
   2505        7FAF               BBA1
   2506  3     7FAF 8E   62F5             ldx   #Lst_FreeCellFirstEntry_1  >>
   2507  7     7FB2 10BE 62F5             ldy   Lst_FreeCellFirstEntry_1   >>
   2508                            
   2509        7FB6               BBA_Next
   2510  3     7FB6 27   38               beq   BBA_rts                    >>
   2511  4+1   7FB8 A1   20               cmpa  nb_cells,y                 >>
   2512  3     7FBA 27   09               beq   BBA_FitCell                >>
   2513  3     7FBC 23   12               bls   BBA_DivideCell             >>
   2514  4+1   7FBE 30   25               leax  next_entry,y               >>
   2515  6+1   7FC0 10AE 25               ldy   next_entry,y               >>
   2516  3     7FC3 20   F1               bra   BBA_Next
   2517                            
   2518        7FC5               BBA_FitCell
   2519  5+1   7FC5 EC   25               ldd   next_entry,y
   2520  5+0   7FC7 ED   84               std   ,x                         >>
   2521  6+1   7FC9 6F   20               clr   nb_cells,y                 >>
   2522  6+1   7FCB 10AE 23               ldy   cell_end,y                 >>
   2523  3     7FCE 20   20               bra   BBA_rts
   2524                            
   2525        7FD0               BBA_DivideCell
   2526  5     7FD0 B7   7FD6             sta   BBA_dyn+1
   2527  4+1   7FD3 E6   20               ldb   nb_cells,y
   2528        7FD5               BBA_dyn
   2529  2     7FD5 C0   00               subb  #$00                       >>
   2530  4+1   7FD7 E7   20               stb   nb_cells,y                 >>
   2531                            
   2532  2     7FD9 C6   40               ldb   #cell_size
   2533  11    7FDB 3D                    mul
   2534  2     7FDC 88   FF               eora  #$FF                       >>
   2535  2     7FDE C8   FF               eorb  #$FF                       >>
   2536  4     7FE0 C3   0001             addd  #$01
   2537  5+1   7FE3 AE   23               ldx   cell_end,y
   2538  6     7FE5 BF   7FEE             stx   cell_end_return+2
   2539  4+4   7FE8 30   8B               leax  d,x                        >>
   2540  5+1   7FEA AF   23               stx   cell_end,y                 >>
   2541        7FEC               cell_end_return
   2542  4     7FEC 108E 0000             ldy   #$0000
   2543        7FF0               BBA_rts
   2544  5+5   7FF0 35   94               puls  b,x,pc
   2545
   2546                                   INCLUD BGBFREE
   2547                           * --------------------------------------->>
   2548                           * BgBufferFree
   2549                           * ------------
   2550                           * Subroutine to free memory from backgrou>>
   2551                           *
   2552                           * input  REG : [x] cell_start
   2553                           *              [y] cell_end
   2554                           * output REG : none
   2555                           * --------------------------------------->>
   2556
   2557        7FF2               BgBufferFree
   2558  5+4   7FF2 34   46               pshs  d,u
   2559  3     7FF4 CC   0000             ldd   #$0000
   2560  6     7FF7 FD   8054             std   BBF_SetNewEntryNextentry+1 >>
   2561  5     7FFA F6   611D             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2562  3     7FFD 26   16               bne   BBF1                       >>
   2563                            
   2564        7FFF               BBF0
   2565  5+1   7FFF EE   C8 3D            ldu   rsv_prev_mapping_frame_0,u >>
   2566  4+1   8002 A6   46               lda   erase_nb_cell,u            >>
   2567  3     8004 CE   6126             ldu   #Lst_FreeCellFirstEntry_0
   2568  6     8007 FF   8059             stu   BBF_SetNewEntryPrevLink+1  >>
   2569  3     800A CE   6128             ldu   #Lst_FreeCell_0            >>
   2570  6     800D FF   8042             stu   BBF_AddNewEntryAtEnd+1     >>
   2571  6     8010 FE   6126             ldu   Lst_FreeCellFirstEntry_0   >>
   2572  3     8013 20   14               bra   BBF_Next
   2573                            
   2574        8015               BBF1
   2575  5+1   8015 EE   C8 4F            ldu   rsv_prev_mapping_frame_1,u
   2576  4+1   8018 A6   46               lda   erase_nb_cell,u
   2577  3     801A CE   62F5             ldu   #Lst_FreeCellFirstEntry_1
   2578  6     801D FF   8059             stu   BBF_SetNewEntryPrevLink+1
   2579  3     8020 CE   62F7             ldu   #Lst_FreeCell_1
   2580  6     8023 FF   8042             stu   BBF_AddNewEntryAtEnd+1
   2581  6     8026 FE   62F5             ldu   Lst_FreeCellFirstEntry_1
   2582                            
   2583        8029               BBF_Next
   2584  3     8029 27   16               beq   BBF_AddNewEntryAtEnd       >>
   2585  7+1   802B 10AC 41               cmpy  cell_start,u               >>
   2586  3     802E 27   2D               beq   BBF_ExpandAtStart          >>
   2587  3     8030 22   4C               bhi   BBF_ExpandAtEnd            >>
   2588  5+1   8032 EE   45               ldu   next_entry,u               >>
   2589  6     8034 1F   30               tfr   u,d
   2590  4     8036 C3   0005             addd  #next_entry                >>
   2591  6     8039 FD   8059             std   BBF_SetNewEntryPrevLink+1
   2592  3     803C 20   EB               bra   BBF_Next
   2593
   2594        803E               BBF_AddNewEntry
   2595  6     803E FF   8054             stu   BBF_SetNewEntryNextentry+1
   2596        8041               BBF_AddNewEntryAtEnd
   2597  3     8041 CE   0000             ldu   #$0000                     >>
   2598        8044               BBF_FindFreeSlot
   2599  4+1   8044 E6   40               ldb   nb_cells,u                 >>
   2600  3     8046 27   04               beq   BBF_SetNewEntry            >>
   2601  4+1   8048 33   47               leau  entry_size,u               >>
   2602  3     804A 20   F8               bra   BBF_FindFreeSlot           >>
   2603        804C               BBF_SetNewEntry
   2604  4+1   804C A7   40               sta   nb_cells,u                 >>
   2605  5+1   804E AF   41               stx   cell_start,u               >>
   2606  6+1   8050 10AF 43               sty   cell_end,u                 >>
   2607        8053               BBF_SetNewEntryNextentry
   2608  3     8053 8E   0000             ldx   #$0000                     >>
   2609  5+1   8056 AF   45               stx   next_entry,u               >>
   2610        8058               BBF_SetNewEntryPrevLink
   2611  6     8058 FF   FFFF             stu   $FFFF                      >>
   2612  3     805B 20   2C               bra   BBF_rts
   2613
   2614        805D               BBF_ExpandAtStart
   2615  5+1   805D AF   41               stx   cell_start,u
   2616  4+1   805F AB   40               adda  nb_cells,u
   2617  4+1   8061 A7   40               sta   nb_cells,u
   2618  6+1   8063 10AE 45               ldy   next_entry,u
   2619  3     8066 27   21               beq   BBF_rts
   2620        8068               BBF_Join
   2621  6+1   8068 AC   23               cmpx  cell_end,y
   2622  3     806A 26   1D               bne   BBF_rts
   2623  5+1   806C EC   21               ldd   cell_start,y
   2624  5+1   806E ED   41               std   cell_start,u
   2625  4+1   8070 A6   20               lda   nb_cells,y
   2626  4+1   8072 AB   40               adda  nb_cells,u
   2627  4+1   8074 A7   40               sta   nb_cells,u
   2628  6+1   8076 6F   20               clr   nb_cells,y                 >>
   2629  5+1   8078 EC   25               ldd   next_entry,y
   2630  5+1   807A ED   45               std   next_entry,u               >>
   2631  3     807C 20   0B               bra   BBF_rts
   2632
   2633        807E               BBF_ExpandAtEnd
   2634  6+1   807E AC   43               cmpx  cell_end,u
   2635  3     8080 26   BC               bne   BBF_AddNewEntry
   2636  6+1   8082 10AF 43               sty   cell_end,u
   2637  4+1   8085 AB   40               adda  nb_cells,u
   2638  4+1   8087 A7   40               sta   nb_cells,u
   2639                            
   2640        8089               BBF_rts
   2641  5+6   8089 35   C6               puls  d,u,pc
   2642
   2643                                   INCLUD CLRCARTM
   2644                           *****************************************>>
   2645                           * Clear memory in cardtridge area
   2646                           *****************************************>>
   2647
   2648        808B               ClearCartMem *@globals
   2649  5+3   808B 34   48               pshs  u,dp
   2650  7     808D 10FF 80BB             sts   ClearCartMem_3+2
   2651  4     8091 10CE 4000             lds   #$4000
   2652  4+0   8095 33   84               leau  ,x
   2653  4+0   8097 31   84               leay  ,x
   2654  6     8099 1F   10               tfr   x,d
   2655  6     809B 1F   8B               tfr   a,dp
   2656        809D               ClearCartMem_2
   2657  5+9   809D 34   7E               pshs  u,y,x,dp,b,a
   2658  5+9   809F 34   7E               pshs  u,y,x,dp,b,a
   2659  5+9   80A1 34   7E               pshs  u,y,x,dp,b,a
   2660  5+9   80A3 34   7E               pshs  u,y,x,dp,b,a
   2661  5+9   80A5 34   7E               pshs  u,y,x,dp,b,a
   2662  5+9   80A7 34   7E               pshs  u,y,x,dp,b,a
   2663  5+9   80A9 34   7E               pshs  u,y,x,dp,b,a
   2664  5+9   80AB 34   7E               pshs  u,y,x,dp,b,a
   2665  5+9   80AD 34   7E               pshs  u,y,x,dp,b,a
   2666  5+7   80AF 34   78               pshs  u,y,x,dp
   2667  5     80B1 118C 0010             cmps  #$0010
   2668  3     80B5 26   E6               bne   ClearCartMem_2
   2669  4+0   80B7 33   E4               leau  ,s
   2670        80B9               ClearCartMem_3
   2671  4     80B9 10CE 0000             lds   #$0000        ; start of me>>
   2672  5+6   80BD 36   36               pshu  d,x,y         ; saving 12 b>>
   2673  5+6   80BF 36   36               pshu  d,x,y         ; DEPENDENCY >>
   2674  5+4   80C1 36   16               pshu  d,x
   2675  5+5   80C3 35   C8               puls  dp,u,pc
   2676
   2677
   2678                                   INCLUD UPDTPAL
   2679                           * --------------------------------------->>
   2680                           * UpdatePalette
   2681                           * -------------
   2682                           * Subroutine to update palette
   2683                           * should be called just after WaitVBL
   2684                           *
   2685                           * input REG : none
   2686                           * reset REG : [d] [x] [y]
   2687                           * --------------------------------------->>
   2688
   2689        80C5 FF            Refresh_palette fcb   $FF            *@gl>>
   2690        80C6 80C8          Cur_palette     fdb   Dyn_palette    *@gl>>
   2691        80C8               Dyn_palette     rmb   $20,0          *@gl>>
   2692        80E8               Black_palette   rmb   $20,0          *@gl>>
   2693        8108 FF0F          White_palette   fdb   $ff0f          *@gl>>
   2694        810A FF0F                          fdb   $ff0f
   2695        810C FF0F                          fdb   $ff0f
   2696        810E FF0F                          fdb   $ff0f
   2697        8110 FF0F                          fdb   $ff0f
   2698        8112 FF0F                          fdb   $ff0f
   2699        8114 FF0F                          fdb   $ff0f
   2700        8116 FF0F                          fdb   $ff0f
   2701        8118 FF0F                          fdb   $ff0f
   2702        811A FF0F                          fdb   $ff0f
   2703        811C FF0F                          fdb   $ff0f
   2704        811E FF0F                          fdb   $ff0f
   2705        8120 FF0F                          fdb   $ff0f
   2706        8122 FF0F                          fdb   $ff0f
   2707        8124 FF0F                          fdb   $ff0f
   2708        8126 FF0F                          fdb   $ff0f
   2709
   2710        8128               UpdatePalette *@globals
   2711  7     8128 7D   80C5             tst   Refresh_palette
   2712  3     812B 26   22               bne   UPP_return
   2713                            
   2714  4     812D 108E 0195             ldy   #0405                    * >>
   2715        8131               UPP_Tempo
   2716  4+1   8131 31   3F               leay  -1,y
   2717  3     8133 26   FC               bne   UPP_Tempo                * >>
   2718  2     8135 C6   E7               ldb   #$E7
   2719  6     8137 1F   9B               tfr   B,DP
   2720  6     8139 BE   80C6            ldx   Cur_palette
   2721  6     813C 0F   DB              clr   <$DB                     * i>>
   2722  4     813E 108E 0010             LDY   #$0010                     >>
   2723        8142               UPP_SetColor
   2724  5+3   8142 EC   81              ldd   ,x++                        >>
   2725  4     8144 97   DA              sta   <$DA                        >>
   2726  4     8146 D7   DA              stb   <$DA                     * s>>
   2727  4+1   8148 31   3F              leay  -1,y
   2728  3     814A 26   F6              bne   UPP_SetColor             * o>>
   2729  7     814C 73   80C5            com   Refresh_palette          * u>>
   2730        814F               UPP_return
   2731  5     814F 39                    rts
   2732
   2733                            
   2734                            
   2735
   2736
   2737                                   INCLUD PLAYPCM
   2738                           * --------------------------------------->>
   2739                           * PlayPCM
   2740                           * ------------
   2741                           * Subroutine to play a PCM sample at 16kH>>
   2742                           * This will freeze anything running
   2743                           * DAC Init from Mission: Liftoff (merci P>>
   2744                           *
   2745                           * input REG : [y] Pcm_ index to play
   2746                           * reset REG : [d] [x] [y]
   2747                           * --------------------------------------->>
   2748
   2749        8150               PlayPCM *@globals
   2750
   2751  5     8150 B6   E7E5             lda   $E7E5
   2752  5     8153 B7   81A2             sta   PlayPCM_RestorePage+1
   2753
   2754  3     8156 CC   FB3F             ldd   #$fb3f  ! Mute by CRA to
   2755  5     8159 B4   E7CF             anda  $e7cf   ! avoid sound when
   2756  5     815C B7   E7CF             sta   $e7cf   ! $e7cd written
   2757  5     815F F7   E7CD             stb   $e7cd   ! Full sound line
   2758  2     8162 8A   04               ora   #$04    ! Disable mute by
   2759  5     8164 B7   E7CF             sta   $e7cf   ! CRA and sound
   2760                            
   2761        8167               PlayPCM_ReadChunk
   2762  4+1   8167 A6   20               lda   pcm_page,y                 >>
   2763  2     8169 81   FF               cmpa  #$FF
   2764  3     816B 27   1B               beq   PlayPCM_End
   2765  5     816D B7   E7E5             sta   $E7E5                      >>
   2766  5+1   8170 AE   21               ldx   pcm_start_addr,y           >>
   2767                            
   2768        8172               PlayPCM_Loop
   2769  4+2   8172 A6   80               lda   ,x+
   2770  5     8174 B7   E7CD             sta   $e7cd                      >>
   2771  6+1   8177 AC   23               cmpx  pcm_end_addr,y
   2772  3     8179 27   07               beq   PlayPCM_NextChunk
   2773  11    817B 3D                    mul                              >>
   2774  11    817C 3D                    mul
   2775  11    817D 3D                    mul
   2776  6     817E 1F   89               tfr   a,b
   2777  3     8180 20   F0               bra   PlayPCM_Loop               >>
   2778                            
   2779        8182               PlayPCM_NextChunk
   2780  4+1   8182 31   25               leay  pcm_meta_size,y
   2781  11    8184 3D                    mul                              >>
   2782  2     8185 12                    nop
   2783  3     8186 20   DF               bra   PlayPCM_ReadChunk
   2784                            
   2785        8188               PlayPCM_End
   2786  2     8188 86   00               lda   #$00
   2787  5     818A B7   E7CD             sta   $e7cd
   2788                            
   2789  3     818D CC   FBFC             ldd   #$fbfc  ! Mute by CRA to
   2790  5     8190 B4   E7CF             anda  $e7cf   ! avoid sound when
   2791  5     8193 B7   E7CF             sta   $e7cf   ! $e7cd is written
   2792  5     8196 F4   E7CD             andb  $e7cd   ! Activate
   2793  5     8199 F7   E7CD             stb   $e7cd   ! joystick port
   2794  2     819C 8A   04               ora   #$04    ! Disable mute by
   2795  5     819E B7   E7CF             sta   $e7cf   ! CRA + joystick
   2796
   2797        81A1               PlayPCM_RestorePage
   2798  2     81A1 86   00               lda   #$00
   2799  5     81A3 B7   E7E5             sta   $E7E5
   2800                            
   2801  5     81A6 39                    rts
   2802
   2803
   2804                                   INCLUD PSGLIB
   2805                           * --------------------------------------->>
   2806                           * PSGlib
   2807                           * ------------
   2808                           * Converted to 6809 from:
   2809                           * PSGlib - Programmable Sound Generator a>>
   2810                           *          https://github.com/sverx/PSGli>>
   2811                           *
   2812                           * Typical workflow:
   2813                           * 1) You (or a friend of yours) track one>>
   2814                           * 2) Optional, but warmly suggested: opti>>
   2815                           * 3) Convert the VGM to PSG file(s) using>>
   2816                           * 4) Optional, suggested: compress the PS>>
   2817                           * 5) include the library and 'incbin' the>>
   2818                           * 6) call PSGInit once somewhere near the>>
   2819                           * 7) Set up a steady interrupt (vertical >>
   2820                           * 8) Start/stop tunes when needed using P>>
   2821                           * - Looping SFXs are supported too: fire >>
   2822                           * - Tunes can be set to run just once ins>>
   2823                           * - To check if a tune is still playing u>>
   2824                           *
   2825                           * PSGlib functions reference
   2826                           * ==========================
   2827                           *
   2828                           * engine initializer function
   2829                           * ---------------------------
   2830                           *
   2831                           * **PSGInit**: initializes the PSG engine>>
   2832                           * - no required parameters
   2833                           * - no return values
   2834                           * - destroys A
   2835                           *
   2836                           * functions for music
   2837                           * -------------------
   2838                           *
   2839                           * **PSGFrame**: processes a music frame
   2840                           * - no required parameters
   2841                           * - no return values
   2842                           * - destroys A,B,X
   2843                           *
   2844                           * **PSGPlay** / **PSGPlayNoRepeat**: star>>
   2845                           * - *needs* the address of the PSG to sta>>
   2846                           * - no return values
   2847                           * - destroys A
   2848                           *
   2849                           * **PSGStop**: stops (pauses) the music (>>
   2850                           * - no required parameters
   2851                           * - no return values
   2852                           * - destroys A
   2853                           *
   2854                           * **PSGResume**: resume the previously st>>
   2855                           * - no required parameters
   2856                           * - no return values
   2857                           * - destroys A
   2858                           *
   2859                           * **PSGCancelLoop**: sets the currently l>>
   2860                           * - no required parameters
   2861                           * - no return values
   2862                           * - destroys A
   2863                           *
   2864                           * **PSGGetStatus**: gets the current stat>>
   2865                           * - no required parameters
   2866                           * - *returns* `PSG_PLAYING` in register A>>
   2867                           *
   2868                           * functions for SFX
   2869                           * -----------------
   2870                           *
   2871                           * **PSGSFXFrame**: processes a SFX frame
   2872                           * - no required parameters
   2873                           * - no return values
   2874                           * - destroys A,B,Y
   2875                           *
   2876                           * **PSGSFXPlay** / **PSGSFXPlayLoop**: st>>
   2877                           * - *needs* the address of the SFX to sta>>
   2878                           * - *needs* a mask indicating which chann>>
   2879                           * - destroys A
   2880                           *
   2881                           * **PSGSFXStop**: stops the SFX (leaving >>
   2882                           * - no required parameters
   2883                           * - no return values
   2884                           * - destroys A
   2885                           *
   2886                           * **PSGSFXCancelLoop**: sets the currentl>>
   2887                           * - no required parameters
   2888                           * - no return values
   2889                           * - destroys A
   2890                           *
   2891                           * **PSGSFXGetStatus**: gets the current s>>
   2892                           * - no required parameters
   2893                           * - *returns* `PSG_PLAYING` in register A>>
   2894                           *
   2895                           * functions for music volume and hardware>>
   2896                           * --------------------------------------->>
   2897                           *
   2898                           * **PSGSetMusicVolumeAttenuation**: sets >>
   2899                           * - *needs* the volume attenuation value >>
   2900                           * - no return values
   2901                           * - destroys A
   2902                           *
   2903                           * **PSGSilenceChannels**: sets all hardwa>>
   2904                           * - no required parameters
   2905                           * - no return values
   2906                           * - destroys A
   2907                           *
   2908                           * **PSGRestoreVolumes**: resets silenced >>
   2909                           * - no required parameters
   2910                           * - no return values
   2911                           * - destroys A
   2912                           *
   2913                           * --------------------------------------->>
   2914
   2915                  0000     PSG_STOPPED         equ 0
   2916                  0001     PSG_PLAYING         equ 1
   2917
   2918                  E7B0     PSGDataPort         equ $e7b0
   2919
   2920                  0080     PSGLatch            equ $80
   2921                  0040     PSGData             equ $40
   2922
   2923                  0000     PSGChannel0         equ $00
   2924                  0020     PSGChannel1         equ $20
   2925                  0040     PSGChannel2         equ $40
   2926                  0060     PSGChannel3         equ $60
   2927                  0010     PSGVolumeData       equ $10
   2928
   2929                  0038     PSGWait             equ $38
   2930                  0008     PSGSubString        equ $08
   2931                  0001     PSGLoop             equ $01
   2932                  0000     PSGEnd              equ $00
   2933
   2934                  0001     SFX_CHANNEL2        equ $01
   2935                  0002     SFX_CHANNEL3        equ $02
   2936                  0003     SFX_CHANNELS2AND3   equ SFX_CHANNEL2!SFX_>>
   2937
   2938                           * ***************************************>>
   2939                           * initializes the PSG 'engine'
   2940                           * destroys A
   2941
   2942        81A7               PSGInit *@globals
   2943  2     81A7 86   00               lda   #PSG_STOPPED               >>
   2944  5     81A9 B7   85A4             sta   PSGMusicStatus             >>
   2945  5     81AC B7   85BE             sta   PSGSFXStatus               >>
   2946  5     81AF B7   85BA             sta   PSGChannel2SFX             >>
   2947  5     81B2 B7   85BB             sta   PSGChannel3SFX             >>
   2948  5     81B5 B7   85B9             sta   PSGMusicVolumeAttenuation  >>
   2949  5     81B8 39                    rts
   2950
   2951                           * ***************************************>>
   2952                           * receives in X the address of the PSG to>>
   2953                           * destroys A
   2954
   2955        81B9               PSGPlayNoRepeat *@globals
   2956  2     81B9 86   00               lda   #0                         >>
   2957  3     81BB 20   02               bra   PSGPlay1
   2958        81BD               PSGPlay
   2959  2     81BD 86   01               lda   #1                         >>
   2960        81BF               PSGPlay1
   2961  5     81BF B7   85AD             sta   PSGLoopFlag
   2962  7     81C2 8D   23               bsr   PSGStop                    >>
   2963                            
   2964  4+0   81C4 A6   84               lda   ,x
   2965  5     81C6 B7   85A5             sta   PSGMusicPage
   2966  5+1   81C9 AE   01               ldx   1,x
   2967  6     81CB BF   85A6             stx   PSGMusicStart              >>
   2968  6     81CE BF   85A8             stx   PSGMusicPointer            >>
   2969  6     81D1 BF   85AA             stx   PSGMusicLoopPoint          >>
   2970  2     81D4 86   00               lda   #0
   2971  5     81D6 B7   85AC             sta   PSGMusicSkipFrames         >>
   2972  5     81D9 B7   85AF             sta   PSGMusicSubstringLen       >>
   2973  2     81DC 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   2974  5     81DE B7   85AE             sta   PSGMusicLastLatch          >>
   2975  2     81E1 86   01               lda   #PSG_PLAYING
   2976  5     81E3 B7   85A4             sta   PSGMusicStatus             >>
   2977  5     81E6 39                    rts
   2978
   2979                           * ***************************************>>
   2980                           * stops the music (leaving the SFX on, if>>
   2981                           * destroys A
   2982
   2983        81E7               PSGStop *@globals
   2984  5     81E7 B6   85A4             lda   PSGMusicStatus             >>
   2985  3     81EA 27   23               beq   PSGStop_end
   2986  2     81EC 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   2987  5     81EE B7   E7B0             sta   PSGDataPort
   2988  2     81F1 86   BF               lda   #PSGLatch!PSGChannel1!PSGVo>>
   2989  5     81F3 B7   E7B0             sta   PSGDataPort
   2990  5     81F6 B6   85BA             lda   PSGChannel2SFX
   2991  3     81F9 26   05               bne   PSGStop2
   2992  2     81FB 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   2993  5     81FD B7   E7B0             sta   PSGDataPort
   2994        8200               PSGStop2
   2995  5     8200 B6   85BB             lda   PSGChannel3SFX
   2996  3     8203 26   05               bne   PSGStop3
   2997  2     8205 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   2998  5     8207 B7   E7B0             sta   PSGDataPort
   2999        820A               PSGStop3
   3000  2     820A 86   00               lda   #PSG_STOPPED               >>
   3001  5     820C B7   85A4             sta   PSGMusicStatus             >>
   3002        820F               PSGStop_end
   3003  5     820F 39              rts
   3004
   3005
   3006                           * ***************************************>>
   3007                           * resume a previously stopped music
   3008                           * destroys A
   3009
   3010        8210               PSGResume *@globals
   3011  5     8210 B6   85A4             lda   PSGMusicStatus             >>
   3012  3     8213 26   45               bne   PSGResume_end
   3013  5     8215 B6   85B2             lda   PSGChan0Volume             >>
   3014  2     8218 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   3015  5     821A B7   E7B0             sta   PSGDataPort
   3016  5     821D B6   85B3             lda   PSGChan1Volume             >>
   3017  2     8220 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   3018  5     8222 B7   E7B0             sta   PSGDataPort
   3019  5     8225 B6   85BA             lda   PSGChannel2SFX
   3020  3     8228 26   16               bne   PSGResume1
   3021  5     822A B6   85B6             lda   PSGChan2LowTone            >>
   3022  2     822D 8A   C0               ora   #PSGLatch!PSGChannel2
   3023  5     822F B7   E7B0             sta   PSGDataPort
   3024  5     8232 B6   85B8             lda   PSGChan2HighTone
   3025  5     8235 B7   E7B0             sta   PSGDataPort
   3026  5     8238 B6   85B4             lda   PSGChan2Volume             >>
   3027  2     823B 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3028  5     823D B7   E7B0             sta   PSGDataPort
   3029        8240               PSGResume1
   3030  5     8240 B6   85BB             lda   PSGChannel3SFX
   3031  3     8243 26   10               bne   PSGResume2
   3032  5     8245 B6   85B7             lda   PSGChan3LowTone            >>
   3033  2     8248 8A   E0               ora   #PSGLatch!PSGChannel3
   3034  5     824A B7   E7B0             sta   PSGDataPort
   3035  5     824D B6   85B5             lda   PSGChan3Volume             >>
   3036  2     8250 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3037  5     8252 B7   E7B0             sta   PSGDataPort
   3038        8255               PSGResume2
   3039  2     8255 86   01               lda   #PSG_PLAYING
   3040  5     8257 B7   85A4             sta   PSGMusicStatus             >>
   3041        825A               PSGResume_end
   3042  5     825A 39                    rts
   3043
   3044                           * ***************************************>>
   3045                           * sets the currently looping music to no >>
   3046                           * destroys A
   3047
   3048        825B               PSGCancelLoop *@globals
   3049  7     825B 7F   85AD               clr   PSGLoopFlag
   3050  5     825E 39                      rts
   3051
   3052                           * ***************************************>>
   3053                           * gets the current status of music into r>>
   3054
   3055        825F               PSGGetStatus *@globals
   3056  5     825F B6   85A4             lda   PSGMusicStatus
   3057  5     8262 39                    rts
   3058
   3059                           * ***************************************>>
   3060                           * receives in A the volume attenuation fo>>
   3061                           * destroys A
   3062
   3063        8263               PSGSetMusicVolumeAttenuation *@globals
   3064  5     8263 B7   85B9             sta   PSGMusicVolumeAttenuation
   3065  5     8266 B6   85A4             lda   PSGMusicStatus             >>
   3066  3     8269 27   56               beq   PSGSetMusicVolumeAttenuatio>>
   3067
   3068  5     826B B6   85B2             lda   PSGChan0Volume
   3069  2     826E 84   0F               anda  #$0F
   3070  5     8270 BB   85B9             adda  PSGMusicVolumeAttenuation
   3071  2     8273 81   10               cmpa  #$10                       >>
   3072  3     8275 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3073  2     8277 86   0F               lda   #$0F                       >>
   3074        8279               PSGSetMusicVolumeAttenuation1
   3075  2     8279 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   3076  5     827B B7   E7B0             sta   PSGDataPort                >>
   3077                            
   3078  5     827E B6   85B3             lda   PSGChan1Volume
   3079  2     8281 84   0F               anda  #$0F
   3080  5     8283 BB   85B9             adda  PSGMusicVolumeAttenuation
   3081  2     8286 81   10               cmpa  #$10                       >>
   3082  3     8288 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3083  2     828A 86   0F               lda   #$0F                       >>
   3084        828C               PSGSetMusicVolumeAttenuation2
   3085  2     828C 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   3086  5     828E B7   E7B0             sta   PSGDataPort                >>
   3087                            
   3088
   3089  5     8291 B6   85BA             lda   PSGChannel2SFX             >>
   3090  3     8294 26   13               bne   _restore_channel3          >>
   3091
   3092  5     8296 B6   85B4             lda   PSGChan2Volume
   3093  2     8299 84   0F               anda  #$0F
   3094  5     829B BB   85B9             adda  PSGMusicVolumeAttenuation
   3095  2     829E 81   10               cmpa  #$10                       >>
   3096  3     82A0 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3097  2     82A2 86   0F               lda   #$0F                       >>
   3098        82A4               PSGSetMusicVolumeAttenuation3
   3099  2     82A4 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3100  5     82A6 B7   E7B0             sta   PSGDataPort
   3101
   3102        82A9               _restore_channel3
   3103  5     82A9 B6   85BB             lda   PSGChannel3SFX             >>
   3104  3     82AC 26   13               bne   PSGSetMusicVolumeAttenuatio>>
   3105
   3106  5     82AE B6   85B5             lda   PSGChan3Volume
   3107  2     82B1 84   0F               anda  #$0F
   3108  5     82B3 BB   85B9             adda  PSGMusicVolumeAttenuation
   3109  2     82B6 81   10               cmpa  #$10                       >>
   3110  3     82B8 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3111  2     82BA 86   0F               lda   #$0F                       >>
   3112        82BC               PSGSetMusicVolumeAttenuation4
   3113  2     82BC 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   3114  5     82BE B7   E7B0             sta   PSGDataPort
   3115                            
   3116        82C1               PSGSetMusicVolumeAttenuation_end
   3117  5     82C1 39                    rts
   3118
   3119                           * ***************************************>>
   3120                           * sets all PSG channels to volume ZERO (u>>
   3121                           * destroys A
   3122
   3123        82C2               PSGSilenceChannels *@globals
   3124  2     82C2 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   3125  5     82C4 B7   E7B0             sta   PSGDataPort
   3126  2     82C7 86   BF               lda   #PSGLatch!PSGChannel1!PSGVo>>
   3127  5     82C9 B7   E7B0             sta   PSGDataPort
   3128  2     82CC 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   3129  5     82CE B7   E7B0             sta   PSGDataPort
   3130  2     82D1 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3131  5     82D3 B7   E7B0             sta   PSGDataPort
   3132  5     82D6 39                    rts
   3133
   3134                           * ***************************************>>
   3135                           * resets all PSG channels to previous vol>>
   3136                           * destroys A
   3137
   3138        82D7               PSGRestoreVolumes *@globals
   3139  5     82D7 B6   85A4             lda   PSGMusicStatus             >>
   3140  3     82DA 27   26               beq   _chkchn2                   >>
   3141
   3142  5     82DC B6   85B2             lda   PSGChan0Volume
   3143  2     82DF 84   0F               anda  #$0F
   3144  5     82E1 BB   85B9             adda  PSGMusicVolumeAttenuation
   3145  2     82E4 81   10               cmpa  #$10                       >>
   3146  3     82E6 25   02               bcs   PSGRestoreVolumes1         >>
   3147  2     82E8 86   0F               lda   #$0F                       >>
   3148        82EA               PSGRestoreVolumes1
   3149  2     82EA 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   3150  5     82EC B7   E7B0             sta   PSGDataPort                >>
   3151
   3152  5     82EF B6   85B3             lda   PSGChan1Volume
   3153  2     82F2 84   0F               anda  #$0F
   3154  5     82F4 BB   85B9             adda  PSGMusicVolumeAttenuation
   3155  2     82F7 81   10               cmpa  #$10                       >>
   3156  3     82F9 25   02               bcs   PSGRestoreVolumes2         >>
   3157  2     82FB 86   0F               lda   #$0F                       >>
   3158        82FD               PSGRestoreVolumes2
   3159  2     82FD 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   3160  5     82FF B7   E7B0             sta   PSGDataPort                >>
   3161                            
   3162        8302               _chkchn2
   3163  5     8302 B6   85BA             lda   PSGChannel2SFX             >>
   3164  3     8305 26   15               bne   _restoreSFX2
   3165                            
   3166  5     8307 B6   85A4             lda   PSGMusicStatus             >>
   3167  3     830A 27   1A               beq   _chkchn3                   >>
   3168
   3169  5     830C B6   85B4             lda   PSGChan2Volume
   3170  2     830F 84   0F               anda  #$0F
   3171  5     8311 BB   85B9             adda  PSGMusicVolumeAttenuation
   3172  2     8314 81   10               cmpa  #$10                       >>
   3173  3     8316 25   09               bcs   PSGRestoreVolumes3         >>
   3174  2     8318 86   0F               lda   #$0F                       >>
   3175  3     831A 20   05               bra   PSGRestoreVolumes3
   3176
   3177        831C               _restoreSFX2
   3178  5     831C B6   85BC             lda   PSGSFXChan2Volume
   3179  4     831F 94   0F               anda  $0F
   3180        8321               PSGRestoreVolumes3
   3181  2     8321 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3182  5     8323 B7   E7B0             sta   PSGDataPort                >>
   3183
   3184        8326               _chkchn3
   3185  5     8326 B6   85BB             lda   PSGChannel3SFX             >>
   3186  3     8329 26   15               bne   _restoreSFX3
   3187                            
   3188  5     832B B6   85A4             lda   PSGMusicStatus             >>
   3189  3     832E 27   1A               beq   _restoreSFX2_end           >>
   3190
   3191  5     8330 B6   85B5             lda   PSGChan3Volume
   3192  2     8333 84   0F               anda  #$0F
   3193  5     8335 BB   85B9             adda  PSGMusicVolumeAttenuation
   3194  2     8338 81   10               cmpa  #$10                       >>
   3195  3     833A 25   09               bcs   PSGRestoreVolumes4         >>
   3196  2     833C 86   0F               lda   #$0F                       >>
   3197  3     833E 20   05               bra   PSGRestoreVolumes4
   3198
   3199        8340               _restoreSFX3
   3200  5     8340 B6   85BD             lda   PSGSFXChan3Volume
   3201  2     8343 84   0F               anda  #$0F
   3202        8345               PSGRestoreVolumes4
   3203  2     8345 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   3204  5     8347 B7   E7B0             sta   PSGDataPort                >>
   3205        834A               _restoreSFX2_end
   3206  5     834A 39                    rts
   3207
   3208
   3209                           * ***************************************>>
   3210                           * receives in X the address of the SFX PS>>
   3211                           * receives in B the mask that indicates w>>
   3212                           * destroys A
   3213
   3214        834B               PSGSFXPlayLoop *@globals
   3215  2     834B 86   01               lda   #1                         >>
   3216  3     834D 20   02               bra   PSGSFXPlay1
   3217        834F               PSGSFXPlay
   3218  2     834F 86   00               lda   #0                         >>
   3219        8351               PSGSFXPlay1
   3220  5     8351 B7   85C7             sta   PSGSFXLoopFlag
   3221  7     8354 8D   41               bsr   PSGSFXStop                 >>
   3222
   3223  4+0   8356 A6   84               lda   ,x
   3224  5     8358 B7   85BF             sta   PSGSFXPage
   3225  5+1   835B AE   01               ldx   1,x
   3226  6     835D BF   85C0             stx   PSGSFXStart                >>
   3227  6     8360 BF   85C2             stx   PSGSFXPointer              >>
   3228  6     8363 BF   85C4             stx   PSGSFXLoopPoint            >>
   3229  2     8366 86   00               lda   #0
   3230  5     8368 B7   85C6             sta   PSGSFXSkipFrames           >>
   3231  5     836B B7   85C8             sta   PSGSFXSubstringLen         >>
   3232  2     836E C5   01               bitb  #SFX_CHANNEL2              >>
   3233  3     8370 27   05               beq   PSGSFXPlay2
   3234  2     8372 86   01               lda   #PSG_PLAYING
   3235  5     8374 B7   85BA             sta   PSGChannel2SFX
   3236        8377               PSGSFXPlay2
   3237  2     8377 C5   02               bitb  #SFX_CHANNEL3              >>
   3238  3     8379 27   05               beq   PSGSFXPlay3
   3239  2     837B 86   01               lda   #PSG_PLAYING
   3240  5     837D B7   85BB             sta   PSGChannel3SFX
   3241        8380               PSGSFXPlay3
   3242  5     8380 B7   85BE             sta   PSGSFXStatus               >>
   3243  5     8383 B6   85B7             lda   PSGChan3LowTone            >>
   3244  2     8386 84   03               anda  #SFX_CHANNELS2AND3
   3245  2     8388 81   03               cmpa  #SFX_CHANNELS2AND3
   3246  3     838A 26   0A               bne   PSGSFXPlayLoop_end         >>
   3247  2     838C 86   01               lda   #PSG_PLAYING
   3248  5     838E B7   85BB             sta   PSGChannel3SFX             >>
   3249  2     8391 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3250  5     8393 B7   E7B0             sta   PSGDataPort
   3251        8396               PSGSFXPlayLoop_end
   3252  5     8396 39                    rts
   3253
   3254
   3255                           * ***************************************>>
   3256                           * stops the SFX (leaving the music on, if>>
   3257                           * destroys A
   3258
   3259        8397               PSGSFXStop *@globals
   3260  5     8397 B6   85BE             lda   PSGSFXStatus               >>
   3261  3     839A 27   70               beq   PSGSFXStop_end             >>
   3262  5     839C B6   85BA             lda   PSGChannel2SFX             >>
   3263  3     839F 27   05               beq   PSGSFXStop1
   3264  2     83A1 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   3265  5     83A3 B7   E7B0             sta   PSGDataPort
   3266        83A6               PSGSFXStop1
   3267  5     83A6 B6   85BB             lda   PSGChannel3SFX             >>
   3268  3     83A9 27   05               beq   PSGSFXStop2
   3269  2     83AB 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3270  5     83AD B7   E7B0             sta   PSGDataPort
   3271        83B0               PSGSFXStop2
   3272  5     83B0 B6   85A4             lda   PSGMusicStatus             >>
   3273  3     83B3 27   4E               beq   _skipRestore               >>
   3274  5     83B5 B6   85BA             lda   PSGChannel2SFX             >>
   3275  3     83B8 27   25               beq   _skip_chn2
   3276  5     83BA B6   85B6             lda   PSGChan2LowTone
   3277  2     83BD 84   0F               anda  #$0F                       >>
   3278  2     83BF 8A   80               ora   #PSGLatch|PSGChannel2      >>
   3279  5     83C1 B7   E7B0             sta   PSGDataPort
   3280  5     83C4 B6   85B8             lda   PSGChan2HighTone           >>
   3281  2     83C7 84   3F               anda  #$3F                       >>
   3282  5     83C9 B7   E7B0             sta   PSGDataPort
   3283  5     83CC B6   85B4             lda   PSGChan2Volume             >>
   3284  2     83CF 84   0F               anda  #$0F                       >>
   3285  5     83D1 BB   85B9             adda  PSGMusicVolumeAttenuation
   3286  2     83D4 81   10               cmpa  #$10                       >>
   3287  3     83D6 25   02               bcs   PSGSFXStop3                >>
   3288  2     83D8 86   0F               lda   #$0F                       >>
   3289        83DA               PSGSFXStop3
   3290  2     83DA 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3291  5     83DC B7   E7B0             sta   PSGDataPort                >>
   3292        83DF               _skip_chn2
   3293  5     83DF B6   85BB             lda   PSGChannel3SFX             >>
   3294  3     83E2 27   1D               beq   _skip_chn3
   3295  5     83E4 B6   85B7             lda   PSGChan3LowTone
   3296  4     83E7 94   07               anda  $07                        >>
   3297  2     83E9 8A   E0               ora   #PSGLatch!PSGChannel3      >>
   3298  5     83EB B7   E7B0             sta   PSGDataPort
   3299  5     83EE B6   85B5             lda   PSGChan3Volume             >>
   3300  2     83F1 84   0F               anda  #$0F                       >>
   3301  5     83F3 BB   85B9             adda  PSGMusicVolumeAttenuation
   3302  2     83F6 81   10               cmpa  #$10                       >>
   3303  3     83F8 25   02               bcs   PSGSFXStop4                >>
   3304  2     83FA 86   0F               lda   #$0F                       >>
   3305        83FC               PSGSFXStop4
   3306  2     83FC 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   3307  5     83FE B7   E7B0             sta   PSGDataPort                >>
   3308
   3309        8401               _skip_chn3
   3310  2     8401 86   00               lda   #PSG_STOPPED               >>
   3311        8403               _skipRestore
   3312  5     8403 B7   85BA             sta   PSGChannel2SFX
   3313  5     8406 B7   85BB             sta   PSGChannel3SFX
   3314  5     8409 B7   85BE             sta   PSGSFXStatus               >>
   3315        840C               PSGSFXStop_end
   3316  5     840C 39                    rts
   3317
   3318                           * ***************************************>>
   3319                           * sets the currently looping SFX to no mo>>
   3320                           * destroys A
   3321
   3322        840D               PSGSFXCancelLoop *@globals
   3323  7     840D 7F   85C7             clr   PSGSFXLoopFlag
   3324  5     8410 39                    rts
   3325
   3326
   3327                           * ***************************************>>
   3328                           * gets the current SFX status into regist>>
   3329
   3330        8411               PSGSFXGetStatus *@globals
   3331  5     8411 B6   85BE             lda   PSGSFXStatus
   3332  5     8414 39                    rts
   3333
   3334
   3335                           * ***************************************>>
   3336                           * processes a music frame
   3337                           * destroys A,B,X
   3338                            
   3339        8415               PSGFrame *@globals
   3340
   3341  5     8415 B6   85A5             lda   PSGMusicPage
   3342  5     8418 B7   E7E5             sta   $E7E5
   3343
   3344  5     841B B6   85A4             lda   PSGMusicStatus             >>
   3345  3     841E 26   01               bne   PSGFrame_continue
   3346  5     8420 39                    rts
   3347
   3348        8421               PSGFrame_continue
   3349  5     8421 B6   85AC             lda   PSGMusicSkipFrames         >>
   3350  3     8424 26   7F               bne   _skipFrame
   3351  6     8426 BE   85A8             ldx   PSGMusicPointer            >>
   3352
   3353        8429               _intLoop
   3354  4+2   8429 E6   80               ldb   ,x+                        >>
   3355  5     842B B6   85AF             lda   PSGMusicSubstringLen       >>
   3356  3     842E 27   09               beq   _continue                  >>
   3357  2     8430 4A                    deca                             >>
   3358  5     8431 B7   85AF             sta   PSGMusicSubstringLen       >>
   3359  3     8434 26   03               bne   _continue
   3360  6     8436 BE   85B0             ldx   PSGMusicSubstringRetAddr   >>
   3361
   3362        8439               _continue
   3363  2     8439 C1   80               cmpb  #PSGLatch                  >>
   3364  3     843B 25   6D               bcs   _noLatch                   >>
   3365  5     843D F7   85AE             stb   PSGMusicLastLatch          >>
   3366                            
   3367  2     8440 C5   04               bitb  #4                         >>
   3368  3     8442 26   32               bne   _latch_Volume              >>
   3369  2     8444 C5   06               bitb  #6                         >>
   3370  3     8446 27   58               beq   _send2PSG                  >>
   3371
   3372  2     8448 C5   05               bitb  #5                         >>
   3373  3     844A 27   20               beq   _ifchn2                    >>
   3374  5     844C F7   85B7             stb   PSGChan3LowTone            >>
   3375  5     844F B6   85BB             lda   PSGChannel3SFX             >>
   3376  3     8452 26   D5               bne   _intLoop
   3377  5     8454 B6   85B7             lda   PSGChan3LowTone
   3378  2     8457 84   03               anda  #3                         >>
   3379  2     8459 81   03               cmpa  #3
   3380  3     845B 26   43               bne   _send2PSG                  >>
   3381  5     845D B6   85BE             lda   PSGSFXStatus               >>
   3382  3     8460 27   3E               beq   _send2PSG                  >>
   3383  5     8462 B7   85BB             sta   PSGChannel3SFX             >>
   3384  2     8465 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3385  5     8467 B7   E7B0             sta   PSGDataPort
   3386  3     846A 20   BD               bra   _intLoop
   3387
   3388        846C               _ifchn2
   3389  5     846C F7   85B6             stb   PSGChan2LowTone            >>
   3390  5     846F B6   85BA             lda   PSGChannel2SFX             >>
   3391  3     8472 27   2C               beq   _send2PSG
   3392  3     8474 20   B3               bra   _intLoop
   3393                            
   3394        8476               _latch_Volume
   3395  2     8476 C5   06               bitb  #6                         >>
   3396  3     8478 26   0E               bne   _latch_Volume_23           >>
   3397  2     847A C5   05               bitb  #5                         >>
   3398  3     847C 27   05               beq   _ifchn0                    >>
   3399  5     847E F7   85B3             stb   PSGChan1Volume             >>
   3400  3     8481 20   4C               bra   _sendVolume2PSG
   3401                            
   3402        8483               _ifchn0
   3403  5     8483 F7   85B2             stb   PSGChan0Volume             >>
   3404  3     8486 20   47               bra   _sendVolume2PSG
   3405
   3406        8488               _latch_Volume_23
   3407  2     8488 C5   05               bitb  #5                         >>
   3408  3     848A 27   0A               beq   _chn2                      >>
   3409  5     848C F7   85B5             stb   PSGChan3Volume             >>
   3410  5     848F B6   85BB             lda   PSGChannel3SFX             >>
   3411  3     8492 27   3B               beq   _sendVolume2PSG
   3412  3     8494 20   93               bra   _intLoop
   3413
   3414        8496               _chn2
   3415  5     8496 F7   85B4             stb   PSGChan2Volume             >>
   3416  5     8499 B6   85BA             lda   PSGChannel2SFX             >>
   3417  3     849C 27   31               beq   _sendVolume2PSG
   3418  3     849E 20   89               bra   _intLoop
   3419                            
   3420        84A0               _send2PSG
   3421  5     84A0 F7   E7B0             stb   PSGDataPort                >>
   3422  3     84A3 20   84               bra   _intLoop
   3423                            
   3424        84A5               _skipFrame
   3425  2     84A5 4A                    deca
   3426  5     84A6 B7   85AC             sta   PSGMusicSkipFrames
   3427  5     84A9 39                    rts
   3428
   3429        84AA               _noLatch
   3430  2     84AA C1   40               cmpb  #PSGData
   3431  3     84AC 25   05               bcs   _command                   >>
   3432                                                                    >>
   3433  5     84AE B6   85AE             lda   PSGMusicLastLatch          >>
   3434  3     84B1 20   39               bra   _output_NoLatch
   3435
   3436        84B3               _command
   3437  2     84B3 C1   38               cmpb  #PSGWait
   3438  3     84B5 27   07               beq   _done                      >>
   3439  3     84B7 25   09               bcs   _otherCommands             >>
   3440  2     84B9 C4   07               andb  #$07                       >>
   3441  5     84BB F7   85AC             stb   PSGMusicSkipFrames         >>
   3442                            
   3443        84BE               _done
   3444  6     84BE BF   85A8             stx   PSGMusicPointer            >>
   3445  5     84C1 39                    rts                              >>
   3446
   3447        84C2               _otherCommands
   3448  2     84C2 C1   08               cmpb  #PSGSubString
   3449  3     84C4 24   3F               bcc   _substring
   3450  2     84C6 C1   00               cmpb  #PSGEnd
   3451  3     84C8 27   2E               beq   _musicLoop
   3452  2     84CA C1   01               cmpb  #PSGLoop
   3453  3     84CC 27   24               beq   _setLoopPoint
   3454
   3455                             * *************************************>>
   3456                             * we should never get here!
   3457                             * if we do, it means the PSG file is pr>>
   3458                             * *************************************>>
   3459
   3460  5     84CE 39                    rts
   3461
   3462        84CF               _sendVolume2PSG *@globals
   3463  5     84CF F7   84DE             stb   _sendVolume2PSG1+1         >>
   3464  2     84D2 C4   0F               andb  #$0F                       >>
   3465  5     84D4 FB   85B9             addb  PSGMusicVolumeAttenuation  >>
   3466  2     84D7 C1   10               cmpb  #$10                       >>
   3467  3     84D9 25   02               bcs   _sendVolume2PSG1           >>
   3468  2     84DB C6   0F               ldb   #$0F                       >>
   3469        84DD               _sendVolume2PSG1
   3470  2     84DD 86   00               lda   #0                         >>
   3471  5     84DF F7   84E5             stb   _sendVolume2PSG2+1
   3472  2     84E2 84   F0               anda  #$F0                       >>
   3473        84E4               _sendVolume2PSG2
   3474  2     84E4 8A   00               ora   #0                         >>
   3475  5     84E6 B7   E7B0             sta   PSGDataPort                >>
   3476  5     84E9 16   FF3D             lbra   _intLoop
   3477
   3478        84EC               _output_NoLatch
   3479                             * we got the last latch in A and the PS>>
   3480                             * and we have to check if the value sho>>
   3481                             * note that non-latch commands can be o>>
   3482                             * for channels 0,1,2 only (no noise)
   3483  2     84EC 85   06               bita  #6                         >>
   3484  3     84EE 26   27               bne   _high_part_Tone            >>
   3485  3     84F0 20   AE               bra   _send2PSG                  >>
   3486
   3487        84F2               _setLoopPoint
   3488  6     84F2 BF   85AA             stx   PSGMusicLoopPoint
   3489  5     84F5 16   FF31             lbra   _intLoop
   3490
   3491        84F8               _musicLoop
   3492  5     84F8 B6   85AD             lda   PSGLoopFlag                >>
   3493  6     84FB 1027 FCE8             lbeq   PSGStop                   >>
   3494  6     84FF BE   85AA             ldx   PSGMusicLoopPoint
   3495  5     8502 16   FF24             lbra   _intLoop
   3496
   3497        8505               _substring
   3498  2     8505 C0   04               subb  #PSGSubString-4            >>
   3499  5     8507 F7   85AF             stb   PSGMusicSubstringLen       >>
   3500  5+3   850A EC   81               ldd   ,x++                       >>
   3501  6     850C BF   85B0             stx   PSGMusicSubstringRetAddr   >>
   3502  6     850F BE   85A6             ldx   PSGMusicStart
   3503  4+4   8512 30   8B               leax  d,x                        >>
   3504  5     8514 16   FF12             lbra   _intLoop
   3505
   3506        8517               _high_part_Tone
   3507  5     8517 F7   85B8             stb   PSGChan2HighTone           >>
   3508  5     851A B6   85BA             lda   PSGChannel2SFX             >>
   3509  3     851D 27   81               beq   _send2PSG
   3510  5     851F 16   FF07             lbra   _intLoop
   3511
   3512
   3513                           * ***************************************>>
   3514                           * processes a SFX frame
   3515                           * destroys A,B,X
   3516
   3517        8522               PSGSFXFrame *@globals
   3518
   3519  5     8522 B6   85BF             lda   PSGSFXPage
   3520  5     8525 B7   E7E5             sta   $E7E5
   3521                            
   3522  5     8528 B6   85BE             lda   PSGSFXStatus               >>
   3523  3     852B 27   35               beq   PSGSFXFrame_end
   3524
   3525  5     852D B6   85C6             lda   PSGSFXSkipFrames           >>
   3526  3     8530 26   2C               bne   _skipSFXFrame
   3527                            
   3528  6     8532 BE   85C2             ldx   PSGSFXPointer              >>
   3529
   3530        8535               _intSFXLoop
   3531  4+2   8535 E6   80               ldb   ,x+                        >>
   3532  5     8537 B6   85C8             lda   PSGSFXSubstringLen         >>
   3533  3     853A 27   09               beq   _SFXcontinue               >>
   3534  2     853C 4A                    deca                             >>
   3535  5     853D B7   85C8             sta   PSGSFXSubstringLen         >>
   3536  3     8540 26   03               bne   _SFXcontinue
   3537  6     8542 BE   85C9             ldx   PSGSFXSubstringRetAddr     >>
   3538
   3539        8545               _SFXcontinue
   3540  2     8545 C1   40               cmpb   #PSGData
   3541  3     8547 25   1A               bcs    _SFXcommand               >>
   3542  2     8549 C5   04               bitb   #4                        >>
   3543  3     854B 27   0C               beq    _SFXoutbyte               >>
   3544  2     854D C5   05               bitb   #5                        >>
   3545  3     854F 26   05               bne    _SFXvolumechn3
   3546  5     8551 F7   85BC             stb    PSGSFXChan2Volume
   3547  3     8554 20   03               bra   _SFXoutbyte
   3548
   3549        8556               _SFXvolumechn3
   3550  5     8556 F7   85BD             stb   PSGSFXChan3Volume
   3551
   3552        8559               _SFXoutbyte
   3553  5     8559 F7   E7B0             stb   PSGDataPort                >>
   3554  3     855C 20   D7               bra   _intSFXLoop
   3555                            
   3556        855E               _skipSFXFrame
   3557  2     855E 4A                    deca
   3558  5     855F B7   85C6             sta   PSGSFXSkipFrames
   3559        8562               PSGSFXFrame_end
   3560  5     8562 39                    rts
   3561
   3562        8563               _SFXcommand
   3563  2     8563 C1   38               cmpb   #PSGWait
   3564  3     8565 27   07               beq    _SFXdone                  >>
   3565  3     8567 25   09               bcs    _SFXotherCommands         >>
   3566  2     8569 C4   07               andb   #$07                      >>
   3567  5     856B F7   85C6             stb    PSGSFXSkipFrames          >>
   3568        856E               _SFXdone
   3569  6     856E BF   85C2             stx    PSGSFXPointer             >>
   3570  5     8571 39                    rts                              >>
   3571
   3572        8572               _SFXotherCommands
   3573  2     8572 C1   08               cmpb   #PSGSubString
   3574  3     8574 24   1D               bcc    _SFXsubstring
   3575  2     8576 C1   00               cmpb   #PSGEnd
   3576  3     8578 27   0A               beq    _sfxLoop
   3577  2     857A C1   01               cmpb   #PSGLoop
   3578  3     857C 27   01               beq    _SFXsetLoopPoint
   3579                            
   3580                             * *************************************>>
   3581                             * we should never get here!
   3582                             * if we do, it means the PSG SFX file i>>
   3583                             * *************************************>>
   3584
   3585  5     857E 39                    rts
   3586
   3587        857F               _SFXsetLoopPoint *@globals
   3588  6     857F BF   85C4             stx   PSGSFXLoopPoint
   3589  3     8582 20   B1               bra   _intSFXLoop
   3590                            
   3591        8584               _sfxLoop
   3592  5     8584 B6   85C7             lda   PSGSFXLoopFlag             >>
   3593  6     8587 1027 FE0C             lbeq   PSGSFXStop                >>
   3594  6     858B BE   85C4             ldx   PSGSFXLoopPoint
   3595  6     858E BF   85C2             stx   PSGSFXPointer
   3596  3     8591 20   A2               bra   _intSFXLoop
   3597
   3598        8593               _SFXsubstring
   3599  2     8593 C0   04               subb  #PSGSubString-4            >>
   3600  5     8595 F7   85C8             stb   PSGSFXSubstringLen         >>
   3601  5+3   8598 EC   81               ldd   ,x++                       >>
   3602  6     859A BF   85C9             stx   PSGSFXSubstringRetAddr     >>
   3603  6     859D BE   85C0             ldx   PSGSFXStart
   3604  4+4   85A0 30   8B               leax  d,x                        >>
   3605  3     85A2 20   91               bra   _intSFXLoop
   3606
   3607                             * fundamental vars
   3608        85A4               PSGMusicStatus             rmb 1,0 ; are >>
   3609        85A5               PSGMusicPage               rmb 1,0 ; Memo>>
   3610        85A6               PSGMusicStart              rmb 2,0 ; the >>
   3611        85A8               PSGMusicPointer            rmb 2,0 ; the >>
   3612        85AA               PSGMusicLoopPoint          rmb 2,0 ; the >>
   3613        85AC               PSGMusicSkipFrames         rmb 1,0 ; the >>
   3614        85AD               PSGLoopFlag                rmb 1,0 ; the >>
   3615        85AE               PSGMusicLastLatch          rmb 1,0 ; the >>
   3616
   3617                             * decompression vars
   3618        85AF               PSGMusicSubstringLen       rmb 1,0 ; leng>>
   3619        85B0               PSGMusicSubstringRetAddr   rmb 2,0 ; retu>>
   3620
   3621                             * command buffers
   3622        85B2               PSGChan0Volume             rmb 1,0 ; the >>
   3623        85B3               PSGChan1Volume             rmb 1,0 ; the >>
   3624        85B4               PSGChan2Volume             rmb 1,0 ; the >>
   3625        85B5               PSGChan3Volume             rmb 1,0 ; the >>
   3626        85B6               PSGChan2LowTone            rmb 1,0 ; the >>
   3627        85B7               PSGChan3LowTone            rmb 1,0 ; the >>
   3628        85B8               PSGChan2HighTone           rmb 1,0 ; the >>
   3629
   3630        85B9               PSGMusicVolumeAttenuation  rmb 1,0 ; the >>
   3631
   3632                             * ******* SFX *************
   3633
   3634                             * flags for channels 2-3 access
   3635        85BA               PSGChannel2SFX             rmb 1,0 ; !0 m>>
   3636        85BB               PSGChannel3SFX             rmb 1,0 ; !0 m>>
   3637
   3638                             * command buffers for SFX
   3639        85BC               PSGSFXChan2Volume          rmb 1,0 ; the >>
   3640        85BD               PSGSFXChan3Volume          rmb 1,0 ; the >>
   3641
   3642                             * fundamental vars for SFX
   3643        85BE               PSGSFXStatus               rmb 1,0 ; are >>
   3644        85BF               PSGSFXPage                 rmb 1,0 ; Memo>>
   3645        85C0               PSGSFXStart                rmb 2,0 ; the >>
   3646        85C2               PSGSFXPointer              rmb 2,0 ; the >>
   3647        85C4               PSGSFXLoopPoint            rmb 2,0 ; the >>
   3648        85C6               PSGSFXSkipFrames           rmb 1,0 ; the >>
   3649        85C7               PSGSFXLoopFlag             rmb 1,0 ; the >>
   3650
   3651                             * decompression vars for SFX
   3652        85C8               PSGSFXSubstringLen         rmb 1,0 ; leng>>
   3653        85C9               PSGSFXSubstringRetAddr     rmb 2,0 ; retu>>
   3654
   3655
   3656
   3657                                   INCLUD IRQPSGRR
   3658                           * --------------------------------------->>
   3659                           * IrqPsgRaster/IrqPsg
   3660                           * ------
   3661                           * IRQ Subroutine to play sound with SN764>>
   3662                           *
   3663                           * input REG : [dp] with value E7 (from Mo>>
   3664                           * reset REG : none
   3665                           *
   3666                           * IrqOn
   3667                           * reset REG : [a]
   3668                           *
   3669                           * IrqOff
   3670                           * reset REG : [a]
   3671                           *
   3672                           * IrqSync
   3673                           * input REG : [a] screen line (0-199)
   3674                           *             [x] timer value
   3675                           * reset REG : [d]
   3676                           *
   3677                           * IrqSync
   3678                           * reset REG : [d]
   3679                           * --------------------------------------->>
   3680                            
   3681                  6027     irq_routine       equ $6027 *@globals
   3682                  E7C5     irq_timer_ctrl    equ $E7C5 *@globals
   3683                  E7C6     irq_timer         equ $E7C6 *@globals
   3684                  4DFF     irq_one_frame     equ 312*64-1 *@globals >>
   3685        85CB 0000          Irq_Raster_Page   fdb $00 *@globals
   3686        85CD 0000          Irq_Raster_Start  fdb $0000 *@globals
   3687        85CF 0000          Irq_Raster_End    fdb $0000 *@globals
   3688                            
   3689        85D1               IrqOn *@globals
   3690  5     85D1 B6   6019             lda   $6019
   3691  2     85D4 8A   20               ora   #$20
   3692  5     85D6 B7   6019             sta   $6019                      >>
   3693  2     85D9 1C   EF               andcc #$EF                       >>
   3694  5     85DB 39                    rts
   3695                            
   3696        85DC               IrqOff *@globals
   3697  5     85DC B6   6019             lda   $6019
   3698  2     85DF 84   DF               anda  #$DF
   3699  5     85E1 B7   6019             sta   $6019                      >>
   3700  2     85E4 1A   10               orcc  #$10                       >>
   3701  5     85E6 39                    rts
   3702
   3703        85E7               IrqSync *@globals
   3704  2     85E7 C6   42               ldb   #$42
   3705  5     85E9 F7   E7C5             stb   irq_timer_ctrl
   3706                            
   3707  2     85EC C6   08               ldb   #8                         >>
   3708  11    85EE 3D                    mul
   3709  6     85EF 1F   02               tfr   d,y
   3710  4+1   85F1 31   A8 E0            leay  -32,y                      >>
   3711
   3712        85F4               IrqSync_1
   3713  7     85F4 7D   E7E7             tst   $E7E7                      >>
   3714  3     85F7 2B   FB               bmi   IrqSync_1                  >>
   3715        85F9               IrqSync_2
   3716  7     85F9 7D   E7E7             tst   $E7E7                      >>
   3717  3     85FC 2A   FB               bpl   IrqSync_2                  >>
   3718        85FE               IrqSync_3
   3719  4+1   85FE 31   3F               leay  -1,y                       >>
   3720  3     8600 26   FC               bne   IrqSync_3                  >>
   3721                            
   3722  6     8602 BF   E7C6             stx   irq_timer                  >>
   3723  5     8605 39                    rts
   3724                            
   3725        8606               IrqPsg *@globals
   3726  4     8606 96   E5               lda   <$E5
   3727  5     8608 B7   860F             sta   IrqPsg_end+1               >>
   3728  8     860B BD   8415             jsr   PSGFrame
   3729                                  *jsr   PSGSFXFrame
   3730        860E               IrqPsg_end
   3731  2     860E 86   00               lda   #$00
   3732  4     8610 97   E5               sta   <$E5                       >>
   3733  4     8612 7E   E830             jmp   $E830                      >>
   3734                            
   3735        8615               IrqPsgRaster *@globals
   3736  4     8615 96   E5               lda   <$E5
   3737  5     8617 B7   8650             sta   IrqPsgRaster_end+1         >>
   3738                            
   3739  5     861A B6   85CB             lda   Irq_Raster_Page
   3740  4     861D 97   E5               sta   <$E5                       >>
   3741  6     861F BE   85CD             ldx   Irq_Raster_Start
   3742  2     8622 86   20               lda   #32
   3743        8624               IrqPsgRaster_1
   3744  4     8624 95   E7               bita  <$E7
   3745  3     8626 27   FC               beq   IrqPsgRaster_1             >>
   3746        8628               IrqPsgRaster_2
   3747  4     8628 95   E7               bita  <$E7
   3748  3     862A 26   FC               bne   IrqPsgRaster_2             >>
   3749                            
   3750  11    862C 3D                    mul                              >>
   3751  11    862D 3D                    mul                              >>
   3752  2     862E 12                    nop
   3753        862F               IrqPsgRaster_render
   3754  6     862F 1F   89               tfr   a,b                        >>
   3755  6     8631 1F   89               tfr   a,b                        >>
   3756  6     8633 1F   89               tfr   a,b                        >>
   3757  5+1   8635 EC   01               ldd   1,x
   3758  6     8637 FD   863F             std   *+8
   3759  4+0   863A A6   84               lda   ,x
   3760  4     863C 97   DB               sta   <$DB
   3761  3     863E CC   0000             ldd   #$0000
   3762  4     8641 D7   DA               stb   <$DA
   3763  4     8643 97   DA               sta   <$DA
   3764  4+1   8645 30   03               leax  3,x
   3765  7     8647 BC   85CF             cmpx  Irq_Raster_End
   3766  3     864A 26   E3               bne   IrqPsgRaster_render
   3767
   3768  8     864C BD   8415            jsr   PSGFrame
   3769                                  *jsr   PSGSFXFrame
   3770        864F               IrqPsgRaster_end
   3771  2     864F 86   00               lda   #$00
   3772  4     8651 97   E5               sta   <$E5                       >>
   3773  4     8653 7E   E830             jmp   $E830                      >>
   3774
   3775
    165                            
    166                           * =======================================>>
    167                           * Level Specific Generated Data
    168                           * IMG and ANI should be in first position>>
    169                           * =======================================>>
   3776                                   INCLUD IMAGEIDX
   3777                           * Generated Code
   3778
   3779        8656               Img_SonicAndTailsIn *@globals
   3780        8656 07 00 00 00           fcb   $07,$00,$00,$00,$88,$4F,$00>>
               865A 88 4F 00 00
               865E 06 00 00 BB
               8662 D9 0B
   3781        8664 D0 40                 fcb   $D0,$40
   3782        8666               Img_SegaLogo_2 *@globals
   3783        8666 07 00 00 00           fcb   $07,$00,$00,$00,$5C,$39,$03>>
               866A 5C 39 03 00
               866E 06 00 00 D2
               8672 E4 0D
   3784        8674 BF A1                 fcb   $BF,$A1
   3785        8676               Img_SegaLogo_1 *@globals
   3786        8676 07 00 00 00           fcb   $07,$00,$00,$00,$5C,$38,$03>>
               867A 5C 38 03 00
               867E 06 00 00 D2
               8682 E5 0A
   3787        8684 D2 46                 fcb   $D2,$46
   3788        8686               Img_SegaTrails_1 *@globals
   3789        8686 07 10 00 00           fcb   $07,$10,$00,$00,$07,$3E,$00>>
               868A 07 3E 00 00
               868E 06 00 00 10
               8692 E0 05
   3790        8694 DC CA 00 06           fcb   $DC,$CA,$00,$06,$00,$00,$E8>>
               8698 00 00 E8 E0
               869C 05 DB 53
   3791        869F               Img_SegaSonic_12 *@globals
   3792        869F 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$45,$00>>
               86A3 0F 45 00 06
               86A7 00 00 00 F8
               86AB E3 09
   3793        86AD D5 F6 06 DD           fcb   $D5,$F6,$06,$DD,$3E,$0A,$06>>
               86B1 3E 0A 06 00
               86B5 00 00 F8 E3
               86B9 09 CE
   3794        86BB 31 06 DA 96           fcb   $31,$06,$DA,$96,$0A
               86BF 0A
   3795        86C0               Img_SegaSonic_23 *@globals
   3796        86C0 07 14 00 00           fcb   $07,$14,$00,$00,$06,$1F,$00>>
               86C4 06 1F 00 06
               86C8 00 00 00 F1
               86CC 01 06
   3797        86CE D8 49 05 DA           fcb   $D8,$49,$05,$DA,$6D,$02,$06>>
               86D2 6D 02 06 00
               86D6 00 00 08 01
               86DA 06 D5
   3798        86DC FA 05 D9 87           fcb   $FA,$05,$D9,$87,$02
               86E0 02
   3799        86E1               Img_SegaSonic_13 *@globals
   3800        86E1 07 14 00 00           fcb   $07,$14,$00,$00,$06,$25,$00>>
               86E5 06 25 00 06
               86E9 00 00 00 F1
               86ED 01 06
   3801        86EF D3 30 05 D8           fcb   $D3,$30,$05,$D8,$77,$03,$06>>
               86F3 77 03 06 00
               86F7 00 00 08 01
               86FB 06 D0
   3802        86FD 64 05 D7 68           fcb   $64,$05,$D7,$68,$03
               8701 03
   3803        8702               Img_SegaSonic_32 *@globals
   3804        8702 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$45,$00>>
               8706 0F 45 00 06
               870A 00 00 00 F8
               870E E3 09
   3805        8710 C5 D7 06 CD           fcb   $C5,$D7,$06,$CD,$76,$0A,$06>>
               8714 76 0A 06 00
               8718 00 00 F8 E3
               871C 09 BD
   3806        871E 77 06 CA 82           fcb   $77,$06,$CA,$82,$0A
               8722 0A
   3807        8723               Img_SegaSonic_21 *@globals
   3808        8723 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               8727 07 3F 00 06
               872B 00 00 00 08
               872F E5 08
   3809        8731 D6 48 05 D5           fcb   $D6,$48,$05,$D5,$9A,$04,$06>>
               8735 9A 04 06 00
               8739 00 00 F0 E5
               873D 08 D1
   3810        873F A7 05 D3 CB           fcb   $A7,$05,$D3,$CB,$04
               8743 04
   3811        8744               Img_SegaSonic_43 *@globals
   3812        8744 07 14 00 00           fcb   $07,$14,$00,$00,$06,$1F,$00>>
               8748 06 1F 00 06
               874C 00 00 00 F1
               8750 01 06
   3813        8752 C8 35 05 D2           fcb   $C8,$35,$05,$D2,$E3,$02,$06>>
               8756 E3 02 06 00
               875A 00 00 08 01
               875E 06 C5
   3814        8760 E8 05 D1 FB           fcb   $E8,$05,$D1,$FB,$02
               8764 02
   3815        8765               Img_SegaSonic_11 *@globals
   3816        8765 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               8769 07 3F 00 06
               876D 00 00 00 08
               8771 E5 08
   3817        8773 CC D3 06 C3           fcb   $CC,$D3,$06,$C3,$EE,$04,$06>>
               8777 EE 04 06 00
               877B 00 00 F0 E5
               877F 08 C7
   3818        8781 FF 06 C1 F3           fcb   $FF,$06,$C1,$F3,$04
               8785 04
   3819        8786               Img_SegaSonic_33 *@globals
   3820        8786 07 14 00 00           fcb   $07,$14,$00,$00,$05,$25,$00>>
               878A 05 25 00 06
               878E 00 00 00 F2
               8792 01 06
   3821        8794 BF BD 05 D1           fcb   $BF,$BD,$05,$D1,$0C,$02,$06>>
               8798 0C 02 06 00
               879C 00 00 08 01
               87A0 06 BD
   3822        87A2 87 05 D0 1D           fcb   $87,$05,$D0,$1D,$02
               87A6 02
   3823        87A7               Img_SegaSonic_22 *@globals
   3824        87A7 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$47,$00>>
               87AB 0F 47 00 06
               87AF 00 00 00 F8
               87B3 E1 09
   3825        87B5 B5 50 06 BA           fcb   $B5,$50,$06,$BA,$C8,$0A,$06>>
               87B9 C8 0A 06 00
               87BD 00 00 F8 E1
               87C1 09 AD
   3826        87C3 11 06 B8 0C           fcb   $11,$06,$B8,$0C,$0A
               87C7 0A
   3827        87C8               Img_SegaSonic_41 *@globals
   3828        87C8 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               87CC 07 3F 00 06
               87D0 00 00 00 08
               87D4 E5 07
   3829        87D6 DB 80 05 CE           fcb   $DB,$80,$05,$CE,$5E,$04,$06>>
               87DA 5E 04 06 00
               87DE 00 00 F0 E5
               87E2 08 C3
   3830        87E4 84 05 CC 9F           fcb   $84,$05,$CC,$9F,$04
               87E8 04
   3831        87E9               Img_SegaSonic_31 *@globals
   3832        87E9 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               87ED 07 3F 00 06
               87F1 00 00 00 08
               87F5 E5 08
   3833        87F7 BE AF 06 B6           fcb   $BE,$AF,$06,$B6,$1F,$04,$06>>
               87FB 1F 04 06 00
               87FF 00 00 F0 E5
               8803 08 B9
   3834        8805 DC 06 B4 32           fcb   $DC,$06,$B4,$32,$04
               8809 04
   3835        880A               Img_SegaSonic_42 *@globals
   3836        880A 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$47,$00>>
               880E 0F 47 00 06
               8812 00 00 00 F8
               8816 E1 0A
   3837        8818 C9 F0 06 B1           fcb   $C9,$F0,$06,$B1,$65,$0A,$06>>
               881C 65 0A 06 00
               8820 00 00 F8 E1
               8824 0A C1
   3838        8826 8C 06 AE 9A           fcb   $8C,$06,$AE,$9A,$0A
               882A 0A
   3839        882B               Img_SegaTrails_6 *@globals
   3840        882B 00 07 00 00           fcb   $00,$07,$00,$00,$0F,$44,$00>>
               882F 0F 44 00 00
               8833 06 00 00 10
               8837 DE 05
   3841        8839 CB 29                 fcb   $CB,$29
   3842        883B               Img_SegaTrails_5 *@globals
   3843        883B 00 07 00 00           fcb   $00,$07,$00,$00,$0F,$44,$00>>
               883F 0F 44 00 00
               8843 06 00 00 00
               8847 DE 05
   3844        8849 C9 B3                 fcb   $C9,$B3
   3845        884B               Img_SegaTrails_4 *@globals
   3846        884B 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$44,$00>>
               884F 0F 44 00 00
               8853 06 00 00 E0
               8857 DE 05
   3847        8859 C8 3D                 fcb   $C8,$3D
   3848        885B               Img_SegaTrails_3 *@globals
   3849        885B 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$44,$00>>
               885F 0F 44 00 00
               8863 06 00 00 F0
               8867 DE 05
   3850        8869 C6 C7                 fcb   $C6,$C7
   3851        886B               Img_SegaTrails_2 *@globals
   3852        886B 07 10 00 00           fcb   $07,$10,$00,$00,$0F,$44,$00>>
               886F 0F 44 00 00
               8873 06 00 00 00
               8877 DE 05
   3853        8879 C4 F5 00 06           fcb   $C4,$F5,$00,$06,$00,$00,$F0>>
               887D 00 00 F0 DE
               8881 06 AC C0
   3854        8884               Img_tails_5 *@globals
   3855        8884 07 00 00 00           fcb   $07,$00,$00,$00,$2B,$3F,$00>>
               8888 2B 3F 00 06
               888C 0D 00 00 03
               8890 0D 0C
   3856        8892 CB 2E 08 B5           fcb   $CB,$2E,$08,$B5,$62,$11,$0A>>
               8896 62 11 0A B7
               889A 31
   3857        889B               Img_tails_4 *@globals
   3858        889B 07 00 00 00           fcb   $07,$00,$00,$00,$2C,$3A,$00>>
               889F 2C 3A 00 06
               88A3 00 00 00 03
               88A7 12 0C
   3859        88A9 BC F0 07 D7           fcb   $BC,$F0,$07,$D7,$3F,$10
               88AD 3F 10
   3860        88AF               Img_tails_3 *@globals
   3861        88AF 07 00 00 00           fcb   $07,$00,$00,$00,$2B,$3C,$00>>
               88B3 2B 3C 00 06
               88B7 00 00 00 04
               88BB 11 0C
   3862        88BD AE 9B 08 B0           fcb   $AE,$9B,$08,$B0,$F7,$0F
               88C1 F7 0F
   3863        88C3               Img_tails_2 *@globals
   3864        88C3 07 00 00 00           fcb   $07,$00,$00,$00,$2B,$37,$00>>
               88C7 2B 37 00 06
               88CB 00 00 00 02
               88CF 16 0B
   3865        88D1 C3 DE 07 D3           fcb   $C3,$DE,$07,$D3,$8E,$0F
               88D5 8E 0F
   3866        88D7               Img_tails_1 *@globals
   3867        88D7 07 00 00 00           fcb   $07,$00,$00,$00,$1B,$3F,$00>>
               88DB 1B 3F 00 06
               88DF 00 00 00 0C
               88E3 11 0B
   3868        88E5 B8 74 06 A6           fcb   $B8,$74,$06,$A6,$70,$0E
               88E9 70 0E
   3869        88EB               Img_islandWater15 *@globals
   3870        88EB 07 00 00 00           fcb   $07,$00,$00,$00,$00,$00,$00>>
               88EF 00 00 00 06
               88F3 00 0D 00 EE
               88F7 1F 05
   3871        88F9 C4 D0 05 C4           fcb   $C4,$D0,$05,$C4,$BE,$01,$05>>
               88FD BE 01 05 C4
               8901 99 05 C4 87
               8905 01
   3872        8906               Img_islandWater14 *@globals
   3873        8906 07 00 00 00           fcb   $07,$00,$00,$00,$04,$00,$00>>
               890A 04 00 00 06
               890E 00 0D 00 EC
               8912 1E 05
   3874        8914 C4 51 05 C4           fcb   $C4,$51,$05,$C4,$3B,$01,$05>>
               8918 3B 01 05 C4
               891C 14 05 C4 02
               8920 01
   3875        8921               Img_islandWater13 *@globals
   3876        8921 07 00 00 00           fcb   $07,$00,$00,$00,$09,$00,$00>>
               8925 09 00 00 06
               8929 00 0D 00 E8
               892D 1D 05
   3877        892F C3 D7 05 C3           fcb   $C3,$D7,$05,$C3,$C3,$01,$05>>
               8933 C3 01 05 C3
               8937 86 05 C3 6C
               893B 01
   3878        893C               Img_islandWater12 *@globals
   3879        893C 07 00 00 00           fcb   $07,$00,$00,$00,$0D,$00,$00>>
               8940 0D 00 00 06
               8944 00 0D 00 E7
               8948 1C 05
   3880        894A C3 23 05 C3           fcb   $C3,$23,$05,$C3,$07,$01,$05>>
               894E 07 01 05 C2
               8952 CC 05 C2 B2
               8956 01
   3881        8957               Img_islandWater11 *@globals
   3882        8957 07 00 00 00           fcb   $07,$00,$00,$00,$0B,$00,$00>>
               895B 0B 00 00 06
               895F 00 0D 00 E4
               8963 1B 05
   3883        8965 C2 7A 05 C2           fcb   $C2,$7A,$05,$C2,$64,$01,$05>>
               8969 64 01 05 C2
               896D 21 05 C2 07
               8971 01
   3884        8972               Img_islandMask_1 *@globals
   3885        8972 07 00 00 00           fcb   $07,$00,$00,$00,$2E,$15,$00>>
               8976 2E 15 00 00
               897A 00 00 06 15
               897E 01 06
   3886        8980 A3 D7                 fcb   $A3,$D7
   3887        8982               Img_islandWater10 *@globals
   3888        8982 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$00,$00>>
               8986 0F 00 00 06
               898A 00 0D 00 E5
               898E 1A 05
   3889        8990 C1 AD 05 C1           fcb   $C1,$AD,$05,$C1,$8D,$01,$05>>
               8994 8D 01 05 C1
               8998 54 05 C1 3C
               899C 01
   3890        899D               Img_emblemBack02 *@globals
   3891        899D 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               89A1 1F 1F 00 00
               89A5 06 00 00 D0
               89A9 BD 07
   3892        89AB CF F0                 fcb   $CF,$F0
   3893        89AD               Img_emblemBack01 *@globals
   3894        89AD 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$37,$00>>
               89B1 0F 37 00 00
               89B5 06 00 00 C0
               89B9 B3 07
   3895        89BB CC 8C                 fcb   $CC,$8C
   3896        89BD               Img_islandMask_2 *@globals
   3897        89BD 07 00 00 00           fcb   $07,$00,$00,$00,$17,$15,$00>>
               89C1 17 15 00 00
               89C5 00 00 06 15
               89C9 01 05
   3898        89CB C0 40                 fcb   $C0,$40
   3899        89CD               Img_islandWater09 *@globals
   3900        89CD 07 00 00 00           fcb   $07,$00,$00,$00,$0B,$00,$00>>
               89D1 0B 00 00 06
               89D5 00 0D 00 E8
               89D9 19 05
   3901        89DB C0 00 05 BF           fcb   $C0,$00,$05,$BF,$E6,$01,$05>>
               89DF E6 01 05 BF
               89E3 A6 05 BF 8C
               89E7 01
   3902        89E8               Img_islandWater08 *@globals
   3903        89E8 07 00 00 00           fcb   $07,$00,$00,$00,$12,$00,$00>>
               89EC 12 00 00 06
               89F0 00 0D 00 E2
               89F4 18 05
   3904        89F6 BF 3F 05 BF           fcb   $BF,$3F,$05,$BF,$21,$01,$05>>
               89FA 21 01 05 BE
               89FE D9 05 BE BB
               8A02 01
   3905        8A03               Img_islandWater07 *@globals
   3906        8A03 07 00 00 00           fcb   $07,$00,$00,$00,$1B,$00,$00>>
               8A07 1B 00 00 06
               8A0B 00 0D 00 E1
               8A0F 17 05
   3907        8A11 BE 57 05 BE           fcb   $BE,$57,$05,$BE,$34,$01,$05>>
               8A15 34 01 05 BD
               8A19 DF 05 BD BF
               8A1D 01
   3908        8A1E               Img_islandWater06 *@globals
   3909        8A1E 07 00 00 00           fcb   $07,$00,$00,$00,$74,$00,$00>>
               8A22 74 00 00 06
               8A26 00 0D 00 C5
               8A2A 16 05
   3910        8A2C BC F3 05 BC           fcb   $BC,$F3,$05,$BC,$B1,$01,$05>>
               8A30 B1 01 05 BB
               8A34 F3 05 BB B3
               8A38 01
   3911        8A39               Img_islandWater05 *@globals
   3912        8A39 07 00 00 00           fcb   $07,$00,$00,$00,$74,$00,$00>>
               8A3D 74 00 00 06
               8A41 00 0D 00 C1
               8A45 15 05
   3913        8A47 BB 0C 05 BA           fcb   $BB,$0C,$05,$BA,$D6,$01,$05>>
               8A4B D6 01 05 BA
               8A4F 18 05 B9 DD
               8A53 01
   3914        8A54               Img_islandWater04 *@globals
   3915        8A54 07 00 00 00           fcb   $07,$00,$00,$00,$7C,$00,$00>>
               8A58 7C 00 00 06
               8A5C 00 0D 00 BD
               8A60 14 05
   3916        8A62 B8 F4 05 B8           fcb   $B8,$F4,$05,$B8,$A8,$02,$05>>
               8A66 A8 02 05 B7
               8A6A 66 05 B6 FF
               8A6E 02
   3917        8A6F               Img_islandWater03 *@globals
   3918        8A6F 07 00 00 00           fcb   $07,$00,$00,$00,$82,$00,$00>>
               8A73 82 00 00 06
               8A77 00 0D 00 BF
               8A7B 13 05
   3919        8A7D B5 6A 05 B4           fcb   $B5,$6A,$05,$B4,$FA,$02,$05>>
               8A81 FA 02 05 B3
               8A85 71 05 B3 06
               8A89 02
   3920        8A8A               Img_islandWater02 *@globals
   3921        8A8A 07 00 00 00           fcb   $07,$00,$00,$00,$87,$00,$00>>
               8A8E 87 00 00 06
               8A92 00 0D 00 BC
               8A96 12 05
   3922        8A98 B2 1A 05 B1           fcb   $B2,$1A,$05,$B1,$D8,$02,$05>>
               8A9C D8 02 05 B0
               8AA0 DA 05 B0 93
               8AA4 02
   3923        8AA5               Img_star_4 *@globals
   3924        8AA5 07 00 00 00           fcb   $07,$00,$00,$00,$0A,$16,$00>>
               8AA9 0A 16 00 06
               8AAD 00 00 00 FB
               8AB1 F5 05
   3925        8AB3 AE E0 05 AE           fcb   $AE,$E0,$05,$AE,$4B,$02
               8AB7 4B 02
   3926        8AB9               Img_islandWater01 *@globals
   3927        8AB9 07 00 00 00           fcb   $07,$00,$00,$00,$87,$00,$00>>
               8ABD 87 00 00 06
               8AC1 00 0D 00 BC
               8AC5 11 05
   3928        8AC7 AD 61 05 AD           fcb   $AD,$61,$05,$AD,$23,$02,$05>>
               8ACB 23 02 05 AC
               8ACF 2B 05 AB E7
               8AD3 02
   3929        8AD4               Img_star_3 *@globals
   3930        8AD4 07 00 00 00           fcb   $07,$00,$00,$00,$06,$0E,$00>>
               8AD8 06 0E 00 06
               8ADC 00 00 00 FD
               8AE0 F9 05
   3931        8AE2 AA E5 05 AA           fcb   $AA,$E5,$05,$AA,$87,$01
               8AE6 87 01
   3932        8AE8               Img_sonicHand *@globals
   3933        8AE8 07 00 00 00           fcb   $07,$00,$00,$00,$0E,$2A,$00>>
               8AEC 0E 2A 00 06
               8AF0 0D 00 00 04
               8AF4 01 09
   3934        8AF6 A7 BB 05 A8           fcb   $A7,$BB,$05,$A8,$B5,$05,$07>>
               8AFA B5 05 07 C8
               8AFE E5
   3935        8AFF               Img_star_2 *@globals
   3936        8AFF 07 00 00 00           fcb   $07,$00,$00,$00,$02,$06,$00>>
               8B03 02 06 00 06
               8B07 00 0D 00 FF
               8B0B FD 05
   3937        8B0D A8 44 05 A8           fcb   $A8,$44,$05,$A8,$16,$01,$05>>
               8B11 16 01 05 A7
               8B15 A7 05 A7 79
               8B19 01
   3938        8B1A               Img_star_1 *@globals
   3939        8B1A 07 00 00 00           fcb   $07,$00,$00,$00,$02,$04,$00>>
               8B1E 02 04 00 06
               8B22 00 0D 00 FF
               8B26 FE 05
   3940        8B28 A7 26 05 A7           fcb   $A7,$26,$05,$A7,$02,$01,$05>>
               8B2C 02 01 05 A6
               8B30 B1 05 A6 8D
               8B34 01
   3941        8B35               Img_emblemBack08 *@globals
   3942        8B35 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$27,$00>>
               8B39 1F 27 00 00
               8B3D 06 00 00 10
               8B41 DD 08
   3943        8B43 AC 6B                 fcb   $AC,$6B
   3944        8B45               Img_emblemBack07 *@globals
   3945        8B45 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               8B49 1F 1F 00 00
               8B4D 06 00 00 10
               8B51 BD 07
   3946        8B53 C5 4D                 fcb   $C5,$4D
   3947        8B55               Img_emblemBack09 *@globals
   3948        8B55 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$38,$00>>
               8B59 0F 38 00 00
               8B5D 06 00 00 30
               8B61 B3 07
   3949        8B63 C1 E0                 fcb   $C1,$E0
   3950        8B65               Img_emblemBack04 *@globals
   3951        8B65 07 00 00 00           fcb   $07,$00,$00,$00,$24,$09,$00>>
               8B69 24 09 00 00
               8B6D 06 00 00 EE
               8B71 B3 05
   3952        8B73 A4 F2                 fcb   $A4,$F2
   3953        8B75               Img_emblemBack03 *@globals
   3954        8B75 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$26,$00>>
               8B79 1F 26 00 00
               8B7D 06 00 00 D0
               8B81 DD 07
   3955        8B83 BE 02                 fcb   $BE,$02
   3956        8B85               Img_emblemBack06 *@globals
   3957        8B85 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1C,$00>>
               8B89 1F 1C 00 00
               8B8D 06 00 00 F0
               8B91 DD 05
   3958        8B93 A3 37                 fcb   $A3,$37
   3959        8B95               Img_emblemBack05 *@globals
   3960        8B95 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               8B99 1F 1F 00 00
               8B9D 06 00 00 F0
               8BA1 BD 07
   3961        8BA3 BA 4C                 fcb   $BA,$4C
   3962        8BA5               Img_tailsHand *@globals
   3963        8BA5 07 00 00 00           fcb   $07,$00,$00,$00,$07,$12,$00>>
               8BA9 07 12 00 06
               8BAD 0D 00 00 04
               8BB1 06 05
   3964        8BB3 A1 A3 05 A1           fcb   $A1,$A3,$05,$A1,$03,$02,$05>>
               8BB7 03 02 05 A0
               8BBB 00
   3965        8BBC               Img_island *@globals
   3966        8BBC 07 00 00 00           fcb   $07,$00,$00,$00,$83,$1A,$00>>
               8BC0 83 1A 00 06
               8BC4 00 0D 00 BE
               8BC8 F6 0B
   3967        8BCA AC 5B 06 A0           fcb   $AC,$5B,$06,$A0,$AE,$12,$0B>>
               8BCE AE 12 0B A0
               8BD2 00 07 B7 1C
               8BD6 12
   3968        8BD7               Img_sonic_1 *@globals
   3969        8BD7 07 00 00 00           fcb   $07,$00,$00,$00,$23,$42,$00>>
               8BDB 23 42 00 06
               8BDF 00 00 00 02
               8BE3 0E 0C
   3970        8BE5 A0 00 07 B2           fcb   $A0,$00,$07,$B2,$ED,$14
               8BE9 ED 14
   3971        8BEB               Img_sonic_2 *@globals
   3972        8BEB 07 00 00 00           fcb   $07,$00,$00,$00,$24,$53,$00>>
               8BEF 24 53 00 06
               8BF3 00 00 00 03
               8BF7 0D 0D
   3973        8BF9 AF 17 08 A7           fcb   $AF,$17,$08,$A7,$BE,$17
               8BFD BE 17
   3974        8BFF               Img_sonic_5 *@globals
   3975        8BFF 07 00 00 00           fcb   $07,$00,$00,$00,$23,$49,$00>>
               8C03 23 49 00 06
               8C07 0D 00 00 0C
               8C0B 0A 0D
   3976        8C0D A0 00 07 AE           fcb   $A0,$00,$07,$AE,$A6,$14,$0A>>
               8C11 A6 14 0A AD
               8C15 DF
   3977        8C16               Img_sonic_3 *@globals
   3978        8C16 07 00 00 00           fcb   $07,$00,$00,$00,$24,$46,$00>>
               8C1A 24 46 00 06
               8C1E 00 00 00 0B
               8C22 0D 0E
   3979        8C24 A0 00 07 AA           fcb   $A0,$00,$07,$AA,$42,$15
               8C28 42 15
   3980        8C2A               Img_emblemFront07 *@globals
   3981        8C2A 07 00 00 00           fcb   $07,$00,$00,$00,$12,$12,$00>>
               8C2E 12 12 00 00
               8C32 06 00 00 F7
               8C36 3D 07
   3982        8C38 A8 3D                 fcb   $A8,$3D
   3983        8C3A               Img_emblemFront08 *@globals
   3984        8C3A 07 00 00 00           fcb   $07,$00,$00,$00,$26,$25,$00>>
               8C3E 26 25 00 00
               8C42 06 00 00 10
               8C46 1D 08
   3985        8C48 A3 15                 fcb   $A3,$15
   3986        8C4A               Img_emblemFront05 *@globals
   3987        8C4A 07 00 00 00           fcb   $07,$00,$00,$00,$26,$25,$00>>
               8C4E 26 25 00 00
               8C52 06 00 00 C9
               8C56 1D 09
   3988        8C58 A2 F6                 fcb   $A2,$F6
   3989        8C5A               Img_emblemFront06 *@globals
   3990        8C5A 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               8C5E 1F 1F 00 00
               8C62 06 00 00 F0
               8C66 1D 07
   3991        8C68 A4 06                 fcb   $A4,$06
   3992        8C6A               Img_emblemFront03 *@globals
   3993        8C6A 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               8C6E 1F 1F 00 00
               8C72 06 00 00 F0
               8C76 FD 07
   3994        8C78 A0 00                 fcb   $A0,$00
   3995        8C7A               Img_emblemFront04 *@globals
   3996        8C7A 07 00 00 00           fcb   $07,$00,$00,$00,$1B,$1F,$00>>
               8C7E 1B 1F 00 00
               8C82 06 00 00 10
               8C86 FD 08
   3997        8C88 A0 00                 fcb   $A0,$00
   3998        8C8A               Img_emblemFront01 *@globals
   3999        8C8A 07 00 00 00           fcb   $07,$00,$00,$00,$3D,$03,$00>>
               8C8E 3D 03 00 00
               8C92 06 00 00 E1
               8C96 F9 06
   4000        8C98 A0 00                 fcb   $A0,$00
   4001        8C9A               Img_emblemFront02 *@globals
   4002        8C9A 07 00 00 00           fcb   $07,$00,$00,$00,$1A,$1F,$00>>
               8C9E 1A 1F 00 00
               8CA2 06 00 00 D5
               8CA6 FD 09
   4003        8CA8 A0 00                 fcb   $A0,$00
   4004
   4005                                   INCLUD ANIMSCPT
   4006                           * Generated Code
   4007
   4008        8CAA 00                    fcb   0
   4009        8CAB               Ani_SegaSonic_3 *@globals
   4010        8CAB 86E1                  fdb   Img_SegaSonic_13
   4011        8CAD 86C0                  fdb   Img_SegaSonic_23
   4012        8CAF 8786                  fdb   Img_SegaSonic_33
   4013        8CB1 8744                  fdb   Img_SegaSonic_43
   4014        8CB3 FF                    fcb   _resetAnim
   4015        8CB4 00                    fcb   0
   4016        8CB5               Ani_SegaSonic_2 *@globals
   4017        8CB5 869F                  fdb   Img_SegaSonic_12
   4018        8CB7 87A7                  fdb   Img_SegaSonic_22
   4019        8CB9 8702                  fdb   Img_SegaSonic_32
   4020        8CBB 880A                  fdb   Img_SegaSonic_42
   4021        8CBD FF                    fcb   _resetAnim
   4022        8CBE 00                    fcb   0
   4023        8CBF               Ani_SegaSonic_1 *@globals
   4024        8CBF 8765                  fdb   Img_SegaSonic_11
   4025        8CC1 8723                  fdb   Img_SegaSonic_21
   4026        8CC3 87E9                  fdb   Img_SegaSonic_31
   4027        8CC5 87C8                  fdb   Img_SegaSonic_41
   4028        8CC7 FF                    fcb   _resetAnim
   4029        8CC8 03                    fcb   3
   4030        8CC9               Ani_smallStar *@globals
   4031        8CC9 8AFF                  fdb   Img_star_2
   4032        8CCB 8B1A                  fdb   Img_star_1
   4033        8CCD FF                    fcb   _resetAnim
   4034        8CCE 01                    fcb   1
   4035        8CCF               Ani_largeStar *@globals
   4036        8CCF 8B1A                  fdb   Img_star_1
   4037        8CD1 8AFF                  fdb   Img_star_2
   4038        8CD3 8AD4                  fdb   Img_star_3
   4039        8CD5 8AFF                  fdb   Img_star_2
   4040        8CD7 8B1A                  fdb   Img_star_1
   4041        8CD9 FA                    fcb   _nextSubRoutine
   4042        8CDA 01                    fcb   1
   4043        8CDB               Ani_tails *@globals
   4044        8CDB 88D7                  fdb   Img_tails_1
   4045        8CDD 88C3                  fdb   Img_tails_2
   4046        8CDF 88AF                  fdb   Img_tails_3
   4047        8CE1 889B                  fdb   Img_tails_4
   4048        8CE3 8884                  fdb   Img_tails_5
   4049        8CE5 FA                    fcb   _nextSubRoutine
   4050        8CE6 01                    fcb   1
   4051        8CE7               Ani_sonic *@globals
   4052        8CE7 8BD7                  fdb   Img_sonic_1
   4053        8CE9 8BEB                  fdb   Img_sonic_2
   4054        8CEB 8C16                  fdb   Img_sonic_3
   4055        8CED 8BFF                  fdb   Img_sonic_5
   4056        8CEF FA                    fcb   _nextSubRoutine
   4057
   4058                                   INCLUD OBJINDEX
   4059                           * Generated Code
   4060
   4061        8CF0               Obj_Index_Page
   4062        8CF0 00                    fcb   $00
   4063        8CF1 05                    fcb   $05
   4064        8CF2 08                    fcb   $08
   4065        8CF3 05                    fcb   $05
   4066        8CF4 06                    fcb   $06
   4067        8CF5 0A                    fcb   $0A
   4068        8CF6 00                    fcb   $00
   4069        8CF7 00                    fcb   $00
   4070        8CF8 00                    fcb   $00
   4071        8CF9 00                    fcb   $00
   4072        8CFA 00                    fcb   $00
   4073        8CFB 00                    fcb   $00
   4074        8CFC 00                    fcb   $00
   4075        8CFD 00                    fcb   $00
   4076        8CFE 00                    fcb   $00
   4077        8CFF 00                    fcb   $00
   4078        8D00 00                    fcb   $00
   4079        8D01 00                    fcb   $00
   4080        8D02 00                    fcb   $00
   4081        8D03 00                    fcb   $00
   4082        8D04 00                    fcb   $00
   4083        8D05 00                    fcb   $00
   4084        8D06 00                    fcb   $00
   4085        8D07 00                    fcb   $00
   4086        8D08 00                    fcb   $00
   4087        8D09 00                    fcb   $00
   4088        8D0A 00                    fcb   $00
   4089        8D0B 00                    fcb   $00
   4090        8D0C 00                    fcb   $00
   4091        8D0D 00                    fcb   $00
   4092        8D0E 00                    fcb   $00
   4093        8D0F 00                    fcb   $00
   4094        8D10 00                    fcb   $00
   4095        8D11 00                    fcb   $00
   4096        8D12 00                    fcb   $00
   4097        8D13 00                    fcb   $00
   4098        8D14 00                    fcb   $00
   4099        8D15 00                    fcb   $00
   4100        8D16 00                    fcb   $00
   4101        8D17 00                    fcb   $00
   4102        8D18 00                    fcb   $00
   4103        8D19 00                    fcb   $00
   4104        8D1A 00                    fcb   $00
   4105        8D1B 00                    fcb   $00
   4106        8D1C 00                    fcb   $00
   4107        8D1D 00                    fcb   $00
   4108        8D1E 00                    fcb   $00
   4109        8D1F 00                    fcb   $00
   4110        8D20 00                    fcb   $00
   4111        8D21 00                    fcb   $00
   4112        8D22 00                    fcb   $00
   4113        8D23 00                    fcb   $00
   4114        8D24 00                    fcb   $00
   4115        8D25 00                    fcb   $00
   4116        8D26 00                    fcb   $00
   4117        8D27 00                    fcb   $00
   4118        8D28 00                    fcb   $00
   4119        8D29 00                    fcb   $00
   4120        8D2A 00                    fcb   $00
   4121        8D2B 00                    fcb   $00
   4122        8D2C 00                    fcb   $00
   4123        8D2D 00                    fcb   $00
   4124        8D2E 00                    fcb   $00
   4125        8D2F 00                    fcb   $00
   4126        8D30 00                    fcb   $00
   4127        8D31 00                    fcb   $00
   4128        8D32 00                    fcb   $00
   4129        8D33 00                    fcb   $00
   4130        8D34 00                    fcb   $00
   4131        8D35 00                    fcb   $00
   4132        8D36 00                    fcb   $00
   4133        8D37 00                    fcb   $00
   4134        8D38 00                    fcb   $00
   4135        8D39 00                    fcb   $00
   4136        8D3A 00                    fcb   $00
   4137        8D3B 00                    fcb   $00
   4138        8D3C 00                    fcb   $00
   4139        8D3D 00                    fcb   $00
   4140        8D3E 00                    fcb   $00
   4141        8D3F 00                    fcb   $00
   4142        8D40 00                    fcb   $00
   4143        8D41 00                    fcb   $00
   4144        8D42 00                    fcb   $00
   4145        8D43 00                    fcb   $00
   4146        8D44 00                    fcb   $00
   4147        8D45 00                    fcb   $00
   4148        8D46 00                    fcb   $00
   4149        8D47 00                    fcb   $00
   4150        8D48 00                    fcb   $00
   4151        8D49 00                    fcb   $00
   4152        8D4A 00                    fcb   $00
   4153        8D4B 00                    fcb   $00
   4154        8D4C 00                    fcb   $00
   4155        8D4D 00                    fcb   $00
   4156        8D4E 00                    fcb   $00
   4157        8D4F 00                    fcb   $00
   4158        8D50 00                    fcb   $00
   4159        8D51 00                    fcb   $00
   4160        8D52 00                    fcb   $00
   4161        8D53 00                    fcb   $00
   4162        8D54 00                    fcb   $00
   4163        8D55 00                    fcb   $00
   4164        8D56 00                    fcb   $00
   4165        8D57 00                    fcb   $00
   4166        8D58 00                    fcb   $00
   4167        8D59 00                    fcb   $00
   4168        8D5A 00                    fcb   $00
   4169        8D5B 00                    fcb   $00
   4170        8D5C 00                    fcb   $00
   4171        8D5D 00                    fcb   $00
   4172        8D5E 00                    fcb   $00
   4173        8D5F 00                    fcb   $00
   4174        8D60 00                    fcb   $00
   4175        8D61 00                    fcb   $00
   4176        8D62 00                    fcb   $00
   4177        8D63 00                    fcb   $00
   4178        8D64 00                    fcb   $00
   4179        8D65 00                    fcb   $00
   4180        8D66 00                    fcb   $00
   4181        8D67 00                    fcb   $00
   4182        8D68 00                    fcb   $00
   4183        8D69 00                    fcb   $00
   4184        8D6A 00                    fcb   $00
   4185        8D6B 00                    fcb   $00
   4186        8D6C 00                    fcb   $00
   4187        8D6D 00                    fcb   $00
   4188        8D6E 00                    fcb   $00
   4189        8D6F 00                    fcb   $00
   4190        8D70 00                    fcb   $00
   4191        8D71 00                    fcb   $00
   4192        8D72 00                    fcb   $00
   4193        8D73 00                    fcb   $00
   4194        8D74 00                    fcb   $00
   4195        8D75 00                    fcb   $00
   4196        8D76 00                    fcb   $00
   4197        8D77 00                    fcb   $00
   4198        8D78 00                    fcb   $00
   4199        8D79 00                    fcb   $00
   4200        8D7A 00                    fcb   $00
   4201        8D7B 00                    fcb   $00
   4202        8D7C 00                    fcb   $00
   4203        8D7D 00                    fcb   $00
   4204        8D7E 00                    fcb   $00
   4205        8D7F 00                    fcb   $00
   4206        8D80 00                    fcb   $00
   4207        8D81 00                    fcb   $00
   4208        8D82 00                    fcb   $00
   4209        8D83 00                    fcb   $00
   4210        8D84 00                    fcb   $00
   4211        8D85 00                    fcb   $00
   4212        8D86 00                    fcb   $00
   4213        8D87 00                    fcb   $00
   4214        8D88 00                    fcb   $00
   4215        8D89 00                    fcb   $00
   4216        8D8A 00                    fcb   $00
   4217        8D8B 00                    fcb   $00
   4218        8D8C 00                    fcb   $00
   4219        8D8D 00                    fcb   $00
   4220        8D8E 00                    fcb   $00
   4221        8D8F 00                    fcb   $00
   4222        8D90 00                    fcb   $00
   4223        8D91 00                    fcb   $00
   4224        8D92 00                    fcb   $00
   4225        8D93 00                    fcb   $00
   4226        8D94 00                    fcb   $00
   4227        8D95 00                    fcb   $00
   4228        8D96 00                    fcb   $00
   4229        8D97 00                    fcb   $00
   4230        8D98 00                    fcb   $00
   4231        8D99 00                    fcb   $00
   4232        8D9A 00                    fcb   $00
   4233        8D9B 00                    fcb   $00
   4234        8D9C 00                    fcb   $00
   4235        8D9D 00                    fcb   $00
   4236        8D9E 00                    fcb   $00
   4237        8D9F 00                    fcb   $00
   4238        8DA0 00                    fcb   $00
   4239        8DA1 00                    fcb   $00
   4240        8DA2 00                    fcb   $00
   4241        8DA3 00                    fcb   $00
   4242        8DA4 00                    fcb   $00
   4243        8DA5 00                    fcb   $00
   4244        8DA6 00                    fcb   $00
   4245        8DA7 00                    fcb   $00
   4246        8DA8 00                    fcb   $00
   4247        8DA9 00                    fcb   $00
   4248        8DAA 00                    fcb   $00
   4249        8DAB 00                    fcb   $00
   4250        8DAC 00                    fcb   $00
   4251        8DAD 00                    fcb   $00
   4252        8DAE 00                    fcb   $00
   4253        8DAF 00                    fcb   $00
   4254        8DB0 00                    fcb   $00
   4255        8DB1 00                    fcb   $00
   4256        8DB2 00                    fcb   $00
   4257        8DB3 00                    fcb   $00
   4258        8DB4 00                    fcb   $00
   4259        8DB5 00                    fcb   $00
   4260        8DB6 00                    fcb   $00
   4261        8DB7 00                    fcb   $00
   4262        8DB8 00                    fcb   $00
   4263        8DB9 00                    fcb   $00
   4264        8DBA 00                    fcb   $00
   4265        8DBB 00                    fcb   $00
   4266        8DBC 00                    fcb   $00
   4267        8DBD 00                    fcb   $00
   4268        8DBE 00                    fcb   $00
   4269        8DBF 00                    fcb   $00
   4270        8DC0 00                    fcb   $00
   4271        8DC1 00                    fcb   $00
   4272        8DC2 00                    fcb   $00
   4273        8DC3 00                    fcb   $00
   4274        8DC4 00                    fcb   $00
   4275        8DC5 00                    fcb   $00
   4276        8DC6 00                    fcb   $00
   4277        8DC7 00                    fcb   $00
   4278        8DC8 00                    fcb   $00
   4279        8DC9 00                    fcb   $00
   4280        8DCA 00                    fcb   $00
   4281        8DCB 00                    fcb   $00
   4282        8DCC 00                    fcb   $00
   4283        8DCD 00                    fcb   $00
   4284        8DCE 00                    fcb   $00
   4285        8DCF 00                    fcb   $00
   4286        8DD0 00                    fcb   $00
   4287        8DD1 00                    fcb   $00
   4288        8DD2 00                    fcb   $00
   4289        8DD3 00                    fcb   $00
   4290        8DD4 00                    fcb   $00
   4291        8DD5 00                    fcb   $00
   4292        8DD6 00                    fcb   $00
   4293        8DD7 00                    fcb   $00
   4294        8DD8 00                    fcb   $00
   4295        8DD9 00                    fcb   $00
   4296        8DDA 00                    fcb   $00
   4297        8DDB 00                    fcb   $00
   4298        8DDC 00                    fcb   $00
   4299        8DDD 00                    fcb   $00
   4300        8DDE 00                    fcb   $00
   4301        8DDF 00                    fcb   $00
   4302        8DE0 00                    fcb   $00
   4303        8DE1 00                    fcb   $00
   4304        8DE2 00                    fcb   $00
   4305        8DE3 00                    fcb   $00
   4306        8DE4 00                    fcb   $00
   4307        8DE5 00                    fcb   $00
   4308        8DE6 00                    fcb   $00
   4309        8DE7 00                    fcb   $00
   4310        8DE8 00                    fcb   $00
   4311        8DE9 00                    fcb   $00
   4312        8DEA 00                    fcb   $00
   4313        8DEB 00                    fcb   $00
   4314        8DEC 00                    fcb   $00
   4315        8DED 00                    fcb   $00
   4316        8DEE 00                    fcb   $00
   4317        8DEF 00                    fcb   $00
   4318        8DF0               Obj_Index_Address
   4319        8DF0 00 00                 fcb   $00,$00
   4320        8DF2 DF 0B                 fcb   $DF,$0B
   4321        8DF4 DA E9                 fcb   $DA,$E9
   4322        8DF6 DE 41                 fcb   $DE,$41
   4323        8DF8 A9 DC                 fcb   $A9,$DC
   4324        8DFA A0 00                 fcb   $A0,$00
   4325        8DFC 00 00                 fcb   $00,$00
   4326        8DFE 00 00                 fcb   $00,$00
   4327        8E00 00 00                 fcb   $00,$00
   4328        8E02 00 00                 fcb   $00,$00
   4329        8E04 00 00                 fcb   $00,$00
   4330        8E06 00 00                 fcb   $00,$00
   4331        8E08 00 00                 fcb   $00,$00
   4332        8E0A 00 00                 fcb   $00,$00
   4333        8E0C 00 00                 fcb   $00,$00
   4334        8E0E 00 00                 fcb   $00,$00
   4335        8E10 00 00                 fcb   $00,$00
   4336        8E12 00 00                 fcb   $00,$00
   4337        8E14 00 00                 fcb   $00,$00
   4338        8E16 00 00                 fcb   $00,$00
   4339        8E18 00 00                 fcb   $00,$00
   4340        8E1A 00 00                 fcb   $00,$00
   4341        8E1C 00 00                 fcb   $00,$00
   4342        8E1E 00 00                 fcb   $00,$00
   4343        8E20 00 00                 fcb   $00,$00
   4344        8E22 00 00                 fcb   $00,$00
   4345        8E24 00 00                 fcb   $00,$00
   4346        8E26 00 00                 fcb   $00,$00
   4347        8E28 00 00                 fcb   $00,$00
   4348        8E2A 00 00                 fcb   $00,$00
   4349        8E2C 00 00                 fcb   $00,$00
   4350        8E2E 00 00                 fcb   $00,$00
   4351        8E30 00 00                 fcb   $00,$00
   4352        8E32 00 00                 fcb   $00,$00
   4353        8E34 00 00                 fcb   $00,$00
   4354        8E36 00 00                 fcb   $00,$00
   4355        8E38 00 00                 fcb   $00,$00
   4356        8E3A 00 00                 fcb   $00,$00
   4357        8E3C 00 00                 fcb   $00,$00
   4358        8E3E 00 00                 fcb   $00,$00
   4359        8E40 00 00                 fcb   $00,$00
   4360        8E42 00 00                 fcb   $00,$00
   4361        8E44 00 00                 fcb   $00,$00
   4362        8E46 00 00                 fcb   $00,$00
   4363        8E48 00 00                 fcb   $00,$00
   4364        8E4A 00 00                 fcb   $00,$00
   4365        8E4C 00 00                 fcb   $00,$00
   4366        8E4E 00 00                 fcb   $00,$00
   4367        8E50 00 00                 fcb   $00,$00
   4368        8E52 00 00                 fcb   $00,$00
   4369        8E54 00 00                 fcb   $00,$00
   4370        8E56 00 00                 fcb   $00,$00
   4371        8E58 00 00                 fcb   $00,$00
   4372        8E5A 00 00                 fcb   $00,$00
   4373        8E5C 00 00                 fcb   $00,$00
   4374        8E5E 00 00                 fcb   $00,$00
   4375        8E60 00 00                 fcb   $00,$00
   4376        8E62 00 00                 fcb   $00,$00
   4377        8E64 00 00                 fcb   $00,$00
   4378        8E66 00 00                 fcb   $00,$00
   4379        8E68 00 00                 fcb   $00,$00
   4380        8E6A 00 00                 fcb   $00,$00
   4381        8E6C 00 00                 fcb   $00,$00
   4382        8E6E 00 00                 fcb   $00,$00
   4383        8E70 00 00                 fcb   $00,$00
   4384        8E72 00 00                 fcb   $00,$00
   4385        8E74 00 00                 fcb   $00,$00
   4386        8E76 00 00                 fcb   $00,$00
   4387        8E78 00 00                 fcb   $00,$00
   4388        8E7A 00 00                 fcb   $00,$00
   4389        8E7C 00 00                 fcb   $00,$00
   4390        8E7E 00 00                 fcb   $00,$00
   4391        8E80 00 00                 fcb   $00,$00
   4392        8E82 00 00                 fcb   $00,$00
   4393        8E84 00 00                 fcb   $00,$00
   4394        8E86 00 00                 fcb   $00,$00
   4395        8E88 00 00                 fcb   $00,$00
   4396        8E8A 00 00                 fcb   $00,$00
   4397        8E8C 00 00                 fcb   $00,$00
   4398        8E8E 00 00                 fcb   $00,$00
   4399        8E90 00 00                 fcb   $00,$00
   4400        8E92 00 00                 fcb   $00,$00
   4401        8E94 00 00                 fcb   $00,$00
   4402        8E96 00 00                 fcb   $00,$00
   4403        8E98 00 00                 fcb   $00,$00
   4404        8E9A 00 00                 fcb   $00,$00
   4405        8E9C 00 00                 fcb   $00,$00
   4406        8E9E 00 00                 fcb   $00,$00
   4407        8EA0 00 00                 fcb   $00,$00
   4408        8EA2 00 00                 fcb   $00,$00
   4409        8EA4 00 00                 fcb   $00,$00
   4410        8EA6 00 00                 fcb   $00,$00
   4411        8EA8 00 00                 fcb   $00,$00
   4412        8EAA 00 00                 fcb   $00,$00
   4413        8EAC 00 00                 fcb   $00,$00
   4414        8EAE 00 00                 fcb   $00,$00
   4415        8EB0 00 00                 fcb   $00,$00
   4416        8EB2 00 00                 fcb   $00,$00
   4417        8EB4 00 00                 fcb   $00,$00
   4418        8EB6 00 00                 fcb   $00,$00
   4419        8EB8 00 00                 fcb   $00,$00
   4420        8EBA 00 00                 fcb   $00,$00
   4421        8EBC 00 00                 fcb   $00,$00
   4422        8EBE 00 00                 fcb   $00,$00
   4423        8EC0 00 00                 fcb   $00,$00
   4424        8EC2 00 00                 fcb   $00,$00
   4425        8EC4 00 00                 fcb   $00,$00
   4426        8EC6 00 00                 fcb   $00,$00
   4427        8EC8 00 00                 fcb   $00,$00
   4428        8ECA 00 00                 fcb   $00,$00
   4429        8ECC 00 00                 fcb   $00,$00
   4430        8ECE 00 00                 fcb   $00,$00
   4431        8ED0 00 00                 fcb   $00,$00
   4432        8ED2 00 00                 fcb   $00,$00
   4433        8ED4 00 00                 fcb   $00,$00
   4434        8ED6 00 00                 fcb   $00,$00
   4435        8ED8 00 00                 fcb   $00,$00
   4436        8EDA 00 00                 fcb   $00,$00
   4437        8EDC 00 00                 fcb   $00,$00
   4438        8EDE 00 00                 fcb   $00,$00
   4439        8EE0 00 00                 fcb   $00,$00
   4440        8EE2 00 00                 fcb   $00,$00
   4441        8EE4 00 00                 fcb   $00,$00
   4442        8EE6 00 00                 fcb   $00,$00
   4443        8EE8 00 00                 fcb   $00,$00
   4444        8EEA 00 00                 fcb   $00,$00
   4445        8EEC 00 00                 fcb   $00,$00
   4446        8EEE 00 00                 fcb   $00,$00
   4447        8EF0 00 00                 fcb   $00,$00
   4448        8EF2 00 00                 fcb   $00,$00
   4449        8EF4 00 00                 fcb   $00,$00
   4450        8EF6 00 00                 fcb   $00,$00
   4451        8EF8 00 00                 fcb   $00,$00
   4452        8EFA 00 00                 fcb   $00,$00
   4453        8EFC 00 00                 fcb   $00,$00
   4454        8EFE 00 00                 fcb   $00,$00
   4455        8F00 00 00                 fcb   $00,$00
   4456        8F02 00 00                 fcb   $00,$00
   4457        8F04 00 00                 fcb   $00,$00
   4458        8F06 00 00                 fcb   $00,$00
   4459        8F08 00 00                 fcb   $00,$00
   4460        8F0A 00 00                 fcb   $00,$00
   4461        8F0C 00 00                 fcb   $00,$00
   4462        8F0E 00 00                 fcb   $00,$00
   4463        8F10 00 00                 fcb   $00,$00
   4464        8F12 00 00                 fcb   $00,$00
   4465        8F14 00 00                 fcb   $00,$00
   4466        8F16 00 00                 fcb   $00,$00
   4467        8F18 00 00                 fcb   $00,$00
   4468        8F1A 00 00                 fcb   $00,$00
   4469        8F1C 00 00                 fcb   $00,$00
   4470        8F1E 00 00                 fcb   $00,$00
   4471        8F20 00 00                 fcb   $00,$00
   4472        8F22 00 00                 fcb   $00,$00
   4473        8F24 00 00                 fcb   $00,$00
   4474        8F26 00 00                 fcb   $00,$00
   4475        8F28 00 00                 fcb   $00,$00
   4476        8F2A 00 00                 fcb   $00,$00
   4477        8F2C 00 00                 fcb   $00,$00
   4478        8F2E 00 00                 fcb   $00,$00
   4479        8F30 00 00                 fcb   $00,$00
   4480        8F32 00 00                 fcb   $00,$00
   4481        8F34 00 00                 fcb   $00,$00
   4482        8F36 00 00                 fcb   $00,$00
   4483        8F38 00 00                 fcb   $00,$00
   4484        8F3A 00 00                 fcb   $00,$00
   4485        8F3C 00 00                 fcb   $00,$00
   4486        8F3E 00 00                 fcb   $00,$00
   4487        8F40 00 00                 fcb   $00,$00
   4488        8F42 00 00                 fcb   $00,$00
   4489        8F44 00 00                 fcb   $00,$00
   4490        8F46 00 00                 fcb   $00,$00
   4491        8F48 00 00                 fcb   $00,$00
   4492        8F4A 00 00                 fcb   $00,$00
   4493        8F4C 00 00                 fcb   $00,$00
   4494        8F4E 00 00                 fcb   $00,$00
   4495        8F50 00 00                 fcb   $00,$00
   4496        8F52 00 00                 fcb   $00,$00
   4497        8F54 00 00                 fcb   $00,$00
   4498        8F56 00 00                 fcb   $00,$00
   4499        8F58 00 00                 fcb   $00,$00
   4500        8F5A 00 00                 fcb   $00,$00
   4501        8F5C 00 00                 fcb   $00,$00
   4502        8F5E 00 00                 fcb   $00,$00
   4503        8F60 00 00                 fcb   $00,$00
   4504        8F62 00 00                 fcb   $00,$00
   4505        8F64 00 00                 fcb   $00,$00
   4506        8F66 00 00                 fcb   $00,$00
   4507        8F68 00 00                 fcb   $00,$00
   4508        8F6A 00 00                 fcb   $00,$00
   4509        8F6C 00 00                 fcb   $00,$00
   4510        8F6E 00 00                 fcb   $00,$00
   4511        8F70 00 00                 fcb   $00,$00
   4512        8F72 00 00                 fcb   $00,$00
   4513        8F74 00 00                 fcb   $00,$00
   4514        8F76 00 00                 fcb   $00,$00
   4515        8F78 00 00                 fcb   $00,$00
   4516        8F7A 00 00                 fcb   $00,$00
   4517        8F7C 00 00                 fcb   $00,$00
   4518        8F7E 00 00                 fcb   $00,$00
   4519        8F80 00 00                 fcb   $00,$00
   4520        8F82 00 00                 fcb   $00,$00
   4521        8F84 00 00                 fcb   $00,$00
   4522        8F86 00 00                 fcb   $00,$00
   4523        8F88 00 00                 fcb   $00,$00
   4524        8F8A 00 00                 fcb   $00,$00
   4525        8F8C 00 00                 fcb   $00,$00
   4526        8F8E 00 00                 fcb   $00,$00
   4527        8F90 00 00                 fcb   $00,$00
   4528        8F92 00 00                 fcb   $00,$00
   4529        8F94 00 00                 fcb   $00,$00
   4530        8F96 00 00                 fcb   $00,$00
   4531        8F98 00 00                 fcb   $00,$00
   4532        8F9A 00 00                 fcb   $00,$00
   4533        8F9C 00 00                 fcb   $00,$00
   4534        8F9E 00 00                 fcb   $00,$00
   4535        8FA0 00 00                 fcb   $00,$00
   4536        8FA2 00 00                 fcb   $00,$00
   4537        8FA4 00 00                 fcb   $00,$00
   4538        8FA6 00 00                 fcb   $00,$00
   4539        8FA8 00 00                 fcb   $00,$00
   4540        8FAA 00 00                 fcb   $00,$00
   4541        8FAC 00 00                 fcb   $00,$00
   4542        8FAE 00 00                 fcb   $00,$00
   4543        8FB0 00 00                 fcb   $00,$00
   4544        8FB2 00 00                 fcb   $00,$00
   4545        8FB4 00 00                 fcb   $00,$00
   4546        8FB6 00 00                 fcb   $00,$00
   4547        8FB8 00 00                 fcb   $00,$00
   4548        8FBA 00 00                 fcb   $00,$00
   4549        8FBC 00 00                 fcb   $00,$00
   4550        8FBE 00 00                 fcb   $00,$00
   4551        8FC0 00 00                 fcb   $00,$00
   4552        8FC2 00 00                 fcb   $00,$00
   4553        8FC4 00 00                 fcb   $00,$00
   4554        8FC6 00 00                 fcb   $00,$00
   4555        8FC8 00 00                 fcb   $00,$00
   4556        8FCA 00 00                 fcb   $00,$00
   4557        8FCC 00 00                 fcb   $00,$00
   4558        8FCE 00 00                 fcb   $00,$00
   4559        8FD0 00 00                 fcb   $00,$00
   4560        8FD2 00 00                 fcb   $00,$00
   4561        8FD4 00 00                 fcb   $00,$00
   4562        8FD6 00 00                 fcb   $00,$00
   4563        8FD8 00 00                 fcb   $00,$00
   4564        8FDA 00 00                 fcb   $00,$00
   4565        8FDC 00 00                 fcb   $00,$00
   4566        8FDE 00 00                 fcb   $00,$00
   4567        8FE0 00 00                 fcb   $00,$00
   4568        8FE2 00 00                 fcb   $00,$00
   4569        8FE4 00 00                 fcb   $00,$00
   4570        8FE6 00 00                 fcb   $00,$00
   4571        8FE8 00 00                 fcb   $00,$00
   4572        8FEA 00 00                 fcb   $00,$00
   4573        8FEC 00 00                 fcb   $00,$00
   4574        8FEE 00 00                 fcb   $00,$00
   4575
   4576                                   INCLUD SOUNDIDX * A rendre dynami>>
   4577                           * Generated Code
   4578
   4579        8FF0               Pcm_SEGA *@globals
   4580        8FF0 0F A0 00 DF           fcb   $0F,$A0,$00,$DF,$F6
               8FF4 F6
   4581        8FF5 0E AF 90 D1           fcb   $0E,$AF,$90,$D1,$0E
               8FF9 0E
   4582        8FFA FF                    fcb   $FF
   4583        8FFB               Psg_TitleScreen *@globals
   4584        8FFB 0A A7 D7 AD           fcb   $0A,$A7,$D7,$AD,$DF
               8FFF DF
   4585        9000 FF                    fcb   $FF
   4586
   4587                                   INCLUD LOADACT
   4588                           * Generated Code
   4589
   4590        9001               LoadAct
   4591  3     9001 8E   0000             ldx   #$0000                   * >>
   4592  2     9004 C6   62               ldb   #$62                     * >>
   4593  5     9006 F7   E7E6             stb   $E7E6                    * >>
   4594  8     9009 BD   808B             jsr   ClearCartMem
   4595  5     900C B6   E7DD             lda   $E7DD                    * >>
   4596  2     900F 84   F0               anda  #$F0
   4597  2     9011 8B   00               adda  #$00                     * >>
   4598  5     9013 B7   E7DD             sta   $E7DD
   4599  2     9016 84   0F               anda  #$0F
   4600  2     9018 8B   80               adda  #$80
   4601  5     901A B7   7537             sta   screen_border_color+1    * >>
   4602  8     901D BD   7527             jsr   WaitVBL
   4603  3     9020 8E   0000             ldx   #$0000                   * >>
   4604  2     9023 C6   63               ldb   #$63                     * >>
   4605  5     9025 F7   E7E6             stb   $E7E6                    * >>
   4606  8     9028 BD   808B             jsr   ClearCartMem
   4607  3     902B CC   9055             ldd   #Pal_SEGA
   4608  6     902E FD   80C6             std   Cur_palette
   4609  7     9031 7F   80C5             clr   Refresh_palette
   4610  5     9034 39                    rts
   4611
    175
   4612                                   INCLUD PALETTE
   4613                           * Generated Code
   4614
   4615        9035               Pal_Island * @globals
   4616        9035 410B                  fdb   $410b
   4617        9037 0000                  fdb   $0000
   4618        9039 100C                  fdb   $100c
   4619        903B 6A02                  fdb   $6a02
   4620        903D 2000                  fdb   $2000
   4621        903F 4000                  fdb   $4000
   4622        9041 4A01                  fdb   $4a01
   4623        9043 2600                  fdb   $2600
   4624        9045 BB0B                  fdb   $bb0b
   4625        9047 7100                  fdb   $7100
   4626        9049 A400                  fdb   $a400
   4627        904B 420A                  fdb   $420a
   4628        904D 000E                  fdb   $000e
   4629        904F 740B                  fdb   $740b
   4630        9051 2301                  fdb   $2301
   4631        9053 0000                  fdb   $0000
   4632
   4633        9055               Pal_SEGA * @globals
   4634        9055 FF0F                  fdb   $ff0f
   4635        9057 4404                  fdb   $4404
   4636        9059 1101                  fdb   $1101
   4637        905B 0000                  fdb   $0000
   4638        905D 0300                  fdb   $0300
   4639        905F 0F00                  fdb   $0f00
   4640        9061 5E03                  fdb   $5e03
   4641        9063 2501                  fdb   $2501
   4642        9065 B70B                  fdb   $b70b
   4643        9067 740B                  fdb   $740b
   4644        9069 410B                  fdb   $410b
   4645        906B 100B                  fdb   $100b
   4646        906D 110C                  fdb   $110c
   4647        906F 0008                  fdb   $0008
   4648        9071 100B                  fdb   $100b
   4649        9073 100B                  fdb   $100b
   4650
   4651        9075               Pal_TitleScreen * @globals
   4652        9075 FF0F                  fdb   $ff0f
   4653        9077 0000                  fdb   $0000
   4654        9079 0800                  fdb   $0800
   4655        907B 0200                  fdb   $0200
   4656        907D 5D03                  fdb   $5d03
   4657        907F 1600                  fdb   $1600
   4658        9081 4F00                  fdb   $4f00
   4659        9083 2700                  fdb   $2700
   4660        9085 FF00                  fdb   $ff00
   4661        9087 F300                  fdb   $f300
   4662        9089 F80F                  fdb   $f80f
   4663        908B 640E                  fdb   $640e
   4664        908D 2205                  fdb   $2205
   4665        908F 000E                  fdb   $000e
   4666        9091 0100                  fdb   $0100
   4667        9093 0000                  fdb   $0000
   4668
   4669        9095               Pal_SEGAMid * @globals
   4670        9095 FF0F                  fdb   $ff0f
   4671        9097 4404                  fdb   $4404
   4672        9099 1101                  fdb   $1101
   4673        909B 0000                  fdb   $0000
   4674        909D 0300                  fdb   $0300
   4675        909F 0F00                  fdb   $0f00
   4676        90A1 5E03                  fdb   $5e03
   4677        90A3 2501                  fdb   $2501
   4678        90A5 B70B                  fdb   $b70b
   4679        90A7 740B                  fdb   $740b
   4680        90A9 410B                  fdb   $410b
   4681        90AB 100B                  fdb   $100b
   4682        90AD 110C                  fdb   $110c
   4683        90AF 0008                  fdb   $0008
   4684        90B1 FF0F                  fdb   $ff0f
   4685        90B3 100B                  fdb   $100b
   4686
   4687        90B5               Pal_SonicAndTailsIn * @globals
   4688        90B5 0000                  fdb   $0000
   4689        90B7 FF0F                  fdb   $ff0f
   4690        90B9 0000                  fdb   $0000
   4691        90BB 0000                  fdb   $0000
   4692        90BD 0000                  fdb   $0000
   4693        90BF 0000                  fdb   $0000
   4694        90C1 0000                  fdb   $0000
   4695        90C3 0000                  fdb   $0000
   4696        90C5 0000                  fdb   $0000
   4697        90C7 0000                  fdb   $0000
   4698        90C9 0000                  fdb   $0000
   4699        90CB 0000                  fdb   $0000
   4700        90CD 0000                  fdb   $0000
   4701        90CF 0000                  fdb   $0000
   4702        90D1 FF0F                  fdb   $ff0f
   4703        90D3 FF0F                  fdb   $ff0f
   4704
   4705        90D5               Pal_SEGAEnd * @globals
   4706        90D5 FF0F                  fdb   $ff0f
   4707        90D7 4404                  fdb   $4404
   4708        90D9 1101                  fdb   $1101
   4709        90DB 0000                  fdb   $0000
   4710        90DD 0300                  fdb   $0300
   4711        90DF 0F00                  fdb   $0f00
   4712        90E1 5E03                  fdb   $5e03
   4713        90E3 2501                  fdb   $2501
   4714        90E5 B70B                  fdb   $b70b
   4715        90E7 740B                  fdb   $740b
   4716        90E9 410B                  fdb   $410b
   4717        90EB 100B                  fdb   $100b
   4718        90ED 110C                  fdb   $110c
   4719        90EF 0008                  fdb   $0008
   4720        90F1 FF0F                  fdb   $ff0f
   4721        90F3 FF0F                  fdb   $ff0f
    177
    178

000000 Total Errors

000725 Total Symbols
     1x          Label 76E1 am_ObjectMove_01
     1x          Label 76F7 am_ObjectMove_02
     3x          Label 75A9 am_RunNextObject
     2x          Label 753E am_SwapVideoPage
     2x          Equ   0004 anim
     0x          Label 764E AnimateSprite
     1x          Label 767D Anim_dyn
     1x          Label 76D0 Anim_End
     1x          Label 76C5 Anim_End_FA
     1x          Label 76BA Anim_End_FB
     1x          Label 76A8 Anim_End_FC
     1x          Label 76A0 Anim_End_FD
     1x          Label 768F Anim_End_FE
     1x          Label 7697 Anim_End_FE_dyn
     1x          Label 7684 Anim_End_FF
     8x          Equ   0008 anim_frame
     4x          Equ   0009 anim_frame_duration
     2x          Label 766F Anim_Next
     1x          Label 765C Anim_Run
     1x          Label 7683 Anim_Wait
     0x          Label 8CCF Ani_largeStar
     0x          Label 8CBF Ani_SegaSonic_1
     0x          Label 8CB5 Ani_SegaSonic_2
     0x          Label 8CAB Ani_SegaSonic_3
     0x          Label 8CC9 Ani_smallStar
     0x          Label 8CE7 Ani_sonic
     0x          Label 8CDB Ani_tails
     0x          Label 7FA6 BBA0
     1x          Label 7FAF BBA1
     1x          Label 7FD0 BBA_DivideCell
     1x          Label 7FD5 BBA_dyn
     1x          Label 7FC5 BBA_FitCell
     2x          Label 7FB6 BBA_Next
     2x          Label 7FF0 BBA_rts
     0x          Label 7FFF BBF0
     1x          Label 8015 BBF1
     1x          Label 803E BBF_AddNewEntry
     3x          Label 8041 BBF_AddNewEntryAtEnd
     1x          Label 807E BBF_ExpandAtEnd
     1x          Label 805D BBF_ExpandAtStart
     1x          Label 8044 BBF_FindFreeSlot
     0x          Label 8068 BBF_Join
     2x          Label 8029 BBF_Next
     4x          Label 8089 BBF_rts
     1x          Label 804C BBF_SetNewEntry
     2x          Label 8053 BBF_SetNewEntryNextentry
     3x          Label 8058 BBF_SetNewEntryPrevLink
     2x          Label 7F9F BgBufferAlloc
     2x          Label 7FF2 BgBufferFree
     0x          Label 80E8 Black_palette
     0x          Equ   0009 buf_bgdata
     2x          Equ   0024 buf_Lst_Priority_Unset
     1x          Equ   0007 buf_prev_mapping_frame
     5x          Equ   0011 buf_prev_render_flags
     0x          Equ   000D buf_prev_x1_pixel
     0x          Equ   000F buf_prev_x2_pixel
     0x          Equ   000D buf_prev_xy1_pixel
     0x          Equ   000F buf_prev_xy2_pixel
     1x          Equ   000B buf_prev_xy_pixel
     0x          Equ   000B buf_prev_x_pixel
     0x          Equ   000E buf_prev_y1_pixel
     0x          Equ   0010 buf_prev_y2_pixel
     0x          Equ   000C buf_prev_y_pixel
     5x          Equ   0000 buf_priority
     4x          Equ   0003 buf_priority_next_obj
     1x          Equ   0001 buf_priority_prev_obj
    33x          Equ   0000 buf_Tbl_Priority_First_Entry
    18x          Equ   0012 buf_Tbl_Priority_Last_Entry
     0x          Equ   0040 c1_button_A_mask
     0x          Equ   0002 c1_button_down_mask
     0x          Equ   0004 c1_button_left_mask
     0x          Equ   0008 c1_button_right_mask
     0x          Equ   0001 c1_button_up_mask
     0x          Equ   0080 c2_button_A_mask
     0x          Equ   0020 c2_button_down_mask
     0x          Equ   0040 c2_button_left_mask
     0x          Equ   0080 c2_button_right_mask
     0x          Equ   0010 c2_button_up_mask
     7x          Equ   0003 cell_end
     1x          Label 7FEC cell_end_return
     5x          Equ   0040 cell_size
     5x          Equ   0001 cell_start
     4x          Equ   6000 cell_start_adr
     1x          Label 7814 CheckSpritesRefresh
     2x          Label 808B ClearCartMem
     1x          Label 809D ClearCartMem_2
     1x          Label 80B9 ClearCartMem_3
     4x          Label 77DB ClearObj
     1x          Label 7802 CLO_1
     0x          Label 780C CLO_2
     0x          Label 7904 CSR_CheckDelHide
     3x          Label 7AEE CSR_CheckDraw
     2x          Label 7A11 CSR_CheckErase
     1x          Label 7A31 CSR_CheckErase_InRange
     0x          Label 792F CSR_CheckPlayFieldCoord
     0x          Label 790A CSR_CheckRefresh
     1x          Label 795F CSR_CheckVerticalPosition
     2x          Label 7991 CSR_CVP_Continue
     1x          Label 7935 CSR_DoNotDisplaySprite
     1x          Label 79EB CSR_DontCheckXFrontier
     1x          Label 79FF CSR_DontCheckXFrontier_end
     3x          Label 7958 CSR_NextObject
     1x          Label 797B CSR_NoDefinedFrame
     1x          Label 7989 CSR_NoFrameFound
     1x          Label 796F CSR_NoOverlay
     1x          Label 7885 CSR_P1B0
     1x          Label 78F3 CSR_P1B1
     1x          Label 7878 CSR_P2B0
     1x          Label 78E6 CSR_P2B1
     1x          Label 786B CSR_P3B0
     1x          Label 78D9 CSR_P3B1
     1x          Label 785E CSR_P4B0
     1x          Label 78CC CSR_P4B1
     1x          Label 7851 CSR_P5B0
     1x          Label 78BF CSR_P5B1
     1x          Label 7844 CSR_P6B0
     1x          Label 78B2 CSR_P6B1
     1x          Label 7837 CSR_P7B0
     1x          Label 78A5 CSR_P7B1
     0x          Label 782A CSR_P8B0
     0x          Label 7898 CSR_P8B1
    21x          Label 7901 CSR_ProcessEachPriorityLevel
     1x          Label 7892 CSR_rtsB0
     1x          Label 7900 CSR_rtsB1
     1x          Label 7B1E CSR_SDT1
     1x          Label 7B25 CSR_SDT2
     1x          Label 7B2A CSR_SDT3
     0x          Label 7825 CSR_SetBuffer0
     1x          Label 7893 CSR_SetBuffer1
     3x          Label 7B45 CSR_SetDrawFalse
     0x          Label 7B10 CSR_SetDrawTrue
     1x          Label 7B3D CSR_SetEraseDrawFalse
     2x          Label 7AE6 CSR_SetEraseFalse
     7x          Label 7A51 CSR_SetEraseTrue
     2x          Label 7B30 CSR_SetHide
    10x          Label 7A09 CSR_SetOutOfRange
     0x          Label 7814 CSR_Start
     0x          Label 7AC5 CSR_SubDrawCheckCollision
     4x          Label 7ABD CSR_SubDrawSearch
     2x          Label 7ABA CSR_SubDrawSpriteSearchInit
     0x          Label 7A72 CSR_SubEraseCheckCollisionB0
     0x          Label 7A9A CSR_SubEraseCheckCollisionB1
     4x          Label 7A6A CSR_SubEraseSearchB0
     5x          Label 7A92 CSR_SubEraseSearchB1
     1x          Label 7A62 CSR_SubEraseSpriteSearchInit
     0x          Label 7913 CSR_UpdSpriteImageBasedOnMirror
     2x          Label 80C6 Cur_palette
    19x          Label 780E cur_priority
     4x          Label 7812 cur_ptr_sub_obj_draw
     9x          Label 7810 cur_ptr_sub_obj_erase
     0x          Label 7719 DeleteObject
     0x          Label 7713 DeleteObject_x
     1x          Label 75D5 DisplaySprite
     0x          Label 75CF DisplaySprite_x
     0x          Equ   604F dk_destination
     0x          Equ   6049 dk_lecteur
     0x          Equ   604A dk_piste
     0x          Equ   604B dk_pisteL
     0x          Equ   604C dk_secteur
     1x          Label 777D DOB_ChainNextB0
     1x          Label 77C7 DOB_ChainNextB1
     1x          Label 775D DOB_ChainPrevB0
     1x          Label 779F DOB_ChainPrevB1
     1x          Label 7767 DOB_CheckPrioNextB0
     1x          Label 77A9 DOB_CheckPrioNextB1
     1x          Label 7747 DOB_RemoveFromDPSB0
     1x          Label 7789 DOB_RemoveFromDPSB1
     2x          Label 77C5 DOB_rts
     1x          Label 771B DOB_Start
     2x          Label 7730 DOB_TestOnscreen1
     0x          Label 7720 DOB_ToDeleteFlag0
     0x          Label 7735 DOB_ToDeleteFlag1
     0x          Label 7726 DOB_Unset0
     0x          Label 773B DOB_Unset1
     0x          Label 7560 Dpad_Held
     0x          Label 7562 Dpad_Press
     2x          Label 755E Dpad_Read
    27x          Label 64C4 DPS_buffer_0
    25x          Label 653E DPS_buffer_1
     1x          Label 7DAC DrawSprites
     4x          Equ   0001 draw_routine
     1x          Label 7EAC DRS_DrawWithoutBackupB0
     1x          Label 7F7B DRS_DrawWithoutBackupB1
     1x          Label 7EE3 DRS_dyn1
     1x          Label 7EF5 DRS_dyn2
     3x          Label 7E77 DRS_dyn3B0
     3x          Label 7F46 DRS_dyn3B1
     3x          Label 7EA4 DRS_NextObjectB0
     3x          Label 7F73 DRS_NextObjectB1
     1x          Label 7E9F DRS_NoOverlayB0
     1x          Label 7F6E DRS_NoOverlayB1
     1x          Label 7DE9 DRS_P1B0
     1x          Label 7E2A DRS_P1B1
     1x          Label 7DE1 DRS_P2B0
     1x          Label 7E22 DRS_P2B1
     1x          Label 7DD9 DRS_P3B0
     1x          Label 7E1A DRS_P3B1
     1x          Label 7DD1 DRS_P4B0
     1x          Label 7E12 DRS_P4B1
     1x          Label 7DC9 DRS_P5B0
     1x          Label 7E0A DRS_P5B1
     1x          Label 7DC1 DRS_P6B0
     1x          Label 7E02 DRS_P6B1
     1x          Label 7DB9 DRS_P7B0
     1x          Label 7DFA DRS_P7B1
     0x          Label 7DB1 DRS_P8B0
     1x          Label 7DF2 DRS_P8B1
     9x          Label 7E33 DRS_ProcessEachPriorityLevelB0
     9x          Label 7F02 DRS_ProcessEachPriorityLevelB1
     1x          Label 7DF1 DRS_rtsB0
     1x          Label 7E32 DRS_rtsB1
     0x          Label 7DAC DRS_Start
     1x          Label 7EA1 DRS_UpdateRenderFlagB0
     1x          Label 7F70 DRS_UpdateRenderFlagB1
     4x          Label 7ED0 DRS_XYToAddress
     1x          Label 7ED7 DRS_XYToAddressPositive
     0x          Label 7EDD DRS_XYToAddressRAM1First
     1x          Label 7EEF DRS_XYToAddressRAM2First
     0x          Label 7606 DSP_addFirstNode
     1x          Label 7616 DSP_addToExistingNode
     1x          Label 75F2 DSP_BufferPositionned
     1x          Label 763B DSP_ChangePriority
     1x          Label 75FF DSP_CheckLastEntry
     0x          Label 75FC DSP_InitPriority
     1x          Label 762B DSP_LinkBuffer1
     1x          Label 7637 DSP_LinkCurWithPrev
     1x          Label 7614 DSP_rts
     0x          Label 75E2 DSP_SetBuffer0
     1x          Label 75EB DSP_SetBuffer1
     1x          Label 75D7 DSP_Start
     0x          Label 6714 Dynamic_Object_RAM
     2x          Label 7416 Dynamic_Object_RAM_End
     1x          Label 80C8 Dyn_palette
     3x          Equ   0007 entry_size
     1x          Label 7B54 EraseSprites
     4x          Equ   0006 erase_nb_cell
     2x          Equ   0004 erase_routine
     0x          Label 7C4B ESP_CallEraseRoutineB0
     1x          Label 7C5E ESP_CallEraseRoutineB0_00
     0x          Label 7C9C ESP_CallEraseRoutineB1
     1x          Label 7CAF ESP_CallEraseRoutineB1_00
     1x          Label 7C40 ESP_CheckEraseB0
     1x          Label 7C91 ESP_CheckEraseB1
     8x          Label 7C2E ESP_CheckPriorityB0
     8x          Label 7C7F ESP_CheckPriorityB1
     0x          Label 7C6B ESP_FreeEraseBufferB0
     0x          Label 7CBC ESP_FreeEraseBufferB1
     2x          Label 7C76 ESP_NextObjectB0
     2x          Label 7CC7 ESP_NextObjectB1
     0x          Label 7B59 ESP_P1B0
     1x          Label 7BC2 ESP_P1B1
     1x          Label 7B66 ESP_P2B0
     1x          Label 7BCF ESP_P2B1
     1x          Label 7B73 ESP_P3B0
     1x          Label 7BDC ESP_P3B1
     1x          Label 7B80 ESP_P4B0
     1x          Label 7BE9 ESP_P4B1
     1x          Label 7B8D ESP_P5B0
     1x          Label 7BF6 ESP_P5B1
     1x          Label 7B9A ESP_P6B0
     1x          Label 7C03 ESP_P6B1
     1x          Label 7BA7 ESP_P7B0
     1x          Label 7C10 ESP_P7B1
     1x          Label 7BB4 ESP_P8B0
     1x          Label 7C1D ESP_P8B1
     9x          Label 7C2B ESP_ProcessEachPriorityLevelB0
     9x          Label 7C7C ESP_ProcessEachPriorityLevelB1
     1x          Label 7BC1 ESP_rtsB0
     1x          Label 7C2A ESP_rtsB1
     0x          Label 7B54 ESP_Start
     0x          Label 7C32 ESP_UnsetCheckRefreshB0
     0x          Label 7C83 ESP_UnsetCheckRefreshB1
     1x          Label 7C6E ESP_UnsetOnScreenFlagB0
     1x          Label 7CBF ESP_UnsetOnScreenFlagB1
     0x          Equ   001B ext_variables
     0x          Label 7561 Fire_Held
     0x          Label 7563 Fire_Press
     2x          Label 755F Fire_Read
     0x          Label 611E Glb_Camera_X_Pos
     0x          Label 6120 Glb_Camera_Y_Pos
    10x          Label 611D Glb_Cur_Wrk_Screen_Id
     1x          Label 7526 Glb_MainCharacter_Is_Dead
     6x          Label 6122 Glb_Sprite_Screen_Pos_Part1
     6x          Label 6124 Glb_Sprite_Screen_Pos_Part2
     0x          Equ   00FE goBackNFrames
     0x          Equ   00FD goToAnimation
     0x          Equ   0038 gravity
     0x          Equ   0000 id
     1x          Equ   0006 image_center_offset
     5x          Equ   000A image_set
     2x          Equ   0004 image_subset_x1_offset
     1x          Equ   0005 image_subset_y1_offset
     2x          Equ   0004 image_x_size
     1x          Equ   0005 image_y_size
     0x          Label 89AD Img_emblemBack01
     0x          Label 899D Img_emblemBack02
     0x          Label 8B75 Img_emblemBack03
     0x          Label 8B65 Img_emblemBack04
     0x          Label 8B95 Img_emblemBack05
     0x          Label 8B85 Img_emblemBack06
     0x          Label 8B45 Img_emblemBack07
     0x          Label 8B35 Img_emblemBack08
     0x          Label 8B55 Img_emblemBack09
     0x          Label 8C8A Img_emblemFront01
     0x          Label 8C9A Img_emblemFront02
     0x          Label 8C6A Img_emblemFront03
     0x          Label 8C7A Img_emblemFront04
     0x          Label 8C4A Img_emblemFront05
     0x          Label 8C5A Img_emblemFront06
     0x          Label 8C2A Img_emblemFront07
     0x          Label 8C3A Img_emblemFront08
     0x          Label 8BBC Img_island
     0x          Label 8972 Img_islandMask_1
     0x          Label 89BD Img_islandMask_2
     0x          Label 8AB9 Img_islandWater01
     0x          Label 8A8A Img_islandWater02
     0x          Label 8A6F Img_islandWater03
     0x          Label 8A54 Img_islandWater04
     0x          Label 8A39 Img_islandWater05
     0x          Label 8A1E Img_islandWater06
     0x          Label 8A03 Img_islandWater07
     0x          Label 89E8 Img_islandWater08
     0x          Label 89CD Img_islandWater09
     0x          Label 8982 Img_islandWater10
     0x          Label 8957 Img_islandWater11
     0x          Label 893C Img_islandWater12
     0x          Label 8921 Img_islandWater13
     0x          Label 8906 Img_islandWater14
     0x          Label 88EB Img_islandWater15
     0x          Label 8676 Img_SegaLogo_1
     0x          Label 8666 Img_SegaLogo_2
     1x          Label 8765 Img_SegaSonic_11
     1x          Label 869F Img_SegaSonic_12
     1x          Label 86E1 Img_SegaSonic_13
     1x          Label 8723 Img_SegaSonic_21
     1x          Label 87A7 Img_SegaSonic_22
     1x          Label 86C0 Img_SegaSonic_23
     1x          Label 87E9 Img_SegaSonic_31
     1x          Label 8702 Img_SegaSonic_32
     1x          Label 8786 Img_SegaSonic_33
     1x          Label 87C8 Img_SegaSonic_41
     1x          Label 880A Img_SegaSonic_42
     1x          Label 8744 Img_SegaSonic_43
     0x          Label 8686 Img_SegaTrails_1
     0x          Label 886B Img_SegaTrails_2
     0x          Label 885B Img_SegaTrails_3
     0x          Label 884B Img_SegaTrails_4
     0x          Label 883B Img_SegaTrails_5
     0x          Label 882B Img_SegaTrails_6
     0x          Label 8656 Img_SonicAndTailsIn
     0x          Label 8AE8 Img_sonicHand
     1x          Label 8BD7 Img_sonic_1
     1x          Label 8BEB Img_sonic_2
     1x          Label 8C16 Img_sonic_3
     1x          Label 8BFF Img_sonic_5
     3x          Label 8B1A Img_star_1
     3x          Label 8AFF Img_star_2
     1x          Label 8AD4 Img_star_3
     0x          Label 8AA5 Img_star_4
     0x          Label 8BA5 Img_tailsHand
     1x          Label 88D7 Img_tails_1
     1x          Label 88C3 Img_tails_2
     1x          Label 88AF Img_tails_3
     1x          Label 889B Img_tails_4
     1x          Label 8884 Img_tails_5
     0x          Label 85DC IrqOff
     0x          Label 85D1 IrqOn
     0x          Label 8606 IrqPsg
     0x          Label 8615 IrqPsgRaster
     1x          Label 8624 IrqPsgRaster_1
     1x          Label 8628 IrqPsgRaster_2
     1x          Label 864F IrqPsgRaster_end
     1x          Label 862F IrqPsgRaster_render
     1x          Label 860E IrqPsg_end
     0x          Label 85E7 IrqSync
     1x          Label 85F4 IrqSync_1
     1x          Label 85F9 IrqSync_2
     1x          Label 85FE IrqSync_3
     0x          Equ   4DFF irq_one_frame
     1x          Label 85CF Irq_Raster_End
     1x          Label 85CB Irq_Raster_Page
     1x          Label 85CD Irq_Raster_Start
     0x          Equ   6027 irq_routine
     1x          Equ   E7C6 irq_timer
     1x          Equ   E7C5 irq_timer_ctrl
     0x          Label 7560 Joypads
     2x          Label 7560 Joypads_Held
     1x          Label 7562 Joypads_Press
     2x          Label 755E Joypads_Read
     1x          Label 6103 LevelMainLoop
     1x          Label 7416 LevelOnly_Object_RAM
     1x          Label 7524 LevelOnly_Object_RAM_End
     1x          Label 9001 LoadAct
     4x          Label 6126 Lst_FreeCellFirstEntry_0
     4x          Label 62F5 Lst_FreeCellFirstEntry_1
     2x          Label 6128 Lst_FreeCell_0
     2x          Label 62F7 Lst_FreeCell_1
     8x          Label 64E8 Lst_Priority_Unset_0
     7x          Label 6562 Lst_Priority_Unset_1
     0x          Label 75CD MarkObjGone
    14x          Equ   0000 nb_cells
     1x          Equ   0025 nb_dynamic_objects
     6x          Equ   0082 nb_free_cells
     0x          Equ   0003 nb_level_objects
     4x          Equ   002A nb_objects
     4x          Equ   0008 nb_priority_levels
     0x          Equ   0002 nb_reserved_objects
     0x          Equ   00FC nextRoutine
     0x          Equ   00FA nextSubRoutine
     9x          Equ   0005 next_entry
     3x          Equ   005A next_object
     0x          Label 76D1 ObjectMove
     1x          Label 6660 Object_RAM
     2x          Label 7524 Object_RAM_End
     8x          Equ   005A object_size
     1x          Label 8DF0 Obj_Index_Address
     1x          Label 8CF0 Obj_Index_Page
     0x          Label 6660 Obj_MainCharacter
     0x          Label 66BA Obj_Sidekick
     0x          Label 7470 Obj_SonicDust
     0x          Label 74CA Obj_TailsDust
     0x          Label 7416 Obj_TailsTails
     4x          Equ   0000 page_draw_routine
     2x          Equ   0003 page_erase_routine
     0x          Equ   0000 PalID_TitleScreenRaster
     0x          Label 9035 Pal_Island
     1x          Label 9055 Pal_SEGA
     0x          Label 90D5 Pal_SEGAEnd
     0x          Label 9095 Pal_SEGAMid
     0x          Label 90B5 Pal_SonicAndTailsIn
     0x          Label 9075 Pal_TitleScreen
     1x          Equ   0003 pcm_end_addr
     1x          Equ   0005 pcm_meta_size
     1x          Equ   0000 pcm_page
     0x          Label 8FF0 Pcm_SEGA
     1x          Equ   0001 pcm_start_addr
     0x          Label 8150 PlayPCM
     1x          Label 8188 PlayPCM_End
     1x          Label 8172 PlayPCM_Loop
     1x          Label 8182 PlayPCM_NextChunk
     1x          Label 8167 PlayPCM_ReadChunk
     1x          Label 81A1 PlayPCM_RestorePage
     2x          Equ   0006 prev_anim
     6x          Equ   0003 priority
     0x          Label 825B PSGCancelLoop
     4x          Label 85B2 PSGChan0Volume
     4x          Label 85B3 PSGChan1Volume
     3x          Label 85B8 PSGChan2HighTone
     3x          Label 85B6 PSGChan2LowTone
     5x          Label 85B4 PSGChan2Volume
     5x          Label 85B7 PSGChan3LowTone
     5x          Label 85B5 PSGChan3Volume
     6x          Equ   0000 PSGChannel0
     5x          Equ   0020 PSGChannel1
     9x          Equ   0040 PSGChannel2
    12x          Label 85BA PSGChannel2SFX
    10x          Equ   0060 PSGChannel3
    13x          Label 85BB PSGChannel3SFX
     2x          Equ   0040 PSGData
    35x          Equ   E7B0 PSGDataPort
     2x          Equ   0000 PSGEnd
     2x          Label 8415 PSGFrame
     1x          Label 8421 PSGFrame_continue
     0x          Label 825F PSGGetStatus
     0x          Label 81A7 PSGInit
    32x          Equ   0080 PSGLatch
     2x          Equ   0001 PSGLoop
     3x          Label 85AD PSGLoopFlag
     3x          Label 85AE PSGMusicLastLatch
     3x          Label 85AA PSGMusicLoopPoint
     2x          Label 85A5 PSGMusicPage
     3x          Label 85A8 PSGMusicPointer
     4x          Label 85AC PSGMusicSkipFrames
     2x          Label 85A6 PSGMusicStart
    13x          Label 85A4 PSGMusicStatus
     4x          Label 85AF PSGMusicSubstringLen
     2x          Label 85B0 PSGMusicSubstringRetAddr
    13x          Label 85B9 PSGMusicVolumeAttenuation
     0x          Label 81BD PSGPlay
     1x          Label 81BF PSGPlay1
     0x          Label 81B9 PSGPlayNoRepeat
     0x          Label 82D7 PSGRestoreVolumes
     1x          Label 82EA PSGRestoreVolumes1
     1x          Label 82FD PSGRestoreVolumes2
     2x          Label 8321 PSGRestoreVolumes3
     2x          Label 8345 PSGRestoreVolumes4
     0x          Label 8210 PSGResume
     1x          Label 8240 PSGResume1
     1x          Label 8255 PSGResume2
     1x          Label 825A PSGResume_end
     0x          Label 8263 PSGSetMusicVolumeAttenuation
     1x          Label 8279 PSGSetMusicVolumeAttenuation1
     1x          Label 828C PSGSetMusicVolumeAttenuation2
     1x          Label 82A4 PSGSetMusicVolumeAttenuation3
     1x          Label 82BC PSGSetMusicVolumeAttenuation4
     2x          Label 82C1 PSGSetMusicVolumeAttenuation_end
     0x          Label 840D PSGSFXCancelLoop
     2x          Label 85BC PSGSFXChan2Volume
     2x          Label 85BD PSGSFXChan3Volume
     0x          Label 8522 PSGSFXFrame
     1x          Label 8562 PSGSFXFrame_end
     0x          Label 8411 PSGSFXGetStatus
     3x          Label 85C7 PSGSFXLoopFlag
     3x          Label 85C4 PSGSFXLoopPoint
     2x          Label 85BF PSGSFXPage
     0x          Label 834F PSGSFXPlay
     1x          Label 8351 PSGSFXPlay1
     1x          Label 8377 PSGSFXPlay2
     1x          Label 8380 PSGSFXPlay3
     0x          Label 834B PSGSFXPlayLoop
     1x          Label 8396 PSGSFXPlayLoop_end
     4x          Label 85C2 PSGSFXPointer
     4x          Label 85C6 PSGSFXSkipFrames
     2x          Label 85C0 PSGSFXStart
     7x          Label 85BE PSGSFXStatus
     2x          Label 8397 PSGSFXStop
     1x          Label 83A6 PSGSFXStop1
     1x          Label 83B0 PSGSFXStop2
     1x          Label 83DA PSGSFXStop3
     1x          Label 83FC PSGSFXStop4
     1x          Label 840C PSGSFXStop_end
     4x          Label 85C8 PSGSFXSubstringLen
     2x          Label 85C9 PSGSFXSubstringRetAddr
     0x          Label 82C2 PSGSilenceChannels
     2x          Label 81E7 PSGStop
     1x          Label 8200 PSGStop2
     1x          Label 820A PSGStop3
     1x          Label 820F PSGStop_end
     4x          Equ   0008 PSGSubString
    27x          Equ   0010 PSGVolumeData
     2x          Equ   0038 PSGWait
     5x          Equ   0001 PSG_PLAYING
     3x          Equ   0000 PSG_STOPPED
     0x          Label 8FFB Psg_TitleScreen
     1x          Label 7564 ReadJoypads
     3x          Label 80C5 Refresh_palette
    24x          Equ   0002 render_flags
     4x          Equ   0020 render_hide_mask
     2x          Equ   0008 render_motionless_mask
     5x          Equ   0004 render_overlay_mask
     1x          Equ   0010 render_playfieldcoord_mask
     5x          Equ   0040 render_todelete_mask
     1x          Equ   0080 render_xloop_mask
     2x          Equ   0001 render_xmirror_mask
     2x          Equ   0002 render_ymirror_mask
     1x          Label 6660 Reserved_Object_RAM
     1x          Label 6714 Reserved_Object_RAM_End
     0x          Equ   00FF resetAnim
     0x          Equ   00FB resetAnimAndSubRoutine
     2x          Equ   0018 routine
     3x          Equ   0019 routine_secondary
     3x          Equ   003F rsv_bgdata_0
     3x          Equ   0051 rsv_bgdata_1
     2x          Equ   0036 rsv_buffer_0
     2x          Equ   0048 rsv_buffer_1
     6x          Equ   002C rsv_image_center_offset
     4x          Equ   002E rsv_image_subset
    11x          Equ   0030 rsv_mapping_frame
     0x          Equ   002A rsv_prev_anim
     4x          Equ   003D rsv_prev_mapping_frame_0
     4x          Equ   004F rsv_prev_mapping_frame_1
    11x          Equ   0047 rsv_prev_render_flags_0
     9x          Equ   0059 rsv_prev_render_flags_1
     4x          Equ   0080 rsv_prev_render_onscreen_mask
     6x          Equ   0001 rsv_prev_render_overlay_mask
     0x          Equ   0043 rsv_prev_x1_pixel_0
     0x          Equ   0055 rsv_prev_x1_pixel_1
     0x          Equ   0045 rsv_prev_x2_pixel_0
     0x          Equ   0057 rsv_prev_x2_pixel_1
     2x          Equ   0043 rsv_prev_xy1_pixel_0
     2x          Equ   0055 rsv_prev_xy1_pixel_1
     2x          Equ   0045 rsv_prev_xy2_pixel_0
     2x          Equ   0057 rsv_prev_xy2_pixel_1
     1x          Equ   0041 rsv_prev_xy_pixel_0
     1x          Equ   0053 rsv_prev_xy_pixel_1
     0x          Equ   0041 rsv_prev_x_pixel_0
     0x          Equ   0053 rsv_prev_x_pixel_1
     0x          Equ   0044 rsv_prev_y1_pixel_0
     0x          Equ   0056 rsv_prev_y1_pixel_1
     0x          Equ   0046 rsv_prev_y2_pixel_0
     0x          Equ   0058 rsv_prev_y2_pixel_1
     0x          Equ   0042 rsv_prev_y_pixel_0
     0x          Equ   0054 rsv_prev_y_pixel_1
     6x          Equ   0036 rsv_priority_0
     6x          Equ   0048 rsv_priority_1
    14x          Equ   0039 rsv_priority_next_obj_0
    14x          Equ   004B rsv_priority_next_obj_1
    12x          Equ   0037 rsv_priority_prev_obj_0
    12x          Equ   0049 rsv_priority_prev_obj_1
     4x          Equ   0001 rsv_render_checkrefresh_mask
     5x          Equ   0004 rsv_render_displaysprite_mask
     8x          Equ   0002 rsv_render_erasesprite_mask
    28x          Equ   0029 rsv_render_flags
     4x          Equ   0008 rsv_render_outofrange_mask
     6x          Equ   0032 rsv_x1_pixel
     5x          Equ   0034 rsv_x2_pixel
     3x          Equ   0032 rsv_xy1_pixel
     3x          Equ   0034 rsv_xy2_pixel
     5x          Equ   0033 rsv_y1_pixel
     4x          Equ   0035 rsv_y2_pixel
     1x          Label 75A6 RunNextObject
     3x          Label 758D RunObject
     1x          Label 7585 RunObjects
     1x          Label 75B0 RunObjectsWhenPlayerIsDead
     0x          Label 7588 RunObjects_01
     0x          Label 75AF RunObjects_End
     1x          Label 7536 screen_border_color
     2x          Equ   00E3 screen_bottom
     2x          Equ   0030 screen_left
     2x          Equ   00CF screen_right
     2x          Equ   001C screen_top
     0x          Equ   00A0 screen_width
     2x          Equ   0001 SFX_CHANNEL2
     2x          Equ   0002 SFX_CHANNEL3
     2x          Equ   0003 SFX_CHANNELS2AND3
     0x          Label 76FC SingleObjLoad2
     1x          Label 7706 SingleObjLoad2_01
     2x          Label 7712 SingleObjLoad2_02
     1x          Equ   001A status
     0x          Equ   0004 status_bit2
     0x          Equ   0080 status_bit7
     0x          Equ   0002 status_inair
     0x          Equ   0010 status_jumpingafterrolling
     0x          Equ   0004 status_jumporroll
     0x          Equ   0020 status_mainchar_pushing
     0x          Equ   0008 status_mainchar_standing
     0x          Equ   0008 status_norgroundnorfall
     0x          Equ   0020 status_pushing
     0x          Equ   0040 status_sidekick_pushing
     0x          Equ   0010 status_sidekick_standing
     0x          Equ   0040 status_underwater
     1x          Equ   0001 status_x_orientation
     1x          Equ   0002 status_y_orientation
     0x          Equ   0001 subtype
     0x          Label 7531 SwapVideoPage
     2x          Label 64C4 Tbl_Priority_First_Entry_0
     2x          Label 653E Tbl_Priority_First_Entry_1
     3x          Label 64D6 Tbl_Priority_Last_Entry_0
     2x          Label 6550 Tbl_Priority_Last_Entry_1
     2x          Label 660C Tbl_Sub_Object_Draw
     3x          Label 65B8 Tbl_Sub_Object_Erase
     0x          Label 7CD2 UDP_B0
     1x          Label 7D3F UDP_B1
     1x          Label 7D19 UDP_ChainNextB0
     1x          Label 7D86 UDP_ChainNextB1
     1x          Label 7CF9 UDP_ChainPrevB0
     1x          Label 7D66 UDP_ChainPrevB1
     1x          Label 7D23 UDP_CheckDeleteB0
     1x          Label 7D90 UDP_CheckDeleteB1
     2x          Label 7CD5 UDP_CheckEndB0
     2x          Label 7D42 UDP_CheckEndB1
     1x          Label 7D03 UDP_CheckPrioNextB0
     1x          Label 7D70 UDP_CheckPrioNextB1
     1x          Label 7CE1 UDP_CheckPrioPrevB0
     1x          Label 7D4E UDP_CheckPrioPrevB1
     0x          Label 7CDA UDP_InitListB0
     0x          Label 7D47 UDP_InitListB1
     3x          Label 7D38 UDP_SetNewPrioB0
     3x          Label 7DA5 UDP_SetNewPrioB1
     0x          Label 7CCD UDP_Start
     1x          Label 7CCD UnsetDisplayPriority
     1x          Label 8128 UpdatePalette
     1x          Label 814F UPP_return
     1x          Label 8142 UPP_SetColor
     1x          Label 8131 UPP_Tempo
     2x          Label 755C Vint_runcount
     3x          Label 7527 WaitVBL
     1x          Label 752C WaitVBL_01
     0x          Label 8108 White_palette
     7x          Equ   0012 xy_pixel
     3x          Equ   0012 x_pixel
     4x          Equ   000C x_pos
     0x          Equ   000E x_sub
     2x          Equ   0014 x_vel
     1x          Equ   0013 y_pixel
     4x          Equ   000F y_pos
     0x          Equ   0011 y_sub
     2x          Equ   0016 y_vel
     1x          Label 8302 _chkchn2
     1x          Label 8326 _chkchn3
     1x          Label 8496 _chn2
     1x          Label 84B3 _command
     2x          Label 8439 _continue
     1x          Label 84BE _done
     0x          Equ   00FE _goBackNFrames
     0x          Equ   00FD _goToAnimation
     1x          Label 8517 _high_part_Tone
     1x          Label 8483 _ifchn0
     1x          Label 846C _ifchn2
    11x          Label 8429 _intLoop
     4x          Label 8535 _intSFXLoop
     1x          Label 8476 _latch_Volume
     1x          Label 8488 _latch_Volume_23
     1x          Label 84F8 _musicLoop
     0x          Equ   00FC _nextRoutine
     3x          Equ   00FA _nextSubRoutine
     1x          Label 84AA _noLatch
     1x          Label 84C2 _otherCommands
     1x          Label 84EC _output_NoLatch
     4x          Equ   00FF _resetAnim
     0x          Equ   00FB _resetAnimAndSubRoutine
     1x          Label 831C _restoreSFX2
     1x          Label 834A _restoreSFX2_end
     1x          Label 8340 _restoreSFX3
     1x          Label 82A9 _restore_channel3
     6x          Label 84A0 _send2PSG
     4x          Label 84CF _sendVolume2PSG
     2x          Label 84DD _sendVolume2PSG1
     1x          Label 84E4 _sendVolume2PSG2
     1x          Label 84F2 _setLoopPoint
     1x          Label 8563 _SFXcommand
     2x          Label 8545 _SFXcontinue
     1x          Label 856E _SFXdone
     1x          Label 8584 _sfxLoop
     1x          Label 8572 _SFXotherCommands
     2x          Label 8559 _SFXoutbyte
     1x          Label 857F _SFXsetLoopPoint
     1x          Label 8593 _SFXsubstring
     1x          Label 8556 _SFXvolumechn3
     1x          Label 84A5 _skipFrame
     1x          Label 8403 _skipRestore
     1x          Label 855E _skipSFXFrame
     1x          Label 83DF _skip_chn2
     1x          Label 8401 _skip_chn3
     1x          Label 8505 _substring

