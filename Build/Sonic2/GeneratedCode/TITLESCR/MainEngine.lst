/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : .\Sonic2\GeneratedCode\TITLESCR\MainEngine.asm
 * Fichier destination : .\Sonic2\GeneratedCode\TMP.BIN
 * Contenu :
 *     Main     0:MAIN.ASM     4119
 *     Include  0:CONSTANT.ASM 5768
 *     Include  0:WAITVBL.ASM  1795
 *     Include  0:READJPDS.ASM 1855
 *     Include  0:RUNOBJTS.ASM 1312
 *     Include  0:MRKOBJGN.ASM 481
 *     Include  0:DISPLSPR.ASM 2223
 *     Include  0:ANIMSPR.ASM  1998
 *     Include  0:OBJMOVE.ASM  752
 *     Include  0:OBJLOAD.ASM  1109
 *     Include  0:DELETOBJ.ASM 2732
 *     Include  0:CLEAROBJ.ASM 647
 *     Include  0:CHECKSPR.ASM 10494
 *     Include  0:ERASESPR.ASM 4868
 *     Include  0:UNSETDSP.ASM 2832
 *     Include  0:DRAWSPR.ASM  6323
 *     Include  0:BGBALLOC.ASM 1029
 *     Include  0:BGBFREE.ASM  1879
 *     Include  0:CLRCARTM.ASM 642
 *     Include  0:UPDTPAL.ASM  765
 *     Include  0:PLAYPCM.ASM  1216
 *     Include  0:PSGLIB.ASM   16960
 *     Include  0:IMAGEIDX.ASM 5025
 *     Include  0:ANIMSCPT.ASM 991
 *     Include  0:OBJINDEX.ASM 6715
 *     Include  0:SOUNDIDX.ASM 174
 *     Include  0:LOADACT.ASM  362
 *     Include  0:PALETTE.ASM  1208
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
    198                                   INCLUD CONSTANT
    199                           * --------------------------------------->>
    200                           * Constants
    201                           *
    202                           * Naming convention
    203                           * -----------------
    204                           * - lower case
    205                           * - underscore-separated names
    206                           *
    207                           * --------------------------------------->>
    208
    209                           * =======================================>>
    210                           * TO8 Registers
    211                           * =======================================>>
    212
    213                  6049     dk_lecteur                    equ $6049
    214                  604A     dk_piste                      equ $604A
    215                  604B     dk_pisteL                     equ $604B
    216                  604C     dk_secteur                    equ $604C
    217                  604F     dk_destination                equ $604F
    218
    219                           * =======================================>>
    220                           * Display Constants
    221                           * =======================================>>
    222
    223                  00A0     screen_width                  equ 160 ; s>>
    224                  001C     screen_top                    equ 28 ; in>>
    225                  00E3     screen_bottom                 equ 28+199 >>
    226                  0030     screen_left                   equ 48 ; in>>
    227                  00CF     screen_right                  equ 48+159 >>
    228                  0008     nb_priority_levels            equ 8   ; n>>
    229
    230                           * =======================================>>
    231                           * Physics Constants
    232                           * =======================================>>
    233
    234                  0038     gravity                       equ $38 ; G>>
    235
    236                           * =======================================>>
    237                           * Animation Constants
    238                           * =======================================>>
    239
    240                  00FF     _resetAnim                    equ $FF
    241                  00FE     _goBackNFrames                equ $FE
    242                  00FD     _goToAnimation                equ $FD
    243                  00FC     _nextRoutine                  equ $FC
    244                  00FB     _resetAnimAndSubRoutine       equ $FB
    245                  00FA     _nextSubRoutine               equ $FA
    246
    247                           * =======================================>>
    248                           * Images Constants
    249                           * =======================================>>
    250
    251                  0004     image_x_size                  equ 4
    252                  0005     image_y_size                  equ 5
    253                  0006     image_center_offset           equ 6
    254
    255                  0004     image_subset_x1_offset        equ 4
    256                  0005     image_subset_y1_offset        equ 5
    257
    258                  0000     page_draw_routine             equ 0
    259                  0001     draw_routine                  equ 1
    260                  0003     page_erase_routine            equ 3
    261                  0004     erase_routine                 equ 4
    262                  0006     erase_nb_cell                 equ 6
    263
    264                           * =======================================>>
    265                           * Sound Constants
    266                           * =======================================>>
    267
    268                  0000     pcm_page        equ 0
    269                  0001     pcm_start_addr  equ 1
    270                  0003     pcm_end_addr    equ 3
    271                  0005     pcm_meta_size   equ 5
    272
    273                           * =======================================>>
    274                           * Object Constants
    275                           * =======================================>>
    276
    277                  0002     nb_reserved_objects           equ 2
    278                  001B     nb_dynamic_objects            equ 27
    279                  0003     nb_level_objects              equ 3
    280                  0020     nb_objects                    equ 32 * ma>>
    281
    282                           * --------------------------------------->>
    283                           * Object Status Table offsets
    284                           * --------------------------------------->>
    285
    286                  005A     object_size                   equ 90 ; th>>
    287                  005A     next_object                   equ object_>>
    288
    289                  0000     id                            equ 0      >>
    290                  0001     subtype                       equ 1      >>
    291                  0002     render_flags                  equ 2
    292
    293                           * --- render_flags bitfield variables --->>
    294                  0001     render_xmirror_mask           equ $01 ; (>>
    295                  0002     render_ymirror_mask           equ $02 ; (>>
    296                  0004     render_overlay_mask           equ $04 ; (>>
    297                  0008     render_motionless_mask        equ $08 ; (>>
    298                  0010     render_playfieldcoord_mask    equ $10 ; (>>
    299                  0020     render_hide_mask              equ $20 ; (>>
    300                  0040     render_todelete_mask          equ $40 ; (>>
    301                  0080     render_xloop_mask             equ $80 ; (>>
    302                            
    303                  0003     priority                      equ 3      >>
    304                  0004     anim                          equ 4  ; an>>
    305                  0006     prev_anim                     equ 6  ; an>>
    306                  0008     anim_frame                    equ 8      >>
    307                  0009     anim_frame_duration           equ 9      >>
    308                  000A     image_set                     equ 10 ; an>>
    309                  000C     x_pos                         equ 12 ; an>>
    310                  000E     x_sub                         equ 14     >>
    311                  000F     y_pos                         equ 15 ; an>>
    312                  0011     y_sub                         equ 17     >>
    313                  0012     xy_pixel                      equ 18     >>
    314                  0012     x_pixel                       equ 18     >>
    315                  0013     y_pixel                       equ 19     >>
    316                  0014     x_vel                         equ 20 ; an>>
    317                  0016     y_vel                         equ 22 ; an>>
    318                  0018     routine                       equ 24     >>
    319                  0019     routine_secondary             equ 25     >>
    320                  001A     status                        equ 26
    321
    322                           * --- status bitfield variables for objec>>
    323                  0001     status_x_orientation          equ   $01 ;>>
    324                  0002     status_y_orientation          equ   $02 ;>>
    325                  0004     status_bit2                   equ   $04 ;>>
    326                  0008     status_mainchar_standing      equ   $08 ;>>
    327                  0010     status_sidekick_standing      equ   $10 ;>>
    328                  0020     status_mainchar_pushing       equ   $20 ;>>
    329                  0040     status_sidekick_pushing       equ   $40 ;>>
    330                  0080     status_bit7                   equ   $80 ;>>
    331
    332                           * --- status bitfield variables for Main >>
    333                  0002     status_inair                  equ   $02 ;>>
    334                  0004     status_jumporroll             equ   $04 ;>>
    335                  0008     status_norgroundnorfall       equ   $08 ;>>
    336                  0010     status_jumpingafterrolling    equ   $10 ;>>
    337                  0020     status_pushing                equ   $20 ;>>
    338                  0040     status_underwater             equ   $40 ;>>
    339
    340                  001B     ext_variables                 equ 27 ; to>>
    341
    342                           * --------------------------------------->>
    343                           * reserved variables (engine)
    344
    345                  0029     rsv_render_flags              equ 41
    346
    347                           * --- rsv_render_flags bitfield variables>>
    348                  0001     rsv_render_checkrefresh_mask  equ $01 ; (>>
    349                  0002     rsv_render_erasesprite_mask   equ $02 ; (>>
    350                  0004     rsv_render_displaysprite_mask equ $04 ; (>>
    351                  0008     rsv_render_outofrange_mask    equ $08 ; (>>
    352
    353                  002A     rsv_prev_anim                 equ 42 ; an>>
    354                  002C     rsv_image_center_offset       equ 44 ; 0 >>
    355                           * ne sert plus                       ; an>>
    356                  002E     rsv_image_subset              equ 46 ; an>>
    357                  0030     rsv_mapping_frame             equ 48 ; an>>
    358                  0032     rsv_xy1_pixel                 equ 50     >>
    359                  0032     rsv_x1_pixel                  equ 50     >>
    360                  0033     rsv_y1_pixel                  equ 51     >>
    361                  0034     rsv_xy2_pixel                 equ 52     >>
    362                  0034     rsv_x2_pixel                  equ 52     >>
    363                  0035     rsv_y2_pixel                  equ 53     >>
    364
    365                           * --------------------------------------->>
    366                           * reserved variables (engine) - buffer sp>>
    367
    368                  0036     rsv_buffer_0                  equ 54 ; St>>
    369                  0036     rsv_priority_0                equ 54 ; in>>
    370                  0037     rsv_priority_prev_obj_0       equ 55 ; an>>
    371                  0039     rsv_priority_next_obj_0       equ 57 ; an>>
    372                           *rsv_prev_image_subset_0       equ 59 ; a>>
    373                  003D     rsv_prev_mapping_frame_0      equ 61 ; an>>
    374                  003F     rsv_bgdata_0                  equ 63 ; an>>
    375                  0041     rsv_prev_xy_pixel_0           equ 65 ;
    376                  0041     rsv_prev_x_pixel_0            equ 65 ; pr>>
    377                  0042     rsv_prev_y_pixel_0            equ 66 ; pr>>
    378                  0043     rsv_prev_xy1_pixel_0          equ 67 ;
    379                  0043     rsv_prev_x1_pixel_0           equ 67 ; pr>>
    380                  0044     rsv_prev_y1_pixel_0           equ 68 ; pr>>
    381                  0045     rsv_prev_xy2_pixel_0          equ 69 ;
    382                  0045     rsv_prev_x2_pixel_0           equ 69 ; pr>>
    383                  0046     rsv_prev_y2_pixel_0           equ 70 ; pr>>
    384                  0047     rsv_prev_render_flags_0       equ 71 ;
    385                           * --- rsv_prev_render_flags_0 bitfield va>>
    386                  0001     rsv_prev_render_overlay_mask  equ $01 ; (>>
    387                  0080     rsv_prev_render_onscreen_mask equ $80 ; (>>
    388
    389                  0048     rsv_buffer_1                  equ 72 ; St>>
    390                  0048     rsv_priority_1                equ 72 ; in>>
    391                  0049     rsv_priority_prev_obj_1       equ 73 ; an>>
    392                  004B     rsv_priority_next_obj_1       equ 75 ; an>>
    393                           *rsv_prev_image_subset_1       equ 77 ; a>>
    394                  004F     rsv_prev_mapping_frame_1      equ 79 ; an>>
    395                  0051     rsv_bgdata_1                  equ 81 ; an>>
    396                  0053     rsv_prev_xy_pixel_1           equ 83 ;
    397                  0053     rsv_prev_x_pixel_1            equ 83 ; pr>>
    398                  0054     rsv_prev_y_pixel_1            equ 84 ; pr>>
    399                  0055     rsv_prev_xy1_pixel_1          equ 85 ;
    400                  0055     rsv_prev_x1_pixel_1           equ 85 ; pr>>
    401                  0056     rsv_prev_y1_pixel_1           equ 86 ; pr>>
    402                  0057     rsv_prev_xy2_pixel_1          equ 87 ;
    403                  0057     rsv_prev_x2_pixel_1           equ 87 ; pr>>
    404                  0058     rsv_prev_y2_pixel_1           equ 88 ; pr>>
    405                  0059     rsv_prev_render_flags_1       equ 89 ;
    406
    407                  0000     buf_priority                  equ 0  ; of>>
    408                  0001     buf_priority_prev_obj         equ 1  ;
    409                  0003     buf_priority_next_obj         equ 3  ;
    410                           *buf_prev_image_subset         equ 5  ;
    411                  0007     buf_prev_mapping_frame        equ 7  ;
    412                  0009     buf_bgdata                    equ 9  ;
    413                  000B     buf_prev_xy_pixel             equ 11 ;
    414                  000B     buf_prev_x_pixel              equ 11 ;
    415                  000C     buf_prev_y_pixel              equ 12 ;
    416                  000D     buf_prev_xy1_pixel            equ 13 ;
    417                  000D     buf_prev_x1_pixel             equ 13 ;
    418                  000E     buf_prev_y1_pixel             equ 14 ;
    419                  000F     buf_prev_xy2_pixel            equ 15 ;
    420                  000F     buf_prev_x2_pixel             equ 15 ;
    421                  0010     buf_prev_y2_pixel             equ 16 ;
    422                  0011     buf_prev_render_flags         equ 17 ;
    423
     10        6100                       org   $6100
     11
     12  8     6100 BD   89D8             jsr   LoadAct
     13                                   * jsr   PSGInit
     14
     15        6103               InitIRQ
     16  3     6103 CC   6126             ldd   #_IRQ                      >>
     17  6     6106 FD   6027             std   $6027
     18  3     6109 CC   09C4             ldd   #$09C4                     >>
     19  6     610C FD   E7C6             std   $E7C6                      >>
     20
     21                           * =======================================>>
     22                           * Main Loop
     23                           * =======================================>>
     24        610F               LevelMainLoop
     25  8     610F BD   716D             jsr   WaitVBL
     26  8     6112 BD   71AA             jsr   ReadJoypads
     27  8     6115 BD   71CB             jsr   RunObjects
     28  8     6118 BD   745A             jsr   CheckSpritesRefresh
     29  8     611B BD   779A             jsr   EraseSprites
     30  8     611E BD   7913             jsr   UnsetDisplayPriority
     31  8     6121 BD   79F2             jsr   DrawSprites
     32  3     6124 20   E9               bra   LevelMainLoop
     33                            
     34                           * =======================================>>
     35                           * IRQ
     36                           * =======================================>>
     37        6126               _IRQ
     38  5     6126 B6   E7E5             lda   $E7E5
     39  5     6129 B7   6130             sta   _IRQ_end+1                 >>
     40  8     612C BD   8033             jsr   PSGFrame
     41                                   * jsr   PSGSFXFrame
     42        612F               _IRQ_end
     43  2     612F 86   00               lda   #$00
     44  5     6131 B7   E7E5             sta   $E7E5                      >>
     45  4     6134 7E   E830             jmp   $E830
     46
     47                           * =======================================>>
     48                           * Global Data
     49                           *
     50                           * Naming convention
     51                           * -----------------
     52                           * - underscore-separated names
     53                           * - first letter of each word in upper ca>>
     54                           *
     55                           * Templates
     56                           * ---------
     57                           * - Glb_*        : global variable
     58                           * - Tbl_*        : data table
     59                           * - Lst_*        : list is a data table w>>
     60                           * - Obj_*        : address of an object i>>
     61                           *
     62                           * - *_Object_RAM : sub group of objects
     63                           * - *_end        : data end label
     64                           *
     65                           * =======================================>>
     66
     67                           * --------------------------------------->>
     68                           * Display
     69                           * --------------------------------------->>
     70                            
     71        6137 00            Glb_Cur_Wrk_Screen_Id         fcb   $00  >>
     72        6138 0000          Glb_Camera_X_Pos              fdb   $0000>>
     73        613A 0000          Glb_Camera_Y_Pos              fdb   $0000>>
     74        613C 0000          Glb_Sprite_Screen_Pos_Part1   fdb   $0000>>
     75        613E 0000          Glb_Sprite_Screen_Pos_Part2   fdb   $0000>>
     76
     77                           * --------------------------------------->>
     78                           * Background Backup Cells - BBC
     79                           * --------------------------------------->>
     80
     81                           * ----- Cell variables
     82                  0000     nb_cells                      equ   0
     83                  0001     cell_start                    equ   1
     84                  0003     cell_end                      equ   3
     85                  0005     next_entry                    equ   5
     86                  0007     entry_size                    equ   7
     87
     88                           * ----- Cells List
     89                  0082     nb_free_cells                 equ   130
     90                  0040     cell_size                     equ   64   >>
     91                  6000     cell_start_adr                equ   $6000>>
     92
     93        6140 6142          Lst_FreeCellFirstEntry_0      fdb   Lst_F>>
     94        6142 82            Lst_FreeCell_0                fcb   nb_fr>>
     95        6143 3F80                                        fdb   cell_>>
     96        6145 6000                                        fdb   cell_>>
     97        6147 0000                                        fdb   $0000>>
     98        6149                                             rmb   (entr>>
     99                            
    100        630F 6311          Lst_FreeCellFirstEntry_1      fdb   Lst_F>>
    101        6311 82            Lst_FreeCell_1                fcb   nb_fr>>
    102        6312 3F80                                        fdb   cell_>>
    103        6314 6000                                        fdb   cell_>>
    104        6316 0000                                        fdb   $0000>>
    105        6318                                             rmb   (entr>>
    106                           * --------------------------------------->>
    107                           * Display Priority Structure - DPS
    108                           * --------------------------------------->>
    109
    110        64DE               DPS_buffer_0
    111        64DE               Tbl_Priority_First_Entry_0    rmb   2+(nb>>
    112        64F0               Tbl_Priority_Last_Entry_0     rmb   2+(nb>>
    113        6502 6504          Lst_Priority_Unset_0          fdb   Lst_P>>
    114        6504                                             rmb   (nb_o>>
    115        6544               DPS_buffer_1
    116        6544               Tbl_Priority_First_Entry_1    rmb   2+(nb>>
    117        6556               Tbl_Priority_Last_Entry_1     rmb   2+(nb>>
    118        6568 656A          Lst_Priority_Unset_1          fdb   Lst_P>>
    119        656A                                             rmb   (nb_o>>
    120                            
    121                  0000     buf_Tbl_Priority_First_Entry  equ   0
    122                  0012     buf_Tbl_Priority_Last_Entry   equ   Tbl_P>>
    123                  0024     buf_Lst_Priority_Unset        equ   Lst_P>>
    124
    125                           * --------------------------------------->>
    126                           * Sub Priority Objects List - SOL
    127                           * --------------------------------------->>
    128
    129        65AA               Tbl_Sub_Object_Erase          rmb   nb_ob>>
    130        65EA               Tbl_Sub_Object_Draw           rmb   nb_ob>>
    131
    132                           * --------------------------------------->>
    133                           * Object Status Table - OST
    134                           * --------------------------------------->>
    135                            
    136        662A               Object_RAM *@globals
    137        662A               Reserved_Object_RAM
    138        662A 0203          Obj_MainCharacter             fdb   $0203>>
    139        662C                                             rmb   objec>>
    140        6684               Obj_Sidekick                  rmb   objec>>
    141        66DE               Reserved_Object_RAM_End
    142
    143        66DE               Dynamic_Object_RAM            rmb   nb_dy>>
    144        705C               Dynamic_Object_RAM_End
    145
    146        705C               LevelOnly_Object_RAM                     >>
    147        705C               Obj_TailsTails                rmb   objec>>
    148        70B6               Obj_SonicDust                 rmb   objec>>
    149        7110               Obj_TailsDust                 rmb   objec>>
    150        716A               LevelOnly_Object_RAM_End
    151        716A 716A          Object_RAM_End                fdb *
    152
    153                           * --------------------------------------->>
    154                           * Lifecycle
    155                           * --------------------------------------->>
    156
    157        716C               Glb_MainCharacter_Is_Dead     rmb   $1,0
    158
    159                           * =======================================>>
    160                           * Routines
    161                           * =======================================>>
    162                                   * a rendre dynamique a partir du >>
    424                                   INCLUD WAITVBL
    425                           *****************************************>>
    426                           * Attente VBL
    427                           * Alternance de la page 2 et 3 entre affi>>
    428                           * Alternance de la RAMA et RAM B dans l'e>>
    429                           * --------------------------------------->>
    430                           *
    431                           * Page Affichee par l'automate Video
    432                           * ----------------------------------
    433                           *   $E7DD determine la page affichee a l'>>
    434                           *   bit7=0 bit6=0 bit5=0 bit4=0 (#$0_) : >>
    435                           *   bit7=0 bit6=1 bit5=0 bit4=0 (#$4_) : >>
    436                           *   bit7=1 bit6=0 bit5=0 bit4=0 (#$8_) : >>
    437                           *   bit7=1 bit6=1 bit5=0 bit4=0 (#$C_) : >>
    438                           *   bit3 bit2 bit1 bit0  (#$_0 a #$_F) : >>
    439                           *   Remarque : bit5 et bit4 utilisable un>>
    440                           *
    441                           * Page en espace cartouche (ecriture dans>>
    442                           * --------------------------------------->>
    443                           *   $E7E6 determine la page visible dans >>
    444                           *   bit7 toujours a 0
    445                           *   bit6=1 : ecriture autorisee
    446                           *   bit5=1 : espace cartouche recouvert p>>
    447                           *   bit4=0 : CAS1N valide : banques 0-15 >>
    448                           *   bit5=1 bit4=0 bit3=0 bit2=0 bit1=0 bi>>
    449                           *   ...
    450                           *   bit5=1 bit4=0 bit3=1 bit2=1 bit1=1 bi>>
    451                           *   bit5=1 bit4=1 bit3=0 bit2=0 bit1=0 bi>>
    452                           *   ...
    453                           *   bit5=1 bit4=1 bit3=1 bit2=1 bit1=1 bi>>
    454                           *
    455                           * Demi-Page 0 en espace ecran (4000 a 5FF>>
    456                           * --------------------------------------->>
    457                           *   $E7C3 determine la demi-page de la pa>>
    458                           *   bit0=0 : 8Ko RAMA
    459                           *   bit0=1 : 8ko RAMB
    460                           *
    461                           *****************************************>>
    462        716D               WaitVBL
    463  7     716D 7D   E7E7             tst   $E7E7              * le fai>>
    464  3     7170 2A   FB               bpl   WaitVBL            * tant q>>
    465        7172               WaitVBL_01
    466  7     7172 7D   E7E7             tst   $E7E7              * le fai>>
    467  3     7175 2B   FB               bmi   WaitVBL_01         * tant q>>
    468                            
    469  6     7177 FC   71A2             ldd   Vint_runcount
    470  4     717A C3   0001             addd  #1
    471  6     717D FD   71A2             std   Vint_runcount
    472                            
    473        7180               SwapVideoPage
    474  5     7180 F6   718E             ldb   am_SwapVideoPage+1 * charge>>
    475  2     7183 C4   40               andb  #$40               * altern>>
    476        7185               screen_border_color *@globals
    477  2     7185 CA   80               orb   #$80               * bit7=1>>
    478  5     7187 F7   E7DD             stb   $E7DD              * change>>
    479  7     718A 73   718E             com   am_SwapVideoPage+1 * altern>>
    480        718D               am_SwapVideoPage
    481  2     718D C6   00               ldb   #$00
    482  2     718F C4   01               andb  #$01               * altern>>
    483  5     7191 F7   6137             stb   Glb_Cur_Wrk_Screen_Id
    484  2     7194 CA   62               orb   #$62               * bit6=1>>
    485  5     7196 F7   E7E6             stb   $E7E6              * change>>
    486  5     7199 F6   E7C3             ldb   $E7C3              * charge>>
    487  2     719C C8   01               eorb  #$01               * altern>>
    488  5     719E F7   E7C3             stb   $E7C3
    489  5     71A1 39                    rts
    490                            
    491        71A2               Vint_runcount rmb   $2,0 *@globals
    492
    493                                   INCLUD READJPDS
    494                           * --------------------------------------->>
    495                           * Controller Buttons
    496                           *
    497                  0001     c1_button_up_mask            equ   $01 *@>>
    498                  0002     c1_button_down_mask          equ   $02 *@>>
    499                  0004     c1_button_left_mask          equ   $04 *@>>
    500                  0008     c1_button_right_mask         equ   $08 *@>>
    501                  0010     c2_button_up_mask            equ   $10 *@>>
    502                  0020     c2_button_down_mask          equ   $20 *@>>
    503                  0040     c2_button_left_mask          equ   $40 *@>>
    504                  0080     c2_button_right_mask         equ   $80 *@>>
    505                  0040     c1_button_A_mask             equ   $40 *@>>
    506                  0080     c2_button_A_mask             equ   $80 *@>>
    507
    508        71A4               Joypads_Read
    509        71A4 00            Dpad_Read                    fcb   $00
    510        71A5 00            Fire_Read                    fcb   $00
    511                            
    512        71A6               Joypads
    513        71A6               Joypads_Held                           *@>>
    514        71A6 00            Dpad_Held                    fcb   $00 *@>>
    515        71A7 00            Fire_Held                    fcb   $00 *@>>
    516        71A8               Joypads_Press                          *@>>
    517        71A8 00            Dpad_Press                   fcb   $00 *@>>
    518        71A9 00            Fire_Press                   fcb   $00 *@>>
    519
    520                           *****************************************>>
    521                           * Get joystick parameters
    522                           *
    523                           * Direction des Joypads
    524                           * ---------------------
    525                           * Registre: $E7CC (8bits)
    526                           *
    527                           * Joypad2     Joypad1
    528                           * 1111        1111 (0: appuye | 1: relach>>
    529                           * ||||_Haut   ||||_Haut
    530                           * |||__Bas    |||__Bas
    531                           * ||___Gauche ||___Gauche
    532                           * |____Droite |____Droite
    533                           *
    534                           * Boutons des Joypads
    535                           * -------------------
    536                           * Registre: $E7CD (8bits)
    537                           *
    538                           * 11 000000 (0: appuye | 1: relache)
    539                           * ||[------] 6 bits convertisseur numeriq>>
    540                           * ||_Fire Joypad1
    541                           * |__Fire Joypad2
    542                           *
    543                           * Variables globales: Joypads_Held, Joypa>>
    544                           * --------------------------------------->>
    545                           * (16 bits)
    546                           * Joypad2     Joypad1
    547                           * 0000        0000 (0: relache | 1: appuy>>
    548                           * ||||_Haut   ||||_Haut                  >>
    549                           * |||__Bas    |||__Bas                   >>
    550                           * ||___Gauche ||___Gauche                >>
    551                           * |____Droite |____Droite
    552                           *
    553                           *****************************************>>
    554                            
    555                                                                  *;>>
    556                                                                  *;>>
    557                                                                  *;>>
    558                                                                  *;>>
    559                                                                  *
    560                                                                  *;>>
    561        71AA               ReadJoypads                            *R>>
    562                                                                  * >>
    563                                                                  * >>
    564                                                                  * >>
    565                                                                  * >>
    566                                                                  *
    567                                                                  *;>>
    568                                                                  *J>>
    569                                                                  * >>
    570                                                                  * >>
    571                                                                  * >>
    572                                                                  * >>
    573                                                                  * >>
    574                                                                  * >>
    575                                                                  * >>
    576                                                                  * >>
    577                                                                  * >>
    578                                                                  * >>
    579                                                                  * >>
    580                                                                  * >>
    581  6     71AA FC   E7CC             ldd   $E7CC
    582  2     71AD 43                    coma
    583  2     71AE 53                    comb                           * >>
    584  6     71AF FD   71A4             std   Joypads_Read
    585  6     71B2 FC   71A6             ldd   Joypads_Held             * >>
    586  5     71B5 B8   71A4             eora  Dpad_Read                * >>
    587  5     71B8 F8   71A5             eorb  Fire_Read
    588                                                                  * >>
    589  5     71BB B4   71A4             anda  Dpad_Read                * >>
    590  5     71BE F4   71A5             andb  Fire_Read
    591  6     71C1 FD   71A8             std   Joypads_Press            * >>
    592  6     71C4 FC   71A4             ldd   Joypads_Read
    593  6     71C7 FD   71A6             std   Joypads_Held
    594  5     71CA 39                    rts                            * >>
    595                                                                  *;>>
    596
    597
    598                                   INCLUD RUNOBJTS
    599                           * --------------------------------------->>
    600                           * RunObjects
    601                           * ------------
    602                           * Subroutine to run objects code
    603                           *
    604                           * input REG : none
    605                           * --------------------------------------->>
    606                                                                    >>
    607                                                                    >>
    608                                                                    >>
    609                                                                    >>
    610                                                                    >>
    611                                                                    >>
    612                                                                    >>
    613        71CB               RunObjects                               >>
    614                                                                    >>
    615                                                                    >>
    616  3     71CB CE   662A             ldu   #Object_RAM                >>
    617                                                                    >>
    618                                                                    >>
    619                                                                    >>
    620                                                                    >>
    621                                                                    >>
    622                                                                    >>
    623                                                                    >>
    624        71CE               RunObjects_01                            >>
    625                                                                    >>
    626                                                                    >>
    627                                                                    >>
    628                                                                    >>
    629  7     71CE 7D   716C             tst   Glb_MainCharacter_Is_Dead  >>
    630  3     71D1 26   23               bne   RunObjectsWhenPlayerIsDead >>
    631                                                                    >>
    632                                                                    >>
    633                                                                    >>
    634                                                                    >>
    635                                                                    >>
    636                                                                    >>
    637                                                                    >>
    638                                                                    >>
    639                                                                    >>
    640                                                                    >>
    641        71D3               RunObject                                >>
    642  2     71D3 86   00               lda   #$00
    643  4+0   71D5 E6   C4               ldb   ,u                         >>
    644  3     71D7 27   13               beq   RunNextObject              >>
    645
    646  4     71D9 108E 86C7             ldy   #Obj_Index_Page
    647  4+4   71DD A6   AB               lda   d,y                        >>
    648  5     71DF B7   E7E5             sta   $E7E5                      >>
    649  2     71E2 86   00               lda   #$00
    650  2     71E4 58                    aslb                             >>
    651  2     71E5 49                    rola                             >>
    652  4     71E6 108E 87C7             ldy   #Obj_Index_Address         >>
    653  7+7   71EA AD   BB               jsr   [d,y]                      >>
    654                                                                    >>
    655                                                                    >>
    656                                                                    >>
    657        71EC               RunNextObject                            >>
    658  4+1   71EC 33   C8 5A            leau  next_object,u              >>
    659        71EF               am_RunNextObject
    660  5     71EF 1183 716A             cmpu  #Object_RAM_End            >>
    661  3     71F3 26   DE               bne   RunObject                  >>
    662        71F5               RunObjects_End                           >>
    663  5     71F5 39                    rts                              >>
    664                                                                    >>
    665                                                                    >>
    666                                                                    >>
    667                                                                    >>
    668        71F6               RunObjectsWhenPlayerIsDead               >>
    669  3     71F6 CE   662A             ldu   #Reserved_Object_RAM
    670  3     71F9 8E   66DE             ldx   #Reserved_Object_RAM_End
    671  6     71FC BF   71F1             stx   am_RunNextObject+2         >>
    672  7     71FF 8D   D2               bsr   RunObject                  >>
    673                                                                    >>
    674                                                                    >>
    675  3     7201 CE   705C             ldu   #LevelOnly_Object_RAM
    676  3     7204 8E   716A             ldx   #LevelOnly_Object_RAM_End
    677  6     7207 BF   71F1             stx   am_RunNextObject+2         >>
    678  7     720A 8D   C7               bsr   RunObject                  >>
    679                                                                    >>
    680  3     720C 8E   716A             ldx   #Object_RAM_End            >>
    681  6     720F BF   71F1             stx   am_RunNextObject+2
    682  5     7212 39                    rts
    683                                                                    >>
    684                                                                    >>
    685                                                                    >>
    686                                                                    >>
    687                                                                    >>
    688                                                                    >>
    689                                                                    >>
    690                                                                    >>
    691                                                                    >>
    692                                                                    >>
    693                                                                    >>
    694                                                                    >>
    695                                                                    >>
    696                            
    697                                                                    >>
    698                                                                    >>
    699                                                                    >>
    700                                                                    >>
    701
    702                                   INCLUD MRKOBJGN
    703                           * --------------------------------------->>
    704                           * MarkObjGone
    705                           * -----------
    706                           * Subroutine to destroy an object that is>>
    707                           * -- TODO --
    708                           * waiting for camera implementation
    709                           *
    710                           * input REG : none
    711                           * clear REG : none
    712                           * --------------------------------------->>
    713
    714                                                                  *;>>
    715                                                                  *;>>
    716                                                                  *;>>
    717                                                                  *
    718                                                                  *;>>
    719                                                                  *;>>
    720                                                                  *;>>
    721        7213               MarkObjGone *@globals                  *M>>
    722                                                                  * >>
    723                                                                  * >>
    724  3     7213 20   06               bra   DisplaySprite            * >>
    725                                                                  *+>>
    726                                                                  * >>
    727                                                                  * >>
    728                                                                  * >>
    729                                                                  * >>
    730                                                                  * >>
    731                                                                  * >>
    732                                                                  *
    733                                                                  *+>>
    734                                                                  * >>
    735                                                                  * >>
    736                                                                  * >>
    737                                                                  * >>
    738                                                                  *+>>
    739                                                                  * >>
    740
    741                                   INCLUD DISPLSPR
    742                           * --------------------------------------->>
    743                           * DisplaySprite
    744                           * -------------
    745                           * Subroutine to manage sprite priority.
    746                           * Object's priority is read and object is>>
    747                           * priority: 0 - unregistred
    748                           * priority: 1 - register non moving overl>>
    749                           * priority; 2-8 - register moving sprite >>
    750                           *
    751                           * Unlike original S2 code, sprite priorit>>
    752                           * it allows to keep an exact sprite order>>
    753                           *
    754                           * DisplaySprite
    755                           * input REG : [u] object pointer (OST)
    756                           *
    757                           * DisplaySprite_x
    758                           * input REG : [x] object pointer (OST)
    759                           * --------------------------------------->>
    760                            
    761        7215               DisplaySprite_x *@globals
    762  5+6   7215 34   56               pshs  d,x,u
    763  6     7217 1F   13               tfr   x,u
    764  3     7219 20   02               bra   DSP_Start
    765                            
    766        721B               DisplaySprite *@globals
    767  5+6   721B 34   56               pshs  d,x,u
    768                            
    769        721D               DSP_Start
    770  4+1   721D A6   42               lda   render_flags,u
    771  2     721F 84   DF               anda  #:render_hide_mask         >>
    772  4+1   7221 A7   42               sta   render_flags,u
    773
    774  5     7223 B6   6137             lda   Glb_Cur_Wrk_Screen_Id      >>
    775  3     7226 26   09               bne   DSP_SetBuffer1
    776                            
    777        7228               DSP_SetBuffer0
    778  4+1   7228 30   C8 36            leax  rsv_buffer_0,u             >>
    779  4     722B 108E 64DE             ldy   #DPS_buffer_0              >>
    780  3     722F 20   07               bra   DSP_BufferPositionned
    781                            
    782        7231               DSP_SetBuffer1
    783  4+1   7231 30   C8 48            leax  rsv_buffer_1,u             >>
    784  4     7234 108E 6544             ldy   #DPS_buffer_1              >>
    785                            
    786        7238               DSP_BufferPositionned
    787  4+1   7238 A6   43               lda   priority,u                 >>
    788  4+1   723A A1   00               cmpa  buf_priority,x
    789  3     723C 27   1C               beq   DSP_rts                    >>
    790  4+1   723E E6   00               ldb   buf_priority,x
    791  3     7240 26   3F               bne   DSP_ChangePriority
    792                            
    793        7242               DSP_InitPriority
    794  4+1   7242 A7   00               sta   buf_priority,x             >>
    795  2     7244 48                    asla                             >>
    796                            
    797        7245               DSP_CheckLastEntry
    798  4+1   7245 31   A8 12            leay  buf_Tbl_Priority_Last_Entry>>
    799  6+1   7248 6D   A6               tst   a,y                        >>
    800  3     724A 26   10               bne   DSP_addToExistingNode      >>
    801                            
    802        724C               DSP_addFirstNode
    803  5+1   724C EF   A6               stu   a,y                        >>
    804  4+1   724E 31   A8 EE            leay  buf_Tbl_Priority_First_Entr>>
    805  5+1   7251 EF   A6               stu   a,y                        >>
    806  3     7253 CC   0000             ldd   #0
    807  5+1   7256 ED   01               std   buf_priority_prev_obj,x    >>
    808  5+1   7258 ED   03               std   buf_priority_next_obj,x
    809                            
    810        725A               DSP_rts
    811  5+8   725A 35   D6               puls  d,x,u,pc                   >>
    812                            
    813        725C               DSP_addToExistingNode
    814  5+1   725C AE   A6               ldx   a,y                        >>
    815  5     725E F6   6137             ldb   Glb_Cur_Wrk_Screen_Id
    816  3     7261 26   0E               bne   DSP_LinkBuffer1
    817  5+1   7263 EF   88 39            stu   rsv_priority_next_obj_0,x  >>
    818  5+1   7266 AF   C8 37            stx   rsv_priority_prev_obj_0,u  >>
    819  6+1   7269 6F   C8 39            clr   rsv_priority_next_obj_0,u  >>
    820  6+1   726C 6F   C8 3A            clr   rsv_priority_next_obj_0+1,u>>
    821  3     726F 20   0C               bra   DSP_LinkCurWithPrev
    822        7271               DSP_LinkBuffer1
    823  5+1   7271 EF   88 4B            stu   rsv_priority_next_obj_1,x  >>
    824  5+1   7274 AF   C8 49            stx   rsv_priority_prev_obj_1,u  >>
    825  6+1   7277 6F   C8 4B            clr   rsv_priority_next_obj_1,u  >>
    826  6+1   727A 6F   C8 4C            clr   rsv_priority_next_obj_1+1,u>>
    827                            
    828        727D               DSP_LinkCurWithPrev
    829  5+1   727D EF   A6               stu   a,y                        >>
    830  5+8   727F 35   D6               puls  d,x,u,pc                   >>
    831                            
    832        7281               DSP_ChangePriority
    833  4+1   7281 31   A8 24            leay  buf_Lst_Priority_Unset,y
    834  5+3   7284 EF   B4               stu   [,y]                       >>
    835  4+1   7286 31   22               leay  2,y
    836  6+0   7288 10AF A4               sty   ,y                         >>
    837  4+1   728B 31   A8 DA            leay  -buf_Lst_Priority_Unset-2,y>>
    838  2     728E 81   00               cmpa  #0
    839  3     7290 26   B3               bne   DSP_CheckLastEntry         >>
    840  5+8   7292 35   D6               puls  d,x,u,pc                   >>
    841
    842                            
    843                                                                  *;>>
    844                                                                  *;>>
    845                                                                  *;>>
    846                                                                  *
    847                                                                  *;>>
    848                                                                  *
    849                                                                  *;>>
    850                                                                  *D>>
    851                                                                  * >>
    852                                                                  * >>
    853                                                                  * >>
    854                                                                  * >>
    855                                                                  * >>
    856                            
    857                                                                  * >>
    858                                                                  * >>
    859                                                                  * >>
    860                            
    861                                                                  * >>
    862                                                                  * >>
    863                                                                  *
    864                                                                  *r>>
    865                            
    866                                                                  * >>
    867                                                                  *;>>
    868
    869                                   INCLUD ANIMSPR
    870                           * --------------------------------------->>
    871                           * Subroutine to animate a sprite using an>>
    872                           *
    873                           *   this function also change render flag>>
    874                           *   the status byte;
    875                           *
    876                           * input REG : [u] pointeur sur l'objet
    877                           *
    878                           * --------------------------------------->>
    879
    880                  00FF     resetAnim              equ $FF
    881                  00FE     goBackNFrames          equ $FE ; followed>>
    882                  00FD     goToAnimation          equ $FD ; followed>>
    883                  00FC     nextRoutine            equ $FC
    884                  00FB     resetAnimAndSubRoutine equ $FB
    885                  00FA     nextSubRoutine         equ $FA
    886
    887                                                                    >>
    888                                                                    >>
    889                                                                    >>
    890                                                                    >>
    891                                                                    >>
    892                                                                    >>
    893                                                                    >>
    894        7294               AnimateSprite * @globals                 >>
    895                                                                    >>
    896  5+1   7294 AE   44               ldx   anim,u                     >>
    897  6+1   7296 AC   46               cmpx  prev_anim,u                >>
    898  3     7298 27   08               beq   Anim_Run                   >>
    899  5+1   729A AF   46               stx   prev_anim,u                >>
    900  2     729C C6   00                     ldb   #0
    901  4+1   729E E7   48               stb   anim_frame,u               >>
    902  4+1   72A0 E7   49               stb   anim_frame_duration,u      >>
    903                                                                    >>
    904        72A2               Anim_Run                                 >>
    905  6+1   72A2 6A   49               dec   anim_frame_duration,u      >>
    906  3     72A4 2A   23               bpl   Anim_Wait                  >>
    907                                   * no offset table                >>
    908                                   * anim is the address of anim    >>
    909  4+1   72A6 E6   1F               ldb   -1,x
    910  4+1   72A8 E7   49                     stb   anim_frame_duration,u>>
    911                                                                    >>
    912  4+1   72AA E6   48               ldb   anim_frame,u               >>
    913  2     72AC 58                    aslb
    914  4+1   72AD 31   85               leay  b,x
    915  5+0   72AF EC   A4               ldd   ,y                         >>
    916                                   * bmi   Anim_End_FF              >>
    917  2     72B1 81   FA                     cmpa  #$FA                 >>
    918  3     72B3 24   15                     bhs   Anim_End_FF          >>
    919                                                                    >>
    920        72B5               Anim_Next                                >>
    921                                      * ne pas utiliser             >>
    922  5+1   72B5 ED   4A               std   image_set,u                >>
    923  4+1   72B7 E6   C8 1A            ldb   status,u                   >>
    924  2     72BA C4   03               andb  #status_x_orientation+statu>>
    925  5     72BC F7   72C4             stb   Anim_dyn+1
    926                                                                    >>
    927  4+1   72BF A6   42               lda   render_flags,u             >>
    928  2     72C1 84   FC               anda  #:(render_xmirror_mask+rend>>
    929        72C3               Anim_dyn
    930  2     72C3 8A   00               ora   #$00                       >>
    931                                                                    >>
    932  4+1   72C5 A7   42               sta   render_flags,u
    933  6+1   72C7 6C   48               inc   anim_frame,u               >>
    934                                                                    >>
    935        72C9               Anim_Wait                                >>
    936  5     72C9 39                    rts                              >>
    937                                                                    >>
    938                                                                    >>
    939        72CA               Anim_End_FF                              >>
    940  2     72CA 4C                    inca                             >>
    941  3     72CB 26   08               bne   Anim_End_FE                >>
    942  2     72CD C6   00                     ldb   #0
    943  4+1   72CF E7   48               stb   anim_frame,u               >>
    944  5+0   72D1 EC   84               ldd   ,x                         >>
    945  3     72D3 20   E0               bra   Anim_Next                  >>
    946                                                                    >>
    947                                                                    >>
    948        72D5               Anim_End_FE                              >>
    949  2     72D5 4C                    inca                             >>
    950  3     72D6 26   0E               bne   Anim_End_FD                >>
    951  4+1   72D8 A6   48               lda   anim_frame,u
    952  5     72DA F7   72DE             stb   Anim_End_FE_dyn+1          >>
    953        72DD               Anim_End_FE_dyn
    954  2     72DD 80   00               suba  #$00                       >>
    955  4+1   72DF A7   48               sta   anim_frame,u               >>
    956                                                                    >>
    957  2     72E1 48                    asla
    958  5+1   72E2 EC   86               ldd   a,x                        >>
    959  3     72E4 20   CF               bra   Anim_Next                  >>
    960                                                                    >>
    961                                                                    >>
    962        72E6               Anim_End_FD                              >>
    963  2     72E6 4C                    inca                             >>
    964  3     72E7 26   05               bne   Anim_End_FC                >>
    965  5+1   72E9 EC   21               ldd   1,y                        >>
    966  5+1   72EB ED   44               std   anim,u                     >>
    967  5     72ED 39                    rts                              >>
    968                                                                    >>
    969                                                                    >>
    970        72EE               Anim_End_FC                              >>
    971  2     72EE 4C                    inca                             >>
    972  3     72EF 26   0F               bne   Anim_End_FB                >>
    973  4+1   72F1 E6   C8 18            ldb   routine,u
    974  2     72F4 CB   03               addb  #$03
    975  4+1   72F6 E7   C8 18            stb   routine,u                  >>
    976  2     72F9 86   00               lda   #0
    977  4+1   72FB A7   49               sta   anim_frame_duration,u      >>
    978  6+1   72FD 6C   48               inc   anim_frame,u               >>
    979  5     72FF 39                    rts                              >>
    980                                                                    >>
    981                                                                    >>
    982        7300               Anim_End_FB                              >>
    983  2     7300 4C                    inca                             >>
    984  3     7301 26   08               bne   Anim_End_FA                >>
    985  2     7303 86   00               lda   #0
    986  4+1   7305 A7   48               sta   anim_frame,u               >>
    987  4+1   7307 A7   C8 19            sta   routine_secondary,u        >>
    988  5     730A 39                    rts                              >>
    989                                                                    >>
    990                                                                    >>
    991        730B               Anim_End_FA                              >>
    992  2     730B 4C                    inca                             >>
    993  3     730C 26   08               bne   Anim_End                   >>
    994  4+1   730E E6   C8 19            ldb   routine_secondary,u        >>
    995  2     7311 CB   03               addb  #$03
    996  4+1   7313 E7   C8 19            stb   routine_secondary,u
    997        7316               Anim_End
    998  5     7316 39                    rts                              >>
    999                                                                    >>
   1000                                                                    >>
   1001                                                                    >>
   1002                                                                    >>
   1003                                                                    >>
   1004                                                                    >>
   1005                                                                    >>
   1006                                                                    >>
   1007                                                                    >>
   1008                                                                    >>
   1009
   1010                                   INCLUD OBJMOVE
   1011                           * --------------------------------------->>
   1012                           * Subroutine translating object speed to >>
   1013                           * This moves the object horizontally and >>
   1014                           * but does not apply gravity to it
   1015                           * --------------------------------------->>
   1016
   1017                                                                  *;>>
   1018                                                                  *;>>
   1019                                                                  *;>>
   1020                                                                  *;>>
   1021                                                                  *;>>
   1022                                                                  *
   1023                                                                  *;>>
   1024                                                                  *
   1025                                                                  *;>>
   1026        7317               ObjectMove                             *O>>
   1027                                                                  * >>
   1028                                                                  * >>
   1029                                                                  * >>
   1030                                                                  * >>
   1031                                                                  * >>
   1032                                                                  * >>
   1033  4+1   7317 E6   C8 14            ldb   x_vel,u
   1034  2     731A 1D                    sex                            ; >>
   1035  5     731B B7   7328             sta   am_ObjectMove_01+1
   1036  5+1   731E EC   C8 14            ldd   x_vel,u
   1037  6+1   7321 E3   4D               addd  x_pos+1,u                ; >>
   1038  5+1   7323 ED   4D               std   x_pos+1,u                ; >>
   1039  4+1   7325 A6   4C               lda   x_pos,u
   1040        7327               am_ObjectMove_01
   1041  2     7327 89   00               adca  #$00                     ; >>
   1042  4+1   7329 A7   4C               sta   x_pos,u                  ; >>
   1043                            
   1044                                                                  * >>
   1045                                                                  * >>
   1046                                                                  * >>
   1047                                                                  * >>
   1048                                                                  * >>
   1049                                                                  * >>
   1050  4+1   732B E6   C8 16            ldb   y_vel,u
   1051  2     732E 1D                    sex                            ; >>
   1052  5     732F B7   733E             sta   am_ObjectMove_02+1
   1053  5+1   7332 EC   C8 16            ldd   y_vel,u
   1054  6+1   7335 E3   C8 10            addd  y_pos+1,u                ; >>
   1055  5+1   7338 ED   C8 10            std   y_pos+1,u                ; >>
   1056  4+1   733B A6   4F               lda   y_pos,u
   1057        733D               am_ObjectMove_02
   1058  2     733D 89   00               adca  #$00                     ; >>
   1059  4+1   733F A7   4F               sta   y_pos,u                  ; >>
   1060  5     7341 39                    rts                            * >>
   1061                                                                  *;>>
   1062                                                                  *;>>
   1063
   1064                                   INCLUD OBJLOAD
   1065                           * --------------------------------------->>
   1066                           * Single object loading subroutine
   1067                           * Find an empty object array
   1068                           *
   1069                           * input  REG : [u] pointeur sur l'objet c>>
   1070                           * output REG : [x] pointeur sur l'objet l>>
   1071                           * --------------------------------------->>
   1072
   1073                                                                  *;>>
   1074                                                                  *;>>
   1075                                                                  *;>>
   1076                                                                  *;>>
   1077                                                                  *;>>
   1078                                                                  *
   1079                                                                  *;>>
   1080                                                                  *S>>
   1081                                                                  * >>
   1082                                                                  * >>
   1083                                                                  * >>
   1084                                                                  * >>
   1085                                                                  * >>
   1086                                                                  *
   1087                                                                  */>>
   1088                                                                  * >>
   1089                                                                  * >>
   1090                                                                  * >>
   1091                                                                  * >>
   1092                                                                  *
   1093                                                                  *r>>
   1094                                                                  * >>
   1095                                                                  *;>>
   1096                                                                  *;>>
   1097                                                                  *;>>
   1098                                                                  *;>>
   1099                                                                  *;>>
   1100                                                                  *
   1101                                                                  *;>>
   1102                                                                  *
   1103                                                                  *;>>
   1104        7342               SingleObjLoad2                         *S>>
   1105  6     7342 1F   31               tfr   u,x                      * >>
   1106  4+1   7344 30   88 5A            leax  next_object,x            * >>
   1107  4     7347 8C   705C             cmpx  #Dynamic_Object_RAM_End  * >>
   1108  3     734A 27   0C               beq   SingleObjLoad2_02        * >>
   1109                                                                  * >>
   1110                                                                  * >>
   1111                                                                  * >>
   1112                                                                  * >>
   1113                                                                  * >>
   1114                                                                  * >>
   1115                                                                  * >>
   1116                                                                  * >>
   1117                                                                  *
   1118        734C               SingleObjLoad2_01                      *->>
   1119  6+0   734C 6D   84               tst   ,x                       * >>
   1120  3     734E 27   08               beq   SingleObjLoad2_02        * >>
   1121  4+1   7350 30   88 5A            leax  next_object,x            * >>
   1122  4     7353 8C   705C             cmpx  #Dynamic_Object_RAM_End
   1123  3     7356 26   F4               bne   SingleObjLoad2_01        * >>
   1124                                                                  *
   1125        7358               SingleObjLoad2_02                      *r>>
   1126  5     7358 39                    rts                            * >>
   1127                                                                  *
   1128                                                                  * >>
   1129                                                                  *+>>
   1130                                                                  *.>>
   1131                                                                  *.>>
   1132                                                                  *
   1133                                                                  * >>
   1134                                                                  * >>
   1135                                                                  * >>
   1136                                                                  * >>
   1137                                                                  * >>
   1138                                                                  * >>
   1139                                                                  *
   1140                                                                  *.>>
   1141                                                                  *.>>
   1142                                                                  * >>
   1143                                                                  * >>
   1144                                                                  * >>
   1145                                                                  *;>>
   1146                                                                  *;>>
   1147                                                                  *;>>
   1148                                                                  *;>>
   1149                                                                  *;>>
   1150                                                                  *
   1151                                                                  *;>>
   1152                                                                  *
   1153                                                                  *;>>
   1154                                                                  *S>>
   1155                                                                  * >>
   1156                                                                  * >>
   1157                                                                  *
   1158                                                                  *->>
   1159                                                                  * >>
   1160                                                                  * >>
   1161                                                                  * >>
   1162                                                                  * >>
   1163                                                                  *
   1164                                                                  *r>>
   1165                                                                  * >>
   1166                                                                  *;>>
   1167
   1168
   1169                                   INCLUD DELETOBJ
   1170                           * --------------------------------------->>
   1171                           * DeleteObject
   1172                           * ------------
   1173                           * Subroutine to delete an object.
   1174                           * If the object is rendered as a sprite i>>
   1175                           * routine
   1176                           *
   1177                           * DeleteObject
   1178                           * input REG : [u] object pointer (OST)
   1179                           *
   1180                           * DeleteObject_x
   1181                           * input REG : [x] object pointer (OST)
   1182                           * --------------------------------------->>
   1183
   1184                                                                  *;>>
   1185                                                                  *;>>
   1186                                                                  *;>>
   1187                                                                  *
   1188                                                                  *;>>
   1189                                                                  *
   1190                                                                  *;>>
   1191        7359               DeleteObject_x *@globals               *D>>
   1192  5+6   7359 34   56               pshs  d,x,u                    * >>
   1193  4+0   735B 33   84               leau  ,x                       *;>>
   1194  3     735D 20   02               bra   DOB_Start
   1195                            
   1196        735F               DeleteObject *@globals                 *D>>
   1197  5+6   735F 34   56               pshs  d,x,u
   1198                            
   1199        7361               DOB_Start
   1200  4+1   7361 A6   C8 47            lda   rsv_prev_render_flags_0,u
   1201  3     7364 2A   27               bpl   DOB_RemoveFromDPSB0        >>
   1202
   1203        7366               DOB_ToDeleteFlag0
   1204  4+1   7366 A6   42               lda   render_flags,u
   1205  2     7368 8A   40               ora   #render_todelete_mask
   1206  4+1   736A A7   42               sta   render_flags,u             >>
   1207                            
   1208        736C               DOB_Unset0
   1209  6     736C BE   6502             ldx   Lst_Priority_Unset_0       >>
   1210  5+0   736F EF   84               stu   ,x
   1211  4+1   7371 30   02               leax  2,x
   1212  6     7373 BF   6502             stx   Lst_Priority_Unset_0
   1213                            
   1214        7376               DOB_TestOnscreen1
   1215  4+1   7376 A6   C8 59            lda   rsv_prev_render_flags_1,u
   1216  3     7379 2A   54               bpl   DOB_RemoveFromDPSB1        >>
   1217                            
   1218        737B               DOB_ToDeleteFlag1
   1219  4+1   737B A6   42               lda   render_flags,u
   1220  2     737D 8A   40               ora   #render_todelete_mask
   1221  4+1   737F A7   42               sta   render_flags,u             >>
   1222                            
   1223        7381               DOB_Unset1
   1224  6     7381 BE   6568             ldx   Lst_Priority_Unset_1       >>
   1225  5+0   7384 EF   84               stu   ,x
   1226  4+1   7386 30   02               leax  2,x
   1227  6     7388 BF   6568             stx   Lst_Priority_Unset_1
   1228  5+8   738B 35   D6               puls  d,x,u,pc                   >>
   1229
   1230        738D               DOB_RemoveFromDPSB0
   1231  5+1   738D EC   C8 37            ldd   rsv_priority_prev_obj_0,u  >>
   1232  3     7390 26   11               bne   DOB_ChainPrevB0
   1233                            
   1234  4+1   7392 A6   C8 36            lda   rsv_priority_0,u
   1235  2     7395 48                    lsla
   1236  4     7396 108E 64DE             ldy   #Tbl_Priority_First_Entry_0>>
   1237  4+1   739A 31   A6               leay  a,y
   1238  5+1   739C EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1239  5+0   739F ED   A4               std   ,y
   1240  3     73A1 20   0A               bra   DOB_CheckPrioNextB0
   1241                            
   1242        73A3               DOB_ChainPrevB0
   1243  5+1   73A3 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1244  6+1   73A6 10AE C8 37            ldy   rsv_priority_prev_obj_0,u
   1245  5+1   73AA ED   A8 39            std   rsv_priority_next_obj_0,y
   1246
   1247        73AD               DOB_CheckPrioNextB0
   1248  5+1   73AD EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1249  3     73B0 26   11               bne   DOB_ChainNextB0
   1250
   1251  4+1   73B2 A6   C8 36            lda   rsv_priority_0,u
   1252  2     73B5 48                    lsla
   1253  4     73B6 108E 64F0             ldy   #Tbl_Priority_Last_Entry_0
   1254  4+1   73BA 31   A6               leay  a,y
   1255  5+1   73BC EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   1256  5+0   73BF ED   A4               std   ,y
   1257  3     73C1 20   B3               bra   DOB_TestOnscreen1
   1258                            
   1259        73C3               DOB_ChainNextB0
   1260  5+1   73C3 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   1261  6+1   73C6 10AE C8 39            ldy   rsv_priority_next_obj_0,u
   1262  5+1   73CA ED   A8 37            std   rsv_priority_prev_obj_0,y
   1263  3     73CD 20   A7               bra   DOB_TestOnscreen1
   1264
   1265        73CF               DOB_RemoveFromDPSB1
   1266  5+1   73CF EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1267  3     73D2 26   11               bne   DOB_ChainPrevB1
   1268                            
   1269  4+1   73D4 A6   C8 48            lda   rsv_priority_1,u
   1270  2     73D7 48                    lsla
   1271  4     73D8 108E 6544             ldy   #Tbl_Priority_First_Entry_1>>
   1272  4+1   73DC 31   A6               leay  a,y
   1273  5+1   73DE EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1274  5+0   73E1 ED   A4               std   ,y
   1275  3     73E3 20   0A               bra   DOB_CheckPrioNextB1
   1276                            
   1277        73E5               DOB_ChainPrevB1
   1278  5+1   73E5 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1279  6+1   73E8 10AE C8 49            ldy   rsv_priority_prev_obj_1,u
   1280  5+1   73EC ED   A8 4B            std   rsv_priority_next_obj_1,y
   1281
   1282        73EF               DOB_CheckPrioNextB1
   1283  5+1   73EF EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1284  3     73F2 26   19               bne   DOB_ChainNextB1
   1285
   1286  4+1   73F4 A6   C8 48            lda   rsv_priority_1,u
   1287  2     73F7 48                    lsla
   1288  4     73F8 108E 6556             ldy   #Tbl_Priority_Last_Entry_1
   1289  4+1   73FC 31   A6               leay  a,y
   1290  5+1   73FE EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1291  5+0   7401 ED   A4               std   ,y
   1292  4+1   7403 A6   C8 47            lda   rsv_prev_render_flags_0,u
   1293  3     7406 2B   03               bmi   DOB_rts                    >>
   1294  8     7408 BD   7421             jsr   ClearObj                   >>
   1295        740B               DOB_rts                                *
   1296  5+8   740B 35   D6               puls  d,x,u,pc
   1297                            
   1298        740D               DOB_ChainNextB1
   1299  5+1   740D EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1300  6+1   7410 10AE C8 4B            ldy   rsv_priority_next_obj_1,u
   1301  5+1   7414 ED   A8 49            std   rsv_priority_prev_obj_1,y
   1302  4+1   7417 A6   C8 47            lda   rsv_prev_render_flags_0,u
   1303  3     741A 2B   EF               bmi   DOB_rts                    >>
   1304  8     741C BD   7421             jsr   ClearObj                   >>
   1305  5+8   741F 35   D6               puls  d,x,u,pc
   1306
   1307                                                                  * >>
   1308                                                                  *
   1309                                                                  * >>
   1310                                                                  * >>
   1311                                                                  *->>
   1312                                                                  * >>
   1313                                                                  * >>
   1314                                                                  * >>
   1315                                                                  * >>
   1316                                                                  *
   1317                                                                  * >>
   1318                                                                  *;>>
   1319
   1320                                   INCLUD CLEAROBJ
   1321                           * --------------------------------------->>
   1322                           * ClearObj
   1323                           * --------
   1324                           * Subroutine to clear an object data in O>>
   1325                           *
   1326                           * input REG : [u] pointer on objet (OST)
   1327                           * clear REG : [d,y]
   1328                           * --------------------------------------->>
   1329
   1330        7421               ClearObj *@globals
   1331  5+8   7421 34   76               pshs  d,x,y,u
   1332  7     7423 10FF 744A             sts   CLO_1+2
   1333  4+1   7427 32   C8 5A            leas  object_size,u
   1334  3     742A CC   0000             ldd   #$0000
   1335  3     742D 8E   0000             ldx   #$0000
   1336  4+0   7430 31   84               leay  ,x
   1337  4+0   7432 33   84               leau  ,x
   1338  5+8   7434 34   76               pshs  d,x,y,u
   1339  5+8   7436 34   76               pshs  d,x,y,u
   1340  5+8   7438 34   76               pshs  d,x,y,u
   1341  5+8   743A 34   76               pshs  d,x,y,u
   1342  5+8   743C 34   76               pshs  d,x,y,u
   1343  5+8   743E 34   76               pshs  d,x,y,u
   1344  5+8   7440 34   76               pshs  d,x,y,u
   1345  5+8   7442 34   76               pshs  d,x,y,u
   1346  5+8   7444 34   76               pshs  d,x,y,u
   1347  4+0   7446 33   E4               leau  ,s
   1348        7448               CLO_1
   1349  4     7448 10CE 0000             lds   #$0000        ; start of ob>>
   1350  5+6   744C 36   36               pshu  d,x,y         ; saving 12 b>>
   1351  5+6   744E 36   36               pshu  d,x,y         ; DEPENDENCY >>
   1352  5+6   7450 36   36               pshu  d,x,y         ; DEPENDENCY >>
   1353        7452               CLO_2
   1354  5+10  7452 35   F6               puls  d,x,y,u,pc
   1355
   1356                                   INCLUD CHECKSPR
   1357                           * --------------------------------------->>
   1358                           * CheckSpritesRefresh
   1359                           * -------------------
   1360                           * Subroutine to determine if sprites are >>
   1361                           * Read Display Priority Structure (back t>>
   1362                           * priority: 0 - unregistred
   1363                           * priority: 1 - register non moving overl>>
   1364                           * priority; 2-8 - register moving sprite >>
   1365                           *
   1366                           * input REG : none
   1367                           * --------------------------------------->>
   1368
   1369        7454 0000          cur_priority            fdb   $00
   1370        7456 0000          cur_ptr_sub_obj_erase   fdb   $0000
   1371        7458 0000          cur_ptr_sub_obj_draw    fdb   $0000
   1372                            
   1373        745A               CheckSpritesRefresh
   1374
   1375        745A               CSR_Start
   1376  3     745A CC   65AA             ldd   #Tbl_Sub_Object_Erase
   1377  6     745D FD   7456             std   cur_ptr_sub_obj_erase
   1378  3     7460 CC   65EA             ldd   #Tbl_Sub_Object_Draw
   1379  6     7463 FD   7458             std   cur_ptr_sub_obj_draw
   1380  5     7466 B6   6137             lda   Glb_Cur_Wrk_Screen_Id      >>
   1381  3     7469 26   6E               bne   CSR_SetBuffer1
   1382                            
   1383        746B               CSR_SetBuffer0
   1384  2     746B 86   36               lda   #rsv_buffer_0              >>
   1385  5     746D B7   7549             sta   CSR_ProcessEachPriorityLeve>>
   1386        7470               CSR_P8B0
   1387  6     7470 FE   64EE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1388  3     7473 27   08               beq   CSR_P7B0
   1389  2     7475 86   08               lda   #$08
   1390  5     7477 B7   7454             sta   cur_priority
   1391  8     747A BD   7547             jsr   CSR_ProcessEachPriorityLeve>>
   1392        747D               CSR_P7B0
   1393  6     747D FE   64EC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1394  3     7480 27   08               beq   CSR_P6B0
   1395  2     7482 86   07               lda   #$07
   1396  5     7484 B7   7454             sta   cur_priority
   1397  8     7487 BD   7547             jsr   CSR_ProcessEachPriorityLeve>>
   1398        748A               CSR_P6B0
   1399  6     748A FE   64EA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1400  3     748D 27   08               beq   CSR_P5B0
   1401  2     748F 86   06               lda   #$06
   1402  5     7491 B7   7454             sta   cur_priority
   1403  8     7494 BD   7547             jsr   CSR_ProcessEachPriorityLeve>>
   1404        7497               CSR_P5B0
   1405  6     7497 FE   64E8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1406  3     749A 27   08               beq   CSR_P4B0
   1407  2     749C 86   05               lda   #$05
   1408  5     749E B7   7454             sta   cur_priority
   1409  8     74A1 BD   7547             jsr   CSR_ProcessEachPriorityLeve>>
   1410        74A4               CSR_P4B0
   1411  6     74A4 FE   64E6             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1412  3     74A7 27   08               beq   CSR_P3B0
   1413  2     74A9 86   04               lda   #$04
   1414  5     74AB B7   7454             sta   cur_priority
   1415  8     74AE BD   7547             jsr   CSR_ProcessEachPriorityLeve>>
   1416        74B1               CSR_P3B0
   1417  6     74B1 FE   64E4             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1418  3     74B4 27   08               beq   CSR_P2B0
   1419  2     74B6 86   03               lda   #$03
   1420  5     74B8 B7   7454             sta   cur_priority
   1421  8     74BB BD   7547             jsr   CSR_ProcessEachPriorityLeve>>
   1422        74BE               CSR_P2B0
   1423  6     74BE FE   64E2             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1424  3     74C1 27   08               beq   CSR_P1B0
   1425  2     74C3 86   02               lda   #$02
   1426  5     74C5 B7   7454             sta   cur_priority
   1427  8     74C8 BD   7547             jsr   CSR_ProcessEachPriorityLeve>>
   1428        74CB               CSR_P1B0
   1429  6     74CB FE   64E0             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1430  3     74CE 27   08               beq   CSR_rtsB0
   1431  2     74D0 86   01               lda   #$01
   1432  5     74D2 B7   7454             sta   cur_priority
   1433  8     74D5 BD   7547             jsr   CSR_ProcessEachPriorityLeve>>
   1434        74D8               CSR_rtsB0
   1435  5     74D8 39                    rts
   1436                            
   1437        74D9               CSR_SetBuffer1
   1438  2     74D9 86   48               lda   #rsv_buffer_1              >>
   1439  5     74DB B7   7549             sta   CSR_ProcessEachPriorityLeve>>
   1440        74DE               CSR_P8B1
   1441  6     74DE FE   6554             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1442  3     74E1 27   08               beq   CSR_P7B1
   1443  2     74E3 86   08               lda   #$08
   1444  5     74E5 B7   7454             sta   cur_priority
   1445  8     74E8 BD   7547             jsr   CSR_ProcessEachPriorityLeve>>
   1446        74EB               CSR_P7B1
   1447  6     74EB FE   6552             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1448  3     74EE 27   08               beq   CSR_P6B1
   1449  2     74F0 86   07               lda   #$07
   1450  5     74F2 B7   7454             sta   cur_priority
   1451  8     74F5 BD   7547             jsr   CSR_ProcessEachPriorityLeve>>
   1452        74F8               CSR_P6B1
   1453  6     74F8 FE   6550             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1454  3     74FB 27   08               beq   CSR_P5B1
   1455  2     74FD 86   06               lda   #$06
   1456  5     74FF B7   7454             sta   cur_priority
   1457  8     7502 BD   7547             jsr   CSR_ProcessEachPriorityLeve>>
   1458        7505               CSR_P5B1
   1459  6     7505 FE   654E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1460  3     7508 27   08               beq   CSR_P4B1
   1461  2     750A 86   05               lda   #$05
   1462  5     750C B7   7454             sta   cur_priority
   1463  8     750F BD   7547             jsr   CSR_ProcessEachPriorityLeve>>
   1464        7512               CSR_P4B1
   1465  6     7512 FE   654C             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1466  3     7515 27   08               beq   CSR_P3B1
   1467  2     7517 86   04               lda   #$04
   1468  5     7519 B7   7454             sta   cur_priority
   1469  8     751C BD   7547             jsr   CSR_ProcessEachPriorityLeve>>
   1470        751F               CSR_P3B1
   1471  6     751F FE   654A             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1472  3     7522 27   08               beq   CSR_P2B1
   1473  2     7524 86   03               lda   #$03
   1474  5     7526 B7   7454             sta   cur_priority
   1475  8     7529 BD   7547             jsr   CSR_ProcessEachPriorityLeve>>
   1476        752C               CSR_P2B1
   1477  6     752C FE   6548             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1478  3     752F 27   08               beq   CSR_P1B1
   1479  2     7531 86   02               lda   #$02
   1480  5     7533 B7   7454             sta   cur_priority
   1481  8     7536 BD   7547             jsr   CSR_ProcessEachPriorityLeve>>
   1482        7539               CSR_P1B1
   1483  6     7539 FE   6546             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1484  3     753C 27   08               beq   CSR_rtsB1
   1485  2     753E 86   01               lda   #$01
   1486  5     7540 B7   7454             sta   cur_priority
   1487  8     7543 BD   7547             jsr   CSR_ProcessEachPriorityLeve>>
   1488        7546               CSR_rtsB1
   1489  5     7546 39                    rts
   1490
   1491        7547               CSR_ProcessEachPriorityLevel
   1492  4+1   7547 30   C8 10            leax  16,u                       >>
   1493                            
   1494        754A               CSR_CheckDelHide
   1495  4+1   754A A6   42               lda   render_flags,u
   1496  2     754C 84   60               anda  #render_hide_mask!render_to>>
   1497  3     754E 26   2B               bne   CSR_DoNotDisplaySprite
   1498
   1499        7550               CSR_CheckRefresh
   1500  4+1   7550 A6   C8 29            lda   rsv_render_flags,u
   1501  2     7553 84   01               anda  #rsv_render_checkrefresh_ma>>
   1502  6     7555 1026 00FE             lbne  CSR_CheckErase
   1503
   1504        7559               CSR_UpdSpriteImageBasedOnMirror
   1505  4+1   7559 A6   C8 29            lda   rsv_render_flags,u
   1506  2     755C 8A   01               ora   #rsv_render_checkrefresh_ma>>
   1507  4+1   755E A7   C8 29            sta   rsv_render_flags,u         >>
   1508                            
   1509  4+1   7561 A6   42               lda   render_flags,u             >>
   1510  2     7563 84   03               anda  #render_xmirror_mask!render>>
   1511  6+1   7565 10AE 4A               ldy   image_set,u
   1512  4+1   7568 E6   26               ldb   image_center_offset,y
   1513  4+1   756A E7   C8 2C            stb   rsv_image_center_offset,u
   1514  4+1   756D E6   A6               ldb   a,y
   1515  4+1   756F 31   A5               leay  b,y                        >>
   1516  6+1   7571 10AF C8 2E            sty   rsv_image_subset,u
   1517                            
   1518        7575               CSR_CheckPlayFieldCoord
   1519  4+1   7575 A6   42               lda   render_flags,u
   1520  2     7577 84   10               anda  #render_playfieldcoord_mask>>
   1521  3     7579 27   2A               beq   CSR_CheckVerticalPosition  >>
   1522                            
   1523                                   * not yet implemented
   1524                                   * need to be updated with new alg>>
   1525                                   *ldd   x_pos,u
   1526                                   *subd  Glb_Camera_X_Pos
   1527                                   *ldy   rsv_mapping_frame,u
   1528                                   *addd  image_x_offset,y
   1529                                   *lbvs   CSR_SetOutOfRange        >>
   1530                                   *lbmi   CSR_SetOutOfRange        >>
   1531                                   *stb   x_pixel,u
   1532                                   *addb  image_x_size_l,y
   1533                                   *lbvs   CSR_SetOutOfRange        >>
   1534                                   *stb   rsv_x2_pixel,u
   1535                                   *cmpb  #screen_width
   1536                                   *lbgt   CSR_SetOutOfRange        >>
   1537
   1538                                   *ldd   y_pos,u
   1539                                   *subd  Glb_Camera_Y_Pos
   1540                                   *addd  image_y1_offset,y
   1541                                   *bvs   CSR_SetOutOfRange         >>
   1542                                   *bmi   CSR_SetOutOfRange         >>
   1543                                   *stb   y_pixel,u
   1544                                   *addb  image_y_size_l,y
   1545                                   *bvs   CSR_SetOutOfRange         >>
   1546                                   *stb   rsv_y2_pixel,u
   1547                                   *cmpb  #screen_bottom
   1548                                   *bhi   CSR_SetOutOfRange         >>
   1549                                   *lda   rsv_render_flags,u
   1550                                   *anda  #:rsv_render_outofrange_ma>>
   1551                                   *sta   rsv_render_flags,u
   1552                                   *bra   CSR_CheckErase
   1553                            
   1554        757B               CSR_DoNotDisplaySprite
   1555  4+1   757B A6   43               lda   priority,u
   1556  5     757D B1   7454             cmpa  cur_priority
   1557  3     7580 26   1C               bne   CSR_NextObject             >>
   1558                            
   1559  4+1   7582 A6   C8 29            lda   rsv_render_flags,u
   1560  2     7585 84   F9               anda  #:rsv_render_erasesprite_ma>>
   1561  4+1   7587 A7   C8 29            sta   rsv_render_flags,u
   1562                            
   1563  4+1   758A E6   88 11            ldb   buf_prev_render_flags,x
   1564  3     758D 2A   0F               bpl   CSR_NextObject             >>
   1565                            
   1566  2     758F 8A   02               ora   #rsv_render_erasesprite_mas>>
   1567  4+1   7591 A7   C8 29            sta   rsv_render_flags,u
   1568                            
   1569  7     7594 10BE 7456             ldy   cur_ptr_sub_obj_erase      >>
   1570  5+3   7598 EF   A1               stu   ,y++
   1571  7     759A 10BF 7456             sty   cur_ptr_sub_obj_erase
   1572                            
   1573        759E               CSR_NextObject
   1574  5+1   759E EE   03               ldu   buf_priority_next_obj,x
   1575  6     75A0 1026 FFA3             lbne  CSR_ProcessEachPriorityLeve>>
   1576  5     75A4 39                    rts
   1577
   1578        75A5               CSR_CheckVerticalPosition
   1579  4+1   75A5 A6   C8 12            lda   x_pixel,u                  >>
   1580  4+1   75A8 A8   C8 2C            eora  rsv_image_center_offset,u  >>
   1581  2     75AB 84   01               anda  #$01                       >>
   1582  2     75AD 48                    asla                             >>
   1583  4+1   75AE E6   42               ldb   render_flags,u
   1584  2     75B0 C4   04               andb  #render_overlay_mask       >>
   1585  3     75B2 27   01               beq   CSR_NoOverlay
   1586  2     75B4 4C                    inca
   1587        75B5               CSR_NoOverlay
   1588  4+1   75B5 E6   A6               ldb   a,y
   1589  3     75B7 27   08               beq   CSR_NoDefinedFrame
   1590  4+1   75B9 31   A5               leay  b,y                        >>
   1591  6+1   75BB 10AF C8 30            sty   rsv_mapping_frame,u
   1592  3     75BF 20   16               bra CSR_CVP_Continue
   1593                            
   1594        75C1               CSR_NoDefinedFrame
   1595  2     75C1 84   01               anda  #$01                       >>
   1596  4+1   75C3 E6   A6               ldb   a,y
   1597  3     75C5 27   08               beq   CSR_NoFrameFound           >>
   1598  4+1   75C7 31   A5               leay  b,y                        >>
   1599  6+1   75C9 10AF C8 30            sty   rsv_mapping_frame,u
   1600  3     75CD 20   08               bra CSR_CVP_Continue
   1601                            
   1602        75CF               CSR_NoFrameFound
   1603  4     75CF 108E 0000             ldy   #$0000
   1604  6+1   75D3 10AF C8 30            sty   rsv_mapping_frame,u
   1605
   1606        75D7               CSR_CVP_Continue
   1607  4+1   75D7 E6   C8 13            ldb   y_pixel,u                  >>
   1608  6+1   75DA 10AE C8 2E            ldy   rsv_image_subset,u
   1609  4+1   75DE EB   25               addb  image_subset_y1_offset,y
   1610  2     75E0 C1   E3               cmpb  #screen_bottom
   1611  3     75E2 22   6B               bhi   CSR_SetOutOfRange
   1612  2     75E4 C1   1C               cmpb  #screen_top
   1613  3     75E6 25   67               blo   CSR_SetOutOfRange
   1614  4+1   75E8 E7   C8 33            stb   rsv_y1_pixel,u
   1615  6+1   75EB 10AE 4A               ldy   image_set,u
   1616  4+1   75EE EB   25               addb  image_y_size,y
   1617  2     75F0 C1   E3               cmpb  #screen_bottom
   1618  3     75F2 22   5B               bhi   CSR_SetOutOfRange
   1619  2     75F4 C1   1C               cmpb  #screen_top
   1620  3     75F6 25   57               blo   CSR_SetOutOfRange
   1621  4+1   75F8 E7   C8 35            stb   rsv_y2_pixel,u
   1622  4+1   75FB E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1623  3     75FE 25   4F               blo   CSR_SetOutOfRange
   1624                            
   1625  4+1   7600 A6   42               lda   render_flags,u             >>
   1626  2     7602 85   80               bita  #render_xloop_mask
   1627  3     7604 26   2B               bne   CSR_DontCheckXFrontier
   1628                            
   1629  4+1   7606 E6   C8 12            ldb   x_pixel,u
   1630  6+1   7609 10AE C8 2E            ldy   rsv_image_subset,u
   1631  4+1   760D EB   24               addb  image_subset_x1_offset,y
   1632  2     760F C1   CF               cmpb  #screen_right
   1633  3     7611 22   3C               bhi   CSR_SetOutOfRange
   1634  2     7613 C1   30               cmpb  #screen_left
   1635  3     7615 25   38               blo   CSR_SetOutOfRange
   1636  4+1   7617 E7   C8 32            stb   rsv_x1_pixel,u
   1637  6+1   761A 10AE 4A               ldy   image_set,u
   1638  4+1   761D EB   24               addb  image_x_size,y
   1639  2     761F C1   CF               cmpb  #screen_right
   1640  3     7621 22   2C               bhi   CSR_SetOutOfRange
   1641  2     7623 C1   30               cmpb  #screen_left
   1642  3     7625 25   28               blo   CSR_SetOutOfRange
   1643  4+1   7627 E7   C8 34            stb   rsv_x2_pixel,u
   1644  4+1   762A E1   C8 32            cmpb  rsv_x1_pixel,u             >>
   1645  3     762D 25   20               blo   CSR_SetOutOfRange
   1646                            
   1647  3     762F 20   14               bra   CSR_DontCheckXFrontier_end
   1648                            
   1649        7631               CSR_DontCheckXFrontier
   1650  4+1   7631 E6   C8 12            ldb   x_pixel,u
   1651  6+1   7634 10AE C8 2E            ldy   rsv_image_subset,u
   1652  4+1   7638 EB   24               addb  image_subset_x1_offset,y
   1653  4+1   763A E7   C8 32            stb   rsv_x1_pixel,u
   1654                            
   1655  6+1   763D 10AE 4A               ldy   image_set,u
   1656  4+1   7640 EB   24               addb  image_x_size,y
   1657  4+1   7642 E7   C8 34            stb   rsv_x2_pixel,u
   1658
   1659        7645               CSR_DontCheckXFrontier_end
   1660  4+1   7645 A6   C8 29            lda   rsv_render_flags,u
   1661  2     7648 84   F7               anda  #:rsv_render_outofrange_mas>>
   1662  4+1   764A A7   C8 29            sta   rsv_render_flags,u
   1663  3     764D 20   08               bra   CSR_CheckErase
   1664                            
   1665        764F               CSR_SetOutOfRange
   1666  4+1   764F A6   C8 29            lda   rsv_render_flags,u
   1667  2     7652 8A   08               ora   #rsv_render_outofrange_mask>>
   1668  4+1   7654 A7   C8 29            sta   rsv_render_flags,u
   1669
   1670        7657               CSR_CheckErase
   1671  6     7657 BF   7735             stx   CSR_CheckDraw+1
   1672  4+1   765A A6   00               lda   buf_priority,x
   1673  5     765C B1   7454             cmpa  cur_priority
   1674  6     765F 1026 00D1             lbne  CSR_CheckDraw
   1675                            
   1676  7     7663 10BE 7456             ldy   cur_ptr_sub_obj_erase
   1677                            
   1678  4+1   7667 A6   C8 29            lda   rsv_render_flags,u
   1679  2     766A 84   08               anda  #rsv_render_outofrange_mask>>
   1680  3     766C 27   09               beq   CSR_CheckErase_InRange
   1681  4+1   766E A6   88 11            lda   buf_prev_render_flags,x
   1682  6     7671 102A 010E             lbpl  CSR_SetEraseDrawFalse      >>
   1683  3     7675 20   20               bra   CSR_SetEraseTrue
   1684                            
   1685        7677               CSR_CheckErase_InRange
   1686  4+1   7677 A6   88 11            lda   buf_prev_render_flags,x
   1687  6     767A 102A 00AE             lbpl  CSR_SetEraseFalse          >>
   1688  5+1   767E EC   C8 12            ldd   xy_pixel,u
   1689  2     7681 44                    lsra                             >>
   1690  7+1   7682 10A3 0B               cmpd  buf_prev_xy_pixel,x
   1691  3     7685 26   10               bne   CSR_SetEraseTrue           >>
   1692  5+1   7687 EC   C8 30            ldd   rsv_mapping_frame,u
   1693  7+1   768A 10A3 07               cmpd  buf_prev_mapping_frame,x
   1694  3     768D 26   08               bne   CSR_SetEraseTrue           >>
   1695  4+1   768F A6   43               lda   priority,u
   1696  4+1   7691 A1   00               cmpa  buf_priority,x
   1697  3     7693 26   02               bne   CSR_SetEraseTrue           >>
   1698  3     7695 20   11               bra   CSR_SubEraseSpriteSearchIni>>
   1699                            
   1700        7697               CSR_SetEraseTrue
   1701  4+1   7697 A6   C8 29            lda   rsv_render_flags,u
   1702  2     769A 8A   02               ora   #rsv_render_erasesprite_mas>>
   1703  4+1   769C A7   C8 29            sta   rsv_render_flags,u
   1704                            
   1705  5+3   769F EF   A1               stu   ,y++
   1706  7     76A1 10BF 7456             sty   cur_ptr_sub_obj_erase
   1707                            
   1708  5     76A5 16   008C             lbra   CSR_CheckDraw
   1709                            
   1710        76A8               CSR_SubEraseSpriteSearchInit
   1711
   1712                                   * search a collision with a sprit>>
   1713                                   * the sprite under should have to>>
   1714                                   * in this case it forces the refr>>
   1715                                   * as a sub loop, this should be o>>
   1716                                   * there are two lists because a s>>
   1717                                   * and displayed at another positi>>
   1718
   1719  6     76A8 BE   7456             ldx   cur_ptr_sub_obj_erase
   1720  5     76AB B6   6137             lda   Glb_Cur_Wrk_Screen_Id      >>
   1721  3     76AE 26   28               bne   CSR_SubEraseSearchB1
   1722                            
   1723        76B0               CSR_SubEraseSearchB0
   1724  4     76B0 8C   65AA             cmpx  #Tbl_Sub_Object_Erase
   1725  3     76B3 27   4B               beq   CSR_SubDrawSpriteSearchInit>>
   1726  6+3   76B5 10AE 83               ldy   ,--x
   1727                            
   1728        76B8               CSR_SubEraseCheckCollisionB0
   1729  5+1   76B8 EC   A8 43            ldd   rsv_prev_xy1_pixel_0,y     >>
   1730  4+1   76BB A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1731  3     76BE 22   F0               bhi   CSR_SubEraseSearchB0
   1732  4+1   76C0 E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1733  3     76C3 22   EB               bhi   CSR_SubEraseSearchB0
   1734  5+1   76C5 EC   A8 45            ldd   rsv_prev_xy2_pixel_0,y     >>
   1735  4+1   76C8 A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1736  3     76CB 25   E3               blo   CSR_SubEraseSearchB0
   1737  4+1   76CD E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1738  3     76D0 25   DE               blo   CSR_SubEraseSearchB0
   1739                            
   1740  7     76D2 10BE 7456             ldy   cur_ptr_sub_obj_erase
   1741  3     76D6 20   BF               bra   CSR_SetEraseTrue           >>
   1742
   1743        76D8               CSR_SubEraseSearchB1
   1744  4     76D8 8C   65AA             cmpx  #Tbl_Sub_Object_Erase
   1745  3     76DB 27   23               beq   CSR_SubDrawSpriteSearchInit>>
   1746  6+3   76DD 10AE 83               ldy   ,--x
   1747                            
   1748        76E0               CSR_SubEraseCheckCollisionB1
   1749  5+1   76E0 EC   A8 55            ldd   rsv_prev_xy1_pixel_1,y     >>
   1750  4+1   76E3 A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1751  3     76E6 22   F0               bhi   CSR_SubEraseSearchB1
   1752  4+1   76E8 E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1753  3     76EB 22   EB               bhi   CSR_SubEraseSearchB1
   1754  5+1   76ED EC   A8 57            ldd   rsv_prev_xy2_pixel_1,y     >>
   1755  4+1   76F0 A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1756  3     76F3 25   E3               blo   CSR_SubEraseSearchB1
   1757  4+1   76F5 E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1758  3     76F8 25   DE               blo   CSR_SubEraseSearchB1
   1759                            
   1760  7     76FA 10BE 7456             ldy   cur_ptr_sub_obj_erase
   1761  3     76FE 20   97               bra   CSR_SetEraseTrue           >>
   1762
   1763        7700               CSR_SubDrawSpriteSearchInit
   1764  6     7700 BE   7458             ldx   cur_ptr_sub_obj_draw
   1765                            
   1766        7703               CSR_SubDrawSearch
   1767  4     7703 8C   65EA             cmpx  #Tbl_Sub_Object_Draw
   1768  3     7706 27   24               beq   CSR_SetEraseFalse          >>
   1769  6+3   7708 10AE 83               ldy   ,--x
   1770
   1771        770B               CSR_SubDrawCheckCollision
   1772  5+1   770B EC   A8 32            ldd   rsv_xy1_pixel,y            >>
   1773  4+1   770E A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1774  3     7711 22   F0               bhi   CSR_SubDrawSearch
   1775  4+1   7713 E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1776  3     7716 22   EB               bhi   CSR_SubDrawSearch
   1777  5+1   7718 EC   A8 34            ldd   rsv_xy2_pixel,y            >>
   1778  4+1   771B A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1779  3     771E 25   E3               blo   CSR_SubDrawSearch
   1780  4+1   7720 E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1781  3     7723 25   DE               blo   CSR_SubDrawSearch
   1782                            
   1783  7     7725 10BE 7456             ldy   cur_ptr_sub_obj_erase
   1784  5     7729 16   FF6B             lbra  CSR_SetEraseTrue           >>
   1785
   1786        772C               CSR_SetEraseFalse
   1787  4+1   772C A6   C8 29            lda   rsv_render_flags,u
   1788  2     772F 84   FD               anda  #:rsv_render_erasesprite_ma>>
   1789  4+1   7731 A7   C8 29            sta   rsv_render_flags,u
   1790                            
   1791        7734               CSR_CheckDraw
   1792  3     7734 8E   FFFF             ldx   #$FFFF                     >>
   1793  4+1   7737 A6   43               lda   priority,u
   1794  5     7739 B1   7454             cmpa  cur_priority
   1795  6     773C 1026 FE5E             lbne  CSR_NextObject
   1796                            
   1797  7     7740 10BE 7458             ldy   cur_ptr_sub_obj_draw
   1798                            
   1799  4+1   7744 A6   C8 29            lda   rsv_render_flags,u
   1800  2     7747 84   08               anda  #rsv_render_outofrange_mask>>
   1801  3     7749 26   40               bne   CSR_SetDrawFalse           >>
   1802  5+1   774B EC   C8 30            ldd   rsv_mapping_frame,u
   1803  3     774E 27   3B               beq   CSR_SetDrawFalse           >>
   1804  4+1   7750 A6   42               lda   render_flags,u
   1805  2     7752 84   20               anda  #render_hide_mask
   1806  3     7754 26   35               bne   CSR_SetDrawFalse           >>
   1807                            
   1808        7756               CSR_SetDrawTrue
   1809  4+1   7756 A6   C8 29            lda   rsv_render_flags,u
   1810  2     7759 8A   04               ora   #rsv_render_displaysprite_m>>
   1811  4+1   775B A7   C8 29            sta   rsv_render_flags,u
   1812                            
   1813  2     775E 85   02               bita  #rsv_render_erasesprite_mas>>
   1814  3     7760 27   02               beq   CSR_SDT1
   1815  3     7762 20   07               bra   CSR_SDT2
   1816        7764               CSR_SDT1
   1817  4+1   7764 E6   88 11            ldb   buf_prev_render_flags,x
   1818  3     7767 2B   0D               bmi   CSR_SetHide
   1819  3     7769 20   05               bra   CSR_SDT3
   1820        776B               CSR_SDT2
   1821  4+1   776B E6   88 11            ldb   buf_prev_render_flags,x
   1822  3     776E 2A   06               bpl   CSR_SetHide
   1823        7770               CSR_SDT3
   1824  5+3   7770 EF   A1               stu   ,y++
   1825  7     7772 10BF 7458             sty   cur_ptr_sub_obj_draw       >>
   1826
   1827        7776               CSR_SetHide
   1828  4+1   7776 A6   42               lda   render_flags,u
   1829  2     7778 8A   20               ora   #render_hide_mask          >>
   1830  4+1   777A A7   42               sta   render_flags,u
   1831                            
   1832  5+1   777C EE   03               ldu   buf_priority_next_obj,x
   1833  6     777E 1026 FDC5             lbne  CSR_ProcessEachPriorityLeve>>
   1834  5     7782 39                    rts
   1835
   1836        7783               CSR_SetEraseDrawFalse
   1837  4+1   7783 A6   C8 29            lda   rsv_render_flags,u
   1838  2     7786 84   FD               anda  #:rsv_render_erasesprite_ma>>
   1839  4+1   7788 A7   C8 29            sta   rsv_render_flags,u
   1840
   1841        778B               CSR_SetDrawFalse
   1842  4+1   778B A6   C8 29            lda   rsv_render_flags,u
   1843  2     778E 84   FB               anda  #:rsv_render_displaysprite_>>
   1844  4+1   7790 A7   C8 29            sta   rsv_render_flags,u
   1845                            
   1846  5+1   7793 EE   03               ldu   buf_priority_next_obj,x
   1847  6     7795 1026 FDAE             lbne   CSR_ProcessEachPriorityLev>>
   1848  5     7799 39                    rts
   1849
   1850
   1851                                   INCLUD ERASESPR
   1852                           * --------------------------------------->>
   1853                           * EraseSprites
   1854                           * ------------
   1855                           * Subroutine to erase sprites on screen
   1856                           * Read Display Priority Structure (front >>
   1857                           * priority: 0 - unregistred
   1858                           * priority: 1 - register non moving overl>>
   1859                           * priority; 2-8 - register moving sprite >>
   1860                           *
   1861                           * input REG : none
   1862                           * --------------------------------------->>
   1863                            
   1864        779A               EraseSprites
   1865
   1866        779A               ESP_Start
   1867  5     779A B6   6137             lda   Glb_Cur_Wrk_Screen_Id      >>
   1868  3     779D 26   69               bne   ESP_P1B1
   1869
   1870        779F               ESP_P1B0
   1871  6     779F FE   64F2             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1872  3     77A2 27   08               beq   ESP_P2B0
   1873  2     77A4 86   01               lda   #$01
   1874  5     77A6 B7   7875             sta   ESP_CheckPriorityB0+1
   1875  8     77A9 BD   7871             jsr   ESP_ProcessEachPriorityLeve>>
   1876        77AC               ESP_P2B0
   1877  6     77AC FE   64F4             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1878  3     77AF 27   08               beq   ESP_P3B0
   1879  2     77B1 86   02               lda   #$02
   1880  5     77B3 B7   7875             sta   ESP_CheckPriorityB0+1
   1881  8     77B6 BD   7871             jsr   ESP_ProcessEachPriorityLeve>>
   1882        77B9               ESP_P3B0
   1883  6     77B9 FE   64F6             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1884  3     77BC 27   08               beq   ESP_P4B0
   1885  2     77BE 86   03               lda   #$03
   1886  5     77C0 B7   7875             sta   ESP_CheckPriorityB0+1
   1887  8     77C3 BD   7871             jsr   ESP_ProcessEachPriorityLeve>>
   1888        77C6               ESP_P4B0
   1889  6     77C6 FE   64F8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1890  3     77C9 27   08               beq   ESP_P5B0
   1891  2     77CB 86   04               lda   #$04
   1892  5     77CD B7   7875             sta   ESP_CheckPriorityB0+1
   1893  8     77D0 BD   7871             jsr   ESP_ProcessEachPriorityLeve>>
   1894        77D3               ESP_P5B0
   1895  6     77D3 FE   64FA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1896  3     77D6 27   08               beq   ESP_P6B0
   1897  2     77D8 86   05               lda   #$05
   1898  5     77DA B7   7875             sta   ESP_CheckPriorityB0+1
   1899  8     77DD BD   7871             jsr   ESP_ProcessEachPriorityLeve>>
   1900        77E0               ESP_P6B0
   1901  6     77E0 FE   64FC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1902  3     77E3 27   08               beq   ESP_P7B0
   1903  2     77E5 86   06               lda   #$06
   1904  5     77E7 B7   7875             sta   ESP_CheckPriorityB0+1
   1905  8     77EA BD   7871             jsr   ESP_ProcessEachPriorityLeve>>
   1906        77ED               ESP_P7B0
   1907  6     77ED FE   64FE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1908  3     77F0 27   08               beq   ESP_P8B0
   1909  2     77F2 86   07               lda   #$07
   1910  5     77F4 B7   7875             sta   ESP_CheckPriorityB0+1
   1911  8     77F7 BD   7871             jsr   ESP_ProcessEachPriorityLeve>>
   1912        77FA               ESP_P8B0
   1913  6     77FA FE   6500             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1914  3     77FD 27   08               beq   ESP_rtsB0
   1915  2     77FF 86   08               lda   #$08
   1916  5     7801 B7   7875             sta   ESP_CheckPriorityB0+1
   1917  8     7804 BD   7871             jsr   ESP_ProcessEachPriorityLeve>>
   1918        7807               ESP_rtsB0
   1919  5     7807 39                    rts
   1920                            
   1921        7808               ESP_P1B1
   1922  6     7808 FE   6558             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1923  3     780B 27   08               beq   ESP_P2B1
   1924  2     780D 86   01               lda   #$01
   1925  5     780F B7   78C6             sta   ESP_CheckPriorityB1+1
   1926  8     7812 BD   78C2             jsr   ESP_ProcessEachPriorityLeve>>
   1927        7815               ESP_P2B1
   1928  6     7815 FE   655A             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1929  3     7818 27   08               beq   ESP_P3B1
   1930  2     781A 86   02               lda   #$02
   1931  5     781C B7   78C6             sta   ESP_CheckPriorityB1+1
   1932  8     781F BD   78C2             jsr   ESP_ProcessEachPriorityLeve>>
   1933        7822               ESP_P3B1
   1934  6     7822 FE   655C             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1935  3     7825 27   08               beq   ESP_P4B1
   1936  2     7827 86   03               lda   #$03
   1937  5     7829 B7   78C6             sta   ESP_CheckPriorityB1+1
   1938  8     782C BD   78C2             jsr   ESP_ProcessEachPriorityLeve>>
   1939        782F               ESP_P4B1
   1940  6     782F FE   655E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1941  3     7832 27   08               beq   ESP_P5B1
   1942  2     7834 86   04               lda   #$04
   1943  5     7836 B7   78C6             sta   ESP_CheckPriorityB1+1
   1944  8     7839 BD   78C2             jsr   ESP_ProcessEachPriorityLeve>>
   1945        783C               ESP_P5B1
   1946  6     783C FE   6560             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1947  3     783F 27   08               beq   ESP_P6B1
   1948  2     7841 86   05               lda   #$05
   1949  5     7843 B7   78C6             sta   ESP_CheckPriorityB1+1
   1950  8     7846 BD   78C2             jsr   ESP_ProcessEachPriorityLeve>>
   1951        7849               ESP_P6B1
   1952  6     7849 FE   6562             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1953  3     784C 27   08               beq   ESP_P7B1
   1954  2     784E 86   06               lda   #$06
   1955  5     7850 B7   78C6             sta   ESP_CheckPriorityB1+1
   1956  8     7853 BD   78C2             jsr   ESP_ProcessEachPriorityLeve>>
   1957        7856               ESP_P7B1
   1958  6     7856 FE   6564             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1959  3     7859 27   08               beq   ESP_P8B1
   1960  2     785B 86   07               lda   #$07
   1961  5     785D B7   78C6             sta   ESP_CheckPriorityB1+1
   1962  8     7860 BD   78C2             jsr   ESP_ProcessEachPriorityLeve>>
   1963        7863               ESP_P8B1
   1964  6     7863 FE   6566             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1965  3     7866 27   08               beq   ESP_rtsB1
   1966  2     7868 86   08               lda   #$08
   1967  5     786A B7   78C6             sta   ESP_CheckPriorityB1+1
   1968  8     786D BD   78C2             jsr   ESP_ProcessEachPriorityLeve>>
   1969        7870               ESP_rtsB1
   1970  5     7870 39                    rts
   1971
   1972                           * *******
   1973                           * BUFFER0
   1974                           * *******
   1975
   1976        7871               ESP_ProcessEachPriorityLevelB0
   1977  4+1   7871 A6   C8 36            lda   rsv_priority_0,u
   1978                            
   1979        7874               ESP_CheckPriorityB0
   1980  2     7874 81   00               cmpa  #0                         >>
   1981  3     7876 26   44               bne   ESP_NextObjectB0           >>
   1982                            
   1983        7878               ESP_UnsetCheckRefreshB0
   1984  4+1   7878 A6   C8 29            lda   rsv_render_flags,u
   1985  4+1   787B E6   42               ldb   render_flags,u
   1986  2     787D C4   08               andb  #render_motionless_mask
   1987  3     787F 26   05               bne   ESP_CheckEraseB0
   1988  2     7881 84   FE               anda  #:rsv_render_checkrefresh_m>>
   1989  4+1   7883 A7   C8 29            sta   rsv_render_flags,u
   1990                            
   1991        7886               ESP_CheckEraseB0
   1992  2     7886 84   02               anda  #rsv_render_erasesprite_mas>>
   1993  3     7888 27   32               beq   ESP_NextObjectB0
   1994  4+1   788A E6   C8 47            ldb   rsv_prev_render_flags_0,u
   1995  2     788D C4   01               andb  #rsv_prev_render_overlay_ma>>
   1996  3     788F 26   23               bne   ESP_UnsetOnScreenFlagB0
   1997                            
   1998        7891               ESP_CallEraseRoutineB0
   1999  6     7891 FF   78A5             stu   ESP_CallEraseRoutineB0_00+1>>
   2000  5+1   7894 AE   C8 3D            ldx   rsv_prev_mapping_frame_0,u >>
   2001  4+1   7897 A6   03               lda   page_erase_routine,x
   2002  5     7899 B7   E7E5             sta   $E7E5                      >>
   2003  5+1   789C EE   C8 3F            ldu   rsv_bgdata_0,u             >>
   2004  7+4   789F AD   98 04            jsr   [erase_routine,x]          >>
   2005  4+0   78A2 31   C4               leay  ,u                         >>
   2006        78A4               ESP_CallEraseRoutineB0_00
   2007  3     78A4 CE   0000             ldu   #$0000                     >>
   2008  5+1   78A7 EC   C8 3F            ldd   rsv_bgdata_0,u             >>
   2009  4     78AA 83   0010             subd  #16
   2010  2     78AD C4   C0               andb  #256-cell_size             >>
   2011  6     78AF 1F   01               tfr   d,x                        >>
   2012                            
   2013        78B1               ESP_FreeEraseBufferB0
   2014  8     78B1 BD   7C38             jsr   BgBufferFree               >>
   2015                            
   2016        78B4               ESP_UnsetOnScreenFlagB0
   2017  4+1   78B4 A6   C8 47            lda   rsv_prev_render_flags_0,u
   2018  2     78B7 84   7F               anda  #:rsv_prev_render_onscreen_>>
   2019  4+1   78B9 A7   C8 47            sta   rsv_prev_render_flags_0,u
   2020
   2021        78BC               ESP_NextObjectB0
   2022  5+1   78BC EE   C8 37            ldu   rsv_priority_prev_obj_0,u
   2023  3     78BF 26   B0               bne   ESP_ProcessEachPriorityLeve>>
   2024  5     78C1 39                    rts
   2025
   2026                           * *******
   2027                           * BUFFER1
   2028                           * *******
   2029                            
   2030        78C2               ESP_ProcessEachPriorityLevelB1
   2031  4+1   78C2 A6   C8 48            lda   rsv_priority_1,u
   2032                            
   2033        78C5               ESP_CheckPriorityB1
   2034  2     78C5 81   00               cmpa  #0                         >>
   2035  3     78C7 26   44               bne   ESP_NextObjectB1           >>
   2036                            
   2037        78C9               ESP_UnsetCheckRefreshB1
   2038  4+1   78C9 A6   C8 29            lda   rsv_render_flags,u
   2039  4+1   78CC E6   42               ldb   render_flags,u
   2040  2     78CE C4   08               andb  #render_motionless_mask
   2041  3     78D0 26   05               bne   ESP_CheckEraseB1
   2042  2     78D2 84   FE               anda  #:rsv_render_checkrefresh_m>>
   2043  4+1   78D4 A7   C8 29            sta   rsv_render_flags,u
   2044                            
   2045        78D7               ESP_CheckEraseB1
   2046  2     78D7 84   02               anda  #rsv_render_erasesprite_mas>>
   2047  3     78D9 27   32               beq   ESP_NextObjectB1
   2048  4+1   78DB E6   C8 59            ldb   rsv_prev_render_flags_1,u
   2049  2     78DE C4   01               andb  #rsv_prev_render_overlay_ma>>
   2050  3     78E0 26   23               bne   ESP_UnsetOnScreenFlagB1
   2051                            
   2052        78E2               ESP_CallEraseRoutineB1
   2053  6     78E2 FF   78F6             stu   ESP_CallEraseRoutineB1_00+1>>
   2054  5+1   78E5 AE   C8 4F            ldx   rsv_prev_mapping_frame_1,u >>
   2055  4+1   78E8 A6   03               lda   page_erase_routine,x
   2056  5     78EA B7   E7E5             sta   $E7E5                      >>
   2057  5+1   78ED EE   C8 51            ldu   rsv_bgdata_1,u             >>
   2058  7+4   78F0 AD   98 04            jsr   [erase_routine,x]          >>
   2059  4+0   78F3 31   C4               leay  ,u                         >>
   2060        78F5               ESP_CallEraseRoutineB1_00
   2061  3     78F5 CE   0000             ldu   #$0000                     >>
   2062  5+1   78F8 EC   C8 51            ldd   rsv_bgdata_1,u             >>
   2063  4     78FB 83   0010             subd  #16
   2064  2     78FE C4   C0               andb  #256-cell_size             >>
   2065  6     7900 1F   01               tfr   d,x                        >>
   2066                            
   2067        7902               ESP_FreeEraseBufferB1
   2068  8     7902 BD   7C38             jsr   BgBufferFree               >>
   2069                            
   2070        7905               ESP_UnsetOnScreenFlagB1
   2071  4+1   7905 A6   C8 59            lda   rsv_prev_render_flags_1,u
   2072  2     7908 84   7F               anda  #:rsv_prev_render_onscreen_>>
   2073  4+1   790A A7   C8 59            sta   rsv_prev_render_flags_1,u
   2074                            
   2075        790D               ESP_NextObjectB1
   2076  5+1   790D EE   C8 49            ldu   rsv_priority_prev_obj_1,u
   2077  3     7910 26   B0               bne   ESP_ProcessEachPriorityLeve>>
   2078  5     7912 39                    rts
   2079
   2080                                   INCLUD UNSETDSP
   2081                           * --------------------------------------->>
   2082                           * UnsetDisplayPriority
   2083                           * --------------------
   2084                           * Subroutine to unset sprites in Display >>
   2085                           * Read Lst_Priority_Unset_0/1
   2086                           *
   2087                           * input REG : none
   2088                           * --------------------------------------->>
   2089                            
   2090        7913               UnsetDisplayPriority
   2091
   2092        7913               UDP_Start
   2093  5     7913 B6   6137             lda   Glb_Cur_Wrk_Screen_Id      >>
   2094  3     7916 26   6D               bne   UDP_B1
   2095                            
   2096        7918               UDP_B0
   2097  3     7918 8E   6504             ldx   #Lst_Priority_Unset_0+2
   2098                            
   2099        791B               UDP_CheckEndB0
   2100  7     791B BC   6502             cmpx  Lst_Priority_Unset_0       >>
   2101  3     791E 26   07               bne   UDP_CheckPrioPrevB0
   2102                            
   2103        7920               UDP_InitListB0
   2104  3     7920 8E   6504             ldx   #Lst_Priority_Unset_0+2
   2105  6     7923 BF   6502             stx   Lst_Priority_Unset_0       >>
   2106  5     7926 39                    rts
   2107                            
   2108        7927               UDP_CheckPrioPrevB0
   2109  5+3   7927 EE   81               ldu   ,x++
   2110  5+1   7929 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2111  3     792C 26   11               bne   UDP_ChainPrevB0
   2112                            
   2113  4+1   792E A6   C8 36            lda   rsv_priority_0,u
   2114  2     7931 48                    lsla
   2115  4     7932 108E 64DE             ldy   #Tbl_Priority_First_Entry_0>>
   2116  4+1   7936 31   A6               leay  a,y
   2117  5+1   7938 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2118  5+0   793B ED   A4               std   ,y
   2119  3     793D 20   0A               bra   UDP_CheckPrioNextB0
   2120                            
   2121        793F               UDP_ChainPrevB0
   2122  5+1   793F EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2123  6+1   7942 10AE C8 37            ldy   rsv_priority_prev_obj_0,u
   2124  5+1   7946 ED   A8 39            std   rsv_priority_next_obj_0,y
   2125
   2126        7949               UDP_CheckPrioNextB0
   2127  5+1   7949 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2128  3     794C 26   11               bne   UDP_ChainNextB0
   2129
   2130  4+1   794E A6   C8 36            lda   rsv_priority_0,u
   2131  2     7951 48                    lsla
   2132  4     7952 108E 64F0             ldy   #Tbl_Priority_Last_Entry_0
   2133  4+1   7956 31   A6               leay  a,y
   2134  5+1   7958 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2135  5+0   795B ED   A4               std   ,y
   2136  3     795D 20   0A               bra   UDP_CheckDeleteB0
   2137                            
   2138        795F               UDP_ChainNextB0
   2139  5+1   795F EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2140  6+1   7962 10AE C8 39            ldy   rsv_priority_next_obj_0,u
   2141  5+1   7966 ED   A8 37            std   rsv_priority_prev_obj_0,y
   2142                            
   2143        7969               UDP_CheckDeleteB0
   2144  4+1   7969 A6   42               lda   render_flags,u
   2145  2     796B 84   40               anda  #render_todelete_mask
   2146  3     796D 27   0F               beq   UDP_SetNewPrioB0
   2147  4+1   796F A6   C8 47            lda   rsv_prev_render_flags_0,u
   2148  3     7972 2B   0A               bmi   UDP_SetNewPrioB0
   2149  4+1   7974 A6   C8 59            lda   rsv_prev_render_flags_1,u
   2150  3     7977 2B   05               bmi   UDP_SetNewPrioB0
   2151  8     7979 BD   7421             jsr   ClearObj
   2152  3     797C 20   9D               bra   UDP_CheckEndB0
   2153                            
   2154        797E               UDP_SetNewPrioB0
   2155  4+1   797E A6   43               lda   priority,u
   2156  4+1   7980 A7   C8 36            sta   rsv_priority_0,u
   2157  3     7983 20   96               bra   UDP_CheckEndB0
   2158
   2159        7985               UDP_B1
   2160  3     7985 8E   656A             ldx   #Lst_Priority_Unset_1+2
   2161                            
   2162        7988               UDP_CheckEndB1
   2163  7     7988 BC   6568             cmpx  Lst_Priority_Unset_1       >>
   2164  3     798B 26   07               bne   UDP_CheckPrioPrevB1
   2165                            
   2166        798D               UDP_InitListB1
   2167  3     798D 8E   656A             ldx   #Lst_Priority_Unset_1+2
   2168  6     7990 BF   6568             stx   Lst_Priority_Unset_1       >>
   2169  5     7993 39                    rts
   2170                            
   2171        7994               UDP_CheckPrioPrevB1
   2172  5+3   7994 EE   81               ldu   ,x++
   2173  5+1   7996 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2174  3     7999 26   11               bne   UDP_ChainPrevB1
   2175                            
   2176  4+1   799B A6   C8 48            lda   rsv_priority_1,u
   2177  2     799E 48                    lsla
   2178  4     799F 108E 6544             ldy   #Tbl_Priority_First_Entry_1>>
   2179  4+1   79A3 31   A6               leay  a,y
   2180  5+1   79A5 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2181  5+0   79A8 ED   A4               std   ,y
   2182  3     79AA 20   0A               bra   UDP_CheckPrioNextB1
   2183                            
   2184        79AC               UDP_ChainPrevB1
   2185  5+1   79AC EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2186  6+1   79AF 10AE C8 49            ldy   rsv_priority_prev_obj_1,u
   2187  5+1   79B3 ED   A8 4B            std   rsv_priority_next_obj_1,y
   2188
   2189        79B6               UDP_CheckPrioNextB1
   2190  5+1   79B6 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2191  3     79B9 26   11               bne   UDP_ChainNextB1
   2192
   2193  4+1   79BB A6   C8 48            lda   rsv_priority_1,u
   2194  2     79BE 48                    lsla
   2195  4     79BF 108E 6556             ldy   #Tbl_Priority_Last_Entry_1
   2196  4+1   79C3 31   A6               leay  a,y
   2197  5+1   79C5 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2198  5+0   79C8 ED   A4               std   ,y
   2199  3     79CA 20   0A               bra   UDP_CheckDeleteB1
   2200                            
   2201        79CC               UDP_ChainNextB1
   2202  5+1   79CC EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2203  6+1   79CF 10AE C8 4B            ldy   rsv_priority_next_obj_1,u
   2204  5+1   79D3 ED   A8 49            std   rsv_priority_prev_obj_1,y
   2205                            
   2206        79D6               UDP_CheckDeleteB1
   2207  4+1   79D6 A6   42               lda   render_flags,u
   2208  2     79D8 84   40               anda  #render_todelete_mask
   2209  3     79DA 27   0F               beq   UDP_SetNewPrioB1
   2210  4+1   79DC A6   C8 47            lda   rsv_prev_render_flags_0,u
   2211  3     79DF 2B   0A               bmi   UDP_SetNewPrioB1
   2212  4+1   79E1 A6   C8 59            lda   rsv_prev_render_flags_1,u
   2213  3     79E4 2B   05               bmi   UDP_SetNewPrioB1
   2214  8     79E6 BD   7421             jsr   ClearObj
   2215  3     79E9 20   9D               bra   UDP_CheckEndB1
   2216                            
   2217        79EB               UDP_SetNewPrioB1
   2218  4+1   79EB A6   43               lda   priority,u
   2219  4+1   79ED A7   C8 48            sta   rsv_priority_1,u
   2220  3     79F0 20   96               bra   UDP_CheckEndB1
   2221
   2222                                   INCLUD DRAWSPR
   2223                           * --------------------------------------->>
   2224                           * DrawSprites
   2225                           * ------------
   2226                           * Subroutine to draw sprites on screen
   2227                           * Read Display Priority Structure (back t>>
   2228                           * priority: 0 - unregistred
   2229                           * priority: 1 - register non moving overl>>
   2230                           * priority; 2-8 - register moving sprite >>
   2231                           *
   2232                           * input REG : none
   2233                           * --------------------------------------->>
   2234                            
   2235        79F2               DrawSprites
   2236
   2237        79F2               DRS_Start
   2238  5     79F2 B6   6137             lda   Glb_Cur_Wrk_Screen_Id      >>
   2239  3     79F5 26   41               bne   DRS_P8B1
   2240                            
   2241        79F7               DRS_P8B0
   2242  6     79F7 BE   64EE             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2243  3     79FA 27   03               beq   DRS_P7B0
   2244  8     79FC BD   7A79             jsr   DRS_ProcessEachPriorityLeve>>
   2245        79FF               DRS_P7B0
   2246  6     79FF BE   64EC             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2247  3     7A02 27   03               beq   DRS_P6B0
   2248  8     7A04 BD   7A79             jsr   DRS_ProcessEachPriorityLeve>>
   2249        7A07               DRS_P6B0
   2250  6     7A07 BE   64EA             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2251  3     7A0A 27   03               beq   DRS_P5B0
   2252  8     7A0C BD   7A79             jsr   DRS_ProcessEachPriorityLeve>>
   2253        7A0F               DRS_P5B0
   2254  6     7A0F BE   64E8             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2255  3     7A12 27   03               beq   DRS_P4B0
   2256  8     7A14 BD   7A79             jsr   DRS_ProcessEachPriorityLeve>>
   2257        7A17               DRS_P4B0
   2258  6     7A17 BE   64E6             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2259  3     7A1A 27   03               beq   DRS_P3B0
   2260  8     7A1C BD   7A79             jsr   DRS_ProcessEachPriorityLeve>>
   2261        7A1F               DRS_P3B0
   2262  6     7A1F BE   64E4             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2263  3     7A22 27   03               beq   DRS_P2B0
   2264  8     7A24 BD   7A79             jsr   DRS_ProcessEachPriorityLeve>>
   2265        7A27               DRS_P2B0
   2266  6     7A27 BE   64E2             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2267  3     7A2A 27   03               beq   DRS_P1B0
   2268  8     7A2C BD   7A79             jsr   DRS_ProcessEachPriorityLeve>>
   2269        7A2F               DRS_P1B0
   2270  6     7A2F BE   64E0             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2271  3     7A32 27   03               beq   DRS_rtsB0
   2272  8     7A34 BD   7A79             jsr   DRS_ProcessEachPriorityLeve>>
   2273        7A37               DRS_rtsB0
   2274  5     7A37 39                    rts
   2275                            
   2276        7A38               DRS_P8B1
   2277  6     7A38 BE   6554             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2278  3     7A3B 27   03               beq   DRS_P7B1
   2279  8     7A3D BD   7B48             jsr   DRS_ProcessEachPriorityLeve>>
   2280        7A40               DRS_P7B1
   2281  6     7A40 BE   6552             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2282  3     7A43 27   03               beq   DRS_P6B1
   2283  8     7A45 BD   7B48             jsr   DRS_ProcessEachPriorityLeve>>
   2284        7A48               DRS_P6B1
   2285  6     7A48 BE   6550             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2286  3     7A4B 27   03               beq   DRS_P5B1
   2287  8     7A4D BD   7B48             jsr   DRS_ProcessEachPriorityLeve>>
   2288        7A50               DRS_P5B1
   2289  6     7A50 BE   654E             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2290  3     7A53 27   03               beq   DRS_P4B1
   2291  8     7A55 BD   7B48             jsr   DRS_ProcessEachPriorityLeve>>
   2292        7A58               DRS_P4B1
   2293  6     7A58 BE   654C             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2294  3     7A5B 27   03               beq   DRS_P3B1
   2295  8     7A5D BD   7B48             jsr   DRS_ProcessEachPriorityLeve>>
   2296        7A60               DRS_P3B1
   2297  6     7A60 BE   654A             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2298  3     7A63 27   03               beq   DRS_P2B1
   2299  8     7A65 BD   7B48             jsr   DRS_ProcessEachPriorityLeve>>
   2300        7A68               DRS_P2B1
   2301  6     7A68 BE   6548             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2302  3     7A6B 27   03               beq   DRS_P1B1
   2303  8     7A6D BD   7B48             jsr   DRS_ProcessEachPriorityLeve>>
   2304        7A70               DRS_P1B1
   2305  6     7A70 BE   6546             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2306  3     7A73 27   03               beq   DRS_rtsB1
   2307  8     7A75 BD   7B48             jsr   DRS_ProcessEachPriorityLeve>>
   2308        7A78               DRS_rtsB1
   2309  5     7A78 39                    rts
   2310
   2311        7A79               DRS_ProcessEachPriorityLevelB0
   2312  4+1   7A79 A6   88 29            lda   rsv_render_flags,x
   2313  2     7A7C 84   04               anda  #rsv_render_displaysprite_m>>
   2314  3     7A7E 27   6A               beq   DRS_NextObjectB0
   2315  4+1   7A80 A6   88 47            lda   rsv_prev_render_flags_0,x
   2316  3     7A83 2B   65               bmi   DRS_NextObjectB0
   2317  4+1   7A85 A6   02               lda   render_flags,x
   2318  2     7A87 84   04               anda  #render_overlay_mask
   2319  3     7A89 26   67               bne   DRS_DrawWithoutBackupB0
   2320  5+1   7A8B EE   88 30            ldu   rsv_mapping_frame,x
   2321  4+1   7A8E A6   46               lda   erase_nb_cell,u
   2322  8     7A90 BD   7BE5             jsr   BgBufferAlloc              >>
   2323  5     7A93 108C 0000             cmpy  #$0000                     >>
   2324  3     7A97 27   51               beq   DRS_NextObjectB0           >>
   2325  5+1   7A99 EC   88 12            ldd   xy_pixel,x                 >>
   2326  4+1   7A9C A0   88 2C            suba  rsv_image_center_offset,x
   2327  8     7A9F BD   7B16             jsr   DRS_XYToAddress
   2328                           *        ldu   rsv_image_subset,x
   2329                           *        stu   rsv_prev_image_subset_0,x
   2330  5+1   7AA2 EE   88 30            ldu   rsv_mapping_frame,x        >>
   2331  5+1   7AA5 EF   88 3D            stu   rsv_prev_mapping_frame_0,x >>
   2332  4+1   7AA8 A6   40               lda   page_draw_routine,u
   2333  5     7AAA B7   E7E5             sta   $E7E5                      >>
   2334  6     7AAD BF   7ABE             stx   DRS_dyn3B0+1               >>
   2335  5+1   7AB0 AE   41               ldx   draw_routine,u
   2336  4+0   7AB2 33   A4               leau  ,y                         >>
   2337  4     7AB4 108E 613E             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2338  6     7AB8 FC   613C             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2339  7+0   7ABB AD   84               jsr   ,x                         >>
   2340        7ABD               DRS_dyn3B0
   2341  3     7ABD 8E   0000             ldx   #$0000                     >>
   2342  5+1   7AC0 EF   88 3F            stu   rsv_bgdata_0,x             >>
   2343  5+1   7AC3 EC   88 12            ldd   xy_pixel,x                 >>
   2344  2     7AC6 44                    lsra                             >>
   2345  5+1   7AC7 ED   88 41            std   rsv_prev_xy_pixel_0,x      >>
   2346  5+1   7ACA EC   88 32            ldd   rsv_xy1_pixel,x            >>
   2347  5+1   7ACD ED   88 43            std   rsv_prev_xy1_pixel_0,x     >>
   2348  5+1   7AD0 EC   88 34            ldd   rsv_xy2_pixel,x            >>
   2349  5+1   7AD3 ED   88 45            std   rsv_prev_xy2_pixel_0,x     >>
   2350  4+1   7AD6 A6   88 47            lda   rsv_prev_render_flags_0,x
   2351  2     7AD9 8A   80               ora   #rsv_prev_render_onscreen_m>>
   2352  4+1   7ADB E6   02               ldb   render_flags,x
   2353  2     7ADD C5   04               bitb  #render_overlay_mask
   2354  3     7ADF 27   04               beq   DRS_NoOverlayB0
   2355  2     7AE1 8A   01               ora   #rsv_prev_render_overlay_ma>>
   2356  3     7AE3 20   02               bra   DRS_UpdateRenderFlagB0
   2357                            
   2358        7AE5               DRS_NoOverlayB0
   2359  2     7AE5 84   FE               anda   #:rsv_prev_render_overlay_>>
   2360
   2361        7AE7               DRS_UpdateRenderFlagB0
   2362  4+1   7AE7 A7   88 47            sta   rsv_prev_render_flags_0,x  >>
   2363                            
   2364        7AEA               DRS_NextObjectB0
   2365  5+1   7AEA AE   88 39            ldx   rsv_priority_next_obj_0,x
   2366  6     7AED 1026 FF88             lbne  DRS_ProcessEachPriorityLeve>>
   2367  5     7AF1 39                    rts
   2368                            
   2369        7AF2               DRS_DrawWithoutBackupB0
   2370  5+1   7AF2 EC   88 12            ldd   xy_pixel,x                 >>
   2371  4+1   7AF5 A0   88 2C            suba  rsv_image_center_offset,x
   2372  8     7AF8 BD   7B16             jsr   DRS_XYToAddress
   2373  5+1   7AFB EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2374  5+1   7AFE EF   88 3D            stu   rsv_prev_mapping_frame_0,x >>
   2375  4+1   7B01 A6   40               lda   page_draw_routine,u
   2376  5     7B03 B7   E7E5             sta   $E7E5                      >>
   2377  6     7B06 BF   7ABE             stx   DRS_dyn3B0+1               >>
   2378  5+1   7B09 AE   41               ldx   draw_routine,u
   2379  4     7B0B 108E 613E             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2380  6     7B0F FC   613C             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2381  7+0   7B12 AD   84               jsr   ,x                         >>
   2382  3     7B14 20   A7               bra   DRS_dyn3B0
   2383
   2384                           *****************************************>>
   2385                           * x_pixel and y_pixel coordinate system
   2386                           * x coordinates:
   2387                           *    - off-screen left 00-2F (0-47)
   2388                           *    - on screen 30-CF (48-207)
   2389                           *    - off-screen right D0-FF (208-255)
   2390                           *
   2391                           * y coordinates:
   2392                           *    - off-screen top 00-1B (0-27)
   2393                           *    - on screen 1C-E3 (28-227)
   2394                           *    - off-screen bottom E4-FF (228-255)
   2395                           *****************************************>>
   2396
   2397        7B16               DRS_XYToAddress
   2398  2     7B16 80   30               suba  #$30
   2399  3     7B18 24   03               bcc   DRS_XYToAddressPositive
   2400  2     7B1A 80   60               suba  #$60                       >>
   2401  2     7B1C 5A                    decb
   2402        7B1D               DRS_XYToAddressPositive
   2403  2     7B1D C0   1C               subb  #$1C                       >>
   2404  2     7B1F 44                    lsra                             >>
   2405  2     7B20 44                    lsra                             >>
   2406  3     7B21 25   12               bcs   DRS_XYToAddressRAM2First   >>
   2407        7B23               DRS_XYToAddressRAM1First
   2408  5     7B23 B7   7B2B             sta   DRS_dyn1+2
   2409  2     7B26 86   28               lda   #$28                       >>
   2410  11    7B28 3D                    mul
   2411        7B29               DRS_dyn1
   2412  4     7B29 C3   0000             addd  #$0000                     >>
   2413  6     7B2C FD   613E             std   Glb_Sprite_Screen_Pos_Part2>>
   2414  2     7B2F 8A   20               ora   #$20                       >>
   2415  6     7B31 FD   613C             std   Glb_Sprite_Screen_Pos_Part1>>
   2416  5     7B34 39                    rts
   2417        7B35               DRS_XYToAddressRAM2First
   2418  5     7B35 B7   7B3D             sta   DRS_dyn2+2
   2419  2     7B38 86   28               lda   #$28                       >>
   2420  11    7B3A 3D                    mul
   2421        7B3B               DRS_dyn2
   2422  4     7B3B C3   2000             addd  #$2000                     >>
   2423  6     7B3E FD   613E             std   Glb_Sprite_Screen_Pos_Part2>>
   2424  4     7B41 83   1FFF             subd  #$1FFF
   2425  6     7B44 FD   613C             std   Glb_Sprite_Screen_Pos_Part1>>
   2426  5     7B47 39                    rts
   2427                            
   2428        7B48               DRS_ProcessEachPriorityLevelB1
   2429  4+1   7B48 A6   88 29            lda   rsv_render_flags,x
   2430  2     7B4B 84   04               anda  #rsv_render_displaysprite_m>>
   2431  3     7B4D 27   6A               beq   DRS_NextObjectB1
   2432  4+1   7B4F A6   88 59            lda   rsv_prev_render_flags_1,x
   2433  3     7B52 2B   65               bmi   DRS_NextObjectB1
   2434  4+1   7B54 A6   02               lda   render_flags,x
   2435  2     7B56 84   04               anda  #render_overlay_mask
   2436  3     7B58 26   67               bne   DRS_DrawWithoutBackupB1
   2437  5+1   7B5A EE   88 30            ldu   rsv_mapping_frame,x
   2438  4+1   7B5D A6   46               lda   erase_nb_cell,u
   2439  8     7B5F BD   7BE5             jsr   BgBufferAlloc              >>
   2440  5     7B62 108C 0000             cmpy  #$0000                     >>
   2441  3     7B66 27   51               beq   DRS_NextObjectB1           >>
   2442  5+1   7B68 EC   88 12            ldd   xy_pixel,x                 >>
   2443  4+1   7B6B A0   88 2C            suba  rsv_image_center_offset,x
   2444  8     7B6E BD   7B16             jsr   DRS_XYToAddress
   2445                                   *ldu   rsv_image_subset,x
   2446                                   *stu   rsv_prev_image_subset_1,x
   2447  5+1   7B71 EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2448  5+1   7B74 EF   88 4F            stu   rsv_prev_mapping_frame_1,x >>
   2449  4+1   7B77 A6   40               lda   page_draw_routine,u
   2450  5     7B79 B7   E7E5             sta   $E7E5                      >>
   2451  6     7B7C BF   7B8D             stx   DRS_dyn3B1+1               >>
   2452  5+1   7B7F AE   41               ldx   draw_routine,u
   2453  4+0   7B81 33   A4               leau  ,y                         >>
   2454  4     7B83 108E 613E             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2455  6     7B87 FC   613C             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2456  7+0   7B8A AD   84               jsr   ,x                         >>
   2457        7B8C               DRS_dyn3B1
   2458  3     7B8C 8E   0000             ldx   #$0000                     >>
   2459  5+1   7B8F EF   88 51            stu   rsv_bgdata_1,x             >>
   2460  5+1   7B92 EC   88 12            ldd   xy_pixel,x                 >>
   2461  2     7B95 44                    lsra                             >>
   2462  5+1   7B96 ED   88 53            std   rsv_prev_xy_pixel_1,x      >>
   2463  5+1   7B99 EC   88 32            ldd   rsv_xy1_pixel,x            >>
   2464  5+1   7B9C ED   88 55            std   rsv_prev_xy1_pixel_1,x     >>
   2465  5+1   7B9F EC   88 34            ldd   rsv_xy2_pixel,x            >>
   2466  5+1   7BA2 ED   88 57            std   rsv_prev_xy2_pixel_1,x     >>
   2467  4+1   7BA5 A6   88 59            lda   rsv_prev_render_flags_1,x
   2468  2     7BA8 8A   80               ora   #rsv_prev_render_onscreen_m>>
   2469  4+1   7BAA E6   02               ldb   render_flags,x
   2470  2     7BAC C5   04               bitb  #render_overlay_mask
   2471  3     7BAE 27   04               beq   DRS_NoOverlayB1
   2472  2     7BB0 8A   01               ora   #rsv_prev_render_overlay_ma>>
   2473  3     7BB2 20   02               bra   DRS_UpdateRenderFlagB1
   2474                            
   2475        7BB4               DRS_NoOverlayB1
   2476  2     7BB4 84   FE               anda   #:rsv_prev_render_overlay_>>
   2477
   2478        7BB6               DRS_UpdateRenderFlagB1
   2479  4+1   7BB6 A7   88 59            sta   rsv_prev_render_flags_1,x  >>
   2480                            
   2481        7BB9               DRS_NextObjectB1
   2482  5+1   7BB9 AE   88 4B            ldx   rsv_priority_next_obj_1,x
   2483  6     7BBC 1026 FF88             lbne  DRS_ProcessEachPriorityLeve>>
   2484  5     7BC0 39                    rts
   2485                            
   2486        7BC1               DRS_DrawWithoutBackupB1
   2487  5+1   7BC1 EC   88 12            ldd   xy_pixel,x                 >>
   2488  4+1   7BC4 A0   88 2C            suba  rsv_image_center_offset,x
   2489  8     7BC7 BD   7B16             jsr   DRS_XYToAddress
   2490  5+1   7BCA EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2491  5+1   7BCD EF   88 4F            stu   rsv_prev_mapping_frame_1,x >>
   2492  4+1   7BD0 A6   40               lda   page_draw_routine,u
   2493  5     7BD2 B7   E7E5             sta   $E7E5                      >>
   2494  6     7BD5 BF   7B8D             stx   DRS_dyn3B1+1               >>
   2495  5+1   7BD8 AE   41               ldx   draw_routine,u
   2496  4     7BDA 108E 613E             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2497  6     7BDE FC   613C             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2498  7+0   7BE1 AD   84               jsr   ,x                         >>
   2499  3     7BE3 20   A7               bra   DRS_dyn3B1
   2500
   2501                                   INCLUD BGBALLOC
   2502                           * --------------------------------------->>
   2503                           * BgBufferAlloc
   2504                           * -------------
   2505                           * Subroutine to allocate memory into back>>
   2506                           *
   2507                           * input  REG : [a] number of requested ce>>
   2508                           * output REG : [y] cell_end or 0000 if no>>
   2509                           * --------------------------------------->>
   2510
   2511        7BE5               BgBufferAlloc
   2512  5+3   7BE5 34   14               pshs  b,x
   2513  5     7BE7 F6   6137             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2514  3     7BEA 26   09               bne   BBA1                       >>
   2515                            
   2516        7BEC               BBA0
   2517  3     7BEC 8E   6140             ldx   #Lst_FreeCellFirstEntry_0  >>
   2518  7     7BEF 10BE 6140             ldy   Lst_FreeCellFirstEntry_0   >>
   2519  3     7BF3 20   07               bra   BBA_Next
   2520                            
   2521        7BF5               BBA1
   2522  3     7BF5 8E   630F             ldx   #Lst_FreeCellFirstEntry_1  >>
   2523  7     7BF8 10BE 630F             ldy   Lst_FreeCellFirstEntry_1   >>
   2524                            
   2525        7BFC               BBA_Next
   2526  3     7BFC 27   38               beq   BBA_rts                    >>
   2527  4+1   7BFE A1   20               cmpa  nb_cells,y                 >>
   2528  3     7C00 27   09               beq   BBA_FitCell                >>
   2529  3     7C02 23   12               bls   BBA_DivideCell             >>
   2530  4+1   7C04 30   25               leax  next_entry,y               >>
   2531  6+1   7C06 10AE 25               ldy   next_entry,y               >>
   2532  3     7C09 20   F1               bra   BBA_Next
   2533                            
   2534        7C0B               BBA_FitCell
   2535  5+1   7C0B EC   25               ldd   next_entry,y
   2536  5+0   7C0D ED   84               std   ,x                         >>
   2537  6+1   7C0F 6F   20               clr   nb_cells,y                 >>
   2538  6+1   7C11 10AE 23               ldy   cell_end,y                 >>
   2539  3     7C14 20   20               bra   BBA_rts
   2540                            
   2541        7C16               BBA_DivideCell
   2542  5     7C16 B7   7C1C             sta   BBA_dyn+1
   2543  4+1   7C19 E6   20               ldb   nb_cells,y
   2544        7C1B               BBA_dyn
   2545  2     7C1B C0   00               subb  #$00                       >>
   2546  4+1   7C1D E7   20               stb   nb_cells,y                 >>
   2547                            
   2548  2     7C1F C6   40               ldb   #cell_size
   2549  11    7C21 3D                    mul
   2550  2     7C22 88   FF               eora  #$FF                       >>
   2551  2     7C24 C8   FF               eorb  #$FF                       >>
   2552  4     7C26 C3   0001             addd  #$01
   2553  5+1   7C29 AE   23               ldx   cell_end,y
   2554  6     7C2B BF   7C34             stx   cell_end_return+2
   2555  4+4   7C2E 30   8B               leax  d,x                        >>
   2556  5+1   7C30 AF   23               stx   cell_end,y                 >>
   2557        7C32               cell_end_return
   2558  4     7C32 108E 0000             ldy   #$0000
   2559        7C36               BBA_rts
   2560  5+5   7C36 35   94               puls  b,x,pc
   2561
   2562                                   INCLUD BGBFREE
   2563                           * --------------------------------------->>
   2564                           * BgBufferFree
   2565                           * ------------
   2566                           * Subroutine to free memory from backgrou>>
   2567                           *
   2568                           * input  REG : [x] cell_start
   2569                           *              [y] cell_end
   2570                           * output REG : none
   2571                           * --------------------------------------->>
   2572
   2573        7C38               BgBufferFree
   2574  5+4   7C38 34   46               pshs  d,u
   2575  3     7C3A CC   0000             ldd   #$0000
   2576  6     7C3D FD   7C9A             std   BBF_SetNewEntryNextentry+1 >>
   2577  5     7C40 F6   6137             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2578  3     7C43 26   16               bne   BBF1                       >>
   2579                            
   2580        7C45               BBF0
   2581  5+1   7C45 EE   C8 3D            ldu   rsv_prev_mapping_frame_0,u >>
   2582  4+1   7C48 A6   46               lda   erase_nb_cell,u            >>
   2583  3     7C4A CE   6140             ldu   #Lst_FreeCellFirstEntry_0
   2584  6     7C4D FF   7C9F             stu   BBF_SetNewEntryPrevLink+1  >>
   2585  3     7C50 CE   6142             ldu   #Lst_FreeCell_0            >>
   2586  6     7C53 FF   7C88             stu   BBF_AddNewEntryAtEnd+1     >>
   2587  6     7C56 FE   6140             ldu   Lst_FreeCellFirstEntry_0   >>
   2588  3     7C59 20   14               bra   BBF_Next
   2589                            
   2590        7C5B               BBF1
   2591  5+1   7C5B EE   C8 4F            ldu   rsv_prev_mapping_frame_1,u
   2592  4+1   7C5E A6   46               lda   erase_nb_cell,u
   2593  3     7C60 CE   630F             ldu   #Lst_FreeCellFirstEntry_1
   2594  6     7C63 FF   7C9F             stu   BBF_SetNewEntryPrevLink+1
   2595  3     7C66 CE   6311             ldu   #Lst_FreeCell_1
   2596  6     7C69 FF   7C88             stu   BBF_AddNewEntryAtEnd+1
   2597  6     7C6C FE   630F             ldu   Lst_FreeCellFirstEntry_1
   2598                            
   2599        7C6F               BBF_Next
   2600  3     7C6F 27   16               beq   BBF_AddNewEntryAtEnd       >>
   2601  7+1   7C71 10AC 41               cmpy  cell_start,u               >>
   2602  3     7C74 27   2D               beq   BBF_ExpandAtStart          >>
   2603  3     7C76 22   4C               bhi   BBF_ExpandAtEnd            >>
   2604  5+1   7C78 EE   45               ldu   next_entry,u               >>
   2605  6     7C7A 1F   30               tfr   u,d
   2606  4     7C7C C3   0005             addd  #next_entry                >>
   2607  6     7C7F FD   7C9F             std   BBF_SetNewEntryPrevLink+1
   2608  3     7C82 20   EB               bra   BBF_Next
   2609
   2610        7C84               BBF_AddNewEntry
   2611  6     7C84 FF   7C9A             stu   BBF_SetNewEntryNextentry+1
   2612        7C87               BBF_AddNewEntryAtEnd
   2613  3     7C87 CE   0000             ldu   #$0000                     >>
   2614        7C8A               BBF_FindFreeSlot
   2615  4+1   7C8A E6   40               ldb   nb_cells,u                 >>
   2616  3     7C8C 27   04               beq   BBF_SetNewEntry            >>
   2617  4+1   7C8E 33   47               leau  entry_size,u               >>
   2618  3     7C90 20   F8               bra   BBF_FindFreeSlot           >>
   2619        7C92               BBF_SetNewEntry
   2620  4+1   7C92 A7   40               sta   nb_cells,u                 >>
   2621  5+1   7C94 AF   41               stx   cell_start,u               >>
   2622  6+1   7C96 10AF 43               sty   cell_end,u                 >>
   2623        7C99               BBF_SetNewEntryNextentry
   2624  3     7C99 8E   0000             ldx   #$0000                     >>
   2625  5+1   7C9C AF   45               stx   next_entry,u               >>
   2626        7C9E               BBF_SetNewEntryPrevLink
   2627  6     7C9E FF   FFFF             stu   $FFFF                      >>
   2628  3     7CA1 20   2C               bra   BBF_rts
   2629
   2630        7CA3               BBF_ExpandAtStart
   2631  5+1   7CA3 AF   41               stx   cell_start,u
   2632  4+1   7CA5 AB   40               adda  nb_cells,u
   2633  4+1   7CA7 A7   40               sta   nb_cells,u
   2634  6+1   7CA9 10AE 45               ldy   next_entry,u
   2635  3     7CAC 27   21               beq   BBF_rts
   2636        7CAE               BBF_Join
   2637  6+1   7CAE AC   23               cmpx  cell_end,y
   2638  3     7CB0 26   1D               bne   BBF_rts
   2639  5+1   7CB2 EC   21               ldd   cell_start,y
   2640  5+1   7CB4 ED   41               std   cell_start,u
   2641  4+1   7CB6 A6   20               lda   nb_cells,y
   2642  4+1   7CB8 AB   40               adda  nb_cells,u
   2643  4+1   7CBA A7   40               sta   nb_cells,u
   2644  6+1   7CBC 6F   20               clr   nb_cells,y                 >>
   2645  5+1   7CBE EC   25               ldd   next_entry,y
   2646  5+1   7CC0 ED   45               std   next_entry,u               >>
   2647  3     7CC2 20   0B               bra   BBF_rts
   2648
   2649        7CC4               BBF_ExpandAtEnd
   2650  6+1   7CC4 AC   43               cmpx  cell_end,u
   2651  3     7CC6 26   BC               bne   BBF_AddNewEntry
   2652  6+1   7CC8 10AF 43               sty   cell_end,u
   2653  4+1   7CCB AB   40               adda  nb_cells,u
   2654  4+1   7CCD A7   40               sta   nb_cells,u
   2655                            
   2656        7CCF               BBF_rts
   2657  5+6   7CCF 35   C6               puls  d,u,pc
   2658
   2659                                   INCLUD CLRCARTM
   2660                           *****************************************>>
   2661                           * Clear memory in cardtridge area
   2662                           *****************************************>>
   2663
   2664        7CD1               ClearCartMem *@globals
   2665  5+3   7CD1 34   48               pshs  u,dp
   2666  7     7CD3 10FF 7D01             sts   ClearCartMem_3+2
   2667  4     7CD7 10CE 4000             lds   #$4000
   2668  4+0   7CDB 33   84               leau  ,x
   2669  4+0   7CDD 31   84               leay  ,x
   2670  6     7CDF 1F   10               tfr   x,d
   2671  6     7CE1 1F   8B               tfr   a,dp
   2672        7CE3               ClearCartMem_2
   2673  5+9   7CE3 34   7E               pshs  u,y,x,dp,b,a
   2674  5+9   7CE5 34   7E               pshs  u,y,x,dp,b,a
   2675  5+9   7CE7 34   7E               pshs  u,y,x,dp,b,a
   2676  5+9   7CE9 34   7E               pshs  u,y,x,dp,b,a
   2677  5+9   7CEB 34   7E               pshs  u,y,x,dp,b,a
   2678  5+9   7CED 34   7E               pshs  u,y,x,dp,b,a
   2679  5+9   7CEF 34   7E               pshs  u,y,x,dp,b,a
   2680  5+9   7CF1 34   7E               pshs  u,y,x,dp,b,a
   2681  5+9   7CF3 34   7E               pshs  u,y,x,dp,b,a
   2682  5+7   7CF5 34   78               pshs  u,y,x,dp
   2683  5     7CF7 118C 0010             cmps  #$0010
   2684  3     7CFB 26   E6               bne   ClearCartMem_2
   2685  4+0   7CFD 33   E4               leau  ,s
   2686        7CFF               ClearCartMem_3
   2687  4     7CFF 10CE 0000             lds   #$0000        ; start of me>>
   2688  5+6   7D03 36   36               pshu  d,x,y         ; saving 12 b>>
   2689  5+6   7D05 36   36               pshu  d,x,y         ; DEPENDENCY >>
   2690  5+4   7D07 36   16               pshu  d,x
   2691  5+5   7D09 35   C8               puls  dp,u,pc
   2692
   2693
   2694                                   INCLUD UPDTPAL
   2695                           *****************************************>>
   2696                           * Mise a jour de la palette
   2697                           *****************************************>>
   2698                           * TODO ajout systeme de refresh pour ne p>>
   2699                           * ou integrer le refresh palette en debut>>
   2700                           * palette doit etre refresh avant le trac>>
   2701
   2702        7D0B 00            cpt            fcb   $00
   2703        7D0C 7D0E          Ptr_palette    fdb   Black_palette  *@glo>>
   2704        7D0E               Black_palette  rmb   $20,0          *@glo>>
   2705        7D2E FF0F          White_palette  fdb   $ff0f          *@glo>>
   2706        7D30 FF0F                         fdb   $ff0f
   2707        7D32 FF0F                         fdb   $ff0f
   2708        7D34 FF0F                         fdb   $ff0f
   2709        7D36 FF0F                         fdb   $ff0f
   2710        7D38 FF0F                         fdb   $ff0f
   2711        7D3A FF0F                         fdb   $ff0f
   2712        7D3C FF0F                         fdb   $ff0f
   2713        7D3E FF0F                         fdb   $ff0f
   2714        7D40 FF0F                         fdb   $ff0f
   2715        7D42 FF0F                         fdb   $ff0f
   2716        7D44 FF0F                         fdb   $ff0f
   2717        7D46 FF0F                         fdb   $ff0f
   2718        7D48 FF0F                         fdb   $ff0f
   2719        7D4A FF0F                         fdb   $ff0f
   2720        7D4C FF0F                         fdb   $ff0f
   2721
   2722        7D4E               UpdatePalette *@globals
   2723  6     7D4E BE   7D0C            ldx   Ptr_palette
   2724  7     7D51 7F   7D0B            clr   cpt                      * c>>
   2725  5     7D54 B6   7D0B             lda   cpt                        >>
   2726        7D57               SetColor
   2727  2     7D57 48                   asla                              >>
   2728  5     7D58 B7   E7DB            sta   $E7DB                       >>
   2729  5+3   7D5B EC   81              ldd   ,x++                        >>
   2730  5     7D5D B7   E7DA            sta   $E7DA                       >>
   2731  5     7D60 F7   E7DA            stb   $E7DA                    * s>>
   2732  7     7D63 7C   7D0B            inc   cpt                         >>
   2733  5     7D66 B6   7D0B            lda   cpt
   2734  2     7D69 81   10              cmpa  #$10                     * t>>
   2735  3     7D6B 26   EA              bne   SetColor                 * o>>
   2736  5     7D6D 39                    rts
   2737
   2738
   2739                                   INCLUD PLAYPCM * A rendre dynamiq>>
   2740                           * --------------------------------------->>
   2741                           * PlayPCM
   2742                           * ------------
   2743                           * Subroutine to play a PCM sample at 16kH>>
   2744                           * This will freeze anything running
   2745                           * DAC Init from Mission: Liftoff (merci P>>
   2746                           *
   2747                           * input REG : [y] Pcm_ index to play
   2748                           * reset REG : [d] [x] [y]
   2749                           * --------------------------------------->>
   2750
   2751        7D6E               PlayPCM *@globals
   2752
   2753  5     7D6E B6   E7E5             lda   $E7E5
   2754  5     7D71 B7   7DC0             sta   PlayPCM_RestorePage+1
   2755
   2756  3     7D74 CC   FB3F             ldd   #$fb3f  ! Mute by CRA to
   2757  5     7D77 B4   E7CF             anda  $e7cf   ! avoid sound when
   2758  5     7D7A B7   E7CF             sta   $e7cf   ! $e7cd written
   2759  5     7D7D F7   E7CD             stb   $e7cd   ! Full sound line
   2760  2     7D80 8A   04               ora   #$04    ! Disable mute by
   2761  5     7D82 B7   E7CF             sta   $e7cf   ! CRA and sound
   2762                            
   2763        7D85               PlayPCM_ReadChunk
   2764  4+1   7D85 A6   20               lda   pcm_page,y                 >>
   2765  2     7D87 81   FF               cmpa  #$FF
   2766  3     7D89 27   1B               beq   PlayPCM_End
   2767  5     7D8B B7   E7E5             sta   $E7E5                      >>
   2768  5+1   7D8E AE   21               ldx   pcm_start_addr,y           >>
   2769                            
   2770        7D90               PlayPCM_Loop
   2771  4+2   7D90 A6   80               lda   ,x+
   2772  5     7D92 B7   E7CD             sta   $e7cd                      >>
   2773  6+1   7D95 AC   23               cmpx  pcm_end_addr,y
   2774  3     7D97 27   07               beq   PlayPCM_NextChunk
   2775  11    7D99 3D                    mul                              >>
   2776  11    7D9A 3D                    mul
   2777  11    7D9B 3D                    mul
   2778  6     7D9C 1F   89               tfr   a,b
   2779  3     7D9E 20   F0               bra   PlayPCM_Loop               >>
   2780                            
   2781        7DA0               PlayPCM_NextChunk
   2782  4+1   7DA0 31   25               leay  pcm_meta_size,y
   2783  11    7DA2 3D                    mul                              >>
   2784  2     7DA3 12                    nop
   2785  3     7DA4 20   DF               bra   PlayPCM_ReadChunk
   2786                            
   2787        7DA6               PlayPCM_End
   2788  2     7DA6 86   00               lda   #$00
   2789  5     7DA8 B7   E7CD             sta   $e7cd
   2790                            
   2791  3     7DAB CC   FBFC             ldd   #$fbfc  ! Mute by CRA to
   2792  5     7DAE B4   E7CF             anda  $e7cf   ! avoid sound when
   2793  5     7DB1 B7   E7CF             sta   $e7cf   ! $e7cd is written
   2794  5     7DB4 F4   E7CD             andb  $e7cd   ! Activate
   2795  5     7DB7 F7   E7CD             stb   $e7cd   ! joystick port
   2796  2     7DBA 8A   04               ora   #$04    ! Disable mute by
   2797  5     7DBC B7   E7CF             sta   $e7cf   ! CRA + joystick
   2798
   2799        7DBF               PlayPCM_RestorePage
   2800  2     7DBF 86   00               lda   #$00
   2801  5     7DC1 B7   E7E5             sta   $E7E5
   2802                            
   2803  5     7DC4 39                    rts
   2804
   2805
   2806                                   INCLUD PSGLIB  * A rendre dynamiq>>
   2807                           * --------------------------------------->>
   2808                           * PSGlib
   2809                           * ------------
   2810                           * Converted to 6809 from:
   2811                           * PSGlib - Programmable Sound Generator a>>
   2812                           *          https://github.com/sverx/PSGli>>
   2813                           *
   2814                           * Typical workflow:
   2815                           * 1) You (or a friend of yours) track one>>
   2816                           * 2) Optional, but warmly suggested: opti>>
   2817                           * 3) Convert the VGM to PSG file(s) using>>
   2818                           * 4) Optional, suggested: compress the PS>>
   2819                           * 5) include the library and 'incbin' the>>
   2820                           * 6) call PSGInit once somewhere near the>>
   2821                           * 7) Set up a steady interrupt (vertical >>
   2822                           * 8) Start/stop tunes when needed using P>>
   2823                           * - Looping SFXs are supported too: fire >>
   2824                           * - Tunes can be set to run just once ins>>
   2825                           * - To check if a tune is still playing u>>
   2826                           *
   2827                           * PSGlib functions reference
   2828                           * ==========================
   2829                           *
   2830                           * engine initializer function
   2831                           * ---------------------------
   2832                           *
   2833                           * **PSGInit**: initializes the PSG engine>>
   2834                           * - no required parameters
   2835                           * - no return values
   2836                           * - destroys A
   2837                           *
   2838                           * functions for music
   2839                           * -------------------
   2840                           *
   2841                           * **PSGFrame**: processes a music frame
   2842                           * - no required parameters
   2843                           * - no return values
   2844                           * - destroys A,B,X
   2845                           *
   2846                           * **PSGPlay** / **PSGPlayNoRepeat**: star>>
   2847                           * - *needs* the address of the PSG to sta>>
   2848                           * - no return values
   2849                           * - destroys A
   2850                           *
   2851                           * **PSGStop**: stops (pauses) the music (>>
   2852                           * - no required parameters
   2853                           * - no return values
   2854                           * - destroys A
   2855                           *
   2856                           * **PSGResume**: resume the previously st>>
   2857                           * - no required parameters
   2858                           * - no return values
   2859                           * - destroys A
   2860                           *
   2861                           * **PSGCancelLoop**: sets the currently l>>
   2862                           * - no required parameters
   2863                           * - no return values
   2864                           * - destroys A
   2865                           *
   2866                           * **PSGGetStatus**: gets the current stat>>
   2867                           * - no required parameters
   2868                           * - *returns* `PSG_PLAYING` in register A>>
   2869                           *
   2870                           * functions for SFX
   2871                           * -----------------
   2872                           *
   2873                           * **PSGSFXFrame**: processes a SFX frame
   2874                           * - no required parameters
   2875                           * - no return values
   2876                           * - destroys A,B,Y
   2877                           *
   2878                           * **PSGSFXPlay** / **PSGSFXPlayLoop**: st>>
   2879                           * - *needs* the address of the SFX to sta>>
   2880                           * - *needs* a mask indicating which chann>>
   2881                           * - destroys A
   2882                           *
   2883                           * **PSGSFXStop**: stops the SFX (leaving >>
   2884                           * - no required parameters
   2885                           * - no return values
   2886                           * - destroys A
   2887                           *
   2888                           * **PSGSFXCancelLoop**: sets the currentl>>
   2889                           * - no required parameters
   2890                           * - no return values
   2891                           * - destroys A
   2892                           *
   2893                           * **PSGSFXGetStatus**: gets the current s>>
   2894                           * - no required parameters
   2895                           * - *returns* `PSG_PLAYING` in register A>>
   2896                           *
   2897                           * functions for music volume and hardware>>
   2898                           * --------------------------------------->>
   2899                           *
   2900                           * **PSGSetMusicVolumeAttenuation**: sets >>
   2901                           * - *needs* the volume attenuation value >>
   2902                           * - no return values
   2903                           * - destroys A
   2904                           *
   2905                           * **PSGSilenceChannels**: sets all hardwa>>
   2906                           * - no required parameters
   2907                           * - no return values
   2908                           * - destroys A
   2909                           *
   2910                           * **PSGRestoreVolumes**: resets silenced >>
   2911                           * - no required parameters
   2912                           * - no return values
   2913                           * - destroys A
   2914                           *
   2915                           * --------------------------------------->>
   2916
   2917                  0000     PSG_STOPPED         equ 0
   2918                  0001     PSG_PLAYING         equ 1
   2919
   2920                  E7B0     PSGDataPort         equ $e7b0
   2921
   2922                  0080     PSGLatch            equ $80
   2923                  0040     PSGData             equ $40
   2924
   2925                  0000     PSGChannel0         equ $00
   2926                  0020     PSGChannel1         equ $20
   2927                  0040     PSGChannel2         equ $40
   2928                  0060     PSGChannel3         equ $60
   2929                  0010     PSGVolumeData       equ $10
   2930
   2931                  0038     PSGWait             equ $38
   2932                  0008     PSGSubString        equ $08
   2933                  0001     PSGLoop             equ $01
   2934                  0000     PSGEnd              equ $00
   2935
   2936                  0001     SFX_CHANNEL2        equ $01
   2937                  0002     SFX_CHANNEL3        equ $02
   2938                  0003     SFX_CHANNELS2AND3   equ SFX_CHANNEL2!SFX_>>
   2939
   2940                           * ***************************************>>
   2941                           * initializes the PSG 'engine'
   2942                           * destroys A
   2943
   2944        7DC5               PSGInit *@globals
   2945  2     7DC5 86   00               lda   #PSG_STOPPED               >>
   2946  5     7DC7 B7   81C2             sta   PSGMusicStatus             >>
   2947  5     7DCA B7   81DC             sta   PSGSFXStatus               >>
   2948  5     7DCD B7   81D8             sta   PSGChannel2SFX             >>
   2949  5     7DD0 B7   81D9             sta   PSGChannel3SFX             >>
   2950  5     7DD3 B7   81D7             sta   PSGMusicVolumeAttenuation  >>
   2951  5     7DD6 39                    rts
   2952
   2953                           * ***************************************>>
   2954                           * receives in X the address of the PSG to>>
   2955                           * destroys A
   2956
   2957        7DD7               PSGPlayNoRepeat *@globals
   2958  2     7DD7 86   00               lda   #0                         >>
   2959  3     7DD9 20   02               bra   PSGPlay1
   2960        7DDB               PSGPlay
   2961  2     7DDB 86   01               lda   #1                         >>
   2962        7DDD               PSGPlay1
   2963  5     7DDD B7   81CB             sta   PSGLoopFlag
   2964  7     7DE0 8D   23               bsr   PSGStop                    >>
   2965                            
   2966  4+0   7DE2 A6   84               lda   ,x
   2967  5     7DE4 B7   81C3             sta   PSGMusicPage
   2968  5+1   7DE7 AE   01               ldx   1,x
   2969  6     7DE9 BF   81C4             stx   PSGMusicStart              >>
   2970  6     7DEC BF   81C6             stx   PSGMusicPointer            >>
   2971  6     7DEF BF   81C8             stx   PSGMusicLoopPoint          >>
   2972  2     7DF2 86   00               lda   #0
   2973  5     7DF4 B7   81CA             sta   PSGMusicSkipFrames         >>
   2974  5     7DF7 B7   81CD             sta   PSGMusicSubstringLen       >>
   2975  2     7DFA 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   2976  5     7DFC B7   81CC             sta   PSGMusicLastLatch          >>
   2977  2     7DFF 86   01               lda   #PSG_PLAYING
   2978  5     7E01 B7   81C2             sta   PSGMusicStatus             >>
   2979  5     7E04 39                    rts
   2980
   2981                           * ***************************************>>
   2982                           * stops the music (leaving the SFX on, if>>
   2983                           * destroys A
   2984
   2985        7E05               PSGStop *@globals
   2986  5     7E05 B6   81C2             lda   PSGMusicStatus             >>
   2987  3     7E08 27   23               beq   PSGStop_end
   2988  2     7E0A 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   2989  5     7E0C B7   E7B0             sta   PSGDataPort
   2990  2     7E0F 86   BF               lda   #PSGLatch!PSGChannel1!PSGVo>>
   2991  5     7E11 B7   E7B0             sta   PSGDataPort
   2992  5     7E14 B6   81D8             lda   PSGChannel2SFX
   2993  3     7E17 26   05               bne   PSGStop2
   2994  2     7E19 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   2995  5     7E1B B7   E7B0             sta   PSGDataPort
   2996        7E1E               PSGStop2
   2997  5     7E1E B6   81D9             lda   PSGChannel3SFX
   2998  3     7E21 26   05               bne   PSGStop3
   2999  2     7E23 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3000  5     7E25 B7   E7B0             sta   PSGDataPort
   3001        7E28               PSGStop3
   3002  2     7E28 86   00               lda   #PSG_STOPPED               >>
   3003  5     7E2A B7   81C2             sta   PSGMusicStatus             >>
   3004        7E2D               PSGStop_end
   3005  5     7E2D 39              rts
   3006
   3007
   3008                           * ***************************************>>
   3009                           * resume a previously stopped music
   3010                           * destroys A
   3011
   3012        7E2E               PSGResume *@globals
   3013  5     7E2E B6   81C2             lda   PSGMusicStatus             >>
   3014  3     7E31 26   45               bne   PSGResume_end
   3015  5     7E33 B6   81D0             lda   PSGChan0Volume             >>
   3016  2     7E36 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   3017  5     7E38 B7   E7B0             sta   PSGDataPort
   3018  5     7E3B B6   81D1             lda   PSGChan1Volume             >>
   3019  2     7E3E 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   3020  5     7E40 B7   E7B0             sta   PSGDataPort
   3021  5     7E43 B6   81D8             lda   PSGChannel2SFX
   3022  3     7E46 26   16               bne   PSGResume1
   3023  5     7E48 B6   81D4             lda   PSGChan2LowTone            >>
   3024  2     7E4B 8A   C0               ora   #PSGLatch!PSGChannel2
   3025  5     7E4D B7   E7B0             sta   PSGDataPort
   3026  5     7E50 B6   81D6             lda   PSGChan2HighTone
   3027  5     7E53 B7   E7B0             sta   PSGDataPort
   3028  5     7E56 B6   81D2             lda   PSGChan2Volume             >>
   3029  2     7E59 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3030  5     7E5B B7   E7B0             sta   PSGDataPort
   3031        7E5E               PSGResume1
   3032  5     7E5E B6   81D9             lda   PSGChannel3SFX
   3033  3     7E61 26   10               bne   PSGResume2
   3034  5     7E63 B6   81D5             lda   PSGChan3LowTone            >>
   3035  2     7E66 8A   E0               ora   #PSGLatch!PSGChannel3
   3036  5     7E68 B7   E7B0             sta   PSGDataPort
   3037  5     7E6B B6   81D3             lda   PSGChan3Volume             >>
   3038  2     7E6E 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3039  5     7E70 B7   E7B0             sta   PSGDataPort
   3040        7E73               PSGResume2
   3041  2     7E73 86   01               lda   #PSG_PLAYING
   3042  5     7E75 B7   81C2             sta   PSGMusicStatus             >>
   3043        7E78               PSGResume_end
   3044  5     7E78 39                    rts
   3045
   3046                           * ***************************************>>
   3047                           * sets the currently looping music to no >>
   3048                           * destroys A
   3049
   3050        7E79               PSGCancelLoop *@globals
   3051  7     7E79 7F   81CB               clr   PSGLoopFlag
   3052  5     7E7C 39                      rts
   3053
   3054                           * ***************************************>>
   3055                           * gets the current status of music into r>>
   3056
   3057        7E7D               PSGGetStatus *@globals
   3058  5     7E7D B6   81C2             lda   PSGMusicStatus
   3059  5     7E80 39                    rts
   3060
   3061                           * ***************************************>>
   3062                           * receives in A the volume attenuation fo>>
   3063                           * destroys A
   3064
   3065        7E81               PSGSetMusicVolumeAttenuation *@globals
   3066  5     7E81 B7   81D7             sta   PSGMusicVolumeAttenuation
   3067  5     7E84 B6   81C2             lda   PSGMusicStatus             >>
   3068  3     7E87 27   56               beq   PSGSetMusicVolumeAttenuatio>>
   3069
   3070  5     7E89 B6   81D0             lda   PSGChan0Volume
   3071  2     7E8C 84   0F               anda  #$0F
   3072  5     7E8E BB   81D7             adda  PSGMusicVolumeAttenuation
   3073  2     7E91 81   10               cmpa  #$10                       >>
   3074  3     7E93 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3075  2     7E95 86   0F               lda   #$0F                       >>
   3076        7E97               PSGSetMusicVolumeAttenuation1
   3077  2     7E97 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   3078  5     7E99 B7   E7B0             sta   PSGDataPort                >>
   3079                            
   3080  5     7E9C B6   81D1             lda   PSGChan1Volume
   3081  2     7E9F 84   0F               anda  #$0F
   3082  5     7EA1 BB   81D7             adda  PSGMusicVolumeAttenuation
   3083  2     7EA4 81   10               cmpa  #$10                       >>
   3084  3     7EA6 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3085  2     7EA8 86   0F               lda   #$0F                       >>
   3086        7EAA               PSGSetMusicVolumeAttenuation2
   3087  2     7EAA 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   3088  5     7EAC B7   E7B0             sta   PSGDataPort                >>
   3089                            
   3090
   3091  5     7EAF B6   81D8             lda   PSGChannel2SFX             >>
   3092  3     7EB2 26   13               bne   _restore_channel3          >>
   3093
   3094  5     7EB4 B6   81D2             lda   PSGChan2Volume
   3095  2     7EB7 84   0F               anda  #$0F
   3096  5     7EB9 BB   81D7             adda  PSGMusicVolumeAttenuation
   3097  2     7EBC 81   10               cmpa  #$10                       >>
   3098  3     7EBE 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3099  2     7EC0 86   0F               lda   #$0F                       >>
   3100        7EC2               PSGSetMusicVolumeAttenuation3
   3101  2     7EC2 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3102  5     7EC4 B7   E7B0             sta   PSGDataPort
   3103
   3104        7EC7               _restore_channel3
   3105  5     7EC7 B6   81D9             lda   PSGChannel3SFX             >>
   3106  3     7ECA 26   13               bne   PSGSetMusicVolumeAttenuatio>>
   3107
   3108  5     7ECC B6   81D3             lda   PSGChan3Volume
   3109  2     7ECF 84   0F               anda  #$0F
   3110  5     7ED1 BB   81D7             adda  PSGMusicVolumeAttenuation
   3111  2     7ED4 81   10               cmpa  #$10                       >>
   3112  3     7ED6 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3113  2     7ED8 86   0F               lda   #$0F                       >>
   3114        7EDA               PSGSetMusicVolumeAttenuation4
   3115  2     7EDA 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   3116  5     7EDC B7   E7B0             sta   PSGDataPort
   3117                            
   3118        7EDF               PSGSetMusicVolumeAttenuation_end
   3119  5     7EDF 39                    rts
   3120
   3121                           * ***************************************>>
   3122                           * sets all PSG channels to volume ZERO (u>>
   3123                           * destroys A
   3124
   3125        7EE0               PSGSilenceChannels *@globals
   3126  2     7EE0 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   3127  5     7EE2 B7   E7B0             sta   PSGDataPort
   3128  2     7EE5 86   BF               lda   #PSGLatch!PSGChannel1!PSGVo>>
   3129  5     7EE7 B7   E7B0             sta   PSGDataPort
   3130  2     7EEA 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   3131  5     7EEC B7   E7B0             sta   PSGDataPort
   3132  2     7EEF 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3133  5     7EF1 B7   E7B0             sta   PSGDataPort
   3134  5     7EF4 39                    rts
   3135
   3136                           * ***************************************>>
   3137                           * resets all PSG channels to previous vol>>
   3138                           * destroys A
   3139
   3140        7EF5               PSGRestoreVolumes *@globals
   3141  5     7EF5 B6   81C2             lda   PSGMusicStatus             >>
   3142  3     7EF8 27   26               beq   _chkchn2                   >>
   3143
   3144  5     7EFA B6   81D0             lda   PSGChan0Volume
   3145  2     7EFD 84   0F               anda  #$0F
   3146  5     7EFF BB   81D7             adda  PSGMusicVolumeAttenuation
   3147  2     7F02 81   10               cmpa  #$10                       >>
   3148  3     7F04 25   02               bcs   PSGRestoreVolumes1         >>
   3149  2     7F06 86   0F               lda   #$0F                       >>
   3150        7F08               PSGRestoreVolumes1
   3151  2     7F08 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   3152  5     7F0A B7   E7B0             sta   PSGDataPort                >>
   3153
   3154  5     7F0D B6   81D1             lda   PSGChan1Volume
   3155  2     7F10 84   0F               anda  #$0F
   3156  5     7F12 BB   81D7             adda  PSGMusicVolumeAttenuation
   3157  2     7F15 81   10               cmpa  #$10                       >>
   3158  3     7F17 25   02               bcs   PSGRestoreVolumes2         >>
   3159  2     7F19 86   0F               lda   #$0F                       >>
   3160        7F1B               PSGRestoreVolumes2
   3161  2     7F1B 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   3162  5     7F1D B7   E7B0             sta   PSGDataPort                >>
   3163                            
   3164        7F20               _chkchn2
   3165  5     7F20 B6   81D8             lda   PSGChannel2SFX             >>
   3166  3     7F23 26   15               bne   _restoreSFX2
   3167                            
   3168  5     7F25 B6   81C2             lda   PSGMusicStatus             >>
   3169  3     7F28 27   1A               beq   _chkchn3                   >>
   3170
   3171  5     7F2A B6   81D2             lda   PSGChan2Volume
   3172  2     7F2D 84   0F               anda  #$0F
   3173  5     7F2F BB   81D7             adda  PSGMusicVolumeAttenuation
   3174  2     7F32 81   10               cmpa  #$10                       >>
   3175  3     7F34 25   09               bcs   PSGRestoreVolumes3         >>
   3176  2     7F36 86   0F               lda   #$0F                       >>
   3177  3     7F38 20   05               bra   PSGRestoreVolumes3
   3178
   3179        7F3A               _restoreSFX2
   3180  5     7F3A B6   81DA             lda   PSGSFXChan2Volume
   3181  4     7F3D 94   0F               anda  $0F
   3182        7F3F               PSGRestoreVolumes3
   3183  2     7F3F 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3184  5     7F41 B7   E7B0             sta   PSGDataPort                >>
   3185
   3186        7F44               _chkchn3
   3187  5     7F44 B6   81D9             lda   PSGChannel3SFX             >>
   3188  3     7F47 26   15               bne   _restoreSFX3
   3189                            
   3190  5     7F49 B6   81C2             lda   PSGMusicStatus             >>
   3191  3     7F4C 27   1A               beq   _restoreSFX2_end           >>
   3192
   3193  5     7F4E B6   81D3             lda   PSGChan3Volume
   3194  2     7F51 84   0F               anda  #$0F
   3195  5     7F53 BB   81D7             adda  PSGMusicVolumeAttenuation
   3196  2     7F56 81   10               cmpa  #$10                       >>
   3197  3     7F58 25   09               bcs   PSGRestoreVolumes4         >>
   3198  2     7F5A 86   0F               lda   #$0F                       >>
   3199  3     7F5C 20   05               bra   PSGRestoreVolumes4
   3200
   3201        7F5E               _restoreSFX3
   3202  5     7F5E B6   81DB             lda   PSGSFXChan3Volume
   3203  2     7F61 84   0F               anda  #$0F
   3204        7F63               PSGRestoreVolumes4
   3205  2     7F63 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   3206  5     7F65 B7   E7B0             sta   PSGDataPort                >>
   3207        7F68               _restoreSFX2_end
   3208  5     7F68 39                    rts
   3209
   3210
   3211                           * ***************************************>>
   3212                           * receives in X the address of the SFX PS>>
   3213                           * receives in B the mask that indicates w>>
   3214                           * destroys A
   3215
   3216        7F69               PSGSFXPlayLoop *@globals
   3217  2     7F69 86   01               lda   #1                         >>
   3218  3     7F6B 20   02               bra   PSGSFXPlay1
   3219        7F6D               PSGSFXPlay
   3220  2     7F6D 86   00               lda   #0                         >>
   3221        7F6F               PSGSFXPlay1
   3222  5     7F6F B7   81E5             sta   PSGSFXLoopFlag
   3223  7     7F72 8D   41               bsr   PSGSFXStop                 >>
   3224
   3225  4+0   7F74 A6   84               lda   ,x
   3226  5     7F76 B7   81DD             sta   PSGSFXPage
   3227  5+1   7F79 AE   01               ldx   1,x
   3228  6     7F7B BF   81DE             stx   PSGSFXStart                >>
   3229  6     7F7E BF   81E0             stx   PSGSFXPointer              >>
   3230  6     7F81 BF   81E2             stx   PSGSFXLoopPoint            >>
   3231  2     7F84 86   00               lda   #0
   3232  5     7F86 B7   81E4             sta   PSGSFXSkipFrames           >>
   3233  5     7F89 B7   81E6             sta   PSGSFXSubstringLen         >>
   3234  2     7F8C C5   01               bitb  #SFX_CHANNEL2              >>
   3235  3     7F8E 27   05               beq   PSGSFXPlay2
   3236  2     7F90 86   01               lda   #PSG_PLAYING
   3237  5     7F92 B7   81D8             sta   PSGChannel2SFX
   3238        7F95               PSGSFXPlay2
   3239  2     7F95 C5   02               bitb  #SFX_CHANNEL3              >>
   3240  3     7F97 27   05               beq   PSGSFXPlay3
   3241  2     7F99 86   01               lda   #PSG_PLAYING
   3242  5     7F9B B7   81D9             sta   PSGChannel3SFX
   3243        7F9E               PSGSFXPlay3
   3244  5     7F9E B7   81DC             sta   PSGSFXStatus               >>
   3245  5     7FA1 B6   81D5             lda   PSGChan3LowTone            >>
   3246  2     7FA4 84   03               anda  #SFX_CHANNELS2AND3
   3247  2     7FA6 81   03               cmpa  #SFX_CHANNELS2AND3
   3248  3     7FA8 26   0A               bne   PSGSFXPlayLoop_end         >>
   3249  2     7FAA 86   01               lda   #PSG_PLAYING
   3250  5     7FAC B7   81D9             sta   PSGChannel3SFX             >>
   3251  2     7FAF 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3252  5     7FB1 B7   E7B0             sta   PSGDataPort
   3253        7FB4               PSGSFXPlayLoop_end
   3254  5     7FB4 39                    rts
   3255
   3256
   3257                           * ***************************************>>
   3258                           * stops the SFX (leaving the music on, if>>
   3259                           * destroys A
   3260
   3261        7FB5               PSGSFXStop *@globals
   3262  5     7FB5 B6   81DC             lda   PSGSFXStatus               >>
   3263  3     7FB8 27   70               beq   PSGSFXStop_end             >>
   3264  5     7FBA B6   81D8             lda   PSGChannel2SFX             >>
   3265  3     7FBD 27   05               beq   PSGSFXStop1
   3266  2     7FBF 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   3267  5     7FC1 B7   E7B0             sta   PSGDataPort
   3268        7FC4               PSGSFXStop1
   3269  5     7FC4 B6   81D9             lda   PSGChannel3SFX             >>
   3270  3     7FC7 27   05               beq   PSGSFXStop2
   3271  2     7FC9 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3272  5     7FCB B7   E7B0             sta   PSGDataPort
   3273        7FCE               PSGSFXStop2
   3274  5     7FCE B6   81C2             lda   PSGMusicStatus             >>
   3275  3     7FD1 27   4E               beq   _skipRestore               >>
   3276  5     7FD3 B6   81D8             lda   PSGChannel2SFX             >>
   3277  3     7FD6 27   25               beq   _skip_chn2
   3278  5     7FD8 B6   81D4             lda   PSGChan2LowTone
   3279  2     7FDB 84   0F               anda  #$0F                       >>
   3280  2     7FDD 8A   80               ora   #PSGLatch|PSGChannel2      >>
   3281  5     7FDF B7   E7B0             sta   PSGDataPort
   3282  5     7FE2 B6   81D6             lda   PSGChan2HighTone           >>
   3283  2     7FE5 84   3F               anda  #$3F                       >>
   3284  5     7FE7 B7   E7B0             sta   PSGDataPort
   3285  5     7FEA B6   81D2             lda   PSGChan2Volume             >>
   3286  2     7FED 84   0F               anda  #$0F                       >>
   3287  5     7FEF BB   81D7             adda  PSGMusicVolumeAttenuation
   3288  2     7FF2 81   10               cmpa  #$10                       >>
   3289  3     7FF4 25   02               bcs   PSGSFXStop3                >>
   3290  2     7FF6 86   0F               lda   #$0F                       >>
   3291        7FF8               PSGSFXStop3
   3292  2     7FF8 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3293  5     7FFA B7   E7B0             sta   PSGDataPort                >>
   3294        7FFD               _skip_chn2
   3295  5     7FFD B6   81D9             lda   PSGChannel3SFX             >>
   3296  3     8000 27   1D               beq   _skip_chn3
   3297  5     8002 B6   81D5             lda   PSGChan3LowTone
   3298  4     8005 94   07               anda  $07                        >>
   3299  2     8007 8A   E0               ora   #PSGLatch!PSGChannel3      >>
   3300  5     8009 B7   E7B0             sta   PSGDataPort
   3301  5     800C B6   81D3             lda   PSGChan3Volume             >>
   3302  2     800F 84   0F               anda  #$0F                       >>
   3303  5     8011 BB   81D7             adda  PSGMusicVolumeAttenuation
   3304  2     8014 81   10               cmpa  #$10                       >>
   3305  3     8016 25   02               bcs   PSGSFXStop4                >>
   3306  2     8018 86   0F               lda   #$0F                       >>
   3307        801A               PSGSFXStop4
   3308  2     801A 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   3309  5     801C B7   E7B0             sta   PSGDataPort                >>
   3310
   3311        801F               _skip_chn3
   3312  2     801F 86   00               lda   #PSG_STOPPED               >>
   3313        8021               _skipRestore
   3314  5     8021 B7   81D8             sta   PSGChannel2SFX
   3315  5     8024 B7   81D9             sta   PSGChannel3SFX
   3316  5     8027 B7   81DC             sta   PSGSFXStatus               >>
   3317        802A               PSGSFXStop_end
   3318  5     802A 39                    rts
   3319
   3320                           * ***************************************>>
   3321                           * sets the currently looping SFX to no mo>>
   3322                           * destroys A
   3323
   3324        802B               PSGSFXCancelLoop *@globals
   3325  7     802B 7F   81E5             clr   PSGSFXLoopFlag
   3326  5     802E 39                    rts
   3327
   3328
   3329                           * ***************************************>>
   3330                           * gets the current SFX status into regist>>
   3331
   3332        802F               PSGSFXGetStatus *@globals
   3333  5     802F B6   81DC             lda   PSGSFXStatus
   3334  5     8032 39                    rts
   3335
   3336
   3337                           * ***************************************>>
   3338                           * processes a music frame
   3339                           * destroys A,B,X
   3340                            
   3341        8033               PSGFrame *@globals
   3342
   3343  5     8033 B6   81C3             lda   PSGMusicPage
   3344  5     8036 B7   E7E5             sta   $E7E5
   3345
   3346  5     8039 B6   81C2             lda   PSGMusicStatus             >>
   3347  3     803C 26   01               bne   PSGFrame_continue
   3348  5     803E 39                    rts
   3349
   3350        803F               PSGFrame_continue
   3351  5     803F B6   81CA             lda   PSGMusicSkipFrames         >>
   3352  3     8042 26   7F               bne   _skipFrame
   3353  6     8044 BE   81C6             ldx   PSGMusicPointer            >>
   3354
   3355        8047               _intLoop
   3356  4+2   8047 E6   80               ldb   ,x+                        >>
   3357  5     8049 B6   81CD             lda   PSGMusicSubstringLen       >>
   3358  3     804C 27   09               beq   _continue                  >>
   3359  2     804E 4A                    deca                             >>
   3360  5     804F B7   81CD             sta   PSGMusicSubstringLen       >>
   3361  3     8052 26   03               bne   _continue
   3362  6     8054 BE   81CE             ldx   PSGMusicSubstringRetAddr   >>
   3363
   3364        8057               _continue
   3365  2     8057 C1   80               cmpb  #PSGLatch                  >>
   3366  3     8059 25   6D               bcs   _noLatch                   >>
   3367  5     805B F7   81CC             stb   PSGMusicLastLatch          >>
   3368                            
   3369  2     805E C5   04               bitb  #4                         >>
   3370  3     8060 26   32               bne   _latch_Volume              >>
   3371  2     8062 C5   06               bitb  #6                         >>
   3372  3     8064 27   58               beq   _send2PSG                  >>
   3373
   3374  2     8066 C5   05               bitb  #5                         >>
   3375  3     8068 27   20               beq   _ifchn2                    >>
   3376  5     806A F7   81D5             stb   PSGChan3LowTone            >>
   3377  5     806D B6   81D9             lda   PSGChannel3SFX             >>
   3378  3     8070 26   D5               bne   _intLoop
   3379  5     8072 B6   81D5             lda   PSGChan3LowTone
   3380  2     8075 84   03               anda  #3                         >>
   3381  2     8077 81   03               cmpa  #3
   3382  3     8079 26   43               bne   _send2PSG                  >>
   3383  5     807B B6   81DC             lda   PSGSFXStatus               >>
   3384  3     807E 27   3E               beq   _send2PSG                  >>
   3385  5     8080 B7   81D9             sta   PSGChannel3SFX             >>
   3386  2     8083 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3387  5     8085 B7   E7B0             sta   PSGDataPort
   3388  3     8088 20   BD               bra   _intLoop
   3389
   3390        808A               _ifchn2
   3391  5     808A F7   81D4             stb   PSGChan2LowTone            >>
   3392  5     808D B6   81D8             lda   PSGChannel2SFX             >>
   3393  3     8090 27   2C               beq   _send2PSG
   3394  3     8092 20   B3               bra   _intLoop
   3395                            
   3396        8094               _latch_Volume
   3397  2     8094 C5   06               bitb  #6                         >>
   3398  3     8096 26   0E               bne   _latch_Volume_23           >>
   3399  2     8098 C5   05               bitb  #5                         >>
   3400  3     809A 27   05               beq   _ifchn0                    >>
   3401  5     809C F7   81D1             stb   PSGChan1Volume             >>
   3402  3     809F 20   4C               bra   _sendVolume2PSG
   3403                            
   3404        80A1               _ifchn0
   3405  5     80A1 F7   81D0             stb   PSGChan0Volume             >>
   3406  3     80A4 20   47               bra   _sendVolume2PSG
   3407
   3408        80A6               _latch_Volume_23
   3409  2     80A6 C5   05               bitb  #5                         >>
   3410  3     80A8 27   0A               beq   _chn2                      >>
   3411  5     80AA F7   81D3             stb   PSGChan3Volume             >>
   3412  5     80AD B6   81D9             lda   PSGChannel3SFX             >>
   3413  3     80B0 27   3B               beq   _sendVolume2PSG
   3414  3     80B2 20   93               bra   _intLoop
   3415
   3416        80B4               _chn2
   3417  5     80B4 F7   81D2             stb   PSGChan2Volume             >>
   3418  5     80B7 B6   81D8             lda   PSGChannel2SFX             >>
   3419  3     80BA 27   31               beq   _sendVolume2PSG
   3420  3     80BC 20   89               bra   _intLoop
   3421                            
   3422        80BE               _send2PSG
   3423  5     80BE F7   E7B0             stb   PSGDataPort                >>
   3424  3     80C1 20   84               bra   _intLoop
   3425                            
   3426        80C3               _skipFrame
   3427  2     80C3 4A                    deca
   3428  5     80C4 B7   81CA             sta   PSGMusicSkipFrames
   3429  5     80C7 39                    rts
   3430
   3431        80C8               _noLatch
   3432  2     80C8 C1   40               cmpb  #PSGData
   3433  3     80CA 25   05               bcs   _command                   >>
   3434                                                                    >>
   3435  5     80CC B6   81CC             lda   PSGMusicLastLatch          >>
   3436  3     80CF 20   39               bra   _output_NoLatch
   3437
   3438        80D1               _command
   3439  2     80D1 C1   38               cmpb  #PSGWait
   3440  3     80D3 27   07               beq   _done                      >>
   3441  3     80D5 25   09               bcs   _otherCommands             >>
   3442  2     80D7 C4   07               andb  #$07                       >>
   3443  5     80D9 F7   81CA             stb   PSGMusicSkipFrames         >>
   3444                            
   3445        80DC               _done
   3446  6     80DC BF   81C6             stx   PSGMusicPointer            >>
   3447  5     80DF 39                    rts                              >>
   3448
   3449        80E0               _otherCommands
   3450  2     80E0 C1   08               cmpb  #PSGSubString
   3451  3     80E2 24   3F               bcc   _substring
   3452  2     80E4 C1   00               cmpb  #PSGEnd
   3453  3     80E6 27   2E               beq   _musicLoop
   3454  2     80E8 C1   01               cmpb  #PSGLoop
   3455  3     80EA 27   24               beq   _setLoopPoint
   3456
   3457                             * *************************************>>
   3458                             * we should never get here!
   3459                             * if we do, it means the PSG file is pr>>
   3460                             * *************************************>>
   3461
   3462  5     80EC 39                    rts
   3463
   3464        80ED               _sendVolume2PSG *@globals
   3465  5     80ED F7   80FC             stb   _sendVolume2PSG1+1         >>
   3466  2     80F0 C4   0F               andb  #$0F                       >>
   3467  5     80F2 FB   81D7             addb  PSGMusicVolumeAttenuation  >>
   3468  2     80F5 C1   10               cmpb  #$10                       >>
   3469  3     80F7 25   02               bcs   _sendVolume2PSG1           >>
   3470  2     80F9 C6   0F               ldb   #$0F                       >>
   3471        80FB               _sendVolume2PSG1
   3472  2     80FB 86   00               lda   #0                         >>
   3473  5     80FD F7   8103             stb   _sendVolume2PSG2+1
   3474  2     8100 84   F0               anda  #$F0                       >>
   3475        8102               _sendVolume2PSG2
   3476  2     8102 8A   00               ora   #0                         >>
   3477  5     8104 B7   E7B0             sta   PSGDataPort                >>
   3478  5     8107 16   FF3D             lbra   _intLoop
   3479
   3480        810A               _output_NoLatch
   3481                             * we got the last latch in A and the PS>>
   3482                             * and we have to check if the value sho>>
   3483                             * note that non-latch commands can be o>>
   3484                             * for channels 0,1,2 only (no noise)
   3485  2     810A 85   06               bita  #6                         >>
   3486  3     810C 26   27               bne   _high_part_Tone            >>
   3487  3     810E 20   AE               bra   _send2PSG                  >>
   3488
   3489        8110               _setLoopPoint
   3490  6     8110 BF   81C8             stx   PSGMusicLoopPoint
   3491  5     8113 16   FF31             lbra   _intLoop
   3492
   3493        8116               _musicLoop
   3494  5     8116 B6   81CB             lda   PSGLoopFlag                >>
   3495  6     8119 1027 FCE8             lbeq   PSGStop                   >>
   3496  6     811D BE   81C8             ldx   PSGMusicLoopPoint
   3497  5     8120 16   FF24             lbra   _intLoop
   3498
   3499        8123               _substring
   3500  2     8123 C0   04               subb  #PSGSubString-4            >>
   3501  5     8125 F7   81CD             stb   PSGMusicSubstringLen       >>
   3502  5+3   8128 EC   81               ldd   ,x++                       >>
   3503  6     812A BF   81CE             stx   PSGMusicSubstringRetAddr   >>
   3504  6     812D BE   81C4             ldx   PSGMusicStart
   3505  4+4   8130 30   8B               leax  d,x                        >>
   3506  5     8132 16   FF12             lbra   _intLoop
   3507
   3508        8135               _high_part_Tone
   3509  5     8135 F7   81D6             stb   PSGChan2HighTone           >>
   3510  5     8138 B6   81D8             lda   PSGChannel2SFX             >>
   3511  3     813B 27   81               beq   _send2PSG
   3512  5     813D 16   FF07             lbra   _intLoop
   3513
   3514
   3515                           * ***************************************>>
   3516                           * processes a SFX frame
   3517                           * destroys A,B,X
   3518
   3519        8140               PSGSFXFrame *@globals
   3520
   3521  5     8140 B6   81DD             lda   PSGSFXPage
   3522  5     8143 B7   E7E5             sta   $E7E5
   3523                            
   3524  5     8146 B6   81DC             lda   PSGSFXStatus               >>
   3525  3     8149 27   35               beq   PSGSFXFrame_end
   3526
   3527  5     814B B6   81E4             lda   PSGSFXSkipFrames           >>
   3528  3     814E 26   2C               bne   _skipSFXFrame
   3529                            
   3530  6     8150 BE   81E0             ldx   PSGSFXPointer              >>
   3531
   3532        8153               _intSFXLoop
   3533  4+2   8153 E6   80               ldb   ,x+                        >>
   3534  5     8155 B6   81E6             lda   PSGSFXSubstringLen         >>
   3535  3     8158 27   09               beq   _SFXcontinue               >>
   3536  2     815A 4A                    deca                             >>
   3537  5     815B B7   81E6             sta   PSGSFXSubstringLen         >>
   3538  3     815E 26   03               bne   _SFXcontinue
   3539  6     8160 BE   81E7             ldx   PSGSFXSubstringRetAddr     >>
   3540
   3541        8163               _SFXcontinue
   3542  2     8163 C1   40               cmpb   #PSGData
   3543  3     8165 25   1A               bcs    _SFXcommand               >>
   3544  2     8167 C5   04               bitb   #4                        >>
   3545  3     8169 27   0C               beq    _SFXoutbyte               >>
   3546  2     816B C5   05               bitb   #5                        >>
   3547  3     816D 26   05               bne    _SFXvolumechn3
   3548  5     816F F7   81DA             stb    PSGSFXChan2Volume
   3549  3     8172 20   03               bra   _SFXoutbyte
   3550
   3551        8174               _SFXvolumechn3
   3552  5     8174 F7   81DB             stb   PSGSFXChan3Volume
   3553
   3554        8177               _SFXoutbyte
   3555  5     8177 F7   E7B0             stb   PSGDataPort                >>
   3556  3     817A 20   D7               bra   _intSFXLoop
   3557                            
   3558        817C               _skipSFXFrame
   3559  2     817C 4A                    deca
   3560  5     817D B7   81E4             sta   PSGSFXSkipFrames
   3561        8180               PSGSFXFrame_end
   3562  5     8180 39                    rts
   3563
   3564        8181               _SFXcommand
   3565  2     8181 C1   38               cmpb   #PSGWait
   3566  3     8183 27   07               beq    _SFXdone                  >>
   3567  3     8185 25   09               bcs    _SFXotherCommands         >>
   3568  2     8187 C4   07               andb   #$07                      >>
   3569  5     8189 F7   81E4             stb    PSGSFXSkipFrames          >>
   3570        818C               _SFXdone
   3571  6     818C BF   81E0             stx    PSGSFXPointer             >>
   3572  5     818F 39                    rts                              >>
   3573
   3574        8190               _SFXotherCommands
   3575  2     8190 C1   08               cmpb   #PSGSubString
   3576  3     8192 24   1D               bcc    _SFXsubstring
   3577  2     8194 C1   00               cmpb   #PSGEnd
   3578  3     8196 27   0A               beq    _sfxLoop
   3579  2     8198 C1   01               cmpb   #PSGLoop
   3580  3     819A 27   01               beq    _SFXsetLoopPoint
   3581                            
   3582                             * *************************************>>
   3583                             * we should never get here!
   3584                             * if we do, it means the PSG SFX file i>>
   3585                             * *************************************>>
   3586
   3587  5     819C 39                    rts
   3588
   3589        819D               _SFXsetLoopPoint *@globals
   3590  6     819D BF   81E2             stx   PSGSFXLoopPoint
   3591  3     81A0 20   B1               bra   _intSFXLoop
   3592                            
   3593        81A2               _sfxLoop
   3594  5     81A2 B6   81E5             lda   PSGSFXLoopFlag             >>
   3595  6     81A5 1027 FE0C             lbeq   PSGSFXStop                >>
   3596  6     81A9 BE   81E2             ldx   PSGSFXLoopPoint
   3597  6     81AC BF   81E0             stx   PSGSFXPointer
   3598  3     81AF 20   A2               bra   _intSFXLoop
   3599
   3600        81B1               _SFXsubstring
   3601  2     81B1 C0   04               subb  #PSGSubString-4            >>
   3602  5     81B3 F7   81E6             stb   PSGSFXSubstringLen         >>
   3603  5+3   81B6 EC   81               ldd   ,x++                       >>
   3604  6     81B8 BF   81E7             stx   PSGSFXSubstringRetAddr     >>
   3605  6     81BB BE   81DE             ldx   PSGSFXStart
   3606  4+4   81BE 30   8B               leax  d,x                        >>
   3607  3     81C0 20   91               bra   _intSFXLoop
   3608
   3609                             * fundamental vars
   3610        81C2               PSGMusicStatus             rmb 1,0 ; are >>
   3611        81C3               PSGMusicPage               rmb 1,0 ; Memo>>
   3612        81C4               PSGMusicStart              rmb 2,0 ; the >>
   3613        81C6               PSGMusicPointer            rmb 2,0 ; the >>
   3614        81C8               PSGMusicLoopPoint          rmb 2,0 ; the >>
   3615        81CA               PSGMusicSkipFrames         rmb 1,0 ; the >>
   3616        81CB               PSGLoopFlag                rmb 1,0 ; the >>
   3617        81CC               PSGMusicLastLatch          rmb 1,0 ; the >>
   3618
   3619                             * decompression vars
   3620        81CD               PSGMusicSubstringLen       rmb 1,0 ; leng>>
   3621        81CE               PSGMusicSubstringRetAddr   rmb 2,0 ; retu>>
   3622
   3623                             * command buffers
   3624        81D0               PSGChan0Volume             rmb 1,0 ; the >>
   3625        81D1               PSGChan1Volume             rmb 1,0 ; the >>
   3626        81D2               PSGChan2Volume             rmb 1,0 ; the >>
   3627        81D3               PSGChan3Volume             rmb 1,0 ; the >>
   3628        81D4               PSGChan2LowTone            rmb 1,0 ; the >>
   3629        81D5               PSGChan3LowTone            rmb 1,0 ; the >>
   3630        81D6               PSGChan2HighTone           rmb 1,0 ; the >>
   3631
   3632        81D7               PSGMusicVolumeAttenuation  rmb 1,0 ; the >>
   3633
   3634                             * ******* SFX *************
   3635
   3636                             * flags for channels 2-3 access
   3637        81D8               PSGChannel2SFX             rmb 1,0 ; !0 m>>
   3638        81D9               PSGChannel3SFX             rmb 1,0 ; !0 m>>
   3639
   3640                             * command buffers for SFX
   3641        81DA               PSGSFXChan2Volume          rmb 1,0 ; the >>
   3642        81DB               PSGSFXChan3Volume          rmb 1,0 ; the >>
   3643
   3644                             * fundamental vars for SFX
   3645        81DC               PSGSFXStatus               rmb 1,0 ; are >>
   3646        81DD               PSGSFXPage                 rmb 1,0 ; Memo>>
   3647        81DE               PSGSFXStart                rmb 2,0 ; the >>
   3648        81E0               PSGSFXPointer              rmb 2,0 ; the >>
   3649        81E2               PSGSFXLoopPoint            rmb 2,0 ; the >>
   3650        81E4               PSGSFXSkipFrames           rmb 1,0 ; the >>
   3651        81E5               PSGSFXLoopFlag             rmb 1,0 ; the >>
   3652
   3653                             * decompression vars for SFX
   3654        81E6               PSGSFXSubstringLen         rmb 1,0 ; leng>>
   3655        81E7               PSGSFXSubstringRetAddr     rmb 2,0 ; retu>>
   3656
   3657
   3658
    183                            
    184                           * =======================================>>
    185                           * Level Specific Generated Data
    186                           * IMG and ANI should be in first position>>
    187                           * =======================================>>
   3659                                   INCLUD IMAGEIDX
   3660                           * Generated Code
   3661
   3662        81E9               Img_SonicAndTailsIn *@globals
   3663        81E9 07 00 00 00           fcb   $07,$00,$00,$00,$88,$4F,$00>>
               81ED 88 4F 00 00
               81F1 06 00 00 BB
               81F5 D9 0A
   3664        81F7 D0 04                 fcb   $D0,$04
   3665        81F9               Img_SegaLogo_2 *@globals
   3666        81F9 07 00 00 00           fcb   $07,$00,$00,$00,$5C,$39,$03>>
               81FD 5C 39 03 00
               8201 06 00 00 D2
               8205 E4 0D
   3667        8207 C1 7E                 fcb   $C1,$7E
   3668        8209               Img_SegaLogo_1 *@globals
   3669        8209 07 00 00 00           fcb   $07,$00,$00,$00,$5C,$38,$03>>
               820D 5C 38 03 00
               8211 06 00 00 D2
               8215 E5 09
   3670        8217 D1 3B                 fcb   $D1,$3B
   3671        8219               Img_SegaTrails_1 *@globals
   3672        8219 07 10 00 00           fcb   $07,$10,$00,$00,$07,$3E,$00>>
               821D 07 3E 00 00
               8221 06 00 00 10
               8225 E0 05
   3673        8227 DD 7E 00 06           fcb   $DD,$7E,$00,$06,$00,$00,$E8>>
               822B 00 00 E8 E0
               822F 05 DC 07
   3674        8232               Img_SegaSonic_12 *@globals
   3675        8232 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$45,$00>>
               8236 0F 45 00 06
               823A 00 00 00 F8
               823E E3 08
   3676        8240 D8 26 06 DD           fcb   $D8,$26,$06,$DD,$48,$0A,$06>>
               8244 48 0A 06 00
               8248 00 00 F8 E3
               824C 09 C9
   3677        824E 76 06 DA A2           fcb   $76,$06,$DA,$A2,$0A
               8252 0A
   3678        8253               Img_SegaSonic_23 *@globals
   3679        8253 07 14 00 00           fcb   $07,$14,$00,$00,$06,$1F,$00>>
               8257 06 1F 00 06
               825B 00 00 00 F1
               825F 01 05
   3680        8261 D9 BA 05 D8           fcb   $D9,$BA,$05,$D8,$D4,$02,$06>>
               8265 D4 02 06 00
               8269 00 00 08 01
               826D 05 D6
   3681        826F 85 05 D5 9F           fcb   $85,$05,$D5,$9F,$02
               8273 02
   3682        8274               Img_SegaSonic_13 *@globals
   3683        8274 07 14 00 00           fcb   $07,$14,$00,$00,$06,$25,$00>>
               8278 06 25 00 06
               827C 00 00 00 F1
               8280 01 06
   3684        8282 D7 D8 05 D4           fcb   $D7,$D8,$05,$D4,$8F,$03,$06>>
               8286 8F 03 06 00
               828A 00 00 08 01
               828E 06 D5
   3685        8290 0C 05 D3 80           fcb   $0C,$05,$D3,$80,$03
               8294 03
   3686        8295               Img_SegaSonic_32 *@globals
   3687        8295 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$45,$00>>
               8299 0F 45 00 06
               829D 00 00 00 F8
               82A1 E3 09
   3688        82A3 C1 1C 06 D2           fcb   $C1,$1C,$06,$D2,$1E,$0A,$06>>
               82A7 1E 0A 06 00
               82AB 00 00 F8 E3
               82AF 09 B8
   3689        82B1 BC 06 CF 2D           fcb   $BC,$06,$CF,$2D,$0A
               82B5 0A
   3690        82B6               Img_SegaSonic_21 *@globals
   3691        82B6 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               82BA 07 3F 00 06
               82BE 00 00 00 08
               82C2 E5 07
   3692        82C4 DB 55 05 D1           fcb   $DB,$55,$05,$D1,$B2,$04,$06>>
               82C8 B2 04 06 00
               82CC 00 00 F0 E5
               82D0 07 D6
   3693        82D2 B6 05 CF E3           fcb   $B6,$05,$CF,$E3,$04
               82D6 04
   3694        82D7               Img_SegaSonic_43 *@globals
   3695        82D7 07 14 00 00           fcb   $07,$14,$00,$00,$06,$1F,$00>>
               82DB 06 1F 00 06
               82DF 00 00 00 F1
               82E3 01 05
   3696        82E5 CD 96 05 CC           fcb   $CD,$96,$05,$CC,$AE,$02,$06>>
               82E9 AE 02 06 00
               82ED 00 00 08 01
               82F1 05 CA
   3697        82F3 61 05 C9 79           fcb   $61,$05,$C9,$79,$02
               82F7 02
   3698        82F8               Img_SegaSonic_11 *@globals
   3699        82F8 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               82FC 07 3F 00 06
               8300 00 00 00 08
               8304 E5 08
   3700        8306 D3 52 05 C7           fcb   $D3,$52,$05,$C7,$7F,$04,$06>>
               830A 7F 04 06 00
               830E 00 00 F0 E5
               8312 08 CE
   3701        8314 7E 05 C5 84           fcb   $7E,$05,$C5,$84,$04
               8318 04
   3702        8319               Img_SegaSonic_33 *@globals
   3703        8319 07 14 00 00           fcb   $07,$14,$00,$00,$05,$25,$00>>
               831D 05 25 00 06
               8321 00 00 00 F2
               8325 01 05
   3704        8327 C3 4E 05 C2           fcb   $C3,$4E,$05,$C2,$5F,$02,$06>>
               832B 5F 02 06 00
               832F 00 00 08 01
               8333 05 C0
   3705        8335 29 05 BF 3A           fcb   $29,$05,$BF,$3A,$02
               8339 02
   3706        833A               Img_SegaSonic_22 *@globals
   3707        833A 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$47,$00>>
               833E 0F 47 00 06
               8342 00 00 00 F8
               8346 E1 09
   3708        8348 B0 95 06 CC           fcb   $B0,$95,$06,$CC,$6F,$0A,$06>>
               834C 6F 0A 06 00
               8350 00 00 F8 E1
               8354 09 A8
   3709        8356 56 06 C9 B3           fcb   $56,$06,$C9,$B3,$0A
               835A 0A
   3710        835B               Img_SegaSonic_41 *@globals
   3711        835B 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               835F 07 3F 00 06
               8363 00 00 00 08
               8367 E5 07
   3712        8369 D2 3B 05 BD           fcb   $D2,$3B,$05,$BD,$7B,$04,$06>>
               836D 7B 04 06 00
               8371 00 00 F0 E5
               8375 07 CD
   3713        8377 BE 05 BB BC           fcb   $BE,$05,$BB,$BC,$04
               837B 04
   3714        837C               Img_SegaSonic_31 *@globals
   3715        837C 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               8380 07 3F 00 06
               8384 00 00 00 08
               8388 E5 08
   3716        838A C9 A9 05 B9           fcb   $C9,$A9,$05,$B9,$CF,$04,$06>>
               838E CF 04 06 00
               8392 00 00 F0 E5
               8396 08 C4
   3717        8398 D6 05 B7 E2           fcb   $D6,$05,$B7,$E2,$04
               839C 04
   3718        839D               Img_SegaSonic_42 *@globals
   3719        839D 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$47,$00>>
               83A1 0F 47 00 06
               83A5 00 00 00 F8
               83A9 E1 09
   3720        83AB A0 00 06 C6           fcb   $A0,$00,$06,$C6,$E6,$0A,$06>>
               83AF E6 0A 06 00
               83B3 00 00 F8 E1
               83B7 0A C7
   3721        83B9 A0 06 C4 1B           fcb   $A0,$06,$C4,$1B,$0A
               83BD 0A
   3722        83BE               Img_SegaTrails_6 *@globals
   3723        83BE 00 07 00 00           fcb   $00,$07,$00,$00,$0F,$44,$00>>
               83C2 0F 44 00 00
               83C6 06 00 00 10
               83CA DE 05
   3724        83CC B6 6C                 fcb   $B6,$6C
   3725        83CE               Img_SegaTrails_5 *@globals
   3726        83CE 00 07 00 00           fcb   $00,$07,$00,$00,$0F,$44,$00>>
               83D2 0F 44 00 00
               83D6 06 00 00 00
               83DA DE 05
   3727        83DC B4 F6                 fcb   $B4,$F6
   3728        83DE               Img_SegaTrails_4 *@globals
   3729        83DE 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$44,$00>>
               83E2 0F 44 00 00
               83E6 06 00 00 E0
               83EA DE 05
   3730        83EC B3 80                 fcb   $B3,$80
   3731        83EE               Img_SegaTrails_3 *@globals
   3732        83EE 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$44,$00>>
               83F2 0F 44 00 00
               83F6 06 00 00 F0
               83FA DE 05
   3733        83FC B2 0A                 fcb   $B2,$0A
   3734        83FE               Img_SegaTrails_2 *@globals
   3735        83FE 07 10 00 00           fcb   $07,$10,$00,$00,$0F,$44,$00>>
               8402 0F 44 00 00
               8406 06 00 00 00
               840A DE 05
   3736        840C B0 38 00 06           fcb   $B0,$38,$00,$06,$00,$00,$F0>>
               8410 00 00 F0 DE
               8414 05 AE 5E
   3737        8417               Img_star_4 *@globals
   3738        8417 07 00 00 00           fcb   $07,$00,$00,$00,$0A,$16,$00>>
               841B 0A 16 00 06
               841F 00 00 00 FB
               8423 F5 05
   3739        8425 AB 97 05 AB           fcb   $AB,$97,$05,$AB,$02,$02
               8429 02 02
   3740        842B               Img_star_3 *@globals
   3741        842B 07 00 00 00           fcb   $07,$00,$00,$00,$06,$0E,$00>>
               842F 06 0E 00 06
               8433 00 00 00 FD
               8437 F9 05
   3742        8439 AA 00 05 A9           fcb   $AA,$00,$05,$A9,$A2,$01
               843D A2 01
   3743        843F               Img_sonicHand *@globals
   3744        843F 07 00 00 00           fcb   $07,$00,$00,$00,$0E,$2A,$00>>
               8443 0E 2A 00 06
               8447 0D 00 00 04
               844B 01 08
   3745        844D BF 81 05 A7           fcb   $BF,$81,$05,$A7,$D1,$05,$06>>
               8451 D1 05 06 BD
               8455 90
   3746        8456               Img_star_2 *@globals
   3747        8456 07 00 00 00           fcb   $07,$00,$00,$00,$02,$06,$00>>
               845A 02 06 00 06
               845E 00 0D 00 FF
               8462 FD 05
   3748        8464 A7 60 05 A7           fcb   $A7,$60,$05,$A7,$32,$01,$05>>
               8468 32 01 05 A6
               846C C3 05 A6 95
               8470 01
   3749        8471               Img_star_1 *@globals
   3750        8471 07 00 00 00           fcb   $07,$00,$00,$00,$02,$04,$00>>
               8475 02 04 00 06
               8479 00 0D 00 FF
               847D FE 05
   3751        847F A6 42 05 A6           fcb   $A6,$42,$05,$A6,$1E,$01,$05>>
               8483 1E 01 05 A5
               8487 CD 05 A5 A9
               848B 01
   3752        848C               Img_emblemBack08 *@globals
   3753        848C 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$27,$00>>
               8490 1F 27 00 00
               8494 06 00 00 10
               8498 DD 07
   3754        849A C9 32                 fcb   $C9,$32
   3755        849C               Img_emblemBack07 *@globals
   3756        849C 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               84A0 1F 1F 00 00
               84A4 06 00 00 10
               84A8 BD 06
   3757        84AA B9 F8                 fcb   $B9,$F8
   3758        84AC               Img_emblemBack09 *@globals
   3759        84AC 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$38,$00>>
               84B0 0F 38 00 00
               84B4 06 00 00 30
               84B8 B3 06
   3760        84BA B6 8B                 fcb   $B6,$8B
   3761        84BC               Img_emblemBack04 *@globals
   3762        84BC 07 00 00 00           fcb   $07,$00,$00,$00,$24,$09,$00>>
               84C0 24 09 00 00
               84C4 06 00 00 EE
               84C8 B3 05
   3763        84CA A4 0E                 fcb   $A4,$0E
   3764        84CC               Img_emblemBack03 *@globals
   3765        84CC 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$26,$00>>
               84D0 1F 26 00 00
               84D4 06 00 00 D0
               84D8 DD 06
   3766        84DA B2 AD                 fcb   $B2,$AD
   3767        84DC               Img_emblemBack06 *@globals
   3768        84DC 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1C,$00>>
               84E0 1F 1C 00 00
               84E4 06 00 00 F0
               84E8 DD 05
   3769        84EA A2 53                 fcb   $A2,$53
   3770        84EC               Img_emblemBack05 *@globals
   3771        84EC 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               84F0 1F 1F 00 00
               84F4 06 00 00 F0
               84F8 BD 06
   3772        84FA AE F7                 fcb   $AE,$F7
   3773        84FC               Img_tails_5 *@globals
   3774        84FC 07 00 00 00           fcb   $07,$00,$00,$00,$2B,$3F,$00>>
               8500 2B 3F 00 06
               8504 0D 00 00 03
               8508 0D 0A
   3775        850A B8 B4 07 C4           fcb   $B8,$B4,$07,$C4,$BA,$11,$0A>>
               850E BA 11 0A AE
               8512 41
   3776        8513               Img_tails_4 *@globals
   3777        8513 07 00 00 00           fcb   $07,$00,$00,$00,$2C,$3A,$00>>
               8517 2C 3A 00 06
               851B 00 00 00 03
               851F 12 0A
   3778        8521 A0 00 06 AA           fcb   $A0,$00,$06,$AA,$B8,$10
               8525 B8 10
   3779        8527               Img_tails_3 *@globals
   3780        8527 07 00 00 00           fcb   $07,$00,$00,$00,$2B,$3C,$00>>
               852B 2B 3C 00 06
               852F 00 00 00 04
               8533 11 0B
   3781        8535 CF C7 07 C0           fcb   $CF,$C7,$07,$C0,$4E,$0F
               8539 4E 0F
   3782        853B               Img_tails_2 *@globals
   3783        853B 07 00 00 00           fcb   $07,$00,$00,$00,$2B,$37,$00>>
               853F 2B 37 00 06
               8543 00 00 00 02
               8547 16 0B
   3784        8549 C3 61 06 A7           fcb   $C3,$61,$06,$A7,$07,$0F
               854D 07 0F
   3785        854F               Img_tails_1 *@globals
   3786        854F 07 00 00 00           fcb   $07,$00,$00,$00,$1B,$3F,$00>>
               8553 1B 3F 00 06
               8557 00 00 00 0C
               855B 11 0B
   3787        855D B7 ED 06 A3           fcb   $B7,$ED,$06,$A3,$99,$0E
               8561 99 0E
   3788        8563               Img_tailsHand *@globals
   3789        8563 07 00 00 00           fcb   $07,$00,$00,$00,$07,$12,$00>>
               8567 07 12 00 06
               856B 0D 00 00 04
               856F 06 06
   3790        8571 A2 05 05 A1           fcb   $A2,$05,$05,$A1,$B1,$02,$05>>
               8575 B1 02 05 A0
               8579 AE
   3791        857A               Img_sonic_1 *@globals
   3792        857A 07 00 00 00           fcb   $07,$00,$00,$00,$23,$42,$00>>
               857E 23 42 00 06
               8582 00 00 00 02
               8586 0E 0B
   3793        8588 A9 52 07 BC           fcb   $A9,$52,$07,$BC,$1F,$14
               858C 1F 14
   3794        858E               Img_sonic_2 *@globals
   3795        858E 07 00 00 00           fcb   $07,$00,$00,$00,$24,$53,$00>>
               8592 24 53 00 06
               8596 00 00 00 03
               859A 0D 0C
   3796        859C CD 86 08 BA           fcb   $CD,$86,$08,$BA,$D4,$17
               85A0 D4 17
   3797        85A2               Img_emblemBack02 *@globals
   3798        85A2 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               85A6 1F 1F 00 00
               85AA 06 00 00 D0
               85AE BD 07
   3799        85B0 B8 81                 fcb   $B8,$81
   3800        85B2               Img_emblemBack01 *@globals
   3801        85B2 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$37,$00>>
               85B6 0F 37 00 00
               85BA 06 00 00 C0
               85BE B3 07
   3802        85C0 B5 1D                 fcb   $B5,$1D
   3803        85C2               Img_sonic_5 *@globals
   3804        85C2 07 00 00 00           fcb   $07,$00,$00,$00,$23,$49,$00>>
               85C6 23 49 00 06
               85CA 0D 00 00 0C
               85CE 0A 0C
   3805        85D0 BE 6F 07 B0           fcb   $BE,$6F,$07,$B0,$D6,$14,$0B>>
               85D4 D6 14 0B A0
               85D8 00
   3806        85D9               Img_sonic_3 *@globals
   3807        85D9 07 00 00 00           fcb   $07,$00,$00,$00,$24,$46,$00>>
               85DD 24 46 00 06
               85E1 00 00 00 0B
               85E5 0D 0C
   3808        85E7 AE DF 07 AC           fcb   $AE,$DF,$07,$AC,$72,$15
               85EB 72 15
   3809        85ED               Img_sonic_4 *@globals
   3810        85ED 07 00 00 00           fcb   $07,$00,$00,$00,$23,$49,$00>>
               85F1 23 49 00 06
               85F5 00 00 00 0C
               85F9 0A 0C
   3811        85FB A0 00 07 A8           fcb   $A0,$00,$07,$A8,$3D,$14
               85FF 3D 14
   3812        8601               Img_emblemFront07 *@globals
   3813        8601 07 00 00 00           fcb   $07,$00,$00,$00,$12,$12,$00>>
               8605 12 12 00 00
               8609 06 00 00 F7
               860D 3D 06
   3814        860F A0 00                 fcb   $A0,$00
   3815        8611               Img_emblemFront08 *@globals
   3816        8611 07 00 00 00           fcb   $07,$00,$00,$00,$26,$25,$00>>
               8615 26 25 00 00
               8619 06 00 00 10
               861D 1D 08
   3817        861F B6 2B                 fcb   $B6,$2B
   3818        8621               Img_emblemFront05 *@globals
   3819        8621 07 00 00 00           fcb   $07,$00,$00,$00,$26,$25,$00>>
               8625 26 25 00 00
               8629 06 00 00 C9
               862D 1D 08
   3820        862F B1 66                 fcb   $B1,$66
   3821        8631               Img_emblemFront06 *@globals
   3822        8631 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               8635 1F 1F 00 00
               8639 06 00 00 F0
               863D 1D 07
   3823        863F A4 06                 fcb   $A4,$06
   3824        8641               Img_emblemFront03 *@globals
   3825        8641 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               8645 1F 1F 00 00
               8649 06 00 00 F0
               864D FD 07
   3826        864F A0 00                 fcb   $A0,$00
   3827        8651               Img_emblemFront04 *@globals
   3828        8651 07 00 00 00           fcb   $07,$00,$00,$00,$1B,$1F,$00>>
               8655 1B 1F 00 00
               8659 06 00 00 10
               865D FD 08
   3829        865F AE 51                 fcb   $AE,$51
   3830        8661               Img_emblemFront01 *@globals
   3831        8661 07 00 00 00           fcb   $07,$00,$00,$00,$3D,$03,$00>>
               8665 3D 03 00 00
               8669 06 00 00 E1
               866D F9 05
   3832        866F A0 00                 fcb   $A0,$00
   3833        8671               Img_emblemFront02 *@globals
   3834        8671 07 00 00 00           fcb   $07,$00,$00,$00,$1A,$1F,$00>>
               8675 1A 1F 00 00
               8679 06 00 00 D5
               867D FD 08
   3835        867F AB 5B                 fcb   $AB,$5B
   3836
   3837                                   INCLUD ANIMSCPT
   3838                           * Generated Code
   3839
   3840        8681 00                    fcb   0
   3841        8682               Ani_SegaSonic_3 *@globals
   3842        8682 8274                  fdb   Img_SegaSonic_13
   3843        8684 8253                  fdb   Img_SegaSonic_23
   3844        8686 8319                  fdb   Img_SegaSonic_33
   3845        8688 82D7                  fdb   Img_SegaSonic_43
   3846        868A FF                    fcb   _resetAnim
   3847        868B 00                    fcb   0
   3848        868C               Ani_SegaSonic_2 *@globals
   3849        868C 8232                  fdb   Img_SegaSonic_12
   3850        868E 833A                  fdb   Img_SegaSonic_22
   3851        8690 8295                  fdb   Img_SegaSonic_32
   3852        8692 839D                  fdb   Img_SegaSonic_42
   3853        8694 FF                    fcb   _resetAnim
   3854        8695 00                    fcb   0
   3855        8696               Ani_SegaSonic_1 *@globals
   3856        8696 82F8                  fdb   Img_SegaSonic_11
   3857        8698 82B6                  fdb   Img_SegaSonic_21
   3858        869A 837C                  fdb   Img_SegaSonic_31
   3859        869C 835B                  fdb   Img_SegaSonic_41
   3860        869E FF                    fcb   _resetAnim
   3861        869F 03                    fcb   3
   3862        86A0               Ani_smallStar *@globals
   3863        86A0 8456                  fdb   Img_star_2
   3864        86A2 8471                  fdb   Img_star_1
   3865        86A4 FF                    fcb   _resetAnim
   3866        86A5 01                    fcb   1
   3867        86A6               Ani_largeStar *@globals
   3868        86A6 8471                  fdb   Img_star_1
   3869        86A8 8456                  fdb   Img_star_2
   3870        86AA 842B                  fdb   Img_star_3
   3871        86AC 8456                  fdb   Img_star_2
   3872        86AE 8471                  fdb   Img_star_1
   3873        86B0 FA                    fcb   _nextSubRoutine
   3874        86B1 01                    fcb   1
   3875        86B2               Ani_tails *@globals
   3876        86B2 854F                  fdb   Img_tails_1
   3877        86B4 853B                  fdb   Img_tails_2
   3878        86B6 8527                  fdb   Img_tails_3
   3879        86B8 8513                  fdb   Img_tails_4
   3880        86BA 84FC                  fdb   Img_tails_5
   3881        86BC FA                    fcb   _nextSubRoutine
   3882        86BD 01                    fcb   1
   3883        86BE               Ani_sonic *@globals
   3884        86BE 857A                  fdb   Img_sonic_1
   3885        86C0 858E                  fdb   Img_sonic_2
   3886        86C2 85D9                  fdb   Img_sonic_3
   3887        86C4 85ED                  fdb   Img_sonic_4
   3888        86C6 FA                    fcb   _nextSubRoutine
   3889
   3890                                   INCLUD OBJINDEX
   3891                           * Generated Code
   3892
   3893        86C7               Obj_Index_Page
   3894        86C7 00                    fcb   $00
   3895        86C8 05                    fcb   $05
   3896        86C9 06                    fcb   $06
   3897        86CA 05                    fcb   $05
   3898        86CB 08                    fcb   $08
   3899        86CC 00                    fcb   $00
   3900        86CD 00                    fcb   $00
   3901        86CE 00                    fcb   $00
   3902        86CF 00                    fcb   $00
   3903        86D0 00                    fcb   $00
   3904        86D1 00                    fcb   $00
   3905        86D2 00                    fcb   $00
   3906        86D3 00                    fcb   $00
   3907        86D4 00                    fcb   $00
   3908        86D5 00                    fcb   $00
   3909        86D6 00                    fcb   $00
   3910        86D7 00                    fcb   $00
   3911        86D8 00                    fcb   $00
   3912        86D9 00                    fcb   $00
   3913        86DA 00                    fcb   $00
   3914        86DB 00                    fcb   $00
   3915        86DC 00                    fcb   $00
   3916        86DD 00                    fcb   $00
   3917        86DE 00                    fcb   $00
   3918        86DF 00                    fcb   $00
   3919        86E0 00                    fcb   $00
   3920        86E1 00                    fcb   $00
   3921        86E2 00                    fcb   $00
   3922        86E3 00                    fcb   $00
   3923        86E4 00                    fcb   $00
   3924        86E5 00                    fcb   $00
   3925        86E6 00                    fcb   $00
   3926        86E7 00                    fcb   $00
   3927        86E8 00                    fcb   $00
   3928        86E9 00                    fcb   $00
   3929        86EA 00                    fcb   $00
   3930        86EB 00                    fcb   $00
   3931        86EC 00                    fcb   $00
   3932        86ED 00                    fcb   $00
   3933        86EE 00                    fcb   $00
   3934        86EF 00                    fcb   $00
   3935        86F0 00                    fcb   $00
   3936        86F1 00                    fcb   $00
   3937        86F2 00                    fcb   $00
   3938        86F3 00                    fcb   $00
   3939        86F4 00                    fcb   $00
   3940        86F5 00                    fcb   $00
   3941        86F6 00                    fcb   $00
   3942        86F7 00                    fcb   $00
   3943        86F8 00                    fcb   $00
   3944        86F9 00                    fcb   $00
   3945        86FA 00                    fcb   $00
   3946        86FB 00                    fcb   $00
   3947        86FC 00                    fcb   $00
   3948        86FD 00                    fcb   $00
   3949        86FE 00                    fcb   $00
   3950        86FF 00                    fcb   $00
   3951        8700 00                    fcb   $00
   3952        8701 00                    fcb   $00
   3953        8702 00                    fcb   $00
   3954        8703 00                    fcb   $00
   3955        8704 00                    fcb   $00
   3956        8705 00                    fcb   $00
   3957        8706 00                    fcb   $00
   3958        8707 00                    fcb   $00
   3959        8708 00                    fcb   $00
   3960        8709 00                    fcb   $00
   3961        870A 00                    fcb   $00
   3962        870B 00                    fcb   $00
   3963        870C 00                    fcb   $00
   3964        870D 00                    fcb   $00
   3965        870E 00                    fcb   $00
   3966        870F 00                    fcb   $00
   3967        8710 00                    fcb   $00
   3968        8711 00                    fcb   $00
   3969        8712 00                    fcb   $00
   3970        8713 00                    fcb   $00
   3971        8714 00                    fcb   $00
   3972        8715 00                    fcb   $00
   3973        8716 00                    fcb   $00
   3974        8717 00                    fcb   $00
   3975        8718 00                    fcb   $00
   3976        8719 00                    fcb   $00
   3977        871A 00                    fcb   $00
   3978        871B 00                    fcb   $00
   3979        871C 00                    fcb   $00
   3980        871D 00                    fcb   $00
   3981        871E 00                    fcb   $00
   3982        871F 00                    fcb   $00
   3983        8720 00                    fcb   $00
   3984        8721 00                    fcb   $00
   3985        8722 00                    fcb   $00
   3986        8723 00                    fcb   $00
   3987        8724 00                    fcb   $00
   3988        8725 00                    fcb   $00
   3989        8726 00                    fcb   $00
   3990        8727 00                    fcb   $00
   3991        8728 00                    fcb   $00
   3992        8729 00                    fcb   $00
   3993        872A 00                    fcb   $00
   3994        872B 00                    fcb   $00
   3995        872C 00                    fcb   $00
   3996        872D 00                    fcb   $00
   3997        872E 00                    fcb   $00
   3998        872F 00                    fcb   $00
   3999        8730 00                    fcb   $00
   4000        8731 00                    fcb   $00
   4001        8732 00                    fcb   $00
   4002        8733 00                    fcb   $00
   4003        8734 00                    fcb   $00
   4004        8735 00                    fcb   $00
   4005        8736 00                    fcb   $00
   4006        8737 00                    fcb   $00
   4007        8738 00                    fcb   $00
   4008        8739 00                    fcb   $00
   4009        873A 00                    fcb   $00
   4010        873B 00                    fcb   $00
   4011        873C 00                    fcb   $00
   4012        873D 00                    fcb   $00
   4013        873E 00                    fcb   $00
   4014        873F 00                    fcb   $00
   4015        8740 00                    fcb   $00
   4016        8741 00                    fcb   $00
   4017        8742 00                    fcb   $00
   4018        8743 00                    fcb   $00
   4019        8744 00                    fcb   $00
   4020        8745 00                    fcb   $00
   4021        8746 00                    fcb   $00
   4022        8747 00                    fcb   $00
   4023        8748 00                    fcb   $00
   4024        8749 00                    fcb   $00
   4025        874A 00                    fcb   $00
   4026        874B 00                    fcb   $00
   4027        874C 00                    fcb   $00
   4028        874D 00                    fcb   $00
   4029        874E 00                    fcb   $00
   4030        874F 00                    fcb   $00
   4031        8750 00                    fcb   $00
   4032        8751 00                    fcb   $00
   4033        8752 00                    fcb   $00
   4034        8753 00                    fcb   $00
   4035        8754 00                    fcb   $00
   4036        8755 00                    fcb   $00
   4037        8756 00                    fcb   $00
   4038        8757 00                    fcb   $00
   4039        8758 00                    fcb   $00
   4040        8759 00                    fcb   $00
   4041        875A 00                    fcb   $00
   4042        875B 00                    fcb   $00
   4043        875C 00                    fcb   $00
   4044        875D 00                    fcb   $00
   4045        875E 00                    fcb   $00
   4046        875F 00                    fcb   $00
   4047        8760 00                    fcb   $00
   4048        8761 00                    fcb   $00
   4049        8762 00                    fcb   $00
   4050        8763 00                    fcb   $00
   4051        8764 00                    fcb   $00
   4052        8765 00                    fcb   $00
   4053        8766 00                    fcb   $00
   4054        8767 00                    fcb   $00
   4055        8768 00                    fcb   $00
   4056        8769 00                    fcb   $00
   4057        876A 00                    fcb   $00
   4058        876B 00                    fcb   $00
   4059        876C 00                    fcb   $00
   4060        876D 00                    fcb   $00
   4061        876E 00                    fcb   $00
   4062        876F 00                    fcb   $00
   4063        8770 00                    fcb   $00
   4064        8771 00                    fcb   $00
   4065        8772 00                    fcb   $00
   4066        8773 00                    fcb   $00
   4067        8774 00                    fcb   $00
   4068        8775 00                    fcb   $00
   4069        8776 00                    fcb   $00
   4070        8777 00                    fcb   $00
   4071        8778 00                    fcb   $00
   4072        8779 00                    fcb   $00
   4073        877A 00                    fcb   $00
   4074        877B 00                    fcb   $00
   4075        877C 00                    fcb   $00
   4076        877D 00                    fcb   $00
   4077        877E 00                    fcb   $00
   4078        877F 00                    fcb   $00
   4079        8780 00                    fcb   $00
   4080        8781 00                    fcb   $00
   4081        8782 00                    fcb   $00
   4082        8783 00                    fcb   $00
   4083        8784 00                    fcb   $00
   4084        8785 00                    fcb   $00
   4085        8786 00                    fcb   $00
   4086        8787 00                    fcb   $00
   4087        8788 00                    fcb   $00
   4088        8789 00                    fcb   $00
   4089        878A 00                    fcb   $00
   4090        878B 00                    fcb   $00
   4091        878C 00                    fcb   $00
   4092        878D 00                    fcb   $00
   4093        878E 00                    fcb   $00
   4094        878F 00                    fcb   $00
   4095        8790 00                    fcb   $00
   4096        8791 00                    fcb   $00
   4097        8792 00                    fcb   $00
   4098        8793 00                    fcb   $00
   4099        8794 00                    fcb   $00
   4100        8795 00                    fcb   $00
   4101        8796 00                    fcb   $00
   4102        8797 00                    fcb   $00
   4103        8798 00                    fcb   $00
   4104        8799 00                    fcb   $00
   4105        879A 00                    fcb   $00
   4106        879B 00                    fcb   $00
   4107        879C 00                    fcb   $00
   4108        879D 00                    fcb   $00
   4109        879E 00                    fcb   $00
   4110        879F 00                    fcb   $00
   4111        87A0 00                    fcb   $00
   4112        87A1 00                    fcb   $00
   4113        87A2 00                    fcb   $00
   4114        87A3 00                    fcb   $00
   4115        87A4 00                    fcb   $00
   4116        87A5 00                    fcb   $00
   4117        87A6 00                    fcb   $00
   4118        87A7 00                    fcb   $00
   4119        87A8 00                    fcb   $00
   4120        87A9 00                    fcb   $00
   4121        87AA 00                    fcb   $00
   4122        87AB 00                    fcb   $00
   4123        87AC 00                    fcb   $00
   4124        87AD 00                    fcb   $00
   4125        87AE 00                    fcb   $00
   4126        87AF 00                    fcb   $00
   4127        87B0 00                    fcb   $00
   4128        87B1 00                    fcb   $00
   4129        87B2 00                    fcb   $00
   4130        87B3 00                    fcb   $00
   4131        87B4 00                    fcb   $00
   4132        87B5 00                    fcb   $00
   4133        87B6 00                    fcb   $00
   4134        87B7 00                    fcb   $00
   4135        87B8 00                    fcb   $00
   4136        87B9 00                    fcb   $00
   4137        87BA 00                    fcb   $00
   4138        87BB 00                    fcb   $00
   4139        87BC 00                    fcb   $00
   4140        87BD 00                    fcb   $00
   4141        87BE 00                    fcb   $00
   4142        87BF 00                    fcb   $00
   4143        87C0 00                    fcb   $00
   4144        87C1 00                    fcb   $00
   4145        87C2 00                    fcb   $00
   4146        87C3 00                    fcb   $00
   4147        87C4 00                    fcb   $00
   4148        87C5 00                    fcb   $00
   4149        87C6 00                    fcb   $00
   4150        87C7               Obj_Index_Address
   4151        87C7 00 00                 fcb   $00,$00
   4152        87C9 DE F5                 fcb   $DE,$F5
   4153        87CB C1 37                 fcb   $C1,$37
   4154        87CD AD 4A                 fcb   $AD,$4A
   4155        87CF A0 00                 fcb   $A0,$00
   4156        87D1 00 00                 fcb   $00,$00
   4157        87D3 00 00                 fcb   $00,$00
   4158        87D5 00 00                 fcb   $00,$00
   4159        87D7 00 00                 fcb   $00,$00
   4160        87D9 00 00                 fcb   $00,$00
   4161        87DB 00 00                 fcb   $00,$00
   4162        87DD 00 00                 fcb   $00,$00
   4163        87DF 00 00                 fcb   $00,$00
   4164        87E1 00 00                 fcb   $00,$00
   4165        87E3 00 00                 fcb   $00,$00
   4166        87E5 00 00                 fcb   $00,$00
   4167        87E7 00 00                 fcb   $00,$00
   4168        87E9 00 00                 fcb   $00,$00
   4169        87EB 00 00                 fcb   $00,$00
   4170        87ED 00 00                 fcb   $00,$00
   4171        87EF 00 00                 fcb   $00,$00
   4172        87F1 00 00                 fcb   $00,$00
   4173        87F3 00 00                 fcb   $00,$00
   4174        87F5 00 00                 fcb   $00,$00
   4175        87F7 00 00                 fcb   $00,$00
   4176        87F9 00 00                 fcb   $00,$00
   4177        87FB 00 00                 fcb   $00,$00
   4178        87FD 00 00                 fcb   $00,$00
   4179        87FF 00 00                 fcb   $00,$00
   4180        8801 00 00                 fcb   $00,$00
   4181        8803 00 00                 fcb   $00,$00
   4182        8805 00 00                 fcb   $00,$00
   4183        8807 00 00                 fcb   $00,$00
   4184        8809 00 00                 fcb   $00,$00
   4185        880B 00 00                 fcb   $00,$00
   4186        880D 00 00                 fcb   $00,$00
   4187        880F 00 00                 fcb   $00,$00
   4188        8811 00 00                 fcb   $00,$00
   4189        8813 00 00                 fcb   $00,$00
   4190        8815 00 00                 fcb   $00,$00
   4191        8817 00 00                 fcb   $00,$00
   4192        8819 00 00                 fcb   $00,$00
   4193        881B 00 00                 fcb   $00,$00
   4194        881D 00 00                 fcb   $00,$00
   4195        881F 00 00                 fcb   $00,$00
   4196        8821 00 00                 fcb   $00,$00
   4197        8823 00 00                 fcb   $00,$00
   4198        8825 00 00                 fcb   $00,$00
   4199        8827 00 00                 fcb   $00,$00
   4200        8829 00 00                 fcb   $00,$00
   4201        882B 00 00                 fcb   $00,$00
   4202        882D 00 00                 fcb   $00,$00
   4203        882F 00 00                 fcb   $00,$00
   4204        8831 00 00                 fcb   $00,$00
   4205        8833 00 00                 fcb   $00,$00
   4206        8835 00 00                 fcb   $00,$00
   4207        8837 00 00                 fcb   $00,$00
   4208        8839 00 00                 fcb   $00,$00
   4209        883B 00 00                 fcb   $00,$00
   4210        883D 00 00                 fcb   $00,$00
   4211        883F 00 00                 fcb   $00,$00
   4212        8841 00 00                 fcb   $00,$00
   4213        8843 00 00                 fcb   $00,$00
   4214        8845 00 00                 fcb   $00,$00
   4215        8847 00 00                 fcb   $00,$00
   4216        8849 00 00                 fcb   $00,$00
   4217        884B 00 00                 fcb   $00,$00
   4218        884D 00 00                 fcb   $00,$00
   4219        884F 00 00                 fcb   $00,$00
   4220        8851 00 00                 fcb   $00,$00
   4221        8853 00 00                 fcb   $00,$00
   4222        8855 00 00                 fcb   $00,$00
   4223        8857 00 00                 fcb   $00,$00
   4224        8859 00 00                 fcb   $00,$00
   4225        885B 00 00                 fcb   $00,$00
   4226        885D 00 00                 fcb   $00,$00
   4227        885F 00 00                 fcb   $00,$00
   4228        8861 00 00                 fcb   $00,$00
   4229        8863 00 00                 fcb   $00,$00
   4230        8865 00 00                 fcb   $00,$00
   4231        8867 00 00                 fcb   $00,$00
   4232        8869 00 00                 fcb   $00,$00
   4233        886B 00 00                 fcb   $00,$00
   4234        886D 00 00                 fcb   $00,$00
   4235        886F 00 00                 fcb   $00,$00
   4236        8871 00 00                 fcb   $00,$00
   4237        8873 00 00                 fcb   $00,$00
   4238        8875 00 00                 fcb   $00,$00
   4239        8877 00 00                 fcb   $00,$00
   4240        8879 00 00                 fcb   $00,$00
   4241        887B 00 00                 fcb   $00,$00
   4242        887D 00 00                 fcb   $00,$00
   4243        887F 00 00                 fcb   $00,$00
   4244        8881 00 00                 fcb   $00,$00
   4245        8883 00 00                 fcb   $00,$00
   4246        8885 00 00                 fcb   $00,$00
   4247        8887 00 00                 fcb   $00,$00
   4248        8889 00 00                 fcb   $00,$00
   4249        888B 00 00                 fcb   $00,$00
   4250        888D 00 00                 fcb   $00,$00
   4251        888F 00 00                 fcb   $00,$00
   4252        8891 00 00                 fcb   $00,$00
   4253        8893 00 00                 fcb   $00,$00
   4254        8895 00 00                 fcb   $00,$00
   4255        8897 00 00                 fcb   $00,$00
   4256        8899 00 00                 fcb   $00,$00
   4257        889B 00 00                 fcb   $00,$00
   4258        889D 00 00                 fcb   $00,$00
   4259        889F 00 00                 fcb   $00,$00
   4260        88A1 00 00                 fcb   $00,$00
   4261        88A3 00 00                 fcb   $00,$00
   4262        88A5 00 00                 fcb   $00,$00
   4263        88A7 00 00                 fcb   $00,$00
   4264        88A9 00 00                 fcb   $00,$00
   4265        88AB 00 00                 fcb   $00,$00
   4266        88AD 00 00                 fcb   $00,$00
   4267        88AF 00 00                 fcb   $00,$00
   4268        88B1 00 00                 fcb   $00,$00
   4269        88B3 00 00                 fcb   $00,$00
   4270        88B5 00 00                 fcb   $00,$00
   4271        88B7 00 00                 fcb   $00,$00
   4272        88B9 00 00                 fcb   $00,$00
   4273        88BB 00 00                 fcb   $00,$00
   4274        88BD 00 00                 fcb   $00,$00
   4275        88BF 00 00                 fcb   $00,$00
   4276        88C1 00 00                 fcb   $00,$00
   4277        88C3 00 00                 fcb   $00,$00
   4278        88C5 00 00                 fcb   $00,$00
   4279        88C7 00 00                 fcb   $00,$00
   4280        88C9 00 00                 fcb   $00,$00
   4281        88CB 00 00                 fcb   $00,$00
   4282        88CD 00 00                 fcb   $00,$00
   4283        88CF 00 00                 fcb   $00,$00
   4284        88D1 00 00                 fcb   $00,$00
   4285        88D3 00 00                 fcb   $00,$00
   4286        88D5 00 00                 fcb   $00,$00
   4287        88D7 00 00                 fcb   $00,$00
   4288        88D9 00 00                 fcb   $00,$00
   4289        88DB 00 00                 fcb   $00,$00
   4290        88DD 00 00                 fcb   $00,$00
   4291        88DF 00 00                 fcb   $00,$00
   4292        88E1 00 00                 fcb   $00,$00
   4293        88E3 00 00                 fcb   $00,$00
   4294        88E5 00 00                 fcb   $00,$00
   4295        88E7 00 00                 fcb   $00,$00
   4296        88E9 00 00                 fcb   $00,$00
   4297        88EB 00 00                 fcb   $00,$00
   4298        88ED 00 00                 fcb   $00,$00
   4299        88EF 00 00                 fcb   $00,$00
   4300        88F1 00 00                 fcb   $00,$00
   4301        88F3 00 00                 fcb   $00,$00
   4302        88F5 00 00                 fcb   $00,$00
   4303        88F7 00 00                 fcb   $00,$00
   4304        88F9 00 00                 fcb   $00,$00
   4305        88FB 00 00                 fcb   $00,$00
   4306        88FD 00 00                 fcb   $00,$00
   4307        88FF 00 00                 fcb   $00,$00
   4308        8901 00 00                 fcb   $00,$00
   4309        8903 00 00                 fcb   $00,$00
   4310        8905 00 00                 fcb   $00,$00
   4311        8907 00 00                 fcb   $00,$00
   4312        8909 00 00                 fcb   $00,$00
   4313        890B 00 00                 fcb   $00,$00
   4314        890D 00 00                 fcb   $00,$00
   4315        890F 00 00                 fcb   $00,$00
   4316        8911 00 00                 fcb   $00,$00
   4317        8913 00 00                 fcb   $00,$00
   4318        8915 00 00                 fcb   $00,$00
   4319        8917 00 00                 fcb   $00,$00
   4320        8919 00 00                 fcb   $00,$00
   4321        891B 00 00                 fcb   $00,$00
   4322        891D 00 00                 fcb   $00,$00
   4323        891F 00 00                 fcb   $00,$00
   4324        8921 00 00                 fcb   $00,$00
   4325        8923 00 00                 fcb   $00,$00
   4326        8925 00 00                 fcb   $00,$00
   4327        8927 00 00                 fcb   $00,$00
   4328        8929 00 00                 fcb   $00,$00
   4329        892B 00 00                 fcb   $00,$00
   4330        892D 00 00                 fcb   $00,$00
   4331        892F 00 00                 fcb   $00,$00
   4332        8931 00 00                 fcb   $00,$00
   4333        8933 00 00                 fcb   $00,$00
   4334        8935 00 00                 fcb   $00,$00
   4335        8937 00 00                 fcb   $00,$00
   4336        8939 00 00                 fcb   $00,$00
   4337        893B 00 00                 fcb   $00,$00
   4338        893D 00 00                 fcb   $00,$00
   4339        893F 00 00                 fcb   $00,$00
   4340        8941 00 00                 fcb   $00,$00
   4341        8943 00 00                 fcb   $00,$00
   4342        8945 00 00                 fcb   $00,$00
   4343        8947 00 00                 fcb   $00,$00
   4344        8949 00 00                 fcb   $00,$00
   4345        894B 00 00                 fcb   $00,$00
   4346        894D 00 00                 fcb   $00,$00
   4347        894F 00 00                 fcb   $00,$00
   4348        8951 00 00                 fcb   $00,$00
   4349        8953 00 00                 fcb   $00,$00
   4350        8955 00 00                 fcb   $00,$00
   4351        8957 00 00                 fcb   $00,$00
   4352        8959 00 00                 fcb   $00,$00
   4353        895B 00 00                 fcb   $00,$00
   4354        895D 00 00                 fcb   $00,$00
   4355        895F 00 00                 fcb   $00,$00
   4356        8961 00 00                 fcb   $00,$00
   4357        8963 00 00                 fcb   $00,$00
   4358        8965 00 00                 fcb   $00,$00
   4359        8967 00 00                 fcb   $00,$00
   4360        8969 00 00                 fcb   $00,$00
   4361        896B 00 00                 fcb   $00,$00
   4362        896D 00 00                 fcb   $00,$00
   4363        896F 00 00                 fcb   $00,$00
   4364        8971 00 00                 fcb   $00,$00
   4365        8973 00 00                 fcb   $00,$00
   4366        8975 00 00                 fcb   $00,$00
   4367        8977 00 00                 fcb   $00,$00
   4368        8979 00 00                 fcb   $00,$00
   4369        897B 00 00                 fcb   $00,$00
   4370        897D 00 00                 fcb   $00,$00
   4371        897F 00 00                 fcb   $00,$00
   4372        8981 00 00                 fcb   $00,$00
   4373        8983 00 00                 fcb   $00,$00
   4374        8985 00 00                 fcb   $00,$00
   4375        8987 00 00                 fcb   $00,$00
   4376        8989 00 00                 fcb   $00,$00
   4377        898B 00 00                 fcb   $00,$00
   4378        898D 00 00                 fcb   $00,$00
   4379        898F 00 00                 fcb   $00,$00
   4380        8991 00 00                 fcb   $00,$00
   4381        8993 00 00                 fcb   $00,$00
   4382        8995 00 00                 fcb   $00,$00
   4383        8997 00 00                 fcb   $00,$00
   4384        8999 00 00                 fcb   $00,$00
   4385        899B 00 00                 fcb   $00,$00
   4386        899D 00 00                 fcb   $00,$00
   4387        899F 00 00                 fcb   $00,$00
   4388        89A1 00 00                 fcb   $00,$00
   4389        89A3 00 00                 fcb   $00,$00
   4390        89A5 00 00                 fcb   $00,$00
   4391        89A7 00 00                 fcb   $00,$00
   4392        89A9 00 00                 fcb   $00,$00
   4393        89AB 00 00                 fcb   $00,$00
   4394        89AD 00 00                 fcb   $00,$00
   4395        89AF 00 00                 fcb   $00,$00
   4396        89B1 00 00                 fcb   $00,$00
   4397        89B3 00 00                 fcb   $00,$00
   4398        89B5 00 00                 fcb   $00,$00
   4399        89B7 00 00                 fcb   $00,$00
   4400        89B9 00 00                 fcb   $00,$00
   4401        89BB 00 00                 fcb   $00,$00
   4402        89BD 00 00                 fcb   $00,$00
   4403        89BF 00 00                 fcb   $00,$00
   4404        89C1 00 00                 fcb   $00,$00
   4405        89C3 00 00                 fcb   $00,$00
   4406        89C5 00 00                 fcb   $00,$00
   4407
   4408                                   INCLUD SOUNDIDX * A rendre dynami>>
   4409                           * Generated Code
   4410
   4411        89C7               Pcm_SEGA *@globals
   4412        89C7 0E A0 00 DF           fcb   $0E,$A0,$00,$DF,$F6
               89CB F6
   4413        89CC 0D A0 00 C1           fcb   $0D,$A0,$00,$C1,$7E
               89D0 7E
   4414        89D1 FF                    fcb   $FF
   4415        89D2               Psg_TitleScreen *@globals
   4416        89D2 08 A5 53 AB           fcb   $08,$A5,$53,$AB,$5B
               89D6 5B
   4417        89D7 FF                    fcb   $FF
   4418
   4419                                   INCLUD LOADACT
   4420                           * Generated Code
   4421
   4422        89D8               LoadAct
   4423  3     89D8 8E   0000             ldx   #$0000                   * >>
   4424  2     89DB C6   62               ldb   #$62                     * >>
   4425  5     89DD F7   E7E6             stb   $E7E6                    * >>
   4426  8     89E0 BD   7CD1             jsr   ClearCartMem
   4427  5     89E3 B6   E7DD             lda   $E7DD                    * >>
   4428  2     89E6 84   F0               anda  #$F0
   4429  2     89E8 8B   00               adda  #$00                     * >>
   4430  5     89EA B7   E7DD             sta   $E7DD
   4431  2     89ED 84   0F               anda  #$0F
   4432  2     89EF 8B   80               adda  #$80
   4433  5     89F1 B7   7186             sta   screen_border_color+1    * >>
   4434  8     89F4 BD   716D             jsr   WaitVBL
   4435  3     89F7 8E   0000             ldx   #$0000                   * >>
   4436  2     89FA C6   63               ldb   #$63                     * >>
   4437  5     89FC F7   E7E6             stb   $E7E6                    * >>
   4438  8     89FF BD   7CD1             jsr   ClearCartMem
   4439  3     8A02 CC   8A0C             ldd   #Pal_SEGA
   4440  6     8A05 FD   7D0C             std   Ptr_palette
   4441  8     8A08 BD   7D4E             jsr   UpdatePalette
   4442  5     8A0B 39                    rts
   4443
    193                            
    194
   4444                                   INCLUD PALETTE
   4445                           * Generated Code
   4446
   4447        8A0C               Pal_SEGA * @globals
   4448        8A0C FF0F                  fdb   $ff0f
   4449        8A0E 4404                  fdb   $4404
   4450        8A10 1101                  fdb   $1101
   4451        8A12 0000                  fdb   $0000
   4452        8A14 0300                  fdb   $0300
   4453        8A16 0F00                  fdb   $0f00
   4454        8A18 5E03                  fdb   $5e03
   4455        8A1A 2501                  fdb   $2501
   4456        8A1C B70B                  fdb   $b70b
   4457        8A1E 740B                  fdb   $740b
   4458        8A20 410B                  fdb   $410b
   4459        8A22 100B                  fdb   $100b
   4460        8A24 110C                  fdb   $110c
   4461        8A26 0008                  fdb   $0008
   4462        8A28 100B                  fdb   $100b
   4463        8A2A 100B                  fdb   $100b
   4464
   4465        8A2C               Pal_TitleScreen * @globals
   4466        8A2C FF0F                  fdb   $ff0f
   4467        8A2E 0000                  fdb   $0000
   4468        8A30 0800                  fdb   $0800
   4469        8A32 0200                  fdb   $0200
   4470        8A34 5D03                  fdb   $5d03
   4471        8A36 1600                  fdb   $1600
   4472        8A38 4F00                  fdb   $4f00
   4473        8A3A 2700                  fdb   $2700
   4474        8A3C FF00                  fdb   $ff00
   4475        8A3E F300                  fdb   $f300
   4476        8A40 F80F                  fdb   $f80f
   4477        8A42 750C                  fdb   $750c
   4478        8A44 530E                  fdb   $530e
   4479        8A46 2205                  fdb   $2205
   4480        8A48 000E                  fdb   $000e
   4481        8A4A 0100                  fdb   $0100
   4482
   4483        8A4C               Pal_SEGAMid * @globals
   4484        8A4C FF0F                  fdb   $ff0f
   4485        8A4E 4404                  fdb   $4404
   4486        8A50 1101                  fdb   $1101
   4487        8A52 0000                  fdb   $0000
   4488        8A54 0300                  fdb   $0300
   4489        8A56 0F00                  fdb   $0f00
   4490        8A58 5E03                  fdb   $5e03
   4491        8A5A 2501                  fdb   $2501
   4492        8A5C B70B                  fdb   $b70b
   4493        8A5E 740B                  fdb   $740b
   4494        8A60 410B                  fdb   $410b
   4495        8A62 100B                  fdb   $100b
   4496        8A64 110C                  fdb   $110c
   4497        8A66 0008                  fdb   $0008
   4498        8A68 FF0F                  fdb   $ff0f
   4499        8A6A 100B                  fdb   $100b
   4500
   4501        8A6C               Pal_SonicAndTailsIn * @globals
   4502        8A6C 0000                  fdb   $0000
   4503        8A6E FF0F                  fdb   $ff0f
   4504        8A70 0000                  fdb   $0000
   4505        8A72 0000                  fdb   $0000
   4506        8A74 0000                  fdb   $0000
   4507        8A76 0000                  fdb   $0000
   4508        8A78 0000                  fdb   $0000
   4509        8A7A 0000                  fdb   $0000
   4510        8A7C 0000                  fdb   $0000
   4511        8A7E 0000                  fdb   $0000
   4512        8A80 0000                  fdb   $0000
   4513        8A82 0000                  fdb   $0000
   4514        8A84 0000                  fdb   $0000
   4515        8A86 0000                  fdb   $0000
   4516        8A88 FF0F                  fdb   $ff0f
   4517        8A8A FF0F                  fdb   $ff0f
   4518
   4519        8A8C               Pal_SEGAEnd * @globals
   4520        8A8C FF0F                  fdb   $ff0f
   4521        8A8E 4404                  fdb   $4404
   4522        8A90 1101                  fdb   $1101
   4523        8A92 0000                  fdb   $0000
   4524        8A94 0300                  fdb   $0300
   4525        8A96 0F00                  fdb   $0f00
   4526        8A98 5E03                  fdb   $5e03
   4527        8A9A 2501                  fdb   $2501
   4528        8A9C B70B                  fdb   $b70b
   4529        8A9E 740B                  fdb   $740b
   4530        8AA0 410B                  fdb   $410b
   4531        8AA2 100B                  fdb   $100b
   4532        8AA4 110C                  fdb   $110c
   4533        8AA6 0008                  fdb   $0008
   4534        8AA8 FF0F                  fdb   $ff0f
   4535        8AAA FF0F                  fdb   $ff0f
    196
    197

000000 Total Errors

000686 Total Symbols
     1x          Label 7327 am_ObjectMove_01
     1x          Label 733D am_ObjectMove_02
     3x          Label 71EF am_RunNextObject
     2x          Label 718D am_SwapVideoPage
     2x          Equ   0004 anim
     0x          Label 7294 AnimateSprite
     1x          Label 72C3 Anim_dyn
     1x          Label 7316 Anim_End
     1x          Label 730B Anim_End_FA
     1x          Label 7300 Anim_End_FB
     1x          Label 72EE Anim_End_FC
     1x          Label 72E6 Anim_End_FD
     1x          Label 72D5 Anim_End_FE
     1x          Label 72DD Anim_End_FE_dyn
     1x          Label 72CA Anim_End_FF
     8x          Equ   0008 anim_frame
     4x          Equ   0009 anim_frame_duration
     2x          Label 72B5 Anim_Next
     1x          Label 72A2 Anim_Run
     1x          Label 72C9 Anim_Wait
     0x          Label 86A6 Ani_largeStar
     0x          Label 8696 Ani_SegaSonic_1
     0x          Label 868C Ani_SegaSonic_2
     0x          Label 8682 Ani_SegaSonic_3
     0x          Label 86A0 Ani_smallStar
     0x          Label 86BE Ani_sonic
     0x          Label 86B2 Ani_tails
     0x          Label 7BEC BBA0
     1x          Label 7BF5 BBA1
     1x          Label 7C16 BBA_DivideCell
     1x          Label 7C1B BBA_dyn
     1x          Label 7C0B BBA_FitCell
     2x          Label 7BFC BBA_Next
     2x          Label 7C36 BBA_rts
     0x          Label 7C45 BBF0
     1x          Label 7C5B BBF1
     1x          Label 7C84 BBF_AddNewEntry
     3x          Label 7C87 BBF_AddNewEntryAtEnd
     1x          Label 7CC4 BBF_ExpandAtEnd
     1x          Label 7CA3 BBF_ExpandAtStart
     1x          Label 7C8A BBF_FindFreeSlot
     0x          Label 7CAE BBF_Join
     2x          Label 7C6F BBF_Next
     4x          Label 7CCF BBF_rts
     1x          Label 7C92 BBF_SetNewEntry
     2x          Label 7C99 BBF_SetNewEntryNextentry
     3x          Label 7C9E BBF_SetNewEntryPrevLink
     2x          Label 7BE5 BgBufferAlloc
     2x          Label 7C38 BgBufferFree
     1x          Label 7D0E Black_palette
     0x          Equ   0009 buf_bgdata
     2x          Equ   0024 buf_Lst_Priority_Unset
     1x          Equ   0007 buf_prev_mapping_frame
     5x          Equ   0011 buf_prev_render_flags
     0x          Equ   000D buf_prev_x1_pixel
     0x          Equ   000F buf_prev_x2_pixel
     0x          Equ   000D buf_prev_xy1_pixel
     0x          Equ   000F buf_prev_xy2_pixel
     1x          Equ   000B buf_prev_xy_pixel
     0x          Equ   000B buf_prev_x_pixel
     0x          Equ   000E buf_prev_y1_pixel
     0x          Equ   0010 buf_prev_y2_pixel
     0x          Equ   000C buf_prev_y_pixel
     5x          Equ   0000 buf_priority
     4x          Equ   0003 buf_priority_next_obj
     1x          Equ   0001 buf_priority_prev_obj
    33x          Equ   0000 buf_Tbl_Priority_First_Entry
    18x          Equ   0012 buf_Tbl_Priority_Last_Entry
     0x          Equ   0040 c1_button_A_mask
     0x          Equ   0002 c1_button_down_mask
     0x          Equ   0004 c1_button_left_mask
     0x          Equ   0008 c1_button_right_mask
     0x          Equ   0001 c1_button_up_mask
     0x          Equ   0080 c2_button_A_mask
     0x          Equ   0020 c2_button_down_mask
     0x          Equ   0040 c2_button_left_mask
     0x          Equ   0080 c2_button_right_mask
     0x          Equ   0010 c2_button_up_mask
     7x          Equ   0003 cell_end
     1x          Label 7C32 cell_end_return
     5x          Equ   0040 cell_size
     5x          Equ   0001 cell_start
     4x          Equ   6000 cell_start_adr
     1x          Label 745A CheckSpritesRefresh
     2x          Label 7CD1 ClearCartMem
     1x          Label 7CE3 ClearCartMem_2
     1x          Label 7CFF ClearCartMem_3
     4x          Label 7421 ClearObj
     1x          Label 7448 CLO_1
     0x          Label 7452 CLO_2
     4x          Label 7D0B cpt
     0x          Label 754A CSR_CheckDelHide
     3x          Label 7734 CSR_CheckDraw
     2x          Label 7657 CSR_CheckErase
     1x          Label 7677 CSR_CheckErase_InRange
     0x          Label 7575 CSR_CheckPlayFieldCoord
     0x          Label 7550 CSR_CheckRefresh
     1x          Label 75A5 CSR_CheckVerticalPosition
     2x          Label 75D7 CSR_CVP_Continue
     1x          Label 757B CSR_DoNotDisplaySprite
     1x          Label 7631 CSR_DontCheckXFrontier
     1x          Label 7645 CSR_DontCheckXFrontier_end
     3x          Label 759E CSR_NextObject
     1x          Label 75C1 CSR_NoDefinedFrame
     1x          Label 75CF CSR_NoFrameFound
     1x          Label 75B5 CSR_NoOverlay
     1x          Label 74CB CSR_P1B0
     1x          Label 7539 CSR_P1B1
     1x          Label 74BE CSR_P2B0
     1x          Label 752C CSR_P2B1
     1x          Label 74B1 CSR_P3B0
     1x          Label 751F CSR_P3B1
     1x          Label 74A4 CSR_P4B0
     1x          Label 7512 CSR_P4B1
     1x          Label 7497 CSR_P5B0
     1x          Label 7505 CSR_P5B1
     1x          Label 748A CSR_P6B0
     1x          Label 74F8 CSR_P6B1
     1x          Label 747D CSR_P7B0
     1x          Label 74EB CSR_P7B1
     0x          Label 7470 CSR_P8B0
     0x          Label 74DE CSR_P8B1
    21x          Label 7547 CSR_ProcessEachPriorityLevel
     1x          Label 74D8 CSR_rtsB0
     1x          Label 7546 CSR_rtsB1
     1x          Label 7764 CSR_SDT1
     1x          Label 776B CSR_SDT2
     1x          Label 7770 CSR_SDT3
     0x          Label 746B CSR_SetBuffer0
     1x          Label 74D9 CSR_SetBuffer1
     3x          Label 778B CSR_SetDrawFalse
     0x          Label 7756 CSR_SetDrawTrue
     1x          Label 7783 CSR_SetEraseDrawFalse
     2x          Label 772C CSR_SetEraseFalse
     7x          Label 7697 CSR_SetEraseTrue
     2x          Label 7776 CSR_SetHide
    10x          Label 764F CSR_SetOutOfRange
     0x          Label 745A CSR_Start
     0x          Label 770B CSR_SubDrawCheckCollision
     4x          Label 7703 CSR_SubDrawSearch
     2x          Label 7700 CSR_SubDrawSpriteSearchInit
     0x          Label 76B8 CSR_SubEraseCheckCollisionB0
     0x          Label 76E0 CSR_SubEraseCheckCollisionB1
     4x          Label 76B0 CSR_SubEraseSearchB0
     5x          Label 76D8 CSR_SubEraseSearchB1
     1x          Label 76A8 CSR_SubEraseSpriteSearchInit
     0x          Label 7559 CSR_UpdSpriteImageBasedOnMirror
    19x          Label 7454 cur_priority
     4x          Label 7458 cur_ptr_sub_obj_draw
     9x          Label 7456 cur_ptr_sub_obj_erase
     0x          Label 735F DeleteObject
     0x          Label 7359 DeleteObject_x
     1x          Label 721B DisplaySprite
     0x          Label 7215 DisplaySprite_x
     0x          Equ   604F dk_destination
     0x          Equ   6049 dk_lecteur
     0x          Equ   604A dk_piste
     0x          Equ   604B dk_pisteL
     0x          Equ   604C dk_secteur
     1x          Label 73C3 DOB_ChainNextB0
     1x          Label 740D DOB_ChainNextB1
     1x          Label 73A3 DOB_ChainPrevB0
     1x          Label 73E5 DOB_ChainPrevB1
     1x          Label 73AD DOB_CheckPrioNextB0
     1x          Label 73EF DOB_CheckPrioNextB1
     1x          Label 738D DOB_RemoveFromDPSB0
     1x          Label 73CF DOB_RemoveFromDPSB1
     2x          Label 740B DOB_rts
     1x          Label 7361 DOB_Start
     2x          Label 7376 DOB_TestOnscreen1
     0x          Label 7366 DOB_ToDeleteFlag0
     0x          Label 737B DOB_ToDeleteFlag1
     0x          Label 736C DOB_Unset0
     0x          Label 7381 DOB_Unset1
     0x          Label 71A6 Dpad_Held
     0x          Label 71A8 Dpad_Press
     2x          Label 71A4 Dpad_Read
    27x          Label 64DE DPS_buffer_0
    25x          Label 6544 DPS_buffer_1
     1x          Label 79F2 DrawSprites
     4x          Equ   0001 draw_routine
     1x          Label 7AF2 DRS_DrawWithoutBackupB0
     1x          Label 7BC1 DRS_DrawWithoutBackupB1
     1x          Label 7B29 DRS_dyn1
     1x          Label 7B3B DRS_dyn2
     3x          Label 7ABD DRS_dyn3B0
     3x          Label 7B8C DRS_dyn3B1
     3x          Label 7AEA DRS_NextObjectB0
     3x          Label 7BB9 DRS_NextObjectB1
     1x          Label 7AE5 DRS_NoOverlayB0
     1x          Label 7BB4 DRS_NoOverlayB1
     1x          Label 7A2F DRS_P1B0
     1x          Label 7A70 DRS_P1B1
     1x          Label 7A27 DRS_P2B0
     1x          Label 7A68 DRS_P2B1
     1x          Label 7A1F DRS_P3B0
     1x          Label 7A60 DRS_P3B1
     1x          Label 7A17 DRS_P4B0
     1x          Label 7A58 DRS_P4B1
     1x          Label 7A0F DRS_P5B0
     1x          Label 7A50 DRS_P5B1
     1x          Label 7A07 DRS_P6B0
     1x          Label 7A48 DRS_P6B1
     1x          Label 79FF DRS_P7B0
     1x          Label 7A40 DRS_P7B1
     0x          Label 79F7 DRS_P8B0
     1x          Label 7A38 DRS_P8B1
     9x          Label 7A79 DRS_ProcessEachPriorityLevelB0
     9x          Label 7B48 DRS_ProcessEachPriorityLevelB1
     1x          Label 7A37 DRS_rtsB0
     1x          Label 7A78 DRS_rtsB1
     0x          Label 79F2 DRS_Start
     1x          Label 7AE7 DRS_UpdateRenderFlagB0
     1x          Label 7BB6 DRS_UpdateRenderFlagB1
     4x          Label 7B16 DRS_XYToAddress
     1x          Label 7B1D DRS_XYToAddressPositive
     0x          Label 7B23 DRS_XYToAddressRAM1First
     1x          Label 7B35 DRS_XYToAddressRAM2First
     0x          Label 724C DSP_addFirstNode
     1x          Label 725C DSP_addToExistingNode
     1x          Label 7238 DSP_BufferPositionned
     1x          Label 7281 DSP_ChangePriority
     1x          Label 7245 DSP_CheckLastEntry
     0x          Label 7242 DSP_InitPriority
     1x          Label 7271 DSP_LinkBuffer1
     1x          Label 727D DSP_LinkCurWithPrev
     1x          Label 725A DSP_rts
     0x          Label 7228 DSP_SetBuffer0
     1x          Label 7231 DSP_SetBuffer1
     1x          Label 721D DSP_Start
     0x          Label 66DE Dynamic_Object_RAM
     2x          Label 705C Dynamic_Object_RAM_End
     3x          Equ   0007 entry_size
     1x          Label 779A EraseSprites
     4x          Equ   0006 erase_nb_cell
     2x          Equ   0004 erase_routine
     0x          Label 7891 ESP_CallEraseRoutineB0
     1x          Label 78A4 ESP_CallEraseRoutineB0_00
     0x          Label 78E2 ESP_CallEraseRoutineB1
     1x          Label 78F5 ESP_CallEraseRoutineB1_00
     1x          Label 7886 ESP_CheckEraseB0
     1x          Label 78D7 ESP_CheckEraseB1
     8x          Label 7874 ESP_CheckPriorityB0
     8x          Label 78C5 ESP_CheckPriorityB1
     0x          Label 78B1 ESP_FreeEraseBufferB0
     0x          Label 7902 ESP_FreeEraseBufferB1
     2x          Label 78BC ESP_NextObjectB0
     2x          Label 790D ESP_NextObjectB1
     0x          Label 779F ESP_P1B0
     1x          Label 7808 ESP_P1B1
     1x          Label 77AC ESP_P2B0
     1x          Label 7815 ESP_P2B1
     1x          Label 77B9 ESP_P3B0
     1x          Label 7822 ESP_P3B1
     1x          Label 77C6 ESP_P4B0
     1x          Label 782F ESP_P4B1
     1x          Label 77D3 ESP_P5B0
     1x          Label 783C ESP_P5B1
     1x          Label 77E0 ESP_P6B0
     1x          Label 7849 ESP_P6B1
     1x          Label 77ED ESP_P7B0
     1x          Label 7856 ESP_P7B1
     1x          Label 77FA ESP_P8B0
     1x          Label 7863 ESP_P8B1
     9x          Label 7871 ESP_ProcessEachPriorityLevelB0
     9x          Label 78C2 ESP_ProcessEachPriorityLevelB1
     1x          Label 7807 ESP_rtsB0
     1x          Label 7870 ESP_rtsB1
     0x          Label 779A ESP_Start
     0x          Label 7878 ESP_UnsetCheckRefreshB0
     0x          Label 78C9 ESP_UnsetCheckRefreshB1
     1x          Label 78B4 ESP_UnsetOnScreenFlagB0
     1x          Label 7905 ESP_UnsetOnScreenFlagB1
     0x          Equ   001B ext_variables
     0x          Label 71A7 Fire_Held
     0x          Label 71A9 Fire_Press
     2x          Label 71A5 Fire_Read
     0x          Label 6138 Glb_Camera_X_Pos
     0x          Label 613A Glb_Camera_Y_Pos
    10x          Label 6137 Glb_Cur_Wrk_Screen_Id
     1x          Label 716C Glb_MainCharacter_Is_Dead
     6x          Label 613C Glb_Sprite_Screen_Pos_Part1
     6x          Label 613E Glb_Sprite_Screen_Pos_Part2
     0x          Equ   00FE goBackNFrames
     0x          Equ   00FD goToAnimation
     0x          Equ   0038 gravity
     0x          Equ   0000 id
     1x          Equ   0006 image_center_offset
     5x          Equ   000A image_set
     2x          Equ   0004 image_subset_x1_offset
     1x          Equ   0005 image_subset_y1_offset
     2x          Equ   0004 image_x_size
     1x          Equ   0005 image_y_size
     0x          Label 85B2 Img_emblemBack01
     0x          Label 85A2 Img_emblemBack02
     0x          Label 84CC Img_emblemBack03
     0x          Label 84BC Img_emblemBack04
     0x          Label 84EC Img_emblemBack05
     0x          Label 84DC Img_emblemBack06
     0x          Label 849C Img_emblemBack07
     0x          Label 848C Img_emblemBack08
     0x          Label 84AC Img_emblemBack09
     0x          Label 8661 Img_emblemFront01
     0x          Label 8671 Img_emblemFront02
     0x          Label 8641 Img_emblemFront03
     0x          Label 8651 Img_emblemFront04
     0x          Label 8621 Img_emblemFront05
     0x          Label 8631 Img_emblemFront06
     0x          Label 8601 Img_emblemFront07
     0x          Label 8611 Img_emblemFront08
     0x          Label 8209 Img_SegaLogo_1
     0x          Label 81F9 Img_SegaLogo_2
     1x          Label 82F8 Img_SegaSonic_11
     1x          Label 8232 Img_SegaSonic_12
     1x          Label 8274 Img_SegaSonic_13
     1x          Label 82B6 Img_SegaSonic_21
     1x          Label 833A Img_SegaSonic_22
     1x          Label 8253 Img_SegaSonic_23
     1x          Label 837C Img_SegaSonic_31
     1x          Label 8295 Img_SegaSonic_32
     1x          Label 8319 Img_SegaSonic_33
     1x          Label 835B Img_SegaSonic_41
     1x          Label 839D Img_SegaSonic_42
     1x          Label 82D7 Img_SegaSonic_43
     0x          Label 8219 Img_SegaTrails_1
     0x          Label 83FE Img_SegaTrails_2
     0x          Label 83EE Img_SegaTrails_3
     0x          Label 83DE Img_SegaTrails_4
     0x          Label 83CE Img_SegaTrails_5
     0x          Label 83BE Img_SegaTrails_6
     0x          Label 81E9 Img_SonicAndTailsIn
     0x          Label 843F Img_sonicHand
     1x          Label 857A Img_sonic_1
     1x          Label 858E Img_sonic_2
     1x          Label 85D9 Img_sonic_3
     1x          Label 85ED Img_sonic_4
     0x          Label 85C2 Img_sonic_5
     3x          Label 8471 Img_star_1
     3x          Label 8456 Img_star_2
     1x          Label 842B Img_star_3
     0x          Label 8417 Img_star_4
     0x          Label 8563 Img_tailsHand
     1x          Label 854F Img_tails_1
     1x          Label 853B Img_tails_2
     1x          Label 8527 Img_tails_3
     1x          Label 8513 Img_tails_4
     1x          Label 84FC Img_tails_5
     0x          Label 6103 InitIRQ
     0x          Label 71A6 Joypads
     2x          Label 71A6 Joypads_Held
     1x          Label 71A8 Joypads_Press
     2x          Label 71A4 Joypads_Read
     1x          Label 610F LevelMainLoop
     1x          Label 705C LevelOnly_Object_RAM
     1x          Label 716A LevelOnly_Object_RAM_End
     1x          Label 89D8 LoadAct
     4x          Label 6140 Lst_FreeCellFirstEntry_0
     4x          Label 630F Lst_FreeCellFirstEntry_1
     2x          Label 6142 Lst_FreeCell_0
     2x          Label 6311 Lst_FreeCell_1
     8x          Label 6502 Lst_Priority_Unset_0
     7x          Label 6568 Lst_Priority_Unset_1
     0x          Label 7213 MarkObjGone
    14x          Equ   0000 nb_cells
     1x          Equ   001B nb_dynamic_objects
     6x          Equ   0082 nb_free_cells
     0x          Equ   0003 nb_level_objects
     4x          Equ   0020 nb_objects
     4x          Equ   0008 nb_priority_levels
     0x          Equ   0002 nb_reserved_objects
     0x          Equ   00FC nextRoutine
     0x          Equ   00FA nextSubRoutine
     9x          Equ   0005 next_entry
     3x          Equ   005A next_object
     0x          Label 7317 ObjectMove
     1x          Label 662A Object_RAM
     2x          Label 716A Object_RAM_End
     8x          Equ   005A object_size
     1x          Label 87C7 Obj_Index_Address
     1x          Label 86C7 Obj_Index_Page
     0x          Label 662A Obj_MainCharacter
     0x          Label 6684 Obj_Sidekick
     0x          Label 70B6 Obj_SonicDust
     0x          Label 7110 Obj_TailsDust
     0x          Label 705C Obj_TailsTails
     4x          Equ   0000 page_draw_routine
     2x          Equ   0003 page_erase_routine
     1x          Label 8A0C Pal_SEGA
     0x          Label 8A8C Pal_SEGAEnd
     0x          Label 8A4C Pal_SEGAMid
     0x          Label 8A6C Pal_SonicAndTailsIn
     0x          Label 8A2C Pal_TitleScreen
     1x          Equ   0003 pcm_end_addr
     1x          Equ   0005 pcm_meta_size
     1x          Equ   0000 pcm_page
     0x          Label 89C7 Pcm_SEGA
     1x          Equ   0001 pcm_start_addr
     0x          Label 7D6E PlayPCM
     1x          Label 7DA6 PlayPCM_End
     1x          Label 7D90 PlayPCM_Loop
     1x          Label 7DA0 PlayPCM_NextChunk
     1x          Label 7D85 PlayPCM_ReadChunk
     1x          Label 7DBF PlayPCM_RestorePage
     2x          Equ   0006 prev_anim
     6x          Equ   0003 priority
     0x          Label 7E79 PSGCancelLoop
     4x          Label 81D0 PSGChan0Volume
     4x          Label 81D1 PSGChan1Volume
     3x          Label 81D6 PSGChan2HighTone
     3x          Label 81D4 PSGChan2LowTone
     5x          Label 81D2 PSGChan2Volume
     5x          Label 81D5 PSGChan3LowTone
     5x          Label 81D3 PSGChan3Volume
     6x          Equ   0000 PSGChannel0
     5x          Equ   0020 PSGChannel1
     9x          Equ   0040 PSGChannel2
    12x          Label 81D8 PSGChannel2SFX
    10x          Equ   0060 PSGChannel3
    13x          Label 81D9 PSGChannel3SFX
     2x          Equ   0040 PSGData
    35x          Equ   E7B0 PSGDataPort
     2x          Equ   0000 PSGEnd
     1x          Label 8033 PSGFrame
     1x          Label 803F PSGFrame_continue
     0x          Label 7E7D PSGGetStatus
     0x          Label 7DC5 PSGInit
    32x          Equ   0080 PSGLatch
     2x          Equ   0001 PSGLoop
     3x          Label 81CB PSGLoopFlag
     3x          Label 81CC PSGMusicLastLatch
     3x          Label 81C8 PSGMusicLoopPoint
     2x          Label 81C3 PSGMusicPage
     3x          Label 81C6 PSGMusicPointer
     4x          Label 81CA PSGMusicSkipFrames
     2x          Label 81C4 PSGMusicStart
    13x          Label 81C2 PSGMusicStatus
     4x          Label 81CD PSGMusicSubstringLen
     2x          Label 81CE PSGMusicSubstringRetAddr
    13x          Label 81D7 PSGMusicVolumeAttenuation
     0x          Label 7DDB PSGPlay
     1x          Label 7DDD PSGPlay1
     0x          Label 7DD7 PSGPlayNoRepeat
     0x          Label 7EF5 PSGRestoreVolumes
     1x          Label 7F08 PSGRestoreVolumes1
     1x          Label 7F1B PSGRestoreVolumes2
     2x          Label 7F3F PSGRestoreVolumes3
     2x          Label 7F63 PSGRestoreVolumes4
     0x          Label 7E2E PSGResume
     1x          Label 7E5E PSGResume1
     1x          Label 7E73 PSGResume2
     1x          Label 7E78 PSGResume_end
     0x          Label 7E81 PSGSetMusicVolumeAttenuation
     1x          Label 7E97 PSGSetMusicVolumeAttenuation1
     1x          Label 7EAA PSGSetMusicVolumeAttenuation2
     1x          Label 7EC2 PSGSetMusicVolumeAttenuation3
     1x          Label 7EDA PSGSetMusicVolumeAttenuation4
     2x          Label 7EDF PSGSetMusicVolumeAttenuation_end
     0x          Label 802B PSGSFXCancelLoop
     2x          Label 81DA PSGSFXChan2Volume
     2x          Label 81DB PSGSFXChan3Volume
     0x          Label 8140 PSGSFXFrame
     1x          Label 8180 PSGSFXFrame_end
     0x          Label 802F PSGSFXGetStatus
     3x          Label 81E5 PSGSFXLoopFlag
     3x          Label 81E2 PSGSFXLoopPoint
     2x          Label 81DD PSGSFXPage
     0x          Label 7F6D PSGSFXPlay
     1x          Label 7F6F PSGSFXPlay1
     1x          Label 7F95 PSGSFXPlay2
     1x          Label 7F9E PSGSFXPlay3
     0x          Label 7F69 PSGSFXPlayLoop
     1x          Label 7FB4 PSGSFXPlayLoop_end
     4x          Label 81E0 PSGSFXPointer
     4x          Label 81E4 PSGSFXSkipFrames
     2x          Label 81DE PSGSFXStart
     7x          Label 81DC PSGSFXStatus
     2x          Label 7FB5 PSGSFXStop
     1x          Label 7FC4 PSGSFXStop1
     1x          Label 7FCE PSGSFXStop2
     1x          Label 7FF8 PSGSFXStop3
     1x          Label 801A PSGSFXStop4
     1x          Label 802A PSGSFXStop_end
     4x          Label 81E6 PSGSFXSubstringLen
     2x          Label 81E7 PSGSFXSubstringRetAddr
     0x          Label 7EE0 PSGSilenceChannels
     2x          Label 7E05 PSGStop
     1x          Label 7E1E PSGStop2
     1x          Label 7E28 PSGStop3
     1x          Label 7E2D PSGStop_end
     4x          Equ   0008 PSGSubString
    27x          Equ   0010 PSGVolumeData
     2x          Equ   0038 PSGWait
     5x          Equ   0001 PSG_PLAYING
     3x          Equ   0000 PSG_STOPPED
     0x          Label 89D2 Psg_TitleScreen
     2x          Label 7D0C Ptr_palette
     1x          Label 71AA ReadJoypads
    24x          Equ   0002 render_flags
     4x          Equ   0020 render_hide_mask
     2x          Equ   0008 render_motionless_mask
     5x          Equ   0004 render_overlay_mask
     1x          Equ   0010 render_playfieldcoord_mask
     5x          Equ   0040 render_todelete_mask
     1x          Equ   0080 render_xloop_mask
     2x          Equ   0001 render_xmirror_mask
     2x          Equ   0002 render_ymirror_mask
     1x          Label 662A Reserved_Object_RAM
     1x          Label 66DE Reserved_Object_RAM_End
     0x          Equ   00FF resetAnim
     0x          Equ   00FB resetAnimAndSubRoutine
     2x          Equ   0018 routine
     3x          Equ   0019 routine_secondary
     3x          Equ   003F rsv_bgdata_0
     3x          Equ   0051 rsv_bgdata_1
     2x          Equ   0036 rsv_buffer_0
     2x          Equ   0048 rsv_buffer_1
     6x          Equ   002C rsv_image_center_offset
     4x          Equ   002E rsv_image_subset
    11x          Equ   0030 rsv_mapping_frame
     0x          Equ   002A rsv_prev_anim
     4x          Equ   003D rsv_prev_mapping_frame_0
     4x          Equ   004F rsv_prev_mapping_frame_1
    11x          Equ   0047 rsv_prev_render_flags_0
     9x          Equ   0059 rsv_prev_render_flags_1
     4x          Equ   0080 rsv_prev_render_onscreen_mask
     6x          Equ   0001 rsv_prev_render_overlay_mask
     0x          Equ   0043 rsv_prev_x1_pixel_0
     0x          Equ   0055 rsv_prev_x1_pixel_1
     0x          Equ   0045 rsv_prev_x2_pixel_0
     0x          Equ   0057 rsv_prev_x2_pixel_1
     2x          Equ   0043 rsv_prev_xy1_pixel_0
     2x          Equ   0055 rsv_prev_xy1_pixel_1
     2x          Equ   0045 rsv_prev_xy2_pixel_0
     2x          Equ   0057 rsv_prev_xy2_pixel_1
     1x          Equ   0041 rsv_prev_xy_pixel_0
     1x          Equ   0053 rsv_prev_xy_pixel_1
     0x          Equ   0041 rsv_prev_x_pixel_0
     0x          Equ   0053 rsv_prev_x_pixel_1
     0x          Equ   0044 rsv_prev_y1_pixel_0
     0x          Equ   0056 rsv_prev_y1_pixel_1
     0x          Equ   0046 rsv_prev_y2_pixel_0
     0x          Equ   0058 rsv_prev_y2_pixel_1
     0x          Equ   0042 rsv_prev_y_pixel_0
     0x          Equ   0054 rsv_prev_y_pixel_1
     6x          Equ   0036 rsv_priority_0
     6x          Equ   0048 rsv_priority_1
    14x          Equ   0039 rsv_priority_next_obj_0
    14x          Equ   004B rsv_priority_next_obj_1
    12x          Equ   0037 rsv_priority_prev_obj_0
    12x          Equ   0049 rsv_priority_prev_obj_1
     4x          Equ   0001 rsv_render_checkrefresh_mask
     5x          Equ   0004 rsv_render_displaysprite_mask
     8x          Equ   0002 rsv_render_erasesprite_mask
    28x          Equ   0029 rsv_render_flags
     4x          Equ   0008 rsv_render_outofrange_mask
     6x          Equ   0032 rsv_x1_pixel
     5x          Equ   0034 rsv_x2_pixel
     3x          Equ   0032 rsv_xy1_pixel
     3x          Equ   0034 rsv_xy2_pixel
     5x          Equ   0033 rsv_y1_pixel
     4x          Equ   0035 rsv_y2_pixel
     1x          Label 71EC RunNextObject
     3x          Label 71D3 RunObject
     1x          Label 71CB RunObjects
     1x          Label 71F6 RunObjectsWhenPlayerIsDead
     0x          Label 71CE RunObjects_01
     0x          Label 71F5 RunObjects_End
     1x          Label 7185 screen_border_color
     2x          Equ   00E3 screen_bottom
     2x          Equ   0030 screen_left
     2x          Equ   00CF screen_right
     2x          Equ   001C screen_top
     0x          Equ   00A0 screen_width
     1x          Label 7D57 SetColor
     2x          Equ   0001 SFX_CHANNEL2
     2x          Equ   0002 SFX_CHANNEL3
     2x          Equ   0003 SFX_CHANNELS2AND3
     0x          Label 7342 SingleObjLoad2
     1x          Label 734C SingleObjLoad2_01
     2x          Label 7358 SingleObjLoad2_02
     1x          Equ   001A status
     0x          Equ   0004 status_bit2
     0x          Equ   0080 status_bit7
     0x          Equ   0002 status_inair
     0x          Equ   0010 status_jumpingafterrolling
     0x          Equ   0004 status_jumporroll
     0x          Equ   0020 status_mainchar_pushing
     0x          Equ   0008 status_mainchar_standing
     0x          Equ   0008 status_norgroundnorfall
     0x          Equ   0020 status_pushing
     0x          Equ   0040 status_sidekick_pushing
     0x          Equ   0010 status_sidekick_standing
     0x          Equ   0040 status_underwater
     1x          Equ   0001 status_x_orientation
     1x          Equ   0002 status_y_orientation
     0x          Equ   0001 subtype
     0x          Label 7180 SwapVideoPage
     2x          Label 64DE Tbl_Priority_First_Entry_0
     2x          Label 6544 Tbl_Priority_First_Entry_1
     3x          Label 64F0 Tbl_Priority_Last_Entry_0
     2x          Label 6556 Tbl_Priority_Last_Entry_1
     2x          Label 65EA Tbl_Sub_Object_Draw
     3x          Label 65AA Tbl_Sub_Object_Erase
     0x          Label 7918 UDP_B0
     1x          Label 7985 UDP_B1
     1x          Label 795F UDP_ChainNextB0
     1x          Label 79CC UDP_ChainNextB1
     1x          Label 793F UDP_ChainPrevB0
     1x          Label 79AC UDP_ChainPrevB1
     1x          Label 7969 UDP_CheckDeleteB0
     1x          Label 79D6 UDP_CheckDeleteB1
     2x          Label 791B UDP_CheckEndB0
     2x          Label 7988 UDP_CheckEndB1
     1x          Label 7949 UDP_CheckPrioNextB0
     1x          Label 79B6 UDP_CheckPrioNextB1
     1x          Label 7927 UDP_CheckPrioPrevB0
     1x          Label 7994 UDP_CheckPrioPrevB1
     0x          Label 7920 UDP_InitListB0
     0x          Label 798D UDP_InitListB1
     3x          Label 797E UDP_SetNewPrioB0
     3x          Label 79EB UDP_SetNewPrioB1
     0x          Label 7913 UDP_Start
     1x          Label 7913 UnsetDisplayPriority
     1x          Label 7D4E UpdatePalette
     2x          Label 71A2 Vint_runcount
     3x          Label 716D WaitVBL
     1x          Label 7172 WaitVBL_01
     0x          Label 7D2E White_palette
     7x          Equ   0012 xy_pixel
     3x          Equ   0012 x_pixel
     4x          Equ   000C x_pos
     0x          Equ   000E x_sub
     2x          Equ   0014 x_vel
     1x          Equ   0013 y_pixel
     4x          Equ   000F y_pos
     0x          Equ   0011 y_sub
     2x          Equ   0016 y_vel
     1x          Label 7F20 _chkchn2
     1x          Label 7F44 _chkchn3
     1x          Label 80B4 _chn2
     1x          Label 80D1 _command
     2x          Label 8057 _continue
     1x          Label 80DC _done
     0x          Equ   00FE _goBackNFrames
     0x          Equ   00FD _goToAnimation
     1x          Label 8135 _high_part_Tone
     1x          Label 80A1 _ifchn0
     1x          Label 808A _ifchn2
    11x          Label 8047 _intLoop
     4x          Label 8153 _intSFXLoop
     1x          Label 6126 _IRQ
     1x          Label 612F _IRQ_end
     1x          Label 8094 _latch_Volume
     1x          Label 80A6 _latch_Volume_23
     1x          Label 8116 _musicLoop
     0x          Equ   00FC _nextRoutine
     3x          Equ   00FA _nextSubRoutine
     1x          Label 80C8 _noLatch
     1x          Label 80E0 _otherCommands
     1x          Label 810A _output_NoLatch
     4x          Equ   00FF _resetAnim
     0x          Equ   00FB _resetAnimAndSubRoutine
     1x          Label 7F3A _restoreSFX2
     1x          Label 7F68 _restoreSFX2_end
     1x          Label 7F5E _restoreSFX3
     1x          Label 7EC7 _restore_channel3
     6x          Label 80BE _send2PSG
     4x          Label 80ED _sendVolume2PSG
     2x          Label 80FB _sendVolume2PSG1
     1x          Label 8102 _sendVolume2PSG2
     1x          Label 8110 _setLoopPoint
     1x          Label 8181 _SFXcommand
     2x          Label 8163 _SFXcontinue
     1x          Label 818C _SFXdone
     1x          Label 81A2 _sfxLoop
     1x          Label 8190 _SFXotherCommands
     2x          Label 8177 _SFXoutbyte
     1x          Label 819D _SFXsetLoopPoint
     1x          Label 81B1 _SFXsubstring
     1x          Label 8174 _SFXvolumechn3
     1x          Label 80C3 _skipFrame
     1x          Label 8021 _skipRestore
     1x          Label 817C _skipSFXFrame
     1x          Label 7FFD _skip_chn2
     1x          Label 801F _skip_chn3
     1x          Label 8123 _substring

