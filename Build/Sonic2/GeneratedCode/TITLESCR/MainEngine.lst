/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : .\Sonic2\GeneratedCode\TITLESCR\MainEngine.asm
 * Fichier destination : .\Sonic2\GeneratedCode\TMP.BIN
 * Contenu :
 *     Main     0:MAIN.ASM     4159
 *     Include  0:CONSTANT.ASM 5768
 *     Include  0:WAITVBL.ASM  1795
 *     Include  0:READJPDS.ASM 1855
 *     Include  0:RUNOBJTS.ASM 1312
 *     Include  0:MRKOBJGN.ASM 481
 *     Include  0:DISPLSPR.ASM 2223
 *     Include  0:ANIMSPR.ASM  1998
 *     Include  0:OBJMOVE.ASM  752
 *     Include  0:OBJLOAD.ASM  1109
 *     Include  0:DELETOBJ.ASM 2732
 *     Include  0:CLEAROBJ.ASM 647
 *     Include  0:CHECKSPR.ASM 10494
 *     Include  0:ERASESPR.ASM 4868
 *     Include  0:UNSETDSP.ASM 2832
 *     Include  0:DRAWSPR.ASM  6323
 *     Include  0:BGBALLOC.ASM 1029
 *     Include  0:BGBFREE.ASM  1879
 *     Include  0:CLRCARTM.ASM 642
 *     Include  0:UPDTPAL.ASM  956
 *     Include  0:PLAYPCM.ASM  1216
 *     Include  0:PSGLIB.ASM   16960
 *     Include  0:IMAGEIDX.ASM 5025
 *     Include  0:ANIMSCPT.ASM 991
 *     Include  0:OBJINDEX.ASM 6715
 *     Include  0:SOUNDIDX.ASM 174
 *     Include  0:LOADACT.ASM  364
 *     Include  0:PALETTE.ASM  1208
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
    200                                   INCLUD CONSTANT
    201                           * --------------------------------------->>
    202                           * Constants
    203                           *
    204                           * Naming convention
    205                           * -----------------
    206                           * - lower case
    207                           * - underscore-separated names
    208                           *
    209                           * --------------------------------------->>
    210
    211                           * =======================================>>
    212                           * TO8 Registers
    213                           * =======================================>>
    214
    215                  6049     dk_lecteur                    equ $6049
    216                  604A     dk_piste                      equ $604A
    217                  604B     dk_pisteL                     equ $604B
    218                  604C     dk_secteur                    equ $604C
    219                  604F     dk_destination                equ $604F
    220
    221                           * =======================================>>
    222                           * Display Constants
    223                           * =======================================>>
    224
    225                  00A0     screen_width                  equ 160 ; s>>
    226                  001C     screen_top                    equ 28 ; in>>
    227                  00E3     screen_bottom                 equ 28+199 >>
    228                  0030     screen_left                   equ 48 ; in>>
    229                  00CF     screen_right                  equ 48+159 >>
    230                  0008     nb_priority_levels            equ 8   ; n>>
    231
    232                           * =======================================>>
    233                           * Physics Constants
    234                           * =======================================>>
    235
    236                  0038     gravity                       equ $38 ; G>>
    237
    238                           * =======================================>>
    239                           * Animation Constants
    240                           * =======================================>>
    241
    242                  00FF     _resetAnim                    equ $FF
    243                  00FE     _goBackNFrames                equ $FE
    244                  00FD     _goToAnimation                equ $FD
    245                  00FC     _nextRoutine                  equ $FC
    246                  00FB     _resetAnimAndSubRoutine       equ $FB
    247                  00FA     _nextSubRoutine               equ $FA
    248
    249                           * =======================================>>
    250                           * Images Constants
    251                           * =======================================>>
    252
    253                  0004     image_x_size                  equ 4
    254                  0005     image_y_size                  equ 5
    255                  0006     image_center_offset           equ 6
    256
    257                  0004     image_subset_x1_offset        equ 4
    258                  0005     image_subset_y1_offset        equ 5
    259
    260                  0000     page_draw_routine             equ 0
    261                  0001     draw_routine                  equ 1
    262                  0003     page_erase_routine            equ 3
    263                  0004     erase_routine                 equ 4
    264                  0006     erase_nb_cell                 equ 6
    265
    266                           * =======================================>>
    267                           * Sound Constants
    268                           * =======================================>>
    269
    270                  0000     pcm_page        equ 0
    271                  0001     pcm_start_addr  equ 1
    272                  0003     pcm_end_addr    equ 3
    273                  0005     pcm_meta_size   equ 5
    274
    275                           * =======================================>>
    276                           * Object Constants
    277                           * =======================================>>
    278
    279                  0002     nb_reserved_objects           equ 2
    280                  001B     nb_dynamic_objects            equ 27
    281                  0003     nb_level_objects              equ 3
    282                  0020     nb_objects                    equ 32 * ma>>
    283
    284                           * --------------------------------------->>
    285                           * Object Status Table offsets
    286                           * --------------------------------------->>
    287
    288                  005A     object_size                   equ 90 ; th>>
    289                  005A     next_object                   equ object_>>
    290
    291                  0000     id                            equ 0      >>
    292                  0001     subtype                       equ 1      >>
    293                  0002     render_flags                  equ 2
    294
    295                           * --- render_flags bitfield variables --->>
    296                  0001     render_xmirror_mask           equ $01 ; (>>
    297                  0002     render_ymirror_mask           equ $02 ; (>>
    298                  0004     render_overlay_mask           equ $04 ; (>>
    299                  0008     render_motionless_mask        equ $08 ; (>>
    300                  0010     render_playfieldcoord_mask    equ $10 ; (>>
    301                  0020     render_hide_mask              equ $20 ; (>>
    302                  0040     render_todelete_mask          equ $40 ; (>>
    303                  0080     render_xloop_mask             equ $80 ; (>>
    304                            
    305                  0003     priority                      equ 3      >>
    306                  0004     anim                          equ 4  ; an>>
    307                  0006     prev_anim                     equ 6  ; an>>
    308                  0008     anim_frame                    equ 8      >>
    309                  0009     anim_frame_duration           equ 9      >>
    310                  000A     image_set                     equ 10 ; an>>
    311                  000C     x_pos                         equ 12 ; an>>
    312                  000E     x_sub                         equ 14     >>
    313                  000F     y_pos                         equ 15 ; an>>
    314                  0011     y_sub                         equ 17     >>
    315                  0012     xy_pixel                      equ 18     >>
    316                  0012     x_pixel                       equ 18     >>
    317                  0013     y_pixel                       equ 19     >>
    318                  0014     x_vel                         equ 20 ; an>>
    319                  0016     y_vel                         equ 22 ; an>>
    320                  0018     routine                       equ 24     >>
    321                  0019     routine_secondary             equ 25     >>
    322                  001A     status                        equ 26
    323
    324                           * --- status bitfield variables for objec>>
    325                  0001     status_x_orientation          equ   $01 ;>>
    326                  0002     status_y_orientation          equ   $02 ;>>
    327                  0004     status_bit2                   equ   $04 ;>>
    328                  0008     status_mainchar_standing      equ   $08 ;>>
    329                  0010     status_sidekick_standing      equ   $10 ;>>
    330                  0020     status_mainchar_pushing       equ   $20 ;>>
    331                  0040     status_sidekick_pushing       equ   $40 ;>>
    332                  0080     status_bit7                   equ   $80 ;>>
    333
    334                           * --- status bitfield variables for Main >>
    335                  0002     status_inair                  equ   $02 ;>>
    336                  0004     status_jumporroll             equ   $04 ;>>
    337                  0008     status_norgroundnorfall       equ   $08 ;>>
    338                  0010     status_jumpingafterrolling    equ   $10 ;>>
    339                  0020     status_pushing                equ   $20 ;>>
    340                  0040     status_underwater             equ   $40 ;>>
    341
    342                  001B     ext_variables                 equ 27 ; to>>
    343
    344                           * --------------------------------------->>
    345                           * reserved variables (engine)
    346
    347                  0029     rsv_render_flags              equ 41
    348
    349                           * --- rsv_render_flags bitfield variables>>
    350                  0001     rsv_render_checkrefresh_mask  equ $01 ; (>>
    351                  0002     rsv_render_erasesprite_mask   equ $02 ; (>>
    352                  0004     rsv_render_displaysprite_mask equ $04 ; (>>
    353                  0008     rsv_render_outofrange_mask    equ $08 ; (>>
    354
    355                  002A     rsv_prev_anim                 equ 42 ; an>>
    356                  002C     rsv_image_center_offset       equ 44 ; 0 >>
    357                           * ne sert plus                       ; an>>
    358                  002E     rsv_image_subset              equ 46 ; an>>
    359                  0030     rsv_mapping_frame             equ 48 ; an>>
    360                  0032     rsv_xy1_pixel                 equ 50     >>
    361                  0032     rsv_x1_pixel                  equ 50     >>
    362                  0033     rsv_y1_pixel                  equ 51     >>
    363                  0034     rsv_xy2_pixel                 equ 52     >>
    364                  0034     rsv_x2_pixel                  equ 52     >>
    365                  0035     rsv_y2_pixel                  equ 53     >>
    366
    367                           * --------------------------------------->>
    368                           * reserved variables (engine) - buffer sp>>
    369
    370                  0036     rsv_buffer_0                  equ 54 ; St>>
    371                  0036     rsv_priority_0                equ 54 ; in>>
    372                  0037     rsv_priority_prev_obj_0       equ 55 ; an>>
    373                  0039     rsv_priority_next_obj_0       equ 57 ; an>>
    374                           *rsv_prev_image_subset_0       equ 59 ; a>>
    375                  003D     rsv_prev_mapping_frame_0      equ 61 ; an>>
    376                  003F     rsv_bgdata_0                  equ 63 ; an>>
    377                  0041     rsv_prev_xy_pixel_0           equ 65 ;
    378                  0041     rsv_prev_x_pixel_0            equ 65 ; pr>>
    379                  0042     rsv_prev_y_pixel_0            equ 66 ; pr>>
    380                  0043     rsv_prev_xy1_pixel_0          equ 67 ;
    381                  0043     rsv_prev_x1_pixel_0           equ 67 ; pr>>
    382                  0044     rsv_prev_y1_pixel_0           equ 68 ; pr>>
    383                  0045     rsv_prev_xy2_pixel_0          equ 69 ;
    384                  0045     rsv_prev_x2_pixel_0           equ 69 ; pr>>
    385                  0046     rsv_prev_y2_pixel_0           equ 70 ; pr>>
    386                  0047     rsv_prev_render_flags_0       equ 71 ;
    387                           * --- rsv_prev_render_flags_0 bitfield va>>
    388                  0001     rsv_prev_render_overlay_mask  equ $01 ; (>>
    389                  0080     rsv_prev_render_onscreen_mask equ $80 ; (>>
    390
    391                  0048     rsv_buffer_1                  equ 72 ; St>>
    392                  0048     rsv_priority_1                equ 72 ; in>>
    393                  0049     rsv_priority_prev_obj_1       equ 73 ; an>>
    394                  004B     rsv_priority_next_obj_1       equ 75 ; an>>
    395                           *rsv_prev_image_subset_1       equ 77 ; a>>
    396                  004F     rsv_prev_mapping_frame_1      equ 79 ; an>>
    397                  0051     rsv_bgdata_1                  equ 81 ; an>>
    398                  0053     rsv_prev_xy_pixel_1           equ 83 ;
    399                  0053     rsv_prev_x_pixel_1            equ 83 ; pr>>
    400                  0054     rsv_prev_y_pixel_1            equ 84 ; pr>>
    401                  0055     rsv_prev_xy1_pixel_1          equ 85 ;
    402                  0055     rsv_prev_x1_pixel_1           equ 85 ; pr>>
    403                  0056     rsv_prev_y1_pixel_1           equ 86 ; pr>>
    404                  0057     rsv_prev_xy2_pixel_1          equ 87 ;
    405                  0057     rsv_prev_x2_pixel_1           equ 87 ; pr>>
    406                  0058     rsv_prev_y2_pixel_1           equ 88 ; pr>>
    407                  0059     rsv_prev_render_flags_1       equ 89 ;
    408
    409                  0000     buf_priority                  equ 0  ; of>>
    410                  0001     buf_priority_prev_obj         equ 1  ;
    411                  0003     buf_priority_next_obj         equ 3  ;
    412                           *buf_prev_image_subset         equ 5  ;
    413                  0007     buf_prev_mapping_frame        equ 7  ;
    414                  0009     buf_bgdata                    equ 9  ;
    415                  000B     buf_prev_xy_pixel             equ 11 ;
    416                  000B     buf_prev_x_pixel              equ 11 ;
    417                  000C     buf_prev_y_pixel              equ 12 ;
    418                  000D     buf_prev_xy1_pixel            equ 13 ;
    419                  000D     buf_prev_x1_pixel             equ 13 ;
    420                  000E     buf_prev_y1_pixel             equ 14 ;
    421                  000F     buf_prev_xy2_pixel            equ 15 ;
    422                  000F     buf_prev_x2_pixel             equ 15 ;
    423                  0010     buf_prev_y2_pixel             equ 16 ;
    424                  0011     buf_prev_render_flags         equ 17 ;
    425
     10        6100                       org   $6100
     11
     12  8     6100 BD   8A06             jsr   LoadAct
     13  8     6103 BD   7DF3             jsr   PSGInit
     14
     15        6106               InitIRQ
     16  3     6106 CC   612C             ldd   #_IRQ                      >>
     17  6     6109 FD   6027             std   $6027
     18  3     610C CC   09C4             ldd   #$09C4                     >>
     19  6     610F FD   E7C6             std   $E7C6                      >>
     20
     21                           * =======================================>>
     22                           * Main Loop
     23                           * =======================================>>
     24        6112               LevelMainLoop
     25  8     6112 BD   7173             jsr   WaitVBL
     26  8     6115 BD   7D74             jsr   UpdatePalette
     27  8     6118 BD   71B0             jsr   ReadJoypads
     28  8     611B BD   71D1             jsr   RunObjects
     29  8     611E BD   7460             jsr   CheckSpritesRefresh
     30  8     6121 BD   77A0             jsr   EraseSprites
     31  8     6124 BD   7919             jsr   UnsetDisplayPriority
     32  8     6127 BD   79F8             jsr   DrawSprites
     33  3     612A 20   E6               bra   LevelMainLoop
     34                            
     35                           * =======================================>>
     36                           * IRQ
     37                           * =======================================>>
     38        612C               _IRQ
     39  5     612C B6   E7E5             lda   $E7E5
     40  5     612F B7   6136             sta   _IRQ_end+1                 >>
     41  8     6132 BD   8061             jsr   PSGFrame
     42                                   * jsr   PSGSFXFrame
     43        6135               _IRQ_end
     44  2     6135 86   00               lda   #$00
     45  5     6137 B7   E7E5             sta   $E7E5                      >>
     46  4     613A 7E   E830             jmp   $E830
     47
     48                           * =======================================>>
     49                           * Global Data
     50                           *
     51                           * Naming convention
     52                           * -----------------
     53                           * - underscore-separated names
     54                           * - first letter of each word in upper ca>>
     55                           *
     56                           * Templates
     57                           * ---------
     58                           * - Glb_*        : global variable
     59                           * - Tbl_*        : data table
     60                           * - Lst_*        : list is a data table w>>
     61                           * - Obj_*        : address of an object i>>
     62                           *
     63                           * - *_Object_RAM : sub group of objects
     64                           * - *_end        : data end label
     65                           *
     66                           * =======================================>>
     67
     68                           * --------------------------------------->>
     69                           * Display
     70                           * --------------------------------------->>
     71                            
     72        613D 00            Glb_Cur_Wrk_Screen_Id         fcb   $00  >>
     73        613E 0000          Glb_Camera_X_Pos              fdb   $0000>>
     74        6140 0000          Glb_Camera_Y_Pos              fdb   $0000>>
     75        6142 0000          Glb_Sprite_Screen_Pos_Part1   fdb   $0000>>
     76        6144 0000          Glb_Sprite_Screen_Pos_Part2   fdb   $0000>>
     77
     78                           * --------------------------------------->>
     79                           * Background Backup Cells - BBC
     80                           * --------------------------------------->>
     81
     82                           * ----- Cell variables
     83                  0000     nb_cells                      equ   0
     84                  0001     cell_start                    equ   1
     85                  0003     cell_end                      equ   3
     86                  0005     next_entry                    equ   5
     87                  0007     entry_size                    equ   7
     88
     89                           * ----- Cells List
     90                  0082     nb_free_cells                 equ   130
     91                  0040     cell_size                     equ   64   >>
     92                  6000     cell_start_adr                equ   $6000>>
     93
     94        6146 6148          Lst_FreeCellFirstEntry_0      fdb   Lst_F>>
     95        6148 82            Lst_FreeCell_0                fcb   nb_fr>>
     96        6149 3F80                                        fdb   cell_>>
     97        614B 6000                                        fdb   cell_>>
     98        614D 0000                                        fdb   $0000>>
     99        614F                                             rmb   (entr>>
    100                            
    101        6315 6317          Lst_FreeCellFirstEntry_1      fdb   Lst_F>>
    102        6317 82            Lst_FreeCell_1                fcb   nb_fr>>
    103        6318 3F80                                        fdb   cell_>>
    104        631A 6000                                        fdb   cell_>>
    105        631C 0000                                        fdb   $0000>>
    106        631E                                             rmb   (entr>>
    107                           * --------------------------------------->>
    108                           * Display Priority Structure - DPS
    109                           * --------------------------------------->>
    110
    111        64E4               DPS_buffer_0
    112        64E4               Tbl_Priority_First_Entry_0    rmb   2+(nb>>
    113        64F6               Tbl_Priority_Last_Entry_0     rmb   2+(nb>>
    114        6508 650A          Lst_Priority_Unset_0          fdb   Lst_P>>
    115        650A                                             rmb   (nb_o>>
    116        654A               DPS_buffer_1
    117        654A               Tbl_Priority_First_Entry_1    rmb   2+(nb>>
    118        655C               Tbl_Priority_Last_Entry_1     rmb   2+(nb>>
    119        656E 6570          Lst_Priority_Unset_1          fdb   Lst_P>>
    120        6570                                             rmb   (nb_o>>
    121                            
    122                  0000     buf_Tbl_Priority_First_Entry  equ   0
    123                  0012     buf_Tbl_Priority_Last_Entry   equ   Tbl_P>>
    124                  0024     buf_Lst_Priority_Unset        equ   Lst_P>>
    125
    126                           * --------------------------------------->>
    127                           * Sub Priority Objects List - SOL
    128                           * --------------------------------------->>
    129
    130        65B0               Tbl_Sub_Object_Erase          rmb   nb_ob>>
    131        65F0               Tbl_Sub_Object_Draw           rmb   nb_ob>>
    132
    133                           * --------------------------------------->>
    134                           * Object Status Table - OST
    135                           * --------------------------------------->>
    136                            
    137        6630               Object_RAM *@globals
    138        6630               Reserved_Object_RAM
    139        6630 0203          Obj_MainCharacter             fdb   $0203>>
    140        6632                                             rmb   objec>>
    141        668A               Obj_Sidekick                  rmb   objec>>
    142        66E4               Reserved_Object_RAM_End
    143
    144        66E4               Dynamic_Object_RAM            rmb   nb_dy>>
    145        7062               Dynamic_Object_RAM_End
    146
    147        7062               LevelOnly_Object_RAM                     >>
    148        7062               Obj_TailsTails                rmb   objec>>
    149        70BC               Obj_SonicDust                 rmb   objec>>
    150        7116               Obj_TailsDust                 rmb   objec>>
    151        7170               LevelOnly_Object_RAM_End
    152        7170 7170          Object_RAM_End                fdb *
    153
    154                           * --------------------------------------->>
    155                           * Lifecycle
    156                           * --------------------------------------->>
    157
    158        7172               Glb_MainCharacter_Is_Dead     rmb   $1,0
    159
    160                           * =======================================>>
    161                           * Routines
    162                           * =======================================>>
    163                                   * a rendre dynamique a partir du >>
    426                                   INCLUD WAITVBL
    427                           *****************************************>>
    428                           * Attente VBL
    429                           * Alternance de la page 2 et 3 entre affi>>
    430                           * Alternance de la RAMA et RAM B dans l'e>>
    431                           * --------------------------------------->>
    432                           *
    433                           * Page Affichee par l'automate Video
    434                           * ----------------------------------
    435                           *   $E7DD determine la page affichee a l'>>
    436                           *   bit7=0 bit6=0 bit5=0 bit4=0 (#$0_) : >>
    437                           *   bit7=0 bit6=1 bit5=0 bit4=0 (#$4_) : >>
    438                           *   bit7=1 bit6=0 bit5=0 bit4=0 (#$8_) : >>
    439                           *   bit7=1 bit6=1 bit5=0 bit4=0 (#$C_) : >>
    440                           *   bit3 bit2 bit1 bit0  (#$_0 a #$_F) : >>
    441                           *   Remarque : bit5 et bit4 utilisable un>>
    442                           *
    443                           * Page en espace cartouche (ecriture dans>>
    444                           * --------------------------------------->>
    445                           *   $E7E6 determine la page visible dans >>
    446                           *   bit7 toujours a 0
    447                           *   bit6=1 : ecriture autorisee
    448                           *   bit5=1 : espace cartouche recouvert p>>
    449                           *   bit4=0 : CAS1N valide : banques 0-15 >>
    450                           *   bit5=1 bit4=0 bit3=0 bit2=0 bit1=0 bi>>
    451                           *   ...
    452                           *   bit5=1 bit4=0 bit3=1 bit2=1 bit1=1 bi>>
    453                           *   bit5=1 bit4=1 bit3=0 bit2=0 bit1=0 bi>>
    454                           *   ...
    455                           *   bit5=1 bit4=1 bit3=1 bit2=1 bit1=1 bi>>
    456                           *
    457                           * Demi-Page 0 en espace ecran (4000 a 5FF>>
    458                           * --------------------------------------->>
    459                           *   $E7C3 determine la demi-page de la pa>>
    460                           *   bit0=0 : 8Ko RAMA
    461                           *   bit0=1 : 8ko RAMB
    462                           *
    463                           *****************************************>>
    464        7173               WaitVBL
    465  7     7173 7D   E7E7             tst   $E7E7              * le fai>>
    466  3     7176 2A   FB               bpl   WaitVBL            * tant q>>
    467        7178               WaitVBL_01
    468  7     7178 7D   E7E7             tst   $E7E7              * le fai>>
    469  3     717B 2B   FB               bmi   WaitVBL_01         * tant q>>
    470                            
    471        717D               SwapVideoPage
    472  5     717D F6   718B             ldb   am_SwapVideoPage+1 * charge>>
    473  2     7180 C4   40               andb  #$40               * altern>>
    474        7182               screen_border_color *@globals
    475  2     7182 CA   80               orb   #$80               * bit7=1>>
    476  5     7184 F7   E7DD             stb   $E7DD              * change>>
    477  7     7187 73   718B             com   am_SwapVideoPage+1 * altern>>
    478        718A               am_SwapVideoPage
    479  2     718A C6   00               ldb   #$00
    480  2     718C C4   01               andb  #$01               * altern>>
    481  5     718E F7   613D             stb   Glb_Cur_Wrk_Screen_Id
    482  2     7191 CA   62               orb   #$62               * bit6=1>>
    483  5     7193 F7   E7E6             stb   $E7E6              * change>>
    484  5     7196 F6   E7C3             ldb   $E7C3              * charge>>
    485  2     7199 C8   01               eorb  #$01               * altern>>
    486  5     719B F7   E7C3             stb   $E7C3
    487                            
    488  6     719E FC   71A8             ldd   Vint_runcount
    489  4     71A1 C3   0001             addd  #1
    490  6     71A4 FD   71A8             std   Vint_runcount
    491  5     71A7 39                    rts
    492                            
    493        71A8               Vint_runcount rmb   $2,0 *@globals
    494
    165                                   * INCLUD WAITVBLR
    495                                   INCLUD READJPDS
    496                           * --------------------------------------->>
    497                           * Controller Buttons
    498                           *
    499                  0001     c1_button_up_mask            equ   $01 *@>>
    500                  0002     c1_button_down_mask          equ   $02 *@>>
    501                  0004     c1_button_left_mask          equ   $04 *@>>
    502                  0008     c1_button_right_mask         equ   $08 *@>>
    503                  0010     c2_button_up_mask            equ   $10 *@>>
    504                  0020     c2_button_down_mask          equ   $20 *@>>
    505                  0040     c2_button_left_mask          equ   $40 *@>>
    506                  0080     c2_button_right_mask         equ   $80 *@>>
    507                  0040     c1_button_A_mask             equ   $40 *@>>
    508                  0080     c2_button_A_mask             equ   $80 *@>>
    509
    510        71AA               Joypads_Read
    511        71AA 00            Dpad_Read                    fcb   $00
    512        71AB 00            Fire_Read                    fcb   $00
    513                            
    514        71AC               Joypads
    515        71AC               Joypads_Held                           *@>>
    516        71AC 00            Dpad_Held                    fcb   $00 *@>>
    517        71AD 00            Fire_Held                    fcb   $00 *@>>
    518        71AE               Joypads_Press                          *@>>
    519        71AE 00            Dpad_Press                   fcb   $00 *@>>
    520        71AF 00            Fire_Press                   fcb   $00 *@>>
    521
    522                           *****************************************>>
    523                           * Get joystick parameters
    524                           *
    525                           * Direction des Joypads
    526                           * ---------------------
    527                           * Registre: $E7CC (8bits)
    528                           *
    529                           * Joypad2     Joypad1
    530                           * 1111        1111 (0: appuye | 1: relach>>
    531                           * ||||_Haut   ||||_Haut
    532                           * |||__Bas    |||__Bas
    533                           * ||___Gauche ||___Gauche
    534                           * |____Droite |____Droite
    535                           *
    536                           * Boutons des Joypads
    537                           * -------------------
    538                           * Registre: $E7CD (8bits)
    539                           *
    540                           * 11 000000 (0: appuye | 1: relache)
    541                           * ||[------] 6 bits convertisseur numeriq>>
    542                           * ||_Fire Joypad1
    543                           * |__Fire Joypad2
    544                           *
    545                           * Variables globales: Joypads_Held, Joypa>>
    546                           * --------------------------------------->>
    547                           * (16 bits)
    548                           * Joypad2     Joypad1
    549                           * 0000        0000 (0: relache | 1: appuy>>
    550                           * ||||_Haut   ||||_Haut                  >>
    551                           * |||__Bas    |||__Bas                   >>
    552                           * ||___Gauche ||___Gauche                >>
    553                           * |____Droite |____Droite
    554                           *
    555                           *****************************************>>
    556                            
    557                                                                  *;>>
    558                                                                  *;>>
    559                                                                  *;>>
    560                                                                  *;>>
    561                                                                  *
    562                                                                  *;>>
    563        71B0               ReadJoypads                            *R>>
    564                                                                  * >>
    565                                                                  * >>
    566                                                                  * >>
    567                                                                  * >>
    568                                                                  *
    569                                                                  *;>>
    570                                                                  *J>>
    571                                                                  * >>
    572                                                                  * >>
    573                                                                  * >>
    574                                                                  * >>
    575                                                                  * >>
    576                                                                  * >>
    577                                                                  * >>
    578                                                                  * >>
    579                                                                  * >>
    580                                                                  * >>
    581                                                                  * >>
    582                                                                  * >>
    583  6     71B0 FC   E7CC             ldd   $E7CC
    584  2     71B3 43                    coma
    585  2     71B4 53                    comb                           * >>
    586  6     71B5 FD   71AA             std   Joypads_Read
    587  6     71B8 FC   71AC             ldd   Joypads_Held             * >>
    588  5     71BB B8   71AA             eora  Dpad_Read                * >>
    589  5     71BE F8   71AB             eorb  Fire_Read
    590                                                                  * >>
    591  5     71C1 B4   71AA             anda  Dpad_Read                * >>
    592  5     71C4 F4   71AB             andb  Fire_Read
    593  6     71C7 FD   71AE             std   Joypads_Press            * >>
    594  6     71CA FC   71AA             ldd   Joypads_Read
    595  6     71CD FD   71AC             std   Joypads_Held
    596  5     71D0 39                    rts                            * >>
    597                                                                  *;>>
    598
    599
    600                                   INCLUD RUNOBJTS
    601                           * --------------------------------------->>
    602                           * RunObjects
    603                           * ------------
    604                           * Subroutine to run objects code
    605                           *
    606                           * input REG : none
    607                           * --------------------------------------->>
    608                                                                    >>
    609                                                                    >>
    610                                                                    >>
    611                                                                    >>
    612                                                                    >>
    613                                                                    >>
    614                                                                    >>
    615        71D1               RunObjects                               >>
    616                                                                    >>
    617                                                                    >>
    618  3     71D1 CE   6630             ldu   #Object_RAM                >>
    619                                                                    >>
    620                                                                    >>
    621                                                                    >>
    622                                                                    >>
    623                                                                    >>
    624                                                                    >>
    625                                                                    >>
    626        71D4               RunObjects_01                            >>
    627                                                                    >>
    628                                                                    >>
    629                                                                    >>
    630                                                                    >>
    631  7     71D4 7D   7172             tst   Glb_MainCharacter_Is_Dead  >>
    632  3     71D7 26   23               bne   RunObjectsWhenPlayerIsDead >>
    633                                                                    >>
    634                                                                    >>
    635                                                                    >>
    636                                                                    >>
    637                                                                    >>
    638                                                                    >>
    639                                                                    >>
    640                                                                    >>
    641                                                                    >>
    642                                                                    >>
    643        71D9               RunObject                                >>
    644  2     71D9 86   00               lda   #$00
    645  4+0   71DB E6   C4               ldb   ,u                         >>
    646  3     71DD 27   13               beq   RunNextObject              >>
    647
    648  4     71DF 108E 86F5             ldy   #Obj_Index_Page
    649  4+4   71E3 A6   AB               lda   d,y                        >>
    650  5     71E5 B7   E7E5             sta   $E7E5                      >>
    651  2     71E8 86   00               lda   #$00
    652  2     71EA 58                    aslb                             >>
    653  2     71EB 49                    rola                             >>
    654  4     71EC 108E 87F5             ldy   #Obj_Index_Address         >>
    655  7+7   71F0 AD   BB               jsr   [d,y]                      >>
    656                                                                    >>
    657                                                                    >>
    658                                                                    >>
    659        71F2               RunNextObject                            >>
    660  4+1   71F2 33   C8 5A            leau  next_object,u              >>
    661        71F5               am_RunNextObject
    662  5     71F5 1183 7170             cmpu  #Object_RAM_End            >>
    663  3     71F9 26   DE               bne   RunObject                  >>
    664        71FB               RunObjects_End                           >>
    665  5     71FB 39                    rts                              >>
    666                                                                    >>
    667                                                                    >>
    668                                                                    >>
    669                                                                    >>
    670        71FC               RunObjectsWhenPlayerIsDead               >>
    671  3     71FC CE   6630             ldu   #Reserved_Object_RAM
    672  3     71FF 8E   66E4             ldx   #Reserved_Object_RAM_End
    673  6     7202 BF   71F7             stx   am_RunNextObject+2         >>
    674  7     7205 8D   D2               bsr   RunObject                  >>
    675                                                                    >>
    676                                                                    >>
    677  3     7207 CE   7062             ldu   #LevelOnly_Object_RAM
    678  3     720A 8E   7170             ldx   #LevelOnly_Object_RAM_End
    679  6     720D BF   71F7             stx   am_RunNextObject+2         >>
    680  7     7210 8D   C7               bsr   RunObject                  >>
    681                                                                    >>
    682  3     7212 8E   7170             ldx   #Object_RAM_End            >>
    683  6     7215 BF   71F7             stx   am_RunNextObject+2
    684  5     7218 39                    rts
    685                                                                    >>
    686                                                                    >>
    687                                                                    >>
    688                                                                    >>
    689                                                                    >>
    690                                                                    >>
    691                                                                    >>
    692                                                                    >>
    693                                                                    >>
    694                                                                    >>
    695                                                                    >>
    696                                                                    >>
    697                                                                    >>
    698                            
    699                                                                    >>
    700                                                                    >>
    701                                                                    >>
    702                                                                    >>
    703
    704                                   INCLUD MRKOBJGN
    705                           * --------------------------------------->>
    706                           * MarkObjGone
    707                           * -----------
    708                           * Subroutine to destroy an object that is>>
    709                           * -- TODO --
    710                           * waiting for camera implementation
    711                           *
    712                           * input REG : none
    713                           * clear REG : none
    714                           * --------------------------------------->>
    715
    716                                                                  *;>>
    717                                                                  *;>>
    718                                                                  *;>>
    719                                                                  *
    720                                                                  *;>>
    721                                                                  *;>>
    722                                                                  *;>>
    723        7219               MarkObjGone *@globals                  *M>>
    724                                                                  * >>
    725                                                                  * >>
    726  3     7219 20   06               bra   DisplaySprite            * >>
    727                                                                  *+>>
    728                                                                  * >>
    729                                                                  * >>
    730                                                                  * >>
    731                                                                  * >>
    732                                                                  * >>
    733                                                                  * >>
    734                                                                  *
    735                                                                  *+>>
    736                                                                  * >>
    737                                                                  * >>
    738                                                                  * >>
    739                                                                  * >>
    740                                                                  *+>>
    741                                                                  * >>
    742
    743                                   INCLUD DISPLSPR
    744                           * --------------------------------------->>
    745                           * DisplaySprite
    746                           * -------------
    747                           * Subroutine to manage sprite priority.
    748                           * Object's priority is read and object is>>
    749                           * priority: 0 - unregistred
    750                           * priority: 1 - register non moving overl>>
    751                           * priority; 2-8 - register moving sprite >>
    752                           *
    753                           * Unlike original S2 code, sprite priorit>>
    754                           * it allows to keep an exact sprite order>>
    755                           *
    756                           * DisplaySprite
    757                           * input REG : [u] object pointer (OST)
    758                           *
    759                           * DisplaySprite_x
    760                           * input REG : [x] object pointer (OST)
    761                           * --------------------------------------->>
    762                            
    763        721B               DisplaySprite_x *@globals
    764  5+6   721B 34   56               pshs  d,x,u
    765  6     721D 1F   13               tfr   x,u
    766  3     721F 20   02               bra   DSP_Start
    767                            
    768        7221               DisplaySprite *@globals
    769  5+6   7221 34   56               pshs  d,x,u
    770                            
    771        7223               DSP_Start
    772  4+1   7223 A6   42               lda   render_flags,u
    773  2     7225 84   DF               anda  #:render_hide_mask         >>
    774  4+1   7227 A7   42               sta   render_flags,u
    775
    776  5     7229 B6   613D             lda   Glb_Cur_Wrk_Screen_Id      >>
    777  3     722C 26   09               bne   DSP_SetBuffer1
    778                            
    779        722E               DSP_SetBuffer0
    780  4+1   722E 30   C8 36            leax  rsv_buffer_0,u             >>
    781  4     7231 108E 64E4             ldy   #DPS_buffer_0              >>
    782  3     7235 20   07               bra   DSP_BufferPositionned
    783                            
    784        7237               DSP_SetBuffer1
    785  4+1   7237 30   C8 48            leax  rsv_buffer_1,u             >>
    786  4     723A 108E 654A             ldy   #DPS_buffer_1              >>
    787                            
    788        723E               DSP_BufferPositionned
    789  4+1   723E A6   43               lda   priority,u                 >>
    790  4+1   7240 A1   00               cmpa  buf_priority,x
    791  3     7242 27   1C               beq   DSP_rts                    >>
    792  4+1   7244 E6   00               ldb   buf_priority,x
    793  3     7246 26   3F               bne   DSP_ChangePriority
    794                            
    795        7248               DSP_InitPriority
    796  4+1   7248 A7   00               sta   buf_priority,x             >>
    797  2     724A 48                    asla                             >>
    798                            
    799        724B               DSP_CheckLastEntry
    800  4+1   724B 31   A8 12            leay  buf_Tbl_Priority_Last_Entry>>
    801  6+1   724E 6D   A6               tst   a,y                        >>
    802  3     7250 26   10               bne   DSP_addToExistingNode      >>
    803                            
    804        7252               DSP_addFirstNode
    805  5+1   7252 EF   A6               stu   a,y                        >>
    806  4+1   7254 31   A8 EE            leay  buf_Tbl_Priority_First_Entr>>
    807  5+1   7257 EF   A6               stu   a,y                        >>
    808  3     7259 CC   0000             ldd   #0
    809  5+1   725C ED   01               std   buf_priority_prev_obj,x    >>
    810  5+1   725E ED   03               std   buf_priority_next_obj,x
    811                            
    812        7260               DSP_rts
    813  5+8   7260 35   D6               puls  d,x,u,pc                   >>
    814                            
    815        7262               DSP_addToExistingNode
    816  5+1   7262 AE   A6               ldx   a,y                        >>
    817  5     7264 F6   613D             ldb   Glb_Cur_Wrk_Screen_Id
    818  3     7267 26   0E               bne   DSP_LinkBuffer1
    819  5+1   7269 EF   88 39            stu   rsv_priority_next_obj_0,x  >>
    820  5+1   726C AF   C8 37            stx   rsv_priority_prev_obj_0,u  >>
    821  6+1   726F 6F   C8 39            clr   rsv_priority_next_obj_0,u  >>
    822  6+1   7272 6F   C8 3A            clr   rsv_priority_next_obj_0+1,u>>
    823  3     7275 20   0C               bra   DSP_LinkCurWithPrev
    824        7277               DSP_LinkBuffer1
    825  5+1   7277 EF   88 4B            stu   rsv_priority_next_obj_1,x  >>
    826  5+1   727A AF   C8 49            stx   rsv_priority_prev_obj_1,u  >>
    827  6+1   727D 6F   C8 4B            clr   rsv_priority_next_obj_1,u  >>
    828  6+1   7280 6F   C8 4C            clr   rsv_priority_next_obj_1+1,u>>
    829                            
    830        7283               DSP_LinkCurWithPrev
    831  5+1   7283 EF   A6               stu   a,y                        >>
    832  5+8   7285 35   D6               puls  d,x,u,pc                   >>
    833                            
    834        7287               DSP_ChangePriority
    835  4+1   7287 31   A8 24            leay  buf_Lst_Priority_Unset,y
    836  5+3   728A EF   B4               stu   [,y]                       >>
    837  4+1   728C 31   22               leay  2,y
    838  6+0   728E 10AF A4               sty   ,y                         >>
    839  4+1   7291 31   A8 DA            leay  -buf_Lst_Priority_Unset-2,y>>
    840  2     7294 81   00               cmpa  #0
    841  3     7296 26   B3               bne   DSP_CheckLastEntry         >>
    842  5+8   7298 35   D6               puls  d,x,u,pc                   >>
    843
    844                            
    845                                                                  *;>>
    846                                                                  *;>>
    847                                                                  *;>>
    848                                                                  *
    849                                                                  *;>>
    850                                                                  *
    851                                                                  *;>>
    852                                                                  *D>>
    853                                                                  * >>
    854                                                                  * >>
    855                                                                  * >>
    856                                                                  * >>
    857                                                                  * >>
    858                            
    859                                                                  * >>
    860                                                                  * >>
    861                                                                  * >>
    862                            
    863                                                                  * >>
    864                                                                  * >>
    865                                                                  *
    866                                                                  *r>>
    867                            
    868                                                                  * >>
    869                                                                  *;>>
    870
    871                                   INCLUD ANIMSPR
    872                           * --------------------------------------->>
    873                           * Subroutine to animate a sprite using an>>
    874                           *
    875                           *   this function also change render flag>>
    876                           *   the status byte;
    877                           *
    878                           * input REG : [u] pointeur sur l'objet
    879                           *
    880                           * --------------------------------------->>
    881
    882                  00FF     resetAnim              equ $FF
    883                  00FE     goBackNFrames          equ $FE ; followed>>
    884                  00FD     goToAnimation          equ $FD ; followed>>
    885                  00FC     nextRoutine            equ $FC
    886                  00FB     resetAnimAndSubRoutine equ $FB
    887                  00FA     nextSubRoutine         equ $FA
    888
    889                                                                    >>
    890                                                                    >>
    891                                                                    >>
    892                                                                    >>
    893                                                                    >>
    894                                                                    >>
    895                                                                    >>
    896        729A               AnimateSprite * @globals                 >>
    897                                                                    >>
    898  5+1   729A AE   44               ldx   anim,u                     >>
    899  6+1   729C AC   46               cmpx  prev_anim,u                >>
    900  3     729E 27   08               beq   Anim_Run                   >>
    901  5+1   72A0 AF   46               stx   prev_anim,u                >>
    902  2     72A2 C6   00                     ldb   #0
    903  4+1   72A4 E7   48               stb   anim_frame,u               >>
    904  4+1   72A6 E7   49               stb   anim_frame_duration,u      >>
    905                                                                    >>
    906        72A8               Anim_Run                                 >>
    907  6+1   72A8 6A   49               dec   anim_frame_duration,u      >>
    908  3     72AA 2A   23               bpl   Anim_Wait                  >>
    909                                   * no offset table                >>
    910                                   * anim is the address of anim    >>
    911  4+1   72AC E6   1F               ldb   -1,x
    912  4+1   72AE E7   49                     stb   anim_frame_duration,u>>
    913                                                                    >>
    914  4+1   72B0 E6   48               ldb   anim_frame,u               >>
    915  2     72B2 58                    aslb
    916  4+1   72B3 31   85               leay  b,x
    917  5+0   72B5 EC   A4               ldd   ,y                         >>
    918                                   * bmi   Anim_End_FF              >>
    919  2     72B7 81   FA                     cmpa  #$FA                 >>
    920  3     72B9 24   15                     bhs   Anim_End_FF          >>
    921                                                                    >>
    922        72BB               Anim_Next                                >>
    923                                      * ne pas utiliser             >>
    924  5+1   72BB ED   4A               std   image_set,u                >>
    925  4+1   72BD E6   C8 1A            ldb   status,u                   >>
    926  2     72C0 C4   03               andb  #status_x_orientation+statu>>
    927  5     72C2 F7   72CA             stb   Anim_dyn+1
    928                                                                    >>
    929  4+1   72C5 A6   42               lda   render_flags,u             >>
    930  2     72C7 84   FC               anda  #:(render_xmirror_mask+rend>>
    931        72C9               Anim_dyn
    932  2     72C9 8A   00               ora   #$00                       >>
    933                                                                    >>
    934  4+1   72CB A7   42               sta   render_flags,u
    935  6+1   72CD 6C   48               inc   anim_frame,u               >>
    936                                                                    >>
    937        72CF               Anim_Wait                                >>
    938  5     72CF 39                    rts                              >>
    939                                                                    >>
    940                                                                    >>
    941        72D0               Anim_End_FF                              >>
    942  2     72D0 4C                    inca                             >>
    943  3     72D1 26   08               bne   Anim_End_FE                >>
    944  2     72D3 C6   00                     ldb   #0
    945  4+1   72D5 E7   48               stb   anim_frame,u               >>
    946  5+0   72D7 EC   84               ldd   ,x                         >>
    947  3     72D9 20   E0               bra   Anim_Next                  >>
    948                                                                    >>
    949                                                                    >>
    950        72DB               Anim_End_FE                              >>
    951  2     72DB 4C                    inca                             >>
    952  3     72DC 26   0E               bne   Anim_End_FD                >>
    953  4+1   72DE A6   48               lda   anim_frame,u
    954  5     72E0 F7   72E4             stb   Anim_End_FE_dyn+1          >>
    955        72E3               Anim_End_FE_dyn
    956  2     72E3 80   00               suba  #$00                       >>
    957  4+1   72E5 A7   48               sta   anim_frame,u               >>
    958                                                                    >>
    959  2     72E7 48                    asla
    960  5+1   72E8 EC   86               ldd   a,x                        >>
    961  3     72EA 20   CF               bra   Anim_Next                  >>
    962                                                                    >>
    963                                                                    >>
    964        72EC               Anim_End_FD                              >>
    965  2     72EC 4C                    inca                             >>
    966  3     72ED 26   05               bne   Anim_End_FC                >>
    967  5+1   72EF EC   21               ldd   1,y                        >>
    968  5+1   72F1 ED   44               std   anim,u                     >>
    969  5     72F3 39                    rts                              >>
    970                                                                    >>
    971                                                                    >>
    972        72F4               Anim_End_FC                              >>
    973  2     72F4 4C                    inca                             >>
    974  3     72F5 26   0F               bne   Anim_End_FB                >>
    975  4+1   72F7 E6   C8 18            ldb   routine,u
    976  2     72FA CB   03               addb  #$03
    977  4+1   72FC E7   C8 18            stb   routine,u                  >>
    978  2     72FF 86   00               lda   #0
    979  4+1   7301 A7   49               sta   anim_frame_duration,u      >>
    980  6+1   7303 6C   48               inc   anim_frame,u               >>
    981  5     7305 39                    rts                              >>
    982                                                                    >>
    983                                                                    >>
    984        7306               Anim_End_FB                              >>
    985  2     7306 4C                    inca                             >>
    986  3     7307 26   08               bne   Anim_End_FA                >>
    987  2     7309 86   00               lda   #0
    988  4+1   730B A7   48               sta   anim_frame,u               >>
    989  4+1   730D A7   C8 19            sta   routine_secondary,u        >>
    990  5     7310 39                    rts                              >>
    991                                                                    >>
    992                                                                    >>
    993        7311               Anim_End_FA                              >>
    994  2     7311 4C                    inca                             >>
    995  3     7312 26   08               bne   Anim_End                   >>
    996  4+1   7314 E6   C8 19            ldb   routine_secondary,u        >>
    997  2     7317 CB   03               addb  #$03
    998  4+1   7319 E7   C8 19            stb   routine_secondary,u
    999        731C               Anim_End
   1000  5     731C 39                    rts                              >>
   1001                                                                    >>
   1002                                                                    >>
   1003                                                                    >>
   1004                                                                    >>
   1005                                                                    >>
   1006                                                                    >>
   1007                                                                    >>
   1008                                                                    >>
   1009                                                                    >>
   1010                                                                    >>
   1011
   1012                                   INCLUD OBJMOVE
   1013                           * --------------------------------------->>
   1014                           * Subroutine translating object speed to >>
   1015                           * This moves the object horizontally and >>
   1016                           * but does not apply gravity to it
   1017                           * --------------------------------------->>
   1018
   1019                                                                  *;>>
   1020                                                                  *;>>
   1021                                                                  *;>>
   1022                                                                  *;>>
   1023                                                                  *;>>
   1024                                                                  *
   1025                                                                  *;>>
   1026                                                                  *
   1027                                                                  *;>>
   1028        731D               ObjectMove                             *O>>
   1029                                                                  * >>
   1030                                                                  * >>
   1031                                                                  * >>
   1032                                                                  * >>
   1033                                                                  * >>
   1034                                                                  * >>
   1035  4+1   731D E6   C8 14            ldb   x_vel,u
   1036  2     7320 1D                    sex                            ; >>
   1037  5     7321 B7   732E             sta   am_ObjectMove_01+1
   1038  5+1   7324 EC   C8 14            ldd   x_vel,u
   1039  6+1   7327 E3   4D               addd  x_pos+1,u                ; >>
   1040  5+1   7329 ED   4D               std   x_pos+1,u                ; >>
   1041  4+1   732B A6   4C               lda   x_pos,u
   1042        732D               am_ObjectMove_01
   1043  2     732D 89   00               adca  #$00                     ; >>
   1044  4+1   732F A7   4C               sta   x_pos,u                  ; >>
   1045                            
   1046                                                                  * >>
   1047                                                                  * >>
   1048                                                                  * >>
   1049                                                                  * >>
   1050                                                                  * >>
   1051                                                                  * >>
   1052  4+1   7331 E6   C8 16            ldb   y_vel,u
   1053  2     7334 1D                    sex                            ; >>
   1054  5     7335 B7   7344             sta   am_ObjectMove_02+1
   1055  5+1   7338 EC   C8 16            ldd   y_vel,u
   1056  6+1   733B E3   C8 10            addd  y_pos+1,u                ; >>
   1057  5+1   733E ED   C8 10            std   y_pos+1,u                ; >>
   1058  4+1   7341 A6   4F               lda   y_pos,u
   1059        7343               am_ObjectMove_02
   1060  2     7343 89   00               adca  #$00                     ; >>
   1061  4+1   7345 A7   4F               sta   y_pos,u                  ; >>
   1062  5     7347 39                    rts                            * >>
   1063                                                                  *;>>
   1064                                                                  *;>>
   1065
   1066                                   INCLUD OBJLOAD
   1067                           * --------------------------------------->>
   1068                           * Single object loading subroutine
   1069                           * Find an empty object array
   1070                           *
   1071                           * input  REG : [u] pointeur sur l'objet c>>
   1072                           * output REG : [x] pointeur sur l'objet l>>
   1073                           * --------------------------------------->>
   1074
   1075                                                                  *;>>
   1076                                                                  *;>>
   1077                                                                  *;>>
   1078                                                                  *;>>
   1079                                                                  *;>>
   1080                                                                  *
   1081                                                                  *;>>
   1082                                                                  *S>>
   1083                                                                  * >>
   1084                                                                  * >>
   1085                                                                  * >>
   1086                                                                  * >>
   1087                                                                  * >>
   1088                                                                  *
   1089                                                                  */>>
   1090                                                                  * >>
   1091                                                                  * >>
   1092                                                                  * >>
   1093                                                                  * >>
   1094                                                                  *
   1095                                                                  *r>>
   1096                                                                  * >>
   1097                                                                  *;>>
   1098                                                                  *;>>
   1099                                                                  *;>>
   1100                                                                  *;>>
   1101                                                                  *;>>
   1102                                                                  *
   1103                                                                  *;>>
   1104                                                                  *
   1105                                                                  *;>>
   1106        7348               SingleObjLoad2                         *S>>
   1107  6     7348 1F   31               tfr   u,x                      * >>
   1108  4+1   734A 30   88 5A            leax  next_object,x            * >>
   1109  4     734D 8C   7062             cmpx  #Dynamic_Object_RAM_End  * >>
   1110  3     7350 27   0C               beq   SingleObjLoad2_02        * >>
   1111                                                                  * >>
   1112                                                                  * >>
   1113                                                                  * >>
   1114                                                                  * >>
   1115                                                                  * >>
   1116                                                                  * >>
   1117                                                                  * >>
   1118                                                                  * >>
   1119                                                                  *
   1120        7352               SingleObjLoad2_01                      *->>
   1121  6+0   7352 6D   84               tst   ,x                       * >>
   1122  3     7354 27   08               beq   SingleObjLoad2_02        * >>
   1123  4+1   7356 30   88 5A            leax  next_object,x            * >>
   1124  4     7359 8C   7062             cmpx  #Dynamic_Object_RAM_End
   1125  3     735C 26   F4               bne   SingleObjLoad2_01        * >>
   1126                                                                  *
   1127        735E               SingleObjLoad2_02                      *r>>
   1128  5     735E 39                    rts                            * >>
   1129                                                                  *
   1130                                                                  * >>
   1131                                                                  *+>>
   1132                                                                  *.>>
   1133                                                                  *.>>
   1134                                                                  *
   1135                                                                  * >>
   1136                                                                  * >>
   1137                                                                  * >>
   1138                                                                  * >>
   1139                                                                  * >>
   1140                                                                  * >>
   1141                                                                  *
   1142                                                                  *.>>
   1143                                                                  *.>>
   1144                                                                  * >>
   1145                                                                  * >>
   1146                                                                  * >>
   1147                                                                  *;>>
   1148                                                                  *;>>
   1149                                                                  *;>>
   1150                                                                  *;>>
   1151                                                                  *;>>
   1152                                                                  *
   1153                                                                  *;>>
   1154                                                                  *
   1155                                                                  *;>>
   1156                                                                  *S>>
   1157                                                                  * >>
   1158                                                                  * >>
   1159                                                                  *
   1160                                                                  *->>
   1161                                                                  * >>
   1162                                                                  * >>
   1163                                                                  * >>
   1164                                                                  * >>
   1165                                                                  *
   1166                                                                  *r>>
   1167                                                                  * >>
   1168                                                                  *;>>
   1169
   1170
   1171                                   INCLUD DELETOBJ
   1172                           * --------------------------------------->>
   1173                           * DeleteObject
   1174                           * ------------
   1175                           * Subroutine to delete an object.
   1176                           * If the object is rendered as a sprite i>>
   1177                           * routine
   1178                           *
   1179                           * DeleteObject
   1180                           * input REG : [u] object pointer (OST)
   1181                           *
   1182                           * DeleteObject_x
   1183                           * input REG : [x] object pointer (OST)
   1184                           * --------------------------------------->>
   1185
   1186                                                                  *;>>
   1187                                                                  *;>>
   1188                                                                  *;>>
   1189                                                                  *
   1190                                                                  *;>>
   1191                                                                  *
   1192                                                                  *;>>
   1193        735F               DeleteObject_x *@globals               *D>>
   1194  5+6   735F 34   56               pshs  d,x,u                    * >>
   1195  4+0   7361 33   84               leau  ,x                       *;>>
   1196  3     7363 20   02               bra   DOB_Start
   1197                            
   1198        7365               DeleteObject *@globals                 *D>>
   1199  5+6   7365 34   56               pshs  d,x,u
   1200                            
   1201        7367               DOB_Start
   1202  4+1   7367 A6   C8 47            lda   rsv_prev_render_flags_0,u
   1203  3     736A 2A   27               bpl   DOB_RemoveFromDPSB0        >>
   1204
   1205        736C               DOB_ToDeleteFlag0
   1206  4+1   736C A6   42               lda   render_flags,u
   1207  2     736E 8A   40               ora   #render_todelete_mask
   1208  4+1   7370 A7   42               sta   render_flags,u             >>
   1209                            
   1210        7372               DOB_Unset0
   1211  6     7372 BE   6508             ldx   Lst_Priority_Unset_0       >>
   1212  5+0   7375 EF   84               stu   ,x
   1213  4+1   7377 30   02               leax  2,x
   1214  6     7379 BF   6508             stx   Lst_Priority_Unset_0
   1215                            
   1216        737C               DOB_TestOnscreen1
   1217  4+1   737C A6   C8 59            lda   rsv_prev_render_flags_1,u
   1218  3     737F 2A   54               bpl   DOB_RemoveFromDPSB1        >>
   1219                            
   1220        7381               DOB_ToDeleteFlag1
   1221  4+1   7381 A6   42               lda   render_flags,u
   1222  2     7383 8A   40               ora   #render_todelete_mask
   1223  4+1   7385 A7   42               sta   render_flags,u             >>
   1224                            
   1225        7387               DOB_Unset1
   1226  6     7387 BE   656E             ldx   Lst_Priority_Unset_1       >>
   1227  5+0   738A EF   84               stu   ,x
   1228  4+1   738C 30   02               leax  2,x
   1229  6     738E BF   656E             stx   Lst_Priority_Unset_1
   1230  5+8   7391 35   D6               puls  d,x,u,pc                   >>
   1231
   1232        7393               DOB_RemoveFromDPSB0
   1233  5+1   7393 EC   C8 37            ldd   rsv_priority_prev_obj_0,u  >>
   1234  3     7396 26   11               bne   DOB_ChainPrevB0
   1235                            
   1236  4+1   7398 A6   C8 36            lda   rsv_priority_0,u
   1237  2     739B 48                    lsla
   1238  4     739C 108E 64E4             ldy   #Tbl_Priority_First_Entry_0>>
   1239  4+1   73A0 31   A6               leay  a,y
   1240  5+1   73A2 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1241  5+0   73A5 ED   A4               std   ,y
   1242  3     73A7 20   0A               bra   DOB_CheckPrioNextB0
   1243                            
   1244        73A9               DOB_ChainPrevB0
   1245  5+1   73A9 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1246  6+1   73AC 10AE C8 37            ldy   rsv_priority_prev_obj_0,u
   1247  5+1   73B0 ED   A8 39            std   rsv_priority_next_obj_0,y
   1248
   1249        73B3               DOB_CheckPrioNextB0
   1250  5+1   73B3 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1251  3     73B6 26   11               bne   DOB_ChainNextB0
   1252
   1253  4+1   73B8 A6   C8 36            lda   rsv_priority_0,u
   1254  2     73BB 48                    lsla
   1255  4     73BC 108E 64F6             ldy   #Tbl_Priority_Last_Entry_0
   1256  4+1   73C0 31   A6               leay  a,y
   1257  5+1   73C2 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   1258  5+0   73C5 ED   A4               std   ,y
   1259  3     73C7 20   B3               bra   DOB_TestOnscreen1
   1260                            
   1261        73C9               DOB_ChainNextB0
   1262  5+1   73C9 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   1263  6+1   73CC 10AE C8 39            ldy   rsv_priority_next_obj_0,u
   1264  5+1   73D0 ED   A8 37            std   rsv_priority_prev_obj_0,y
   1265  3     73D3 20   A7               bra   DOB_TestOnscreen1
   1266
   1267        73D5               DOB_RemoveFromDPSB1
   1268  5+1   73D5 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1269  3     73D8 26   11               bne   DOB_ChainPrevB1
   1270                            
   1271  4+1   73DA A6   C8 48            lda   rsv_priority_1,u
   1272  2     73DD 48                    lsla
   1273  4     73DE 108E 654A             ldy   #Tbl_Priority_First_Entry_1>>
   1274  4+1   73E2 31   A6               leay  a,y
   1275  5+1   73E4 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1276  5+0   73E7 ED   A4               std   ,y
   1277  3     73E9 20   0A               bra   DOB_CheckPrioNextB1
   1278                            
   1279        73EB               DOB_ChainPrevB1
   1280  5+1   73EB EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1281  6+1   73EE 10AE C8 49            ldy   rsv_priority_prev_obj_1,u
   1282  5+1   73F2 ED   A8 4B            std   rsv_priority_next_obj_1,y
   1283
   1284        73F5               DOB_CheckPrioNextB1
   1285  5+1   73F5 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1286  3     73F8 26   19               bne   DOB_ChainNextB1
   1287
   1288  4+1   73FA A6   C8 48            lda   rsv_priority_1,u
   1289  2     73FD 48                    lsla
   1290  4     73FE 108E 655C             ldy   #Tbl_Priority_Last_Entry_1
   1291  4+1   7402 31   A6               leay  a,y
   1292  5+1   7404 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1293  5+0   7407 ED   A4               std   ,y
   1294  4+1   7409 A6   C8 47            lda   rsv_prev_render_flags_0,u
   1295  3     740C 2B   03               bmi   DOB_rts                    >>
   1296  8     740E BD   7427             jsr   ClearObj                   >>
   1297        7411               DOB_rts                                *
   1298  5+8   7411 35   D6               puls  d,x,u,pc
   1299                            
   1300        7413               DOB_ChainNextB1
   1301  5+1   7413 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1302  6+1   7416 10AE C8 4B            ldy   rsv_priority_next_obj_1,u
   1303  5+1   741A ED   A8 49            std   rsv_priority_prev_obj_1,y
   1304  4+1   741D A6   C8 47            lda   rsv_prev_render_flags_0,u
   1305  3     7420 2B   EF               bmi   DOB_rts                    >>
   1306  8     7422 BD   7427             jsr   ClearObj                   >>
   1307  5+8   7425 35   D6               puls  d,x,u,pc
   1308
   1309                                                                  * >>
   1310                                                                  *
   1311                                                                  * >>
   1312                                                                  * >>
   1313                                                                  *->>
   1314                                                                  * >>
   1315                                                                  * >>
   1316                                                                  * >>
   1317                                                                  * >>
   1318                                                                  *
   1319                                                                  * >>
   1320                                                                  *;>>
   1321
   1322                                   INCLUD CLEAROBJ
   1323                           * --------------------------------------->>
   1324                           * ClearObj
   1325                           * --------
   1326                           * Subroutine to clear an object data in O>>
   1327                           *
   1328                           * input REG : [u] pointer on objet (OST)
   1329                           * clear REG : [d,y]
   1330                           * --------------------------------------->>
   1331
   1332        7427               ClearObj *@globals
   1333  5+8   7427 34   76               pshs  d,x,y,u
   1334  7     7429 10FF 7450             sts   CLO_1+2
   1335  4+1   742D 32   C8 5A            leas  object_size,u
   1336  3     7430 CC   0000             ldd   #$0000
   1337  3     7433 8E   0000             ldx   #$0000
   1338  4+0   7436 31   84               leay  ,x
   1339  4+0   7438 33   84               leau  ,x
   1340  5+8   743A 34   76               pshs  d,x,y,u
   1341  5+8   743C 34   76               pshs  d,x,y,u
   1342  5+8   743E 34   76               pshs  d,x,y,u
   1343  5+8   7440 34   76               pshs  d,x,y,u
   1344  5+8   7442 34   76               pshs  d,x,y,u
   1345  5+8   7444 34   76               pshs  d,x,y,u
   1346  5+8   7446 34   76               pshs  d,x,y,u
   1347  5+8   7448 34   76               pshs  d,x,y,u
   1348  5+8   744A 34   76               pshs  d,x,y,u
   1349  4+0   744C 33   E4               leau  ,s
   1350        744E               CLO_1
   1351  4     744E 10CE 0000             lds   #$0000        ; start of ob>>
   1352  5+6   7452 36   36               pshu  d,x,y         ; saving 12 b>>
   1353  5+6   7454 36   36               pshu  d,x,y         ; DEPENDENCY >>
   1354  5+6   7456 36   36               pshu  d,x,y         ; DEPENDENCY >>
   1355        7458               CLO_2
   1356  5+10  7458 35   F6               puls  d,x,y,u,pc
   1357
   1358                                   INCLUD CHECKSPR
   1359                           * --------------------------------------->>
   1360                           * CheckSpritesRefresh
   1361                           * -------------------
   1362                           * Subroutine to determine if sprites are >>
   1363                           * Read Display Priority Structure (back t>>
   1364                           * priority: 0 - unregistred
   1365                           * priority: 1 - register non moving overl>>
   1366                           * priority; 2-8 - register moving sprite >>
   1367                           *
   1368                           * input REG : none
   1369                           * --------------------------------------->>
   1370
   1371        745A 0000          cur_priority            fdb   $00
   1372        745C 0000          cur_ptr_sub_obj_erase   fdb   $0000
   1373        745E 0000          cur_ptr_sub_obj_draw    fdb   $0000
   1374                            
   1375        7460               CheckSpritesRefresh
   1376
   1377        7460               CSR_Start
   1378  3     7460 CC   65B0             ldd   #Tbl_Sub_Object_Erase
   1379  6     7463 FD   745C             std   cur_ptr_sub_obj_erase
   1380  3     7466 CC   65F0             ldd   #Tbl_Sub_Object_Draw
   1381  6     7469 FD   745E             std   cur_ptr_sub_obj_draw
   1382  5     746C B6   613D             lda   Glb_Cur_Wrk_Screen_Id      >>
   1383  3     746F 26   6E               bne   CSR_SetBuffer1
   1384                            
   1385        7471               CSR_SetBuffer0
   1386  2     7471 86   36               lda   #rsv_buffer_0              >>
   1387  5     7473 B7   754F             sta   CSR_ProcessEachPriorityLeve>>
   1388        7476               CSR_P8B0
   1389  6     7476 FE   64F4             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1390  3     7479 27   08               beq   CSR_P7B0
   1391  2     747B 86   08               lda   #$08
   1392  5     747D B7   745A             sta   cur_priority
   1393  8     7480 BD   754D             jsr   CSR_ProcessEachPriorityLeve>>
   1394        7483               CSR_P7B0
   1395  6     7483 FE   64F2             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1396  3     7486 27   08               beq   CSR_P6B0
   1397  2     7488 86   07               lda   #$07
   1398  5     748A B7   745A             sta   cur_priority
   1399  8     748D BD   754D             jsr   CSR_ProcessEachPriorityLeve>>
   1400        7490               CSR_P6B0
   1401  6     7490 FE   64F0             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1402  3     7493 27   08               beq   CSR_P5B0
   1403  2     7495 86   06               lda   #$06
   1404  5     7497 B7   745A             sta   cur_priority
   1405  8     749A BD   754D             jsr   CSR_ProcessEachPriorityLeve>>
   1406        749D               CSR_P5B0
   1407  6     749D FE   64EE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1408  3     74A0 27   08               beq   CSR_P4B0
   1409  2     74A2 86   05               lda   #$05
   1410  5     74A4 B7   745A             sta   cur_priority
   1411  8     74A7 BD   754D             jsr   CSR_ProcessEachPriorityLeve>>
   1412        74AA               CSR_P4B0
   1413  6     74AA FE   64EC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1414  3     74AD 27   08               beq   CSR_P3B0
   1415  2     74AF 86   04               lda   #$04
   1416  5     74B1 B7   745A             sta   cur_priority
   1417  8     74B4 BD   754D             jsr   CSR_ProcessEachPriorityLeve>>
   1418        74B7               CSR_P3B0
   1419  6     74B7 FE   64EA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1420  3     74BA 27   08               beq   CSR_P2B0
   1421  2     74BC 86   03               lda   #$03
   1422  5     74BE B7   745A             sta   cur_priority
   1423  8     74C1 BD   754D             jsr   CSR_ProcessEachPriorityLeve>>
   1424        74C4               CSR_P2B0
   1425  6     74C4 FE   64E8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1426  3     74C7 27   08               beq   CSR_P1B0
   1427  2     74C9 86   02               lda   #$02
   1428  5     74CB B7   745A             sta   cur_priority
   1429  8     74CE BD   754D             jsr   CSR_ProcessEachPriorityLeve>>
   1430        74D1               CSR_P1B0
   1431  6     74D1 FE   64E6             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1432  3     74D4 27   08               beq   CSR_rtsB0
   1433  2     74D6 86   01               lda   #$01
   1434  5     74D8 B7   745A             sta   cur_priority
   1435  8     74DB BD   754D             jsr   CSR_ProcessEachPriorityLeve>>
   1436        74DE               CSR_rtsB0
   1437  5     74DE 39                    rts
   1438                            
   1439        74DF               CSR_SetBuffer1
   1440  2     74DF 86   48               lda   #rsv_buffer_1              >>
   1441  5     74E1 B7   754F             sta   CSR_ProcessEachPriorityLeve>>
   1442        74E4               CSR_P8B1
   1443  6     74E4 FE   655A             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1444  3     74E7 27   08               beq   CSR_P7B1
   1445  2     74E9 86   08               lda   #$08
   1446  5     74EB B7   745A             sta   cur_priority
   1447  8     74EE BD   754D             jsr   CSR_ProcessEachPriorityLeve>>
   1448        74F1               CSR_P7B1
   1449  6     74F1 FE   6558             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1450  3     74F4 27   08               beq   CSR_P6B1
   1451  2     74F6 86   07               lda   #$07
   1452  5     74F8 B7   745A             sta   cur_priority
   1453  8     74FB BD   754D             jsr   CSR_ProcessEachPriorityLeve>>
   1454        74FE               CSR_P6B1
   1455  6     74FE FE   6556             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1456  3     7501 27   08               beq   CSR_P5B1
   1457  2     7503 86   06               lda   #$06
   1458  5     7505 B7   745A             sta   cur_priority
   1459  8     7508 BD   754D             jsr   CSR_ProcessEachPriorityLeve>>
   1460        750B               CSR_P5B1
   1461  6     750B FE   6554             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1462  3     750E 27   08               beq   CSR_P4B1
   1463  2     7510 86   05               lda   #$05
   1464  5     7512 B7   745A             sta   cur_priority
   1465  8     7515 BD   754D             jsr   CSR_ProcessEachPriorityLeve>>
   1466        7518               CSR_P4B1
   1467  6     7518 FE   6552             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1468  3     751B 27   08               beq   CSR_P3B1
   1469  2     751D 86   04               lda   #$04
   1470  5     751F B7   745A             sta   cur_priority
   1471  8     7522 BD   754D             jsr   CSR_ProcessEachPriorityLeve>>
   1472        7525               CSR_P3B1
   1473  6     7525 FE   6550             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1474  3     7528 27   08               beq   CSR_P2B1
   1475  2     752A 86   03               lda   #$03
   1476  5     752C B7   745A             sta   cur_priority
   1477  8     752F BD   754D             jsr   CSR_ProcessEachPriorityLeve>>
   1478        7532               CSR_P2B1
   1479  6     7532 FE   654E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1480  3     7535 27   08               beq   CSR_P1B1
   1481  2     7537 86   02               lda   #$02
   1482  5     7539 B7   745A             sta   cur_priority
   1483  8     753C BD   754D             jsr   CSR_ProcessEachPriorityLeve>>
   1484        753F               CSR_P1B1
   1485  6     753F FE   654C             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1486  3     7542 27   08               beq   CSR_rtsB1
   1487  2     7544 86   01               lda   #$01
   1488  5     7546 B7   745A             sta   cur_priority
   1489  8     7549 BD   754D             jsr   CSR_ProcessEachPriorityLeve>>
   1490        754C               CSR_rtsB1
   1491  5     754C 39                    rts
   1492
   1493        754D               CSR_ProcessEachPriorityLevel
   1494  4+1   754D 30   C8 10            leax  16,u                       >>
   1495                            
   1496        7550               CSR_CheckDelHide
   1497  4+1   7550 A6   42               lda   render_flags,u
   1498  2     7552 84   60               anda  #render_hide_mask!render_to>>
   1499  3     7554 26   2B               bne   CSR_DoNotDisplaySprite
   1500
   1501        7556               CSR_CheckRefresh
   1502  4+1   7556 A6   C8 29            lda   rsv_render_flags,u
   1503  2     7559 84   01               anda  #rsv_render_checkrefresh_ma>>
   1504  6     755B 1026 00FE             lbne  CSR_CheckErase
   1505
   1506        755F               CSR_UpdSpriteImageBasedOnMirror
   1507  4+1   755F A6   C8 29            lda   rsv_render_flags,u
   1508  2     7562 8A   01               ora   #rsv_render_checkrefresh_ma>>
   1509  4+1   7564 A7   C8 29            sta   rsv_render_flags,u         >>
   1510                            
   1511  4+1   7567 A6   42               lda   render_flags,u             >>
   1512  2     7569 84   03               anda  #render_xmirror_mask!render>>
   1513  6+1   756B 10AE 4A               ldy   image_set,u
   1514  4+1   756E E6   26               ldb   image_center_offset,y
   1515  4+1   7570 E7   C8 2C            stb   rsv_image_center_offset,u
   1516  4+1   7573 E6   A6               ldb   a,y
   1517  4+1   7575 31   A5               leay  b,y                        >>
   1518  6+1   7577 10AF C8 2E            sty   rsv_image_subset,u
   1519                            
   1520        757B               CSR_CheckPlayFieldCoord
   1521  4+1   757B A6   42               lda   render_flags,u
   1522  2     757D 84   10               anda  #render_playfieldcoord_mask>>
   1523  3     757F 27   2A               beq   CSR_CheckVerticalPosition  >>
   1524                            
   1525                                   * not yet implemented
   1526                                   * need to be updated with new alg>>
   1527                                   *ldd   x_pos,u
   1528                                   *subd  Glb_Camera_X_Pos
   1529                                   *ldy   rsv_mapping_frame,u
   1530                                   *addd  image_x_offset,y
   1531                                   *lbvs   CSR_SetOutOfRange        >>
   1532                                   *lbmi   CSR_SetOutOfRange        >>
   1533                                   *stb   x_pixel,u
   1534                                   *addb  image_x_size_l,y
   1535                                   *lbvs   CSR_SetOutOfRange        >>
   1536                                   *stb   rsv_x2_pixel,u
   1537                                   *cmpb  #screen_width
   1538                                   *lbgt   CSR_SetOutOfRange        >>
   1539
   1540                                   *ldd   y_pos,u
   1541                                   *subd  Glb_Camera_Y_Pos
   1542                                   *addd  image_y1_offset,y
   1543                                   *bvs   CSR_SetOutOfRange         >>
   1544                                   *bmi   CSR_SetOutOfRange         >>
   1545                                   *stb   y_pixel,u
   1546                                   *addb  image_y_size_l,y
   1547                                   *bvs   CSR_SetOutOfRange         >>
   1548                                   *stb   rsv_y2_pixel,u
   1549                                   *cmpb  #screen_bottom
   1550                                   *bhi   CSR_SetOutOfRange         >>
   1551                                   *lda   rsv_render_flags,u
   1552                                   *anda  #:rsv_render_outofrange_ma>>
   1553                                   *sta   rsv_render_flags,u
   1554                                   *bra   CSR_CheckErase
   1555                            
   1556        7581               CSR_DoNotDisplaySprite
   1557  4+1   7581 A6   43               lda   priority,u
   1558  5     7583 B1   745A             cmpa  cur_priority
   1559  3     7586 26   1C               bne   CSR_NextObject             >>
   1560                            
   1561  4+1   7588 A6   C8 29            lda   rsv_render_flags,u
   1562  2     758B 84   F9               anda  #:rsv_render_erasesprite_ma>>
   1563  4+1   758D A7   C8 29            sta   rsv_render_flags,u
   1564                            
   1565  4+1   7590 E6   88 11            ldb   buf_prev_render_flags,x
   1566  3     7593 2A   0F               bpl   CSR_NextObject             >>
   1567                            
   1568  2     7595 8A   02               ora   #rsv_render_erasesprite_mas>>
   1569  4+1   7597 A7   C8 29            sta   rsv_render_flags,u
   1570                            
   1571  7     759A 10BE 745C             ldy   cur_ptr_sub_obj_erase      >>
   1572  5+3   759E EF   A1               stu   ,y++
   1573  7     75A0 10BF 745C             sty   cur_ptr_sub_obj_erase
   1574                            
   1575        75A4               CSR_NextObject
   1576  5+1   75A4 EE   03               ldu   buf_priority_next_obj,x
   1577  6     75A6 1026 FFA3             lbne  CSR_ProcessEachPriorityLeve>>
   1578  5     75AA 39                    rts
   1579
   1580        75AB               CSR_CheckVerticalPosition
   1581  4+1   75AB A6   C8 12            lda   x_pixel,u                  >>
   1582  4+1   75AE A8   C8 2C            eora  rsv_image_center_offset,u  >>
   1583  2     75B1 84   01               anda  #$01                       >>
   1584  2     75B3 48                    asla                             >>
   1585  4+1   75B4 E6   42               ldb   render_flags,u
   1586  2     75B6 C4   04               andb  #render_overlay_mask       >>
   1587  3     75B8 27   01               beq   CSR_NoOverlay
   1588  2     75BA 4C                    inca
   1589        75BB               CSR_NoOverlay
   1590  4+1   75BB E6   A6               ldb   a,y
   1591  3     75BD 27   08               beq   CSR_NoDefinedFrame
   1592  4+1   75BF 31   A5               leay  b,y                        >>
   1593  6+1   75C1 10AF C8 30            sty   rsv_mapping_frame,u
   1594  3     75C5 20   16               bra CSR_CVP_Continue
   1595                            
   1596        75C7               CSR_NoDefinedFrame
   1597  2     75C7 84   01               anda  #$01                       >>
   1598  4+1   75C9 E6   A6               ldb   a,y
   1599  3     75CB 27   08               beq   CSR_NoFrameFound           >>
   1600  4+1   75CD 31   A5               leay  b,y                        >>
   1601  6+1   75CF 10AF C8 30            sty   rsv_mapping_frame,u
   1602  3     75D3 20   08               bra CSR_CVP_Continue
   1603                            
   1604        75D5               CSR_NoFrameFound
   1605  4     75D5 108E 0000             ldy   #$0000
   1606  6+1   75D9 10AF C8 30            sty   rsv_mapping_frame,u
   1607
   1608        75DD               CSR_CVP_Continue
   1609  4+1   75DD E6   C8 13            ldb   y_pixel,u                  >>
   1610  6+1   75E0 10AE C8 2E            ldy   rsv_image_subset,u
   1611  4+1   75E4 EB   25               addb  image_subset_y1_offset,y
   1612  2     75E6 C1   E3               cmpb  #screen_bottom
   1613  3     75E8 22   6B               bhi   CSR_SetOutOfRange
   1614  2     75EA C1   1C               cmpb  #screen_top
   1615  3     75EC 25   67               blo   CSR_SetOutOfRange
   1616  4+1   75EE E7   C8 33            stb   rsv_y1_pixel,u
   1617  6+1   75F1 10AE 4A               ldy   image_set,u
   1618  4+1   75F4 EB   25               addb  image_y_size,y
   1619  2     75F6 C1   E3               cmpb  #screen_bottom
   1620  3     75F8 22   5B               bhi   CSR_SetOutOfRange
   1621  2     75FA C1   1C               cmpb  #screen_top
   1622  3     75FC 25   57               blo   CSR_SetOutOfRange
   1623  4+1   75FE E7   C8 35            stb   rsv_y2_pixel,u
   1624  4+1   7601 E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1625  3     7604 25   4F               blo   CSR_SetOutOfRange
   1626                            
   1627  4+1   7606 A6   42               lda   render_flags,u             >>
   1628  2     7608 85   80               bita  #render_xloop_mask
   1629  3     760A 26   2B               bne   CSR_DontCheckXFrontier
   1630                            
   1631  4+1   760C E6   C8 12            ldb   x_pixel,u
   1632  6+1   760F 10AE C8 2E            ldy   rsv_image_subset,u
   1633  4+1   7613 EB   24               addb  image_subset_x1_offset,y
   1634  2     7615 C1   CF               cmpb  #screen_right
   1635  3     7617 22   3C               bhi   CSR_SetOutOfRange
   1636  2     7619 C1   30               cmpb  #screen_left
   1637  3     761B 25   38               blo   CSR_SetOutOfRange
   1638  4+1   761D E7   C8 32            stb   rsv_x1_pixel,u
   1639  6+1   7620 10AE 4A               ldy   image_set,u
   1640  4+1   7623 EB   24               addb  image_x_size,y
   1641  2     7625 C1   CF               cmpb  #screen_right
   1642  3     7627 22   2C               bhi   CSR_SetOutOfRange
   1643  2     7629 C1   30               cmpb  #screen_left
   1644  3     762B 25   28               blo   CSR_SetOutOfRange
   1645  4+1   762D E7   C8 34            stb   rsv_x2_pixel,u
   1646  4+1   7630 E1   C8 32            cmpb  rsv_x1_pixel,u             >>
   1647  3     7633 25   20               blo   CSR_SetOutOfRange
   1648                            
   1649  3     7635 20   14               bra   CSR_DontCheckXFrontier_end
   1650                            
   1651        7637               CSR_DontCheckXFrontier
   1652  4+1   7637 E6   C8 12            ldb   x_pixel,u
   1653  6+1   763A 10AE C8 2E            ldy   rsv_image_subset,u
   1654  4+1   763E EB   24               addb  image_subset_x1_offset,y
   1655  4+1   7640 E7   C8 32            stb   rsv_x1_pixel,u
   1656                            
   1657  6+1   7643 10AE 4A               ldy   image_set,u
   1658  4+1   7646 EB   24               addb  image_x_size,y
   1659  4+1   7648 E7   C8 34            stb   rsv_x2_pixel,u
   1660
   1661        764B               CSR_DontCheckXFrontier_end
   1662  4+1   764B A6   C8 29            lda   rsv_render_flags,u
   1663  2     764E 84   F7               anda  #:rsv_render_outofrange_mas>>
   1664  4+1   7650 A7   C8 29            sta   rsv_render_flags,u
   1665  3     7653 20   08               bra   CSR_CheckErase
   1666                            
   1667        7655               CSR_SetOutOfRange
   1668  4+1   7655 A6   C8 29            lda   rsv_render_flags,u
   1669  2     7658 8A   08               ora   #rsv_render_outofrange_mask>>
   1670  4+1   765A A7   C8 29            sta   rsv_render_flags,u
   1671
   1672        765D               CSR_CheckErase
   1673  6     765D BF   773B             stx   CSR_CheckDraw+1
   1674  4+1   7660 A6   00               lda   buf_priority,x
   1675  5     7662 B1   745A             cmpa  cur_priority
   1676  6     7665 1026 00D1             lbne  CSR_CheckDraw
   1677                            
   1678  7     7669 10BE 745C             ldy   cur_ptr_sub_obj_erase
   1679                            
   1680  4+1   766D A6   C8 29            lda   rsv_render_flags,u
   1681  2     7670 84   08               anda  #rsv_render_outofrange_mask>>
   1682  3     7672 27   09               beq   CSR_CheckErase_InRange
   1683  4+1   7674 A6   88 11            lda   buf_prev_render_flags,x
   1684  6     7677 102A 010E             lbpl  CSR_SetEraseDrawFalse      >>
   1685  3     767B 20   20               bra   CSR_SetEraseTrue
   1686                            
   1687        767D               CSR_CheckErase_InRange
   1688  4+1   767D A6   88 11            lda   buf_prev_render_flags,x
   1689  6     7680 102A 00AE             lbpl  CSR_SetEraseFalse          >>
   1690  5+1   7684 EC   C8 12            ldd   xy_pixel,u
   1691  2     7687 44                    lsra                             >>
   1692  7+1   7688 10A3 0B               cmpd  buf_prev_xy_pixel,x
   1693  3     768B 26   10               bne   CSR_SetEraseTrue           >>
   1694  5+1   768D EC   C8 30            ldd   rsv_mapping_frame,u
   1695  7+1   7690 10A3 07               cmpd  buf_prev_mapping_frame,x
   1696  3     7693 26   08               bne   CSR_SetEraseTrue           >>
   1697  4+1   7695 A6   43               lda   priority,u
   1698  4+1   7697 A1   00               cmpa  buf_priority,x
   1699  3     7699 26   02               bne   CSR_SetEraseTrue           >>
   1700  3     769B 20   11               bra   CSR_SubEraseSpriteSearchIni>>
   1701                            
   1702        769D               CSR_SetEraseTrue
   1703  4+1   769D A6   C8 29            lda   rsv_render_flags,u
   1704  2     76A0 8A   02               ora   #rsv_render_erasesprite_mas>>
   1705  4+1   76A2 A7   C8 29            sta   rsv_render_flags,u
   1706                            
   1707  5+3   76A5 EF   A1               stu   ,y++
   1708  7     76A7 10BF 745C             sty   cur_ptr_sub_obj_erase
   1709                            
   1710  5     76AB 16   008C             lbra   CSR_CheckDraw
   1711                            
   1712        76AE               CSR_SubEraseSpriteSearchInit
   1713
   1714                                   * search a collision with a sprit>>
   1715                                   * the sprite under should have to>>
   1716                                   * in this case it forces the refr>>
   1717                                   * as a sub loop, this should be o>>
   1718                                   * there are two lists because a s>>
   1719                                   * and displayed at another positi>>
   1720
   1721  6     76AE BE   745C             ldx   cur_ptr_sub_obj_erase
   1722  5     76B1 B6   613D             lda   Glb_Cur_Wrk_Screen_Id      >>
   1723  3     76B4 26   28               bne   CSR_SubEraseSearchB1
   1724                            
   1725        76B6               CSR_SubEraseSearchB0
   1726  4     76B6 8C   65B0             cmpx  #Tbl_Sub_Object_Erase
   1727  3     76B9 27   4B               beq   CSR_SubDrawSpriteSearchInit>>
   1728  6+3   76BB 10AE 83               ldy   ,--x
   1729                            
   1730        76BE               CSR_SubEraseCheckCollisionB0
   1731  5+1   76BE EC   A8 43            ldd   rsv_prev_xy1_pixel_0,y     >>
   1732  4+1   76C1 A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1733  3     76C4 22   F0               bhi   CSR_SubEraseSearchB0
   1734  4+1   76C6 E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1735  3     76C9 22   EB               bhi   CSR_SubEraseSearchB0
   1736  5+1   76CB EC   A8 45            ldd   rsv_prev_xy2_pixel_0,y     >>
   1737  4+1   76CE A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1738  3     76D1 25   E3               blo   CSR_SubEraseSearchB0
   1739  4+1   76D3 E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1740  3     76D6 25   DE               blo   CSR_SubEraseSearchB0
   1741                            
   1742  7     76D8 10BE 745C             ldy   cur_ptr_sub_obj_erase
   1743  3     76DC 20   BF               bra   CSR_SetEraseTrue           >>
   1744
   1745        76DE               CSR_SubEraseSearchB1
   1746  4     76DE 8C   65B0             cmpx  #Tbl_Sub_Object_Erase
   1747  3     76E1 27   23               beq   CSR_SubDrawSpriteSearchInit>>
   1748  6+3   76E3 10AE 83               ldy   ,--x
   1749                            
   1750        76E6               CSR_SubEraseCheckCollisionB1
   1751  5+1   76E6 EC   A8 55            ldd   rsv_prev_xy1_pixel_1,y     >>
   1752  4+1   76E9 A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1753  3     76EC 22   F0               bhi   CSR_SubEraseSearchB1
   1754  4+1   76EE E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1755  3     76F1 22   EB               bhi   CSR_SubEraseSearchB1
   1756  5+1   76F3 EC   A8 57            ldd   rsv_prev_xy2_pixel_1,y     >>
   1757  4+1   76F6 A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1758  3     76F9 25   E3               blo   CSR_SubEraseSearchB1
   1759  4+1   76FB E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1760  3     76FE 25   DE               blo   CSR_SubEraseSearchB1
   1761                            
   1762  7     7700 10BE 745C             ldy   cur_ptr_sub_obj_erase
   1763  3     7704 20   97               bra   CSR_SetEraseTrue           >>
   1764
   1765        7706               CSR_SubDrawSpriteSearchInit
   1766  6     7706 BE   745E             ldx   cur_ptr_sub_obj_draw
   1767                            
   1768        7709               CSR_SubDrawSearch
   1769  4     7709 8C   65F0             cmpx  #Tbl_Sub_Object_Draw
   1770  3     770C 27   24               beq   CSR_SetEraseFalse          >>
   1771  6+3   770E 10AE 83               ldy   ,--x
   1772
   1773        7711               CSR_SubDrawCheckCollision
   1774  5+1   7711 EC   A8 32            ldd   rsv_xy1_pixel,y            >>
   1775  4+1   7714 A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1776  3     7717 22   F0               bhi   CSR_SubDrawSearch
   1777  4+1   7719 E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1778  3     771C 22   EB               bhi   CSR_SubDrawSearch
   1779  5+1   771E EC   A8 34            ldd   rsv_xy2_pixel,y            >>
   1780  4+1   7721 A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1781  3     7724 25   E3               blo   CSR_SubDrawSearch
   1782  4+1   7726 E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1783  3     7729 25   DE               blo   CSR_SubDrawSearch
   1784                            
   1785  7     772B 10BE 745C             ldy   cur_ptr_sub_obj_erase
   1786  5     772F 16   FF6B             lbra  CSR_SetEraseTrue           >>
   1787
   1788        7732               CSR_SetEraseFalse
   1789  4+1   7732 A6   C8 29            lda   rsv_render_flags,u
   1790  2     7735 84   FD               anda  #:rsv_render_erasesprite_ma>>
   1791  4+1   7737 A7   C8 29            sta   rsv_render_flags,u
   1792                            
   1793        773A               CSR_CheckDraw
   1794  3     773A 8E   FFFF             ldx   #$FFFF                     >>
   1795  4+1   773D A6   43               lda   priority,u
   1796  5     773F B1   745A             cmpa  cur_priority
   1797  6     7742 1026 FE5E             lbne  CSR_NextObject
   1798                            
   1799  7     7746 10BE 745E             ldy   cur_ptr_sub_obj_draw
   1800                            
   1801  4+1   774A A6   C8 29            lda   rsv_render_flags,u
   1802  2     774D 84   08               anda  #rsv_render_outofrange_mask>>
   1803  3     774F 26   40               bne   CSR_SetDrawFalse           >>
   1804  5+1   7751 EC   C8 30            ldd   rsv_mapping_frame,u
   1805  3     7754 27   3B               beq   CSR_SetDrawFalse           >>
   1806  4+1   7756 A6   42               lda   render_flags,u
   1807  2     7758 84   20               anda  #render_hide_mask
   1808  3     775A 26   35               bne   CSR_SetDrawFalse           >>
   1809                            
   1810        775C               CSR_SetDrawTrue
   1811  4+1   775C A6   C8 29            lda   rsv_render_flags,u
   1812  2     775F 8A   04               ora   #rsv_render_displaysprite_m>>
   1813  4+1   7761 A7   C8 29            sta   rsv_render_flags,u
   1814                            
   1815  2     7764 85   02               bita  #rsv_render_erasesprite_mas>>
   1816  3     7766 27   02               beq   CSR_SDT1
   1817  3     7768 20   07               bra   CSR_SDT2
   1818        776A               CSR_SDT1
   1819  4+1   776A E6   88 11            ldb   buf_prev_render_flags,x
   1820  3     776D 2B   0D               bmi   CSR_SetHide
   1821  3     776F 20   05               bra   CSR_SDT3
   1822        7771               CSR_SDT2
   1823  4+1   7771 E6   88 11            ldb   buf_prev_render_flags,x
   1824  3     7774 2A   06               bpl   CSR_SetHide
   1825        7776               CSR_SDT3
   1826  5+3   7776 EF   A1               stu   ,y++
   1827  7     7778 10BF 745E             sty   cur_ptr_sub_obj_draw       >>
   1828
   1829        777C               CSR_SetHide
   1830  4+1   777C A6   42               lda   render_flags,u
   1831  2     777E 8A   20               ora   #render_hide_mask          >>
   1832  4+1   7780 A7   42               sta   render_flags,u
   1833                            
   1834  5+1   7782 EE   03               ldu   buf_priority_next_obj,x
   1835  6     7784 1026 FDC5             lbne  CSR_ProcessEachPriorityLeve>>
   1836  5     7788 39                    rts
   1837
   1838        7789               CSR_SetEraseDrawFalse
   1839  4+1   7789 A6   C8 29            lda   rsv_render_flags,u
   1840  2     778C 84   FD               anda  #:rsv_render_erasesprite_ma>>
   1841  4+1   778E A7   C8 29            sta   rsv_render_flags,u
   1842
   1843        7791               CSR_SetDrawFalse
   1844  4+1   7791 A6   C8 29            lda   rsv_render_flags,u
   1845  2     7794 84   FB               anda  #:rsv_render_displaysprite_>>
   1846  4+1   7796 A7   C8 29            sta   rsv_render_flags,u
   1847                            
   1848  5+1   7799 EE   03               ldu   buf_priority_next_obj,x
   1849  6     779B 1026 FDAE             lbne   CSR_ProcessEachPriorityLev>>
   1850  5     779F 39                    rts
   1851
   1852
   1853                                   INCLUD ERASESPR
   1854                           * --------------------------------------->>
   1855                           * EraseSprites
   1856                           * ------------
   1857                           * Subroutine to erase sprites on screen
   1858                           * Read Display Priority Structure (front >>
   1859                           * priority: 0 - unregistred
   1860                           * priority: 1 - register non moving overl>>
   1861                           * priority; 2-8 - register moving sprite >>
   1862                           *
   1863                           * input REG : none
   1864                           * --------------------------------------->>
   1865                            
   1866        77A0               EraseSprites
   1867
   1868        77A0               ESP_Start
   1869  5     77A0 B6   613D             lda   Glb_Cur_Wrk_Screen_Id      >>
   1870  3     77A3 26   69               bne   ESP_P1B1
   1871
   1872        77A5               ESP_P1B0
   1873  6     77A5 FE   64F8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1874  3     77A8 27   08               beq   ESP_P2B0
   1875  2     77AA 86   01               lda   #$01
   1876  5     77AC B7   787B             sta   ESP_CheckPriorityB0+1
   1877  8     77AF BD   7877             jsr   ESP_ProcessEachPriorityLeve>>
   1878        77B2               ESP_P2B0
   1879  6     77B2 FE   64FA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1880  3     77B5 27   08               beq   ESP_P3B0
   1881  2     77B7 86   02               lda   #$02
   1882  5     77B9 B7   787B             sta   ESP_CheckPriorityB0+1
   1883  8     77BC BD   7877             jsr   ESP_ProcessEachPriorityLeve>>
   1884        77BF               ESP_P3B0
   1885  6     77BF FE   64FC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1886  3     77C2 27   08               beq   ESP_P4B0
   1887  2     77C4 86   03               lda   #$03
   1888  5     77C6 B7   787B             sta   ESP_CheckPriorityB0+1
   1889  8     77C9 BD   7877             jsr   ESP_ProcessEachPriorityLeve>>
   1890        77CC               ESP_P4B0
   1891  6     77CC FE   64FE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1892  3     77CF 27   08               beq   ESP_P5B0
   1893  2     77D1 86   04               lda   #$04
   1894  5     77D3 B7   787B             sta   ESP_CheckPriorityB0+1
   1895  8     77D6 BD   7877             jsr   ESP_ProcessEachPriorityLeve>>
   1896        77D9               ESP_P5B0
   1897  6     77D9 FE   6500             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1898  3     77DC 27   08               beq   ESP_P6B0
   1899  2     77DE 86   05               lda   #$05
   1900  5     77E0 B7   787B             sta   ESP_CheckPriorityB0+1
   1901  8     77E3 BD   7877             jsr   ESP_ProcessEachPriorityLeve>>
   1902        77E6               ESP_P6B0
   1903  6     77E6 FE   6502             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1904  3     77E9 27   08               beq   ESP_P7B0
   1905  2     77EB 86   06               lda   #$06
   1906  5     77ED B7   787B             sta   ESP_CheckPriorityB0+1
   1907  8     77F0 BD   7877             jsr   ESP_ProcessEachPriorityLeve>>
   1908        77F3               ESP_P7B0
   1909  6     77F3 FE   6504             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1910  3     77F6 27   08               beq   ESP_P8B0
   1911  2     77F8 86   07               lda   #$07
   1912  5     77FA B7   787B             sta   ESP_CheckPriorityB0+1
   1913  8     77FD BD   7877             jsr   ESP_ProcessEachPriorityLeve>>
   1914        7800               ESP_P8B0
   1915  6     7800 FE   6506             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1916  3     7803 27   08               beq   ESP_rtsB0
   1917  2     7805 86   08               lda   #$08
   1918  5     7807 B7   787B             sta   ESP_CheckPriorityB0+1
   1919  8     780A BD   7877             jsr   ESP_ProcessEachPriorityLeve>>
   1920        780D               ESP_rtsB0
   1921  5     780D 39                    rts
   1922                            
   1923        780E               ESP_P1B1
   1924  6     780E FE   655E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1925  3     7811 27   08               beq   ESP_P2B1
   1926  2     7813 86   01               lda   #$01
   1927  5     7815 B7   78CC             sta   ESP_CheckPriorityB1+1
   1928  8     7818 BD   78C8             jsr   ESP_ProcessEachPriorityLeve>>
   1929        781B               ESP_P2B1
   1930  6     781B FE   6560             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1931  3     781E 27   08               beq   ESP_P3B1
   1932  2     7820 86   02               lda   #$02
   1933  5     7822 B7   78CC             sta   ESP_CheckPriorityB1+1
   1934  8     7825 BD   78C8             jsr   ESP_ProcessEachPriorityLeve>>
   1935        7828               ESP_P3B1
   1936  6     7828 FE   6562             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1937  3     782B 27   08               beq   ESP_P4B1
   1938  2     782D 86   03               lda   #$03
   1939  5     782F B7   78CC             sta   ESP_CheckPriorityB1+1
   1940  8     7832 BD   78C8             jsr   ESP_ProcessEachPriorityLeve>>
   1941        7835               ESP_P4B1
   1942  6     7835 FE   6564             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1943  3     7838 27   08               beq   ESP_P5B1
   1944  2     783A 86   04               lda   #$04
   1945  5     783C B7   78CC             sta   ESP_CheckPriorityB1+1
   1946  8     783F BD   78C8             jsr   ESP_ProcessEachPriorityLeve>>
   1947        7842               ESP_P5B1
   1948  6     7842 FE   6566             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1949  3     7845 27   08               beq   ESP_P6B1
   1950  2     7847 86   05               lda   #$05
   1951  5     7849 B7   78CC             sta   ESP_CheckPriorityB1+1
   1952  8     784C BD   78C8             jsr   ESP_ProcessEachPriorityLeve>>
   1953        784F               ESP_P6B1
   1954  6     784F FE   6568             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1955  3     7852 27   08               beq   ESP_P7B1
   1956  2     7854 86   06               lda   #$06
   1957  5     7856 B7   78CC             sta   ESP_CheckPriorityB1+1
   1958  8     7859 BD   78C8             jsr   ESP_ProcessEachPriorityLeve>>
   1959        785C               ESP_P7B1
   1960  6     785C FE   656A             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1961  3     785F 27   08               beq   ESP_P8B1
   1962  2     7861 86   07               lda   #$07
   1963  5     7863 B7   78CC             sta   ESP_CheckPriorityB1+1
   1964  8     7866 BD   78C8             jsr   ESP_ProcessEachPriorityLeve>>
   1965        7869               ESP_P8B1
   1966  6     7869 FE   656C             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1967  3     786C 27   08               beq   ESP_rtsB1
   1968  2     786E 86   08               lda   #$08
   1969  5     7870 B7   78CC             sta   ESP_CheckPriorityB1+1
   1970  8     7873 BD   78C8             jsr   ESP_ProcessEachPriorityLeve>>
   1971        7876               ESP_rtsB1
   1972  5     7876 39                    rts
   1973
   1974                           * *******
   1975                           * BUFFER0
   1976                           * *******
   1977
   1978        7877               ESP_ProcessEachPriorityLevelB0
   1979  4+1   7877 A6   C8 36            lda   rsv_priority_0,u
   1980                            
   1981        787A               ESP_CheckPriorityB0
   1982  2     787A 81   00               cmpa  #0                         >>
   1983  3     787C 26   44               bne   ESP_NextObjectB0           >>
   1984                            
   1985        787E               ESP_UnsetCheckRefreshB0
   1986  4+1   787E A6   C8 29            lda   rsv_render_flags,u
   1987  4+1   7881 E6   42               ldb   render_flags,u
   1988  2     7883 C4   08               andb  #render_motionless_mask
   1989  3     7885 26   05               bne   ESP_CheckEraseB0
   1990  2     7887 84   FE               anda  #:rsv_render_checkrefresh_m>>
   1991  4+1   7889 A7   C8 29            sta   rsv_render_flags,u
   1992                            
   1993        788C               ESP_CheckEraseB0
   1994  2     788C 84   02               anda  #rsv_render_erasesprite_mas>>
   1995  3     788E 27   32               beq   ESP_NextObjectB0
   1996  4+1   7890 E6   C8 47            ldb   rsv_prev_render_flags_0,u
   1997  2     7893 C4   01               andb  #rsv_prev_render_overlay_ma>>
   1998  3     7895 26   23               bne   ESP_UnsetOnScreenFlagB0
   1999                            
   2000        7897               ESP_CallEraseRoutineB0
   2001  6     7897 FF   78AB             stu   ESP_CallEraseRoutineB0_00+1>>
   2002  5+1   789A AE   C8 3D            ldx   rsv_prev_mapping_frame_0,u >>
   2003  4+1   789D A6   03               lda   page_erase_routine,x
   2004  5     789F B7   E7E5             sta   $E7E5                      >>
   2005  5+1   78A2 EE   C8 3F            ldu   rsv_bgdata_0,u             >>
   2006  7+4   78A5 AD   98 04            jsr   [erase_routine,x]          >>
   2007  4+0   78A8 31   C4               leay  ,u                         >>
   2008        78AA               ESP_CallEraseRoutineB0_00
   2009  3     78AA CE   0000             ldu   #$0000                     >>
   2010  5+1   78AD EC   C8 3F            ldd   rsv_bgdata_0,u             >>
   2011  4     78B0 83   0010             subd  #16
   2012  2     78B3 C4   C0               andb  #256-cell_size             >>
   2013  6     78B5 1F   01               tfr   d,x                        >>
   2014                            
   2015        78B7               ESP_FreeEraseBufferB0
   2016  8     78B7 BD   7C3E             jsr   BgBufferFree               >>
   2017                            
   2018        78BA               ESP_UnsetOnScreenFlagB0
   2019  4+1   78BA A6   C8 47            lda   rsv_prev_render_flags_0,u
   2020  2     78BD 84   7F               anda  #:rsv_prev_render_onscreen_>>
   2021  4+1   78BF A7   C8 47            sta   rsv_prev_render_flags_0,u
   2022
   2023        78C2               ESP_NextObjectB0
   2024  5+1   78C2 EE   C8 37            ldu   rsv_priority_prev_obj_0,u
   2025  3     78C5 26   B0               bne   ESP_ProcessEachPriorityLeve>>
   2026  5     78C7 39                    rts
   2027
   2028                           * *******
   2029                           * BUFFER1
   2030                           * *******
   2031                            
   2032        78C8               ESP_ProcessEachPriorityLevelB1
   2033  4+1   78C8 A6   C8 48            lda   rsv_priority_1,u
   2034                            
   2035        78CB               ESP_CheckPriorityB1
   2036  2     78CB 81   00               cmpa  #0                         >>
   2037  3     78CD 26   44               bne   ESP_NextObjectB1           >>
   2038                            
   2039        78CF               ESP_UnsetCheckRefreshB1
   2040  4+1   78CF A6   C8 29            lda   rsv_render_flags,u
   2041  4+1   78D2 E6   42               ldb   render_flags,u
   2042  2     78D4 C4   08               andb  #render_motionless_mask
   2043  3     78D6 26   05               bne   ESP_CheckEraseB1
   2044  2     78D8 84   FE               anda  #:rsv_render_checkrefresh_m>>
   2045  4+1   78DA A7   C8 29            sta   rsv_render_flags,u
   2046                            
   2047        78DD               ESP_CheckEraseB1
   2048  2     78DD 84   02               anda  #rsv_render_erasesprite_mas>>
   2049  3     78DF 27   32               beq   ESP_NextObjectB1
   2050  4+1   78E1 E6   C8 59            ldb   rsv_prev_render_flags_1,u
   2051  2     78E4 C4   01               andb  #rsv_prev_render_overlay_ma>>
   2052  3     78E6 26   23               bne   ESP_UnsetOnScreenFlagB1
   2053                            
   2054        78E8               ESP_CallEraseRoutineB1
   2055  6     78E8 FF   78FC             stu   ESP_CallEraseRoutineB1_00+1>>
   2056  5+1   78EB AE   C8 4F            ldx   rsv_prev_mapping_frame_1,u >>
   2057  4+1   78EE A6   03               lda   page_erase_routine,x
   2058  5     78F0 B7   E7E5             sta   $E7E5                      >>
   2059  5+1   78F3 EE   C8 51            ldu   rsv_bgdata_1,u             >>
   2060  7+4   78F6 AD   98 04            jsr   [erase_routine,x]          >>
   2061  4+0   78F9 31   C4               leay  ,u                         >>
   2062        78FB               ESP_CallEraseRoutineB1_00
   2063  3     78FB CE   0000             ldu   #$0000                     >>
   2064  5+1   78FE EC   C8 51            ldd   rsv_bgdata_1,u             >>
   2065  4     7901 83   0010             subd  #16
   2066  2     7904 C4   C0               andb  #256-cell_size             >>
   2067  6     7906 1F   01               tfr   d,x                        >>
   2068                            
   2069        7908               ESP_FreeEraseBufferB1
   2070  8     7908 BD   7C3E             jsr   BgBufferFree               >>
   2071                            
   2072        790B               ESP_UnsetOnScreenFlagB1
   2073  4+1   790B A6   C8 59            lda   rsv_prev_render_flags_1,u
   2074  2     790E 84   7F               anda  #:rsv_prev_render_onscreen_>>
   2075  4+1   7910 A7   C8 59            sta   rsv_prev_render_flags_1,u
   2076                            
   2077        7913               ESP_NextObjectB1
   2078  5+1   7913 EE   C8 49            ldu   rsv_priority_prev_obj_1,u
   2079  3     7916 26   B0               bne   ESP_ProcessEachPriorityLeve>>
   2080  5     7918 39                    rts
   2081
   2082                                   INCLUD UNSETDSP
   2083                           * --------------------------------------->>
   2084                           * UnsetDisplayPriority
   2085                           * --------------------
   2086                           * Subroutine to unset sprites in Display >>
   2087                           * Read Lst_Priority_Unset_0/1
   2088                           *
   2089                           * input REG : none
   2090                           * --------------------------------------->>
   2091                            
   2092        7919               UnsetDisplayPriority
   2093
   2094        7919               UDP_Start
   2095  5     7919 B6   613D             lda   Glb_Cur_Wrk_Screen_Id      >>
   2096  3     791C 26   6D               bne   UDP_B1
   2097                            
   2098        791E               UDP_B0
   2099  3     791E 8E   650A             ldx   #Lst_Priority_Unset_0+2
   2100                            
   2101        7921               UDP_CheckEndB0
   2102  7     7921 BC   6508             cmpx  Lst_Priority_Unset_0       >>
   2103  3     7924 26   07               bne   UDP_CheckPrioPrevB0
   2104                            
   2105        7926               UDP_InitListB0
   2106  3     7926 8E   650A             ldx   #Lst_Priority_Unset_0+2
   2107  6     7929 BF   6508             stx   Lst_Priority_Unset_0       >>
   2108  5     792C 39                    rts
   2109                            
   2110        792D               UDP_CheckPrioPrevB0
   2111  5+3   792D EE   81               ldu   ,x++
   2112  5+1   792F EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2113  3     7932 26   11               bne   UDP_ChainPrevB0
   2114                            
   2115  4+1   7934 A6   C8 36            lda   rsv_priority_0,u
   2116  2     7937 48                    lsla
   2117  4     7938 108E 64E4             ldy   #Tbl_Priority_First_Entry_0>>
   2118  4+1   793C 31   A6               leay  a,y
   2119  5+1   793E EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2120  5+0   7941 ED   A4               std   ,y
   2121  3     7943 20   0A               bra   UDP_CheckPrioNextB0
   2122                            
   2123        7945               UDP_ChainPrevB0
   2124  5+1   7945 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2125  6+1   7948 10AE C8 37            ldy   rsv_priority_prev_obj_0,u
   2126  5+1   794C ED   A8 39            std   rsv_priority_next_obj_0,y
   2127
   2128        794F               UDP_CheckPrioNextB0
   2129  5+1   794F EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2130  3     7952 26   11               bne   UDP_ChainNextB0
   2131
   2132  4+1   7954 A6   C8 36            lda   rsv_priority_0,u
   2133  2     7957 48                    lsla
   2134  4     7958 108E 64F6             ldy   #Tbl_Priority_Last_Entry_0
   2135  4+1   795C 31   A6               leay  a,y
   2136  5+1   795E EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2137  5+0   7961 ED   A4               std   ,y
   2138  3     7963 20   0A               bra   UDP_CheckDeleteB0
   2139                            
   2140        7965               UDP_ChainNextB0
   2141  5+1   7965 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2142  6+1   7968 10AE C8 39            ldy   rsv_priority_next_obj_0,u
   2143  5+1   796C ED   A8 37            std   rsv_priority_prev_obj_0,y
   2144                            
   2145        796F               UDP_CheckDeleteB0
   2146  4+1   796F A6   42               lda   render_flags,u
   2147  2     7971 84   40               anda  #render_todelete_mask
   2148  3     7973 27   0F               beq   UDP_SetNewPrioB0
   2149  4+1   7975 A6   C8 47            lda   rsv_prev_render_flags_0,u
   2150  3     7978 2B   0A               bmi   UDP_SetNewPrioB0
   2151  4+1   797A A6   C8 59            lda   rsv_prev_render_flags_1,u
   2152  3     797D 2B   05               bmi   UDP_SetNewPrioB0
   2153  8     797F BD   7427             jsr   ClearObj
   2154  3     7982 20   9D               bra   UDP_CheckEndB0
   2155                            
   2156        7984               UDP_SetNewPrioB0
   2157  4+1   7984 A6   43               lda   priority,u
   2158  4+1   7986 A7   C8 36            sta   rsv_priority_0,u
   2159  3     7989 20   96               bra   UDP_CheckEndB0
   2160
   2161        798B               UDP_B1
   2162  3     798B 8E   6570             ldx   #Lst_Priority_Unset_1+2
   2163                            
   2164        798E               UDP_CheckEndB1
   2165  7     798E BC   656E             cmpx  Lst_Priority_Unset_1       >>
   2166  3     7991 26   07               bne   UDP_CheckPrioPrevB1
   2167                            
   2168        7993               UDP_InitListB1
   2169  3     7993 8E   6570             ldx   #Lst_Priority_Unset_1+2
   2170  6     7996 BF   656E             stx   Lst_Priority_Unset_1       >>
   2171  5     7999 39                    rts
   2172                            
   2173        799A               UDP_CheckPrioPrevB1
   2174  5+3   799A EE   81               ldu   ,x++
   2175  5+1   799C EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2176  3     799F 26   11               bne   UDP_ChainPrevB1
   2177                            
   2178  4+1   79A1 A6   C8 48            lda   rsv_priority_1,u
   2179  2     79A4 48                    lsla
   2180  4     79A5 108E 654A             ldy   #Tbl_Priority_First_Entry_1>>
   2181  4+1   79A9 31   A6               leay  a,y
   2182  5+1   79AB EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2183  5+0   79AE ED   A4               std   ,y
   2184  3     79B0 20   0A               bra   UDP_CheckPrioNextB1
   2185                            
   2186        79B2               UDP_ChainPrevB1
   2187  5+1   79B2 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2188  6+1   79B5 10AE C8 49            ldy   rsv_priority_prev_obj_1,u
   2189  5+1   79B9 ED   A8 4B            std   rsv_priority_next_obj_1,y
   2190
   2191        79BC               UDP_CheckPrioNextB1
   2192  5+1   79BC EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2193  3     79BF 26   11               bne   UDP_ChainNextB1
   2194
   2195  4+1   79C1 A6   C8 48            lda   rsv_priority_1,u
   2196  2     79C4 48                    lsla
   2197  4     79C5 108E 655C             ldy   #Tbl_Priority_Last_Entry_1
   2198  4+1   79C9 31   A6               leay  a,y
   2199  5+1   79CB EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2200  5+0   79CE ED   A4               std   ,y
   2201  3     79D0 20   0A               bra   UDP_CheckDeleteB1
   2202                            
   2203        79D2               UDP_ChainNextB1
   2204  5+1   79D2 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2205  6+1   79D5 10AE C8 4B            ldy   rsv_priority_next_obj_1,u
   2206  5+1   79D9 ED   A8 49            std   rsv_priority_prev_obj_1,y
   2207                            
   2208        79DC               UDP_CheckDeleteB1
   2209  4+1   79DC A6   42               lda   render_flags,u
   2210  2     79DE 84   40               anda  #render_todelete_mask
   2211  3     79E0 27   0F               beq   UDP_SetNewPrioB1
   2212  4+1   79E2 A6   C8 47            lda   rsv_prev_render_flags_0,u
   2213  3     79E5 2B   0A               bmi   UDP_SetNewPrioB1
   2214  4+1   79E7 A6   C8 59            lda   rsv_prev_render_flags_1,u
   2215  3     79EA 2B   05               bmi   UDP_SetNewPrioB1
   2216  8     79EC BD   7427             jsr   ClearObj
   2217  3     79EF 20   9D               bra   UDP_CheckEndB1
   2218                            
   2219        79F1               UDP_SetNewPrioB1
   2220  4+1   79F1 A6   43               lda   priority,u
   2221  4+1   79F3 A7   C8 48            sta   rsv_priority_1,u
   2222  3     79F6 20   96               bra   UDP_CheckEndB1
   2223
   2224                                   INCLUD DRAWSPR
   2225                           * --------------------------------------->>
   2226                           * DrawSprites
   2227                           * ------------
   2228                           * Subroutine to draw sprites on screen
   2229                           * Read Display Priority Structure (back t>>
   2230                           * priority: 0 - unregistred
   2231                           * priority: 1 - register non moving overl>>
   2232                           * priority; 2-8 - register moving sprite >>
   2233                           *
   2234                           * input REG : none
   2235                           * --------------------------------------->>
   2236                            
   2237        79F8               DrawSprites
   2238
   2239        79F8               DRS_Start
   2240  5     79F8 B6   613D             lda   Glb_Cur_Wrk_Screen_Id      >>
   2241  3     79FB 26   41               bne   DRS_P8B1
   2242                            
   2243        79FD               DRS_P8B0
   2244  6     79FD BE   64F4             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2245  3     7A00 27   03               beq   DRS_P7B0
   2246  8     7A02 BD   7A7F             jsr   DRS_ProcessEachPriorityLeve>>
   2247        7A05               DRS_P7B0
   2248  6     7A05 BE   64F2             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2249  3     7A08 27   03               beq   DRS_P6B0
   2250  8     7A0A BD   7A7F             jsr   DRS_ProcessEachPriorityLeve>>
   2251        7A0D               DRS_P6B0
   2252  6     7A0D BE   64F0             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2253  3     7A10 27   03               beq   DRS_P5B0
   2254  8     7A12 BD   7A7F             jsr   DRS_ProcessEachPriorityLeve>>
   2255        7A15               DRS_P5B0
   2256  6     7A15 BE   64EE             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2257  3     7A18 27   03               beq   DRS_P4B0
   2258  8     7A1A BD   7A7F             jsr   DRS_ProcessEachPriorityLeve>>
   2259        7A1D               DRS_P4B0
   2260  6     7A1D BE   64EC             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2261  3     7A20 27   03               beq   DRS_P3B0
   2262  8     7A22 BD   7A7F             jsr   DRS_ProcessEachPriorityLeve>>
   2263        7A25               DRS_P3B0
   2264  6     7A25 BE   64EA             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2265  3     7A28 27   03               beq   DRS_P2B0
   2266  8     7A2A BD   7A7F             jsr   DRS_ProcessEachPriorityLeve>>
   2267        7A2D               DRS_P2B0
   2268  6     7A2D BE   64E8             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2269  3     7A30 27   03               beq   DRS_P1B0
   2270  8     7A32 BD   7A7F             jsr   DRS_ProcessEachPriorityLeve>>
   2271        7A35               DRS_P1B0
   2272  6     7A35 BE   64E6             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2273  3     7A38 27   03               beq   DRS_rtsB0
   2274  8     7A3A BD   7A7F             jsr   DRS_ProcessEachPriorityLeve>>
   2275        7A3D               DRS_rtsB0
   2276  5     7A3D 39                    rts
   2277                            
   2278        7A3E               DRS_P8B1
   2279  6     7A3E BE   655A             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2280  3     7A41 27   03               beq   DRS_P7B1
   2281  8     7A43 BD   7B4E             jsr   DRS_ProcessEachPriorityLeve>>
   2282        7A46               DRS_P7B1
   2283  6     7A46 BE   6558             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2284  3     7A49 27   03               beq   DRS_P6B1
   2285  8     7A4B BD   7B4E             jsr   DRS_ProcessEachPriorityLeve>>
   2286        7A4E               DRS_P6B1
   2287  6     7A4E BE   6556             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2288  3     7A51 27   03               beq   DRS_P5B1
   2289  8     7A53 BD   7B4E             jsr   DRS_ProcessEachPriorityLeve>>
   2290        7A56               DRS_P5B1
   2291  6     7A56 BE   6554             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2292  3     7A59 27   03               beq   DRS_P4B1
   2293  8     7A5B BD   7B4E             jsr   DRS_ProcessEachPriorityLeve>>
   2294        7A5E               DRS_P4B1
   2295  6     7A5E BE   6552             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2296  3     7A61 27   03               beq   DRS_P3B1
   2297  8     7A63 BD   7B4E             jsr   DRS_ProcessEachPriorityLeve>>
   2298        7A66               DRS_P3B1
   2299  6     7A66 BE   6550             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2300  3     7A69 27   03               beq   DRS_P2B1
   2301  8     7A6B BD   7B4E             jsr   DRS_ProcessEachPriorityLeve>>
   2302        7A6E               DRS_P2B1
   2303  6     7A6E BE   654E             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2304  3     7A71 27   03               beq   DRS_P1B1
   2305  8     7A73 BD   7B4E             jsr   DRS_ProcessEachPriorityLeve>>
   2306        7A76               DRS_P1B1
   2307  6     7A76 BE   654C             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2308  3     7A79 27   03               beq   DRS_rtsB1
   2309  8     7A7B BD   7B4E             jsr   DRS_ProcessEachPriorityLeve>>
   2310        7A7E               DRS_rtsB1
   2311  5     7A7E 39                    rts
   2312
   2313        7A7F               DRS_ProcessEachPriorityLevelB0
   2314  4+1   7A7F A6   88 29            lda   rsv_render_flags,x
   2315  2     7A82 84   04               anda  #rsv_render_displaysprite_m>>
   2316  3     7A84 27   6A               beq   DRS_NextObjectB0
   2317  4+1   7A86 A6   88 47            lda   rsv_prev_render_flags_0,x
   2318  3     7A89 2B   65               bmi   DRS_NextObjectB0
   2319  4+1   7A8B A6   02               lda   render_flags,x
   2320  2     7A8D 84   04               anda  #render_overlay_mask
   2321  3     7A8F 26   67               bne   DRS_DrawWithoutBackupB0
   2322  5+1   7A91 EE   88 30            ldu   rsv_mapping_frame,x
   2323  4+1   7A94 A6   46               lda   erase_nb_cell,u
   2324  8     7A96 BD   7BEB             jsr   BgBufferAlloc              >>
   2325  5     7A99 108C 0000             cmpy  #$0000                     >>
   2326  3     7A9D 27   51               beq   DRS_NextObjectB0           >>
   2327  5+1   7A9F EC   88 12            ldd   xy_pixel,x                 >>
   2328  4+1   7AA2 A0   88 2C            suba  rsv_image_center_offset,x
   2329  8     7AA5 BD   7B1C             jsr   DRS_XYToAddress
   2330                           *        ldu   rsv_image_subset,x
   2331                           *        stu   rsv_prev_image_subset_0,x
   2332  5+1   7AA8 EE   88 30            ldu   rsv_mapping_frame,x        >>
   2333  5+1   7AAB EF   88 3D            stu   rsv_prev_mapping_frame_0,x >>
   2334  4+1   7AAE A6   40               lda   page_draw_routine,u
   2335  5     7AB0 B7   E7E5             sta   $E7E5                      >>
   2336  6     7AB3 BF   7AC4             stx   DRS_dyn3B0+1               >>
   2337  5+1   7AB6 AE   41               ldx   draw_routine,u
   2338  4+0   7AB8 33   A4               leau  ,y                         >>
   2339  4     7ABA 108E 6144             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2340  6     7ABE FC   6142             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2341  7+0   7AC1 AD   84               jsr   ,x                         >>
   2342        7AC3               DRS_dyn3B0
   2343  3     7AC3 8E   0000             ldx   #$0000                     >>
   2344  5+1   7AC6 EF   88 3F            stu   rsv_bgdata_0,x             >>
   2345  5+1   7AC9 EC   88 12            ldd   xy_pixel,x                 >>
   2346  2     7ACC 44                    lsra                             >>
   2347  5+1   7ACD ED   88 41            std   rsv_prev_xy_pixel_0,x      >>
   2348  5+1   7AD0 EC   88 32            ldd   rsv_xy1_pixel,x            >>
   2349  5+1   7AD3 ED   88 43            std   rsv_prev_xy1_pixel_0,x     >>
   2350  5+1   7AD6 EC   88 34            ldd   rsv_xy2_pixel,x            >>
   2351  5+1   7AD9 ED   88 45            std   rsv_prev_xy2_pixel_0,x     >>
   2352  4+1   7ADC A6   88 47            lda   rsv_prev_render_flags_0,x
   2353  2     7ADF 8A   80               ora   #rsv_prev_render_onscreen_m>>
   2354  4+1   7AE1 E6   02               ldb   render_flags,x
   2355  2     7AE3 C5   04               bitb  #render_overlay_mask
   2356  3     7AE5 27   04               beq   DRS_NoOverlayB0
   2357  2     7AE7 8A   01               ora   #rsv_prev_render_overlay_ma>>
   2358  3     7AE9 20   02               bra   DRS_UpdateRenderFlagB0
   2359                            
   2360        7AEB               DRS_NoOverlayB0
   2361  2     7AEB 84   FE               anda   #:rsv_prev_render_overlay_>>
   2362
   2363        7AED               DRS_UpdateRenderFlagB0
   2364  4+1   7AED A7   88 47            sta   rsv_prev_render_flags_0,x  >>
   2365                            
   2366        7AF0               DRS_NextObjectB0
   2367  5+1   7AF0 AE   88 39            ldx   rsv_priority_next_obj_0,x
   2368  6     7AF3 1026 FF88             lbne  DRS_ProcessEachPriorityLeve>>
   2369  5     7AF7 39                    rts
   2370                            
   2371        7AF8               DRS_DrawWithoutBackupB0
   2372  5+1   7AF8 EC   88 12            ldd   xy_pixel,x                 >>
   2373  4+1   7AFB A0   88 2C            suba  rsv_image_center_offset,x
   2374  8     7AFE BD   7B1C             jsr   DRS_XYToAddress
   2375  5+1   7B01 EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2376  5+1   7B04 EF   88 3D            stu   rsv_prev_mapping_frame_0,x >>
   2377  4+1   7B07 A6   40               lda   page_draw_routine,u
   2378  5     7B09 B7   E7E5             sta   $E7E5                      >>
   2379  6     7B0C BF   7AC4             stx   DRS_dyn3B0+1               >>
   2380  5+1   7B0F AE   41               ldx   draw_routine,u
   2381  4     7B11 108E 6144             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2382  6     7B15 FC   6142             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2383  7+0   7B18 AD   84               jsr   ,x                         >>
   2384  3     7B1A 20   A7               bra   DRS_dyn3B0
   2385
   2386                           *****************************************>>
   2387                           * x_pixel and y_pixel coordinate system
   2388                           * x coordinates:
   2389                           *    - off-screen left 00-2F (0-47)
   2390                           *    - on screen 30-CF (48-207)
   2391                           *    - off-screen right D0-FF (208-255)
   2392                           *
   2393                           * y coordinates:
   2394                           *    - off-screen top 00-1B (0-27)
   2395                           *    - on screen 1C-E3 (28-227)
   2396                           *    - off-screen bottom E4-FF (228-255)
   2397                           *****************************************>>
   2398
   2399        7B1C               DRS_XYToAddress
   2400  2     7B1C 80   30               suba  #$30
   2401  3     7B1E 24   03               bcc   DRS_XYToAddressPositive
   2402  2     7B20 80   60               suba  #$60                       >>
   2403  2     7B22 5A                    decb
   2404        7B23               DRS_XYToAddressPositive
   2405  2     7B23 C0   1C               subb  #$1C                       >>
   2406  2     7B25 44                    lsra                             >>
   2407  2     7B26 44                    lsra                             >>
   2408  3     7B27 25   12               bcs   DRS_XYToAddressRAM2First   >>
   2409        7B29               DRS_XYToAddressRAM1First
   2410  5     7B29 B7   7B31             sta   DRS_dyn1+2
   2411  2     7B2C 86   28               lda   #$28                       >>
   2412  11    7B2E 3D                    mul
   2413        7B2F               DRS_dyn1
   2414  4     7B2F C3   0000             addd  #$0000                     >>
   2415  6     7B32 FD   6144             std   Glb_Sprite_Screen_Pos_Part2>>
   2416  2     7B35 8A   20               ora   #$20                       >>
   2417  6     7B37 FD   6142             std   Glb_Sprite_Screen_Pos_Part1>>
   2418  5     7B3A 39                    rts
   2419        7B3B               DRS_XYToAddressRAM2First
   2420  5     7B3B B7   7B43             sta   DRS_dyn2+2
   2421  2     7B3E 86   28               lda   #$28                       >>
   2422  11    7B40 3D                    mul
   2423        7B41               DRS_dyn2
   2424  4     7B41 C3   2000             addd  #$2000                     >>
   2425  6     7B44 FD   6144             std   Glb_Sprite_Screen_Pos_Part2>>
   2426  4     7B47 83   1FFF             subd  #$1FFF
   2427  6     7B4A FD   6142             std   Glb_Sprite_Screen_Pos_Part1>>
   2428  5     7B4D 39                    rts
   2429                            
   2430        7B4E               DRS_ProcessEachPriorityLevelB1
   2431  4+1   7B4E A6   88 29            lda   rsv_render_flags,x
   2432  2     7B51 84   04               anda  #rsv_render_displaysprite_m>>
   2433  3     7B53 27   6A               beq   DRS_NextObjectB1
   2434  4+1   7B55 A6   88 59            lda   rsv_prev_render_flags_1,x
   2435  3     7B58 2B   65               bmi   DRS_NextObjectB1
   2436  4+1   7B5A A6   02               lda   render_flags,x
   2437  2     7B5C 84   04               anda  #render_overlay_mask
   2438  3     7B5E 26   67               bne   DRS_DrawWithoutBackupB1
   2439  5+1   7B60 EE   88 30            ldu   rsv_mapping_frame,x
   2440  4+1   7B63 A6   46               lda   erase_nb_cell,u
   2441  8     7B65 BD   7BEB             jsr   BgBufferAlloc              >>
   2442  5     7B68 108C 0000             cmpy  #$0000                     >>
   2443  3     7B6C 27   51               beq   DRS_NextObjectB1           >>
   2444  5+1   7B6E EC   88 12            ldd   xy_pixel,x                 >>
   2445  4+1   7B71 A0   88 2C            suba  rsv_image_center_offset,x
   2446  8     7B74 BD   7B1C             jsr   DRS_XYToAddress
   2447                                   *ldu   rsv_image_subset,x
   2448                                   *stu   rsv_prev_image_subset_1,x
   2449  5+1   7B77 EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2450  5+1   7B7A EF   88 4F            stu   rsv_prev_mapping_frame_1,x >>
   2451  4+1   7B7D A6   40               lda   page_draw_routine,u
   2452  5     7B7F B7   E7E5             sta   $E7E5                      >>
   2453  6     7B82 BF   7B93             stx   DRS_dyn3B1+1               >>
   2454  5+1   7B85 AE   41               ldx   draw_routine,u
   2455  4+0   7B87 33   A4               leau  ,y                         >>
   2456  4     7B89 108E 6144             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2457  6     7B8D FC   6142             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2458  7+0   7B90 AD   84               jsr   ,x                         >>
   2459        7B92               DRS_dyn3B1
   2460  3     7B92 8E   0000             ldx   #$0000                     >>
   2461  5+1   7B95 EF   88 51            stu   rsv_bgdata_1,x             >>
   2462  5+1   7B98 EC   88 12            ldd   xy_pixel,x                 >>
   2463  2     7B9B 44                    lsra                             >>
   2464  5+1   7B9C ED   88 53            std   rsv_prev_xy_pixel_1,x      >>
   2465  5+1   7B9F EC   88 32            ldd   rsv_xy1_pixel,x            >>
   2466  5+1   7BA2 ED   88 55            std   rsv_prev_xy1_pixel_1,x     >>
   2467  5+1   7BA5 EC   88 34            ldd   rsv_xy2_pixel,x            >>
   2468  5+1   7BA8 ED   88 57            std   rsv_prev_xy2_pixel_1,x     >>
   2469  4+1   7BAB A6   88 59            lda   rsv_prev_render_flags_1,x
   2470  2     7BAE 8A   80               ora   #rsv_prev_render_onscreen_m>>
   2471  4+1   7BB0 E6   02               ldb   render_flags,x
   2472  2     7BB2 C5   04               bitb  #render_overlay_mask
   2473  3     7BB4 27   04               beq   DRS_NoOverlayB1
   2474  2     7BB6 8A   01               ora   #rsv_prev_render_overlay_ma>>
   2475  3     7BB8 20   02               bra   DRS_UpdateRenderFlagB1
   2476                            
   2477        7BBA               DRS_NoOverlayB1
   2478  2     7BBA 84   FE               anda   #:rsv_prev_render_overlay_>>
   2479
   2480        7BBC               DRS_UpdateRenderFlagB1
   2481  4+1   7BBC A7   88 59            sta   rsv_prev_render_flags_1,x  >>
   2482                            
   2483        7BBF               DRS_NextObjectB1
   2484  5+1   7BBF AE   88 4B            ldx   rsv_priority_next_obj_1,x
   2485  6     7BC2 1026 FF88             lbne  DRS_ProcessEachPriorityLeve>>
   2486  5     7BC6 39                    rts
   2487                            
   2488        7BC7               DRS_DrawWithoutBackupB1
   2489  5+1   7BC7 EC   88 12            ldd   xy_pixel,x                 >>
   2490  4+1   7BCA A0   88 2C            suba  rsv_image_center_offset,x
   2491  8     7BCD BD   7B1C             jsr   DRS_XYToAddress
   2492  5+1   7BD0 EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2493  5+1   7BD3 EF   88 4F            stu   rsv_prev_mapping_frame_1,x >>
   2494  4+1   7BD6 A6   40               lda   page_draw_routine,u
   2495  5     7BD8 B7   E7E5             sta   $E7E5                      >>
   2496  6     7BDB BF   7B93             stx   DRS_dyn3B1+1               >>
   2497  5+1   7BDE AE   41               ldx   draw_routine,u
   2498  4     7BE0 108E 6144             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2499  6     7BE4 FC   6142             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2500  7+0   7BE7 AD   84               jsr   ,x                         >>
   2501  3     7BE9 20   A7               bra   DRS_dyn3B1
   2502
   2503                                   INCLUD BGBALLOC
   2504                           * --------------------------------------->>
   2505                           * BgBufferAlloc
   2506                           * -------------
   2507                           * Subroutine to allocate memory into back>>
   2508                           *
   2509                           * input  REG : [a] number of requested ce>>
   2510                           * output REG : [y] cell_end or 0000 if no>>
   2511                           * --------------------------------------->>
   2512
   2513        7BEB               BgBufferAlloc
   2514  5+3   7BEB 34   14               pshs  b,x
   2515  5     7BED F6   613D             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2516  3     7BF0 26   09               bne   BBA1                       >>
   2517                            
   2518        7BF2               BBA0
   2519  3     7BF2 8E   6146             ldx   #Lst_FreeCellFirstEntry_0  >>
   2520  7     7BF5 10BE 6146             ldy   Lst_FreeCellFirstEntry_0   >>
   2521  3     7BF9 20   07               bra   BBA_Next
   2522                            
   2523        7BFB               BBA1
   2524  3     7BFB 8E   6315             ldx   #Lst_FreeCellFirstEntry_1  >>
   2525  7     7BFE 10BE 6315             ldy   Lst_FreeCellFirstEntry_1   >>
   2526                            
   2527        7C02               BBA_Next
   2528  3     7C02 27   38               beq   BBA_rts                    >>
   2529  4+1   7C04 A1   20               cmpa  nb_cells,y                 >>
   2530  3     7C06 27   09               beq   BBA_FitCell                >>
   2531  3     7C08 23   12               bls   BBA_DivideCell             >>
   2532  4+1   7C0A 30   25               leax  next_entry,y               >>
   2533  6+1   7C0C 10AE 25               ldy   next_entry,y               >>
   2534  3     7C0F 20   F1               bra   BBA_Next
   2535                            
   2536        7C11               BBA_FitCell
   2537  5+1   7C11 EC   25               ldd   next_entry,y
   2538  5+0   7C13 ED   84               std   ,x                         >>
   2539  6+1   7C15 6F   20               clr   nb_cells,y                 >>
   2540  6+1   7C17 10AE 23               ldy   cell_end,y                 >>
   2541  3     7C1A 20   20               bra   BBA_rts
   2542                            
   2543        7C1C               BBA_DivideCell
   2544  5     7C1C B7   7C22             sta   BBA_dyn+1
   2545  4+1   7C1F E6   20               ldb   nb_cells,y
   2546        7C21               BBA_dyn
   2547  2     7C21 C0   00               subb  #$00                       >>
   2548  4+1   7C23 E7   20               stb   nb_cells,y                 >>
   2549                            
   2550  2     7C25 C6   40               ldb   #cell_size
   2551  11    7C27 3D                    mul
   2552  2     7C28 88   FF               eora  #$FF                       >>
   2553  2     7C2A C8   FF               eorb  #$FF                       >>
   2554  4     7C2C C3   0001             addd  #$01
   2555  5+1   7C2F AE   23               ldx   cell_end,y
   2556  6     7C31 BF   7C3A             stx   cell_end_return+2
   2557  4+4   7C34 30   8B               leax  d,x                        >>
   2558  5+1   7C36 AF   23               stx   cell_end,y                 >>
   2559        7C38               cell_end_return
   2560  4     7C38 108E 0000             ldy   #$0000
   2561        7C3C               BBA_rts
   2562  5+5   7C3C 35   94               puls  b,x,pc
   2563
   2564                                   INCLUD BGBFREE
   2565                           * --------------------------------------->>
   2566                           * BgBufferFree
   2567                           * ------------
   2568                           * Subroutine to free memory from backgrou>>
   2569                           *
   2570                           * input  REG : [x] cell_start
   2571                           *              [y] cell_end
   2572                           * output REG : none
   2573                           * --------------------------------------->>
   2574
   2575        7C3E               BgBufferFree
   2576  5+4   7C3E 34   46               pshs  d,u
   2577  3     7C40 CC   0000             ldd   #$0000
   2578  6     7C43 FD   7CA0             std   BBF_SetNewEntryNextentry+1 >>
   2579  5     7C46 F6   613D             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2580  3     7C49 26   16               bne   BBF1                       >>
   2581                            
   2582        7C4B               BBF0
   2583  5+1   7C4B EE   C8 3D            ldu   rsv_prev_mapping_frame_0,u >>
   2584  4+1   7C4E A6   46               lda   erase_nb_cell,u            >>
   2585  3     7C50 CE   6146             ldu   #Lst_FreeCellFirstEntry_0
   2586  6     7C53 FF   7CA5             stu   BBF_SetNewEntryPrevLink+1  >>
   2587  3     7C56 CE   6148             ldu   #Lst_FreeCell_0            >>
   2588  6     7C59 FF   7C8E             stu   BBF_AddNewEntryAtEnd+1     >>
   2589  6     7C5C FE   6146             ldu   Lst_FreeCellFirstEntry_0   >>
   2590  3     7C5F 20   14               bra   BBF_Next
   2591                            
   2592        7C61               BBF1
   2593  5+1   7C61 EE   C8 4F            ldu   rsv_prev_mapping_frame_1,u
   2594  4+1   7C64 A6   46               lda   erase_nb_cell,u
   2595  3     7C66 CE   6315             ldu   #Lst_FreeCellFirstEntry_1
   2596  6     7C69 FF   7CA5             stu   BBF_SetNewEntryPrevLink+1
   2597  3     7C6C CE   6317             ldu   #Lst_FreeCell_1
   2598  6     7C6F FF   7C8E             stu   BBF_AddNewEntryAtEnd+1
   2599  6     7C72 FE   6315             ldu   Lst_FreeCellFirstEntry_1
   2600                            
   2601        7C75               BBF_Next
   2602  3     7C75 27   16               beq   BBF_AddNewEntryAtEnd       >>
   2603  7+1   7C77 10AC 41               cmpy  cell_start,u               >>
   2604  3     7C7A 27   2D               beq   BBF_ExpandAtStart          >>
   2605  3     7C7C 22   4C               bhi   BBF_ExpandAtEnd            >>
   2606  5+1   7C7E EE   45               ldu   next_entry,u               >>
   2607  6     7C80 1F   30               tfr   u,d
   2608  4     7C82 C3   0005             addd  #next_entry                >>
   2609  6     7C85 FD   7CA5             std   BBF_SetNewEntryPrevLink+1
   2610  3     7C88 20   EB               bra   BBF_Next
   2611
   2612        7C8A               BBF_AddNewEntry
   2613  6     7C8A FF   7CA0             stu   BBF_SetNewEntryNextentry+1
   2614        7C8D               BBF_AddNewEntryAtEnd
   2615  3     7C8D CE   0000             ldu   #$0000                     >>
   2616        7C90               BBF_FindFreeSlot
   2617  4+1   7C90 E6   40               ldb   nb_cells,u                 >>
   2618  3     7C92 27   04               beq   BBF_SetNewEntry            >>
   2619  4+1   7C94 33   47               leau  entry_size,u               >>
   2620  3     7C96 20   F8               bra   BBF_FindFreeSlot           >>
   2621        7C98               BBF_SetNewEntry
   2622  4+1   7C98 A7   40               sta   nb_cells,u                 >>
   2623  5+1   7C9A AF   41               stx   cell_start,u               >>
   2624  6+1   7C9C 10AF 43               sty   cell_end,u                 >>
   2625        7C9F               BBF_SetNewEntryNextentry
   2626  3     7C9F 8E   0000             ldx   #$0000                     >>
   2627  5+1   7CA2 AF   45               stx   next_entry,u               >>
   2628        7CA4               BBF_SetNewEntryPrevLink
   2629  6     7CA4 FF   FFFF             stu   $FFFF                      >>
   2630  3     7CA7 20   2C               bra   BBF_rts
   2631
   2632        7CA9               BBF_ExpandAtStart
   2633  5+1   7CA9 AF   41               stx   cell_start,u
   2634  4+1   7CAB AB   40               adda  nb_cells,u
   2635  4+1   7CAD A7   40               sta   nb_cells,u
   2636  6+1   7CAF 10AE 45               ldy   next_entry,u
   2637  3     7CB2 27   21               beq   BBF_rts
   2638        7CB4               BBF_Join
   2639  6+1   7CB4 AC   23               cmpx  cell_end,y
   2640  3     7CB6 26   1D               bne   BBF_rts
   2641  5+1   7CB8 EC   21               ldd   cell_start,y
   2642  5+1   7CBA ED   41               std   cell_start,u
   2643  4+1   7CBC A6   20               lda   nb_cells,y
   2644  4+1   7CBE AB   40               adda  nb_cells,u
   2645  4+1   7CC0 A7   40               sta   nb_cells,u
   2646  6+1   7CC2 6F   20               clr   nb_cells,y                 >>
   2647  5+1   7CC4 EC   25               ldd   next_entry,y
   2648  5+1   7CC6 ED   45               std   next_entry,u               >>
   2649  3     7CC8 20   0B               bra   BBF_rts
   2650
   2651        7CCA               BBF_ExpandAtEnd
   2652  6+1   7CCA AC   43               cmpx  cell_end,u
   2653  3     7CCC 26   BC               bne   BBF_AddNewEntry
   2654  6+1   7CCE 10AF 43               sty   cell_end,u
   2655  4+1   7CD1 AB   40               adda  nb_cells,u
   2656  4+1   7CD3 A7   40               sta   nb_cells,u
   2657                            
   2658        7CD5               BBF_rts
   2659  5+6   7CD5 35   C6               puls  d,u,pc
   2660
   2661                                   INCLUD CLRCARTM
   2662                           *****************************************>>
   2663                           * Clear memory in cardtridge area
   2664                           *****************************************>>
   2665
   2666        7CD7               ClearCartMem *@globals
   2667  5+3   7CD7 34   48               pshs  u,dp
   2668  7     7CD9 10FF 7D07             sts   ClearCartMem_3+2
   2669  4     7CDD 10CE 4000             lds   #$4000
   2670  4+0   7CE1 33   84               leau  ,x
   2671  4+0   7CE3 31   84               leay  ,x
   2672  6     7CE5 1F   10               tfr   x,d
   2673  6     7CE7 1F   8B               tfr   a,dp
   2674        7CE9               ClearCartMem_2
   2675  5+9   7CE9 34   7E               pshs  u,y,x,dp,b,a
   2676  5+9   7CEB 34   7E               pshs  u,y,x,dp,b,a
   2677  5+9   7CED 34   7E               pshs  u,y,x,dp,b,a
   2678  5+9   7CEF 34   7E               pshs  u,y,x,dp,b,a
   2679  5+9   7CF1 34   7E               pshs  u,y,x,dp,b,a
   2680  5+9   7CF3 34   7E               pshs  u,y,x,dp,b,a
   2681  5+9   7CF5 34   7E               pshs  u,y,x,dp,b,a
   2682  5+9   7CF7 34   7E               pshs  u,y,x,dp,b,a
   2683  5+9   7CF9 34   7E               pshs  u,y,x,dp,b,a
   2684  5+7   7CFB 34   78               pshs  u,y,x,dp
   2685  5     7CFD 118C 0010             cmps  #$0010
   2686  3     7D01 26   E6               bne   ClearCartMem_2
   2687  4+0   7D03 33   E4               leau  ,s
   2688        7D05               ClearCartMem_3
   2689  4     7D05 10CE 0000             lds   #$0000        ; start of me>>
   2690  5+6   7D09 36   36               pshu  d,x,y         ; saving 12 b>>
   2691  5+6   7D0B 36   36               pshu  d,x,y         ; DEPENDENCY >>
   2692  5+4   7D0D 36   16               pshu  d,x
   2693  5+5   7D0F 35   C8               puls  dp,u,pc
   2694
   2695
   2696                                   INCLUD UPDTPAL
   2697                           * --------------------------------------->>
   2698                           * UpdatePalette
   2699                           * -------------
   2700                           * Subroutine to update palette
   2701                           * should be called quickly after WaitVBL
   2702                           *
   2703                           * input REG : none
   2704                           * reset REG : [d] [x] [y]
   2705                           * --------------------------------------->>
   2706
   2707        7D11 FF            Refresh_palette fcb   $FF            *@gl>>
   2708        7D12 7D14          Cur_palette     fdb   Dyn_palette    *@gl>>
   2709        7D14               Dyn_palette     rmb   $20,0          *@gl>>
   2710        7D34               Black_palette   rmb   $20,0          *@gl>>
   2711        7D54 FF0F          White_palette   fdb   $ff0f          *@gl>>
   2712        7D56 FF0F                          fdb   $ff0f
   2713        7D58 FF0F                          fdb   $ff0f
   2714        7D5A FF0F                          fdb   $ff0f
   2715        7D5C FF0F                          fdb   $ff0f
   2716        7D5E FF0F                          fdb   $ff0f
   2717        7D60 FF0F                          fdb   $ff0f
   2718        7D62 FF0F                          fdb   $ff0f
   2719        7D64 FF0F                          fdb   $ff0f
   2720        7D66 FF0F                          fdb   $ff0f
   2721        7D68 FF0F                          fdb   $ff0f
   2722        7D6A FF0F                          fdb   $ff0f
   2723        7D6C FF0F                          fdb   $ff0f
   2724        7D6E FF0F                          fdb   $ff0f
   2725        7D70 FF0F                          fdb   $ff0f
   2726        7D72 FF0F                          fdb   $ff0f
   2727
   2728        7D74               UpdatePalette *@globals
   2729  7     7D74 7D   7D11             tst   Refresh_palette
   2730  3     7D77 26   22               bne   UPP_return
   2731                            
   2732  4     7D79 108E 0195             ldy   #0405                    * >>
   2733        7D7D               UPP_Tempo
   2734  4+1   7D7D 31   3F               leay  -1,y
   2735  3     7D7F 26   FC               bne   UPP_Tempo                * >>
   2736  2     7D81 C6   E7               ldb   #$E7
   2737  6     7D83 1F   9B               tfr   B,DP
   2738  6     7D85 BE   7D12            ldx   Cur_palette
   2739  6     7D88 0F   DB              clr   <$DB                     * i>>
   2740  4     7D8A 108E 0010             LDY   #$0010                     >>
   2741        7D8E               UPP_SetColor
   2742  5+3   7D8E EC   81              ldd   ,x++                        >>
   2743  4     7D90 97   DA              sta   <$DA                        >>
   2744  4     7D92 D7   DA              stb   <$DA                     * s>>
   2745  4+1   7D94 31   3F              leay  -1,y
   2746  3     7D96 26   F6              bne   UPP_SetColor             * o>>
   2747  7     7D98 73   7D11            com   Refresh_palette          * u>>
   2748        7D9B               UPP_return
   2749  5     7D9B 39                    rts
   2750
   2751                            
   2752                            
   2753
   2754
   2755                                   INCLUD PLAYPCM * A rendre dynamiq>>
   2756                           * --------------------------------------->>
   2757                           * PlayPCM
   2758                           * ------------
   2759                           * Subroutine to play a PCM sample at 16kH>>
   2760                           * This will freeze anything running
   2761                           * DAC Init from Mission: Liftoff (merci P>>
   2762                           *
   2763                           * input REG : [y] Pcm_ index to play
   2764                           * reset REG : [d] [x] [y]
   2765                           * --------------------------------------->>
   2766
   2767        7D9C               PlayPCM *@globals
   2768
   2769  5     7D9C B6   E7E5             lda   $E7E5
   2770  5     7D9F B7   7DEE             sta   PlayPCM_RestorePage+1
   2771
   2772  3     7DA2 CC   FB3F             ldd   #$fb3f  ! Mute by CRA to
   2773  5     7DA5 B4   E7CF             anda  $e7cf   ! avoid sound when
   2774  5     7DA8 B7   E7CF             sta   $e7cf   ! $e7cd written
   2775  5     7DAB F7   E7CD             stb   $e7cd   ! Full sound line
   2776  2     7DAE 8A   04               ora   #$04    ! Disable mute by
   2777  5     7DB0 B7   E7CF             sta   $e7cf   ! CRA and sound
   2778                            
   2779        7DB3               PlayPCM_ReadChunk
   2780  4+1   7DB3 A6   20               lda   pcm_page,y                 >>
   2781  2     7DB5 81   FF               cmpa  #$FF
   2782  3     7DB7 27   1B               beq   PlayPCM_End
   2783  5     7DB9 B7   E7E5             sta   $E7E5                      >>
   2784  5+1   7DBC AE   21               ldx   pcm_start_addr,y           >>
   2785                            
   2786        7DBE               PlayPCM_Loop
   2787  4+2   7DBE A6   80               lda   ,x+
   2788  5     7DC0 B7   E7CD             sta   $e7cd                      >>
   2789  6+1   7DC3 AC   23               cmpx  pcm_end_addr,y
   2790  3     7DC5 27   07               beq   PlayPCM_NextChunk
   2791  11    7DC7 3D                    mul                              >>
   2792  11    7DC8 3D                    mul
   2793  11    7DC9 3D                    mul
   2794  6     7DCA 1F   89               tfr   a,b
   2795  3     7DCC 20   F0               bra   PlayPCM_Loop               >>
   2796                            
   2797        7DCE               PlayPCM_NextChunk
   2798  4+1   7DCE 31   25               leay  pcm_meta_size,y
   2799  11    7DD0 3D                    mul                              >>
   2800  2     7DD1 12                    nop
   2801  3     7DD2 20   DF               bra   PlayPCM_ReadChunk
   2802                            
   2803        7DD4               PlayPCM_End
   2804  2     7DD4 86   00               lda   #$00
   2805  5     7DD6 B7   E7CD             sta   $e7cd
   2806                            
   2807  3     7DD9 CC   FBFC             ldd   #$fbfc  ! Mute by CRA to
   2808  5     7DDC B4   E7CF             anda  $e7cf   ! avoid sound when
   2809  5     7DDF B7   E7CF             sta   $e7cf   ! $e7cd is written
   2810  5     7DE2 F4   E7CD             andb  $e7cd   ! Activate
   2811  5     7DE5 F7   E7CD             stb   $e7cd   ! joystick port
   2812  2     7DE8 8A   04               ora   #$04    ! Disable mute by
   2813  5     7DEA B7   E7CF             sta   $e7cf   ! CRA + joystick
   2814
   2815        7DED               PlayPCM_RestorePage
   2816  2     7DED 86   00               lda   #$00
   2817  5     7DEF B7   E7E5             sta   $E7E5
   2818                            
   2819  5     7DF2 39                    rts
   2820
   2821
   2822                                   INCLUD PSGLIB  * A rendre dynamiq>>
   2823                           * --------------------------------------->>
   2824                           * PSGlib
   2825                           * ------------
   2826                           * Converted to 6809 from:
   2827                           * PSGlib - Programmable Sound Generator a>>
   2828                           *          https://github.com/sverx/PSGli>>
   2829                           *
   2830                           * Typical workflow:
   2831                           * 1) You (or a friend of yours) track one>>
   2832                           * 2) Optional, but warmly suggested: opti>>
   2833                           * 3) Convert the VGM to PSG file(s) using>>
   2834                           * 4) Optional, suggested: compress the PS>>
   2835                           * 5) include the library and 'incbin' the>>
   2836                           * 6) call PSGInit once somewhere near the>>
   2837                           * 7) Set up a steady interrupt (vertical >>
   2838                           * 8) Start/stop tunes when needed using P>>
   2839                           * - Looping SFXs are supported too: fire >>
   2840                           * - Tunes can be set to run just once ins>>
   2841                           * - To check if a tune is still playing u>>
   2842                           *
   2843                           * PSGlib functions reference
   2844                           * ==========================
   2845                           *
   2846                           * engine initializer function
   2847                           * ---------------------------
   2848                           *
   2849                           * **PSGInit**: initializes the PSG engine>>
   2850                           * - no required parameters
   2851                           * - no return values
   2852                           * - destroys A
   2853                           *
   2854                           * functions for music
   2855                           * -------------------
   2856                           *
   2857                           * **PSGFrame**: processes a music frame
   2858                           * - no required parameters
   2859                           * - no return values
   2860                           * - destroys A,B,X
   2861                           *
   2862                           * **PSGPlay** / **PSGPlayNoRepeat**: star>>
   2863                           * - *needs* the address of the PSG to sta>>
   2864                           * - no return values
   2865                           * - destroys A
   2866                           *
   2867                           * **PSGStop**: stops (pauses) the music (>>
   2868                           * - no required parameters
   2869                           * - no return values
   2870                           * - destroys A
   2871                           *
   2872                           * **PSGResume**: resume the previously st>>
   2873                           * - no required parameters
   2874                           * - no return values
   2875                           * - destroys A
   2876                           *
   2877                           * **PSGCancelLoop**: sets the currently l>>
   2878                           * - no required parameters
   2879                           * - no return values
   2880                           * - destroys A
   2881                           *
   2882                           * **PSGGetStatus**: gets the current stat>>
   2883                           * - no required parameters
   2884                           * - *returns* `PSG_PLAYING` in register A>>
   2885                           *
   2886                           * functions for SFX
   2887                           * -----------------
   2888                           *
   2889                           * **PSGSFXFrame**: processes a SFX frame
   2890                           * - no required parameters
   2891                           * - no return values
   2892                           * - destroys A,B,Y
   2893                           *
   2894                           * **PSGSFXPlay** / **PSGSFXPlayLoop**: st>>
   2895                           * - *needs* the address of the SFX to sta>>
   2896                           * - *needs* a mask indicating which chann>>
   2897                           * - destroys A
   2898                           *
   2899                           * **PSGSFXStop**: stops the SFX (leaving >>
   2900                           * - no required parameters
   2901                           * - no return values
   2902                           * - destroys A
   2903                           *
   2904                           * **PSGSFXCancelLoop**: sets the currentl>>
   2905                           * - no required parameters
   2906                           * - no return values
   2907                           * - destroys A
   2908                           *
   2909                           * **PSGSFXGetStatus**: gets the current s>>
   2910                           * - no required parameters
   2911                           * - *returns* `PSG_PLAYING` in register A>>
   2912                           *
   2913                           * functions for music volume and hardware>>
   2914                           * --------------------------------------->>
   2915                           *
   2916                           * **PSGSetMusicVolumeAttenuation**: sets >>
   2917                           * - *needs* the volume attenuation value >>
   2918                           * - no return values
   2919                           * - destroys A
   2920                           *
   2921                           * **PSGSilenceChannels**: sets all hardwa>>
   2922                           * - no required parameters
   2923                           * - no return values
   2924                           * - destroys A
   2925                           *
   2926                           * **PSGRestoreVolumes**: resets silenced >>
   2927                           * - no required parameters
   2928                           * - no return values
   2929                           * - destroys A
   2930                           *
   2931                           * --------------------------------------->>
   2932
   2933                  0000     PSG_STOPPED         equ 0
   2934                  0001     PSG_PLAYING         equ 1
   2935
   2936                  E7B0     PSGDataPort         equ $e7b0
   2937
   2938                  0080     PSGLatch            equ $80
   2939                  0040     PSGData             equ $40
   2940
   2941                  0000     PSGChannel0         equ $00
   2942                  0020     PSGChannel1         equ $20
   2943                  0040     PSGChannel2         equ $40
   2944                  0060     PSGChannel3         equ $60
   2945                  0010     PSGVolumeData       equ $10
   2946
   2947                  0038     PSGWait             equ $38
   2948                  0008     PSGSubString        equ $08
   2949                  0001     PSGLoop             equ $01
   2950                  0000     PSGEnd              equ $00
   2951
   2952                  0001     SFX_CHANNEL2        equ $01
   2953                  0002     SFX_CHANNEL3        equ $02
   2954                  0003     SFX_CHANNELS2AND3   equ SFX_CHANNEL2!SFX_>>
   2955
   2956                           * ***************************************>>
   2957                           * initializes the PSG 'engine'
   2958                           * destroys A
   2959
   2960        7DF3               PSGInit *@globals
   2961  2     7DF3 86   00               lda   #PSG_STOPPED               >>
   2962  5     7DF5 B7   81F0             sta   PSGMusicStatus             >>
   2963  5     7DF8 B7   820A             sta   PSGSFXStatus               >>
   2964  5     7DFB B7   8206             sta   PSGChannel2SFX             >>
   2965  5     7DFE B7   8207             sta   PSGChannel3SFX             >>
   2966  5     7E01 B7   8205             sta   PSGMusicVolumeAttenuation  >>
   2967  5     7E04 39                    rts
   2968
   2969                           * ***************************************>>
   2970                           * receives in X the address of the PSG to>>
   2971                           * destroys A
   2972
   2973        7E05               PSGPlayNoRepeat *@globals
   2974  2     7E05 86   00               lda   #0                         >>
   2975  3     7E07 20   02               bra   PSGPlay1
   2976        7E09               PSGPlay
   2977  2     7E09 86   01               lda   #1                         >>
   2978        7E0B               PSGPlay1
   2979  5     7E0B B7   81F9             sta   PSGLoopFlag
   2980  7     7E0E 8D   23               bsr   PSGStop                    >>
   2981                            
   2982  4+0   7E10 A6   84               lda   ,x
   2983  5     7E12 B7   81F1             sta   PSGMusicPage
   2984  5+1   7E15 AE   01               ldx   1,x
   2985  6     7E17 BF   81F2             stx   PSGMusicStart              >>
   2986  6     7E1A BF   81F4             stx   PSGMusicPointer            >>
   2987  6     7E1D BF   81F6             stx   PSGMusicLoopPoint          >>
   2988  2     7E20 86   00               lda   #0
   2989  5     7E22 B7   81F8             sta   PSGMusicSkipFrames         >>
   2990  5     7E25 B7   81FB             sta   PSGMusicSubstringLen       >>
   2991  2     7E28 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   2992  5     7E2A B7   81FA             sta   PSGMusicLastLatch          >>
   2993  2     7E2D 86   01               lda   #PSG_PLAYING
   2994  5     7E2F B7   81F0             sta   PSGMusicStatus             >>
   2995  5     7E32 39                    rts
   2996
   2997                           * ***************************************>>
   2998                           * stops the music (leaving the SFX on, if>>
   2999                           * destroys A
   3000
   3001        7E33               PSGStop *@globals
   3002  5     7E33 B6   81F0             lda   PSGMusicStatus             >>
   3003  3     7E36 27   23               beq   PSGStop_end
   3004  2     7E38 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   3005  5     7E3A B7   E7B0             sta   PSGDataPort
   3006  2     7E3D 86   BF               lda   #PSGLatch!PSGChannel1!PSGVo>>
   3007  5     7E3F B7   E7B0             sta   PSGDataPort
   3008  5     7E42 B6   8206             lda   PSGChannel2SFX
   3009  3     7E45 26   05               bne   PSGStop2
   3010  2     7E47 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   3011  5     7E49 B7   E7B0             sta   PSGDataPort
   3012        7E4C               PSGStop2
   3013  5     7E4C B6   8207             lda   PSGChannel3SFX
   3014  3     7E4F 26   05               bne   PSGStop3
   3015  2     7E51 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3016  5     7E53 B7   E7B0             sta   PSGDataPort
   3017        7E56               PSGStop3
   3018  2     7E56 86   00               lda   #PSG_STOPPED               >>
   3019  5     7E58 B7   81F0             sta   PSGMusicStatus             >>
   3020        7E5B               PSGStop_end
   3021  5     7E5B 39              rts
   3022
   3023
   3024                           * ***************************************>>
   3025                           * resume a previously stopped music
   3026                           * destroys A
   3027
   3028        7E5C               PSGResume *@globals
   3029  5     7E5C B6   81F0             lda   PSGMusicStatus             >>
   3030  3     7E5F 26   45               bne   PSGResume_end
   3031  5     7E61 B6   81FE             lda   PSGChan0Volume             >>
   3032  2     7E64 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   3033  5     7E66 B7   E7B0             sta   PSGDataPort
   3034  5     7E69 B6   81FF             lda   PSGChan1Volume             >>
   3035  2     7E6C 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   3036  5     7E6E B7   E7B0             sta   PSGDataPort
   3037  5     7E71 B6   8206             lda   PSGChannel2SFX
   3038  3     7E74 26   16               bne   PSGResume1
   3039  5     7E76 B6   8202             lda   PSGChan2LowTone            >>
   3040  2     7E79 8A   C0               ora   #PSGLatch!PSGChannel2
   3041  5     7E7B B7   E7B0             sta   PSGDataPort
   3042  5     7E7E B6   8204             lda   PSGChan2HighTone
   3043  5     7E81 B7   E7B0             sta   PSGDataPort
   3044  5     7E84 B6   8200             lda   PSGChan2Volume             >>
   3045  2     7E87 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3046  5     7E89 B7   E7B0             sta   PSGDataPort
   3047        7E8C               PSGResume1
   3048  5     7E8C B6   8207             lda   PSGChannel3SFX
   3049  3     7E8F 26   10               bne   PSGResume2
   3050  5     7E91 B6   8203             lda   PSGChan3LowTone            >>
   3051  2     7E94 8A   E0               ora   #PSGLatch!PSGChannel3
   3052  5     7E96 B7   E7B0             sta   PSGDataPort
   3053  5     7E99 B6   8201             lda   PSGChan3Volume             >>
   3054  2     7E9C 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3055  5     7E9E B7   E7B0             sta   PSGDataPort
   3056        7EA1               PSGResume2
   3057  2     7EA1 86   01               lda   #PSG_PLAYING
   3058  5     7EA3 B7   81F0             sta   PSGMusicStatus             >>
   3059        7EA6               PSGResume_end
   3060  5     7EA6 39                    rts
   3061
   3062                           * ***************************************>>
   3063                           * sets the currently looping music to no >>
   3064                           * destroys A
   3065
   3066        7EA7               PSGCancelLoop *@globals
   3067  7     7EA7 7F   81F9               clr   PSGLoopFlag
   3068  5     7EAA 39                      rts
   3069
   3070                           * ***************************************>>
   3071                           * gets the current status of music into r>>
   3072
   3073        7EAB               PSGGetStatus *@globals
   3074  5     7EAB B6   81F0             lda   PSGMusicStatus
   3075  5     7EAE 39                    rts
   3076
   3077                           * ***************************************>>
   3078                           * receives in A the volume attenuation fo>>
   3079                           * destroys A
   3080
   3081        7EAF               PSGSetMusicVolumeAttenuation *@globals
   3082  5     7EAF B7   8205             sta   PSGMusicVolumeAttenuation
   3083  5     7EB2 B6   81F0             lda   PSGMusicStatus             >>
   3084  3     7EB5 27   56               beq   PSGSetMusicVolumeAttenuatio>>
   3085
   3086  5     7EB7 B6   81FE             lda   PSGChan0Volume
   3087  2     7EBA 84   0F               anda  #$0F
   3088  5     7EBC BB   8205             adda  PSGMusicVolumeAttenuation
   3089  2     7EBF 81   10               cmpa  #$10                       >>
   3090  3     7EC1 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3091  2     7EC3 86   0F               lda   #$0F                       >>
   3092        7EC5               PSGSetMusicVolumeAttenuation1
   3093  2     7EC5 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   3094  5     7EC7 B7   E7B0             sta   PSGDataPort                >>
   3095                            
   3096  5     7ECA B6   81FF             lda   PSGChan1Volume
   3097  2     7ECD 84   0F               anda  #$0F
   3098  5     7ECF BB   8205             adda  PSGMusicVolumeAttenuation
   3099  2     7ED2 81   10               cmpa  #$10                       >>
   3100  3     7ED4 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3101  2     7ED6 86   0F               lda   #$0F                       >>
   3102        7ED8               PSGSetMusicVolumeAttenuation2
   3103  2     7ED8 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   3104  5     7EDA B7   E7B0             sta   PSGDataPort                >>
   3105                            
   3106
   3107  5     7EDD B6   8206             lda   PSGChannel2SFX             >>
   3108  3     7EE0 26   13               bne   _restore_channel3          >>
   3109
   3110  5     7EE2 B6   8200             lda   PSGChan2Volume
   3111  2     7EE5 84   0F               anda  #$0F
   3112  5     7EE7 BB   8205             adda  PSGMusicVolumeAttenuation
   3113  2     7EEA 81   10               cmpa  #$10                       >>
   3114  3     7EEC 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3115  2     7EEE 86   0F               lda   #$0F                       >>
   3116        7EF0               PSGSetMusicVolumeAttenuation3
   3117  2     7EF0 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3118  5     7EF2 B7   E7B0             sta   PSGDataPort
   3119
   3120        7EF5               _restore_channel3
   3121  5     7EF5 B6   8207             lda   PSGChannel3SFX             >>
   3122  3     7EF8 26   13               bne   PSGSetMusicVolumeAttenuatio>>
   3123
   3124  5     7EFA B6   8201             lda   PSGChan3Volume
   3125  2     7EFD 84   0F               anda  #$0F
   3126  5     7EFF BB   8205             adda  PSGMusicVolumeAttenuation
   3127  2     7F02 81   10               cmpa  #$10                       >>
   3128  3     7F04 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3129  2     7F06 86   0F               lda   #$0F                       >>
   3130        7F08               PSGSetMusicVolumeAttenuation4
   3131  2     7F08 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   3132  5     7F0A B7   E7B0             sta   PSGDataPort
   3133                            
   3134        7F0D               PSGSetMusicVolumeAttenuation_end
   3135  5     7F0D 39                    rts
   3136
   3137                           * ***************************************>>
   3138                           * sets all PSG channels to volume ZERO (u>>
   3139                           * destroys A
   3140
   3141        7F0E               PSGSilenceChannels *@globals
   3142  2     7F0E 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   3143  5     7F10 B7   E7B0             sta   PSGDataPort
   3144  2     7F13 86   BF               lda   #PSGLatch!PSGChannel1!PSGVo>>
   3145  5     7F15 B7   E7B0             sta   PSGDataPort
   3146  2     7F18 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   3147  5     7F1A B7   E7B0             sta   PSGDataPort
   3148  2     7F1D 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3149  5     7F1F B7   E7B0             sta   PSGDataPort
   3150  5     7F22 39                    rts
   3151
   3152                           * ***************************************>>
   3153                           * resets all PSG channels to previous vol>>
   3154                           * destroys A
   3155
   3156        7F23               PSGRestoreVolumes *@globals
   3157  5     7F23 B6   81F0             lda   PSGMusicStatus             >>
   3158  3     7F26 27   26               beq   _chkchn2                   >>
   3159
   3160  5     7F28 B6   81FE             lda   PSGChan0Volume
   3161  2     7F2B 84   0F               anda  #$0F
   3162  5     7F2D BB   8205             adda  PSGMusicVolumeAttenuation
   3163  2     7F30 81   10               cmpa  #$10                       >>
   3164  3     7F32 25   02               bcs   PSGRestoreVolumes1         >>
   3165  2     7F34 86   0F               lda   #$0F                       >>
   3166        7F36               PSGRestoreVolumes1
   3167  2     7F36 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   3168  5     7F38 B7   E7B0             sta   PSGDataPort                >>
   3169
   3170  5     7F3B B6   81FF             lda   PSGChan1Volume
   3171  2     7F3E 84   0F               anda  #$0F
   3172  5     7F40 BB   8205             adda  PSGMusicVolumeAttenuation
   3173  2     7F43 81   10               cmpa  #$10                       >>
   3174  3     7F45 25   02               bcs   PSGRestoreVolumes2         >>
   3175  2     7F47 86   0F               lda   #$0F                       >>
   3176        7F49               PSGRestoreVolumes2
   3177  2     7F49 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   3178  5     7F4B B7   E7B0             sta   PSGDataPort                >>
   3179                            
   3180        7F4E               _chkchn2
   3181  5     7F4E B6   8206             lda   PSGChannel2SFX             >>
   3182  3     7F51 26   15               bne   _restoreSFX2
   3183                            
   3184  5     7F53 B6   81F0             lda   PSGMusicStatus             >>
   3185  3     7F56 27   1A               beq   _chkchn3                   >>
   3186
   3187  5     7F58 B6   8200             lda   PSGChan2Volume
   3188  2     7F5B 84   0F               anda  #$0F
   3189  5     7F5D BB   8205             adda  PSGMusicVolumeAttenuation
   3190  2     7F60 81   10               cmpa  #$10                       >>
   3191  3     7F62 25   09               bcs   PSGRestoreVolumes3         >>
   3192  2     7F64 86   0F               lda   #$0F                       >>
   3193  3     7F66 20   05               bra   PSGRestoreVolumes3
   3194
   3195        7F68               _restoreSFX2
   3196  5     7F68 B6   8208             lda   PSGSFXChan2Volume
   3197  4     7F6B 94   0F               anda  $0F
   3198        7F6D               PSGRestoreVolumes3
   3199  2     7F6D 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3200  5     7F6F B7   E7B0             sta   PSGDataPort                >>
   3201
   3202        7F72               _chkchn3
   3203  5     7F72 B6   8207             lda   PSGChannel3SFX             >>
   3204  3     7F75 26   15               bne   _restoreSFX3
   3205                            
   3206  5     7F77 B6   81F0             lda   PSGMusicStatus             >>
   3207  3     7F7A 27   1A               beq   _restoreSFX2_end           >>
   3208
   3209  5     7F7C B6   8201             lda   PSGChan3Volume
   3210  2     7F7F 84   0F               anda  #$0F
   3211  5     7F81 BB   8205             adda  PSGMusicVolumeAttenuation
   3212  2     7F84 81   10               cmpa  #$10                       >>
   3213  3     7F86 25   09               bcs   PSGRestoreVolumes4         >>
   3214  2     7F88 86   0F               lda   #$0F                       >>
   3215  3     7F8A 20   05               bra   PSGRestoreVolumes4
   3216
   3217        7F8C               _restoreSFX3
   3218  5     7F8C B6   8209             lda   PSGSFXChan3Volume
   3219  2     7F8F 84   0F               anda  #$0F
   3220        7F91               PSGRestoreVolumes4
   3221  2     7F91 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   3222  5     7F93 B7   E7B0             sta   PSGDataPort                >>
   3223        7F96               _restoreSFX2_end
   3224  5     7F96 39                    rts
   3225
   3226
   3227                           * ***************************************>>
   3228                           * receives in X the address of the SFX PS>>
   3229                           * receives in B the mask that indicates w>>
   3230                           * destroys A
   3231
   3232        7F97               PSGSFXPlayLoop *@globals
   3233  2     7F97 86   01               lda   #1                         >>
   3234  3     7F99 20   02               bra   PSGSFXPlay1
   3235        7F9B               PSGSFXPlay
   3236  2     7F9B 86   00               lda   #0                         >>
   3237        7F9D               PSGSFXPlay1
   3238  5     7F9D B7   8213             sta   PSGSFXLoopFlag
   3239  7     7FA0 8D   41               bsr   PSGSFXStop                 >>
   3240
   3241  4+0   7FA2 A6   84               lda   ,x
   3242  5     7FA4 B7   820B             sta   PSGSFXPage
   3243  5+1   7FA7 AE   01               ldx   1,x
   3244  6     7FA9 BF   820C             stx   PSGSFXStart                >>
   3245  6     7FAC BF   820E             stx   PSGSFXPointer              >>
   3246  6     7FAF BF   8210             stx   PSGSFXLoopPoint            >>
   3247  2     7FB2 86   00               lda   #0
   3248  5     7FB4 B7   8212             sta   PSGSFXSkipFrames           >>
   3249  5     7FB7 B7   8214             sta   PSGSFXSubstringLen         >>
   3250  2     7FBA C5   01               bitb  #SFX_CHANNEL2              >>
   3251  3     7FBC 27   05               beq   PSGSFXPlay2
   3252  2     7FBE 86   01               lda   #PSG_PLAYING
   3253  5     7FC0 B7   8206             sta   PSGChannel2SFX
   3254        7FC3               PSGSFXPlay2
   3255  2     7FC3 C5   02               bitb  #SFX_CHANNEL3              >>
   3256  3     7FC5 27   05               beq   PSGSFXPlay3
   3257  2     7FC7 86   01               lda   #PSG_PLAYING
   3258  5     7FC9 B7   8207             sta   PSGChannel3SFX
   3259        7FCC               PSGSFXPlay3
   3260  5     7FCC B7   820A             sta   PSGSFXStatus               >>
   3261  5     7FCF B6   8203             lda   PSGChan3LowTone            >>
   3262  2     7FD2 84   03               anda  #SFX_CHANNELS2AND3
   3263  2     7FD4 81   03               cmpa  #SFX_CHANNELS2AND3
   3264  3     7FD6 26   0A               bne   PSGSFXPlayLoop_end         >>
   3265  2     7FD8 86   01               lda   #PSG_PLAYING
   3266  5     7FDA B7   8207             sta   PSGChannel3SFX             >>
   3267  2     7FDD 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3268  5     7FDF B7   E7B0             sta   PSGDataPort
   3269        7FE2               PSGSFXPlayLoop_end
   3270  5     7FE2 39                    rts
   3271
   3272
   3273                           * ***************************************>>
   3274                           * stops the SFX (leaving the music on, if>>
   3275                           * destroys A
   3276
   3277        7FE3               PSGSFXStop *@globals
   3278  5     7FE3 B6   820A             lda   PSGSFXStatus               >>
   3279  3     7FE6 27   70               beq   PSGSFXStop_end             >>
   3280  5     7FE8 B6   8206             lda   PSGChannel2SFX             >>
   3281  3     7FEB 27   05               beq   PSGSFXStop1
   3282  2     7FED 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   3283  5     7FEF B7   E7B0             sta   PSGDataPort
   3284        7FF2               PSGSFXStop1
   3285  5     7FF2 B6   8207             lda   PSGChannel3SFX             >>
   3286  3     7FF5 27   05               beq   PSGSFXStop2
   3287  2     7FF7 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3288  5     7FF9 B7   E7B0             sta   PSGDataPort
   3289        7FFC               PSGSFXStop2
   3290  5     7FFC B6   81F0             lda   PSGMusicStatus             >>
   3291  3     7FFF 27   4E               beq   _skipRestore               >>
   3292  5     8001 B6   8206             lda   PSGChannel2SFX             >>
   3293  3     8004 27   25               beq   _skip_chn2
   3294  5     8006 B6   8202             lda   PSGChan2LowTone
   3295  2     8009 84   0F               anda  #$0F                       >>
   3296  2     800B 8A   80               ora   #PSGLatch|PSGChannel2      >>
   3297  5     800D B7   E7B0             sta   PSGDataPort
   3298  5     8010 B6   8204             lda   PSGChan2HighTone           >>
   3299  2     8013 84   3F               anda  #$3F                       >>
   3300  5     8015 B7   E7B0             sta   PSGDataPort
   3301  5     8018 B6   8200             lda   PSGChan2Volume             >>
   3302  2     801B 84   0F               anda  #$0F                       >>
   3303  5     801D BB   8205             adda  PSGMusicVolumeAttenuation
   3304  2     8020 81   10               cmpa  #$10                       >>
   3305  3     8022 25   02               bcs   PSGSFXStop3                >>
   3306  2     8024 86   0F               lda   #$0F                       >>
   3307        8026               PSGSFXStop3
   3308  2     8026 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3309  5     8028 B7   E7B0             sta   PSGDataPort                >>
   3310        802B               _skip_chn2
   3311  5     802B B6   8207             lda   PSGChannel3SFX             >>
   3312  3     802E 27   1D               beq   _skip_chn3
   3313  5     8030 B6   8203             lda   PSGChan3LowTone
   3314  4     8033 94   07               anda  $07                        >>
   3315  2     8035 8A   E0               ora   #PSGLatch!PSGChannel3      >>
   3316  5     8037 B7   E7B0             sta   PSGDataPort
   3317  5     803A B6   8201             lda   PSGChan3Volume             >>
   3318  2     803D 84   0F               anda  #$0F                       >>
   3319  5     803F BB   8205             adda  PSGMusicVolumeAttenuation
   3320  2     8042 81   10               cmpa  #$10                       >>
   3321  3     8044 25   02               bcs   PSGSFXStop4                >>
   3322  2     8046 86   0F               lda   #$0F                       >>
   3323        8048               PSGSFXStop4
   3324  2     8048 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   3325  5     804A B7   E7B0             sta   PSGDataPort                >>
   3326
   3327        804D               _skip_chn3
   3328  2     804D 86   00               lda   #PSG_STOPPED               >>
   3329        804F               _skipRestore
   3330  5     804F B7   8206             sta   PSGChannel2SFX
   3331  5     8052 B7   8207             sta   PSGChannel3SFX
   3332  5     8055 B7   820A             sta   PSGSFXStatus               >>
   3333        8058               PSGSFXStop_end
   3334  5     8058 39                    rts
   3335
   3336                           * ***************************************>>
   3337                           * sets the currently looping SFX to no mo>>
   3338                           * destroys A
   3339
   3340        8059               PSGSFXCancelLoop *@globals
   3341  7     8059 7F   8213             clr   PSGSFXLoopFlag
   3342  5     805C 39                    rts
   3343
   3344
   3345                           * ***************************************>>
   3346                           * gets the current SFX status into regist>>
   3347
   3348        805D               PSGSFXGetStatus *@globals
   3349  5     805D B6   820A             lda   PSGSFXStatus
   3350  5     8060 39                    rts
   3351
   3352
   3353                           * ***************************************>>
   3354                           * processes a music frame
   3355                           * destroys A,B,X
   3356                            
   3357        8061               PSGFrame *@globals
   3358
   3359  5     8061 B6   81F1             lda   PSGMusicPage
   3360  5     8064 B7   E7E5             sta   $E7E5
   3361
   3362  5     8067 B6   81F0             lda   PSGMusicStatus             >>
   3363  3     806A 26   01               bne   PSGFrame_continue
   3364  5     806C 39                    rts
   3365
   3366        806D               PSGFrame_continue
   3367  5     806D B6   81F8             lda   PSGMusicSkipFrames         >>
   3368  3     8070 26   7F               bne   _skipFrame
   3369  6     8072 BE   81F4             ldx   PSGMusicPointer            >>
   3370
   3371        8075               _intLoop
   3372  4+2   8075 E6   80               ldb   ,x+                        >>
   3373  5     8077 B6   81FB             lda   PSGMusicSubstringLen       >>
   3374  3     807A 27   09               beq   _continue                  >>
   3375  2     807C 4A                    deca                             >>
   3376  5     807D B7   81FB             sta   PSGMusicSubstringLen       >>
   3377  3     8080 26   03               bne   _continue
   3378  6     8082 BE   81FC             ldx   PSGMusicSubstringRetAddr   >>
   3379
   3380        8085               _continue
   3381  2     8085 C1   80               cmpb  #PSGLatch                  >>
   3382  3     8087 25   6D               bcs   _noLatch                   >>
   3383  5     8089 F7   81FA             stb   PSGMusicLastLatch          >>
   3384                            
   3385  2     808C C5   04               bitb  #4                         >>
   3386  3     808E 26   32               bne   _latch_Volume              >>
   3387  2     8090 C5   06               bitb  #6                         >>
   3388  3     8092 27   58               beq   _send2PSG                  >>
   3389
   3390  2     8094 C5   05               bitb  #5                         >>
   3391  3     8096 27   20               beq   _ifchn2                    >>
   3392  5     8098 F7   8203             stb   PSGChan3LowTone            >>
   3393  5     809B B6   8207             lda   PSGChannel3SFX             >>
   3394  3     809E 26   D5               bne   _intLoop
   3395  5     80A0 B6   8203             lda   PSGChan3LowTone
   3396  2     80A3 84   03               anda  #3                         >>
   3397  2     80A5 81   03               cmpa  #3
   3398  3     80A7 26   43               bne   _send2PSG                  >>
   3399  5     80A9 B6   820A             lda   PSGSFXStatus               >>
   3400  3     80AC 27   3E               beq   _send2PSG                  >>
   3401  5     80AE B7   8207             sta   PSGChannel3SFX             >>
   3402  2     80B1 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3403  5     80B3 B7   E7B0             sta   PSGDataPort
   3404  3     80B6 20   BD               bra   _intLoop
   3405
   3406        80B8               _ifchn2
   3407  5     80B8 F7   8202             stb   PSGChan2LowTone            >>
   3408  5     80BB B6   8206             lda   PSGChannel2SFX             >>
   3409  3     80BE 27   2C               beq   _send2PSG
   3410  3     80C0 20   B3               bra   _intLoop
   3411                            
   3412        80C2               _latch_Volume
   3413  2     80C2 C5   06               bitb  #6                         >>
   3414  3     80C4 26   0E               bne   _latch_Volume_23           >>
   3415  2     80C6 C5   05               bitb  #5                         >>
   3416  3     80C8 27   05               beq   _ifchn0                    >>
   3417  5     80CA F7   81FF             stb   PSGChan1Volume             >>
   3418  3     80CD 20   4C               bra   _sendVolume2PSG
   3419                            
   3420        80CF               _ifchn0
   3421  5     80CF F7   81FE             stb   PSGChan0Volume             >>
   3422  3     80D2 20   47               bra   _sendVolume2PSG
   3423
   3424        80D4               _latch_Volume_23
   3425  2     80D4 C5   05               bitb  #5                         >>
   3426  3     80D6 27   0A               beq   _chn2                      >>
   3427  5     80D8 F7   8201             stb   PSGChan3Volume             >>
   3428  5     80DB B6   8207             lda   PSGChannel3SFX             >>
   3429  3     80DE 27   3B               beq   _sendVolume2PSG
   3430  3     80E0 20   93               bra   _intLoop
   3431
   3432        80E2               _chn2
   3433  5     80E2 F7   8200             stb   PSGChan2Volume             >>
   3434  5     80E5 B6   8206             lda   PSGChannel2SFX             >>
   3435  3     80E8 27   31               beq   _sendVolume2PSG
   3436  3     80EA 20   89               bra   _intLoop
   3437                            
   3438        80EC               _send2PSG
   3439  5     80EC F7   E7B0             stb   PSGDataPort                >>
   3440  3     80EF 20   84               bra   _intLoop
   3441                            
   3442        80F1               _skipFrame
   3443  2     80F1 4A                    deca
   3444  5     80F2 B7   81F8             sta   PSGMusicSkipFrames
   3445  5     80F5 39                    rts
   3446
   3447        80F6               _noLatch
   3448  2     80F6 C1   40               cmpb  #PSGData
   3449  3     80F8 25   05               bcs   _command                   >>
   3450                                                                    >>
   3451  5     80FA B6   81FA             lda   PSGMusicLastLatch          >>
   3452  3     80FD 20   39               bra   _output_NoLatch
   3453
   3454        80FF               _command
   3455  2     80FF C1   38               cmpb  #PSGWait
   3456  3     8101 27   07               beq   _done                      >>
   3457  3     8103 25   09               bcs   _otherCommands             >>
   3458  2     8105 C4   07               andb  #$07                       >>
   3459  5     8107 F7   81F8             stb   PSGMusicSkipFrames         >>
   3460                            
   3461        810A               _done
   3462  6     810A BF   81F4             stx   PSGMusicPointer            >>
   3463  5     810D 39                    rts                              >>
   3464
   3465        810E               _otherCommands
   3466  2     810E C1   08               cmpb  #PSGSubString
   3467  3     8110 24   3F               bcc   _substring
   3468  2     8112 C1   00               cmpb  #PSGEnd
   3469  3     8114 27   2E               beq   _musicLoop
   3470  2     8116 C1   01               cmpb  #PSGLoop
   3471  3     8118 27   24               beq   _setLoopPoint
   3472
   3473                             * *************************************>>
   3474                             * we should never get here!
   3475                             * if we do, it means the PSG file is pr>>
   3476                             * *************************************>>
   3477
   3478  5     811A 39                    rts
   3479
   3480        811B               _sendVolume2PSG *@globals
   3481  5     811B F7   812A             stb   _sendVolume2PSG1+1         >>
   3482  2     811E C4   0F               andb  #$0F                       >>
   3483  5     8120 FB   8205             addb  PSGMusicVolumeAttenuation  >>
   3484  2     8123 C1   10               cmpb  #$10                       >>
   3485  3     8125 25   02               bcs   _sendVolume2PSG1           >>
   3486  2     8127 C6   0F               ldb   #$0F                       >>
   3487        8129               _sendVolume2PSG1
   3488  2     8129 86   00               lda   #0                         >>
   3489  5     812B F7   8131             stb   _sendVolume2PSG2+1
   3490  2     812E 84   F0               anda  #$F0                       >>
   3491        8130               _sendVolume2PSG2
   3492  2     8130 8A   00               ora   #0                         >>
   3493  5     8132 B7   E7B0             sta   PSGDataPort                >>
   3494  5     8135 16   FF3D             lbra   _intLoop
   3495
   3496        8138               _output_NoLatch
   3497                             * we got the last latch in A and the PS>>
   3498                             * and we have to check if the value sho>>
   3499                             * note that non-latch commands can be o>>
   3500                             * for channels 0,1,2 only (no noise)
   3501  2     8138 85   06               bita  #6                         >>
   3502  3     813A 26   27               bne   _high_part_Tone            >>
   3503  3     813C 20   AE               bra   _send2PSG                  >>
   3504
   3505        813E               _setLoopPoint
   3506  6     813E BF   81F6             stx   PSGMusicLoopPoint
   3507  5     8141 16   FF31             lbra   _intLoop
   3508
   3509        8144               _musicLoop
   3510  5     8144 B6   81F9             lda   PSGLoopFlag                >>
   3511  6     8147 1027 FCE8             lbeq   PSGStop                   >>
   3512  6     814B BE   81F6             ldx   PSGMusicLoopPoint
   3513  5     814E 16   FF24             lbra   _intLoop
   3514
   3515        8151               _substring
   3516  2     8151 C0   04               subb  #PSGSubString-4            >>
   3517  5     8153 F7   81FB             stb   PSGMusicSubstringLen       >>
   3518  5+3   8156 EC   81               ldd   ,x++                       >>
   3519  6     8158 BF   81FC             stx   PSGMusicSubstringRetAddr   >>
   3520  6     815B BE   81F2             ldx   PSGMusicStart
   3521  4+4   815E 30   8B               leax  d,x                        >>
   3522  5     8160 16   FF12             lbra   _intLoop
   3523
   3524        8163               _high_part_Tone
   3525  5     8163 F7   8204             stb   PSGChan2HighTone           >>
   3526  5     8166 B6   8206             lda   PSGChannel2SFX             >>
   3527  3     8169 27   81               beq   _send2PSG
   3528  5     816B 16   FF07             lbra   _intLoop
   3529
   3530
   3531                           * ***************************************>>
   3532                           * processes a SFX frame
   3533                           * destroys A,B,X
   3534
   3535        816E               PSGSFXFrame *@globals
   3536
   3537  5     816E B6   820B             lda   PSGSFXPage
   3538  5     8171 B7   E7E5             sta   $E7E5
   3539                            
   3540  5     8174 B6   820A             lda   PSGSFXStatus               >>
   3541  3     8177 27   35               beq   PSGSFXFrame_end
   3542
   3543  5     8179 B6   8212             lda   PSGSFXSkipFrames           >>
   3544  3     817C 26   2C               bne   _skipSFXFrame
   3545                            
   3546  6     817E BE   820E             ldx   PSGSFXPointer              >>
   3547
   3548        8181               _intSFXLoop
   3549  4+2   8181 E6   80               ldb   ,x+                        >>
   3550  5     8183 B6   8214             lda   PSGSFXSubstringLen         >>
   3551  3     8186 27   09               beq   _SFXcontinue               >>
   3552  2     8188 4A                    deca                             >>
   3553  5     8189 B7   8214             sta   PSGSFXSubstringLen         >>
   3554  3     818C 26   03               bne   _SFXcontinue
   3555  6     818E BE   8215             ldx   PSGSFXSubstringRetAddr     >>
   3556
   3557        8191               _SFXcontinue
   3558  2     8191 C1   40               cmpb   #PSGData
   3559  3     8193 25   1A               bcs    _SFXcommand               >>
   3560  2     8195 C5   04               bitb   #4                        >>
   3561  3     8197 27   0C               beq    _SFXoutbyte               >>
   3562  2     8199 C5   05               bitb   #5                        >>
   3563  3     819B 26   05               bne    _SFXvolumechn3
   3564  5     819D F7   8208             stb    PSGSFXChan2Volume
   3565  3     81A0 20   03               bra   _SFXoutbyte
   3566
   3567        81A2               _SFXvolumechn3
   3568  5     81A2 F7   8209             stb   PSGSFXChan3Volume
   3569
   3570        81A5               _SFXoutbyte
   3571  5     81A5 F7   E7B0             stb   PSGDataPort                >>
   3572  3     81A8 20   D7               bra   _intSFXLoop
   3573                            
   3574        81AA               _skipSFXFrame
   3575  2     81AA 4A                    deca
   3576  5     81AB B7   8212             sta   PSGSFXSkipFrames
   3577        81AE               PSGSFXFrame_end
   3578  5     81AE 39                    rts
   3579
   3580        81AF               _SFXcommand
   3581  2     81AF C1   38               cmpb   #PSGWait
   3582  3     81B1 27   07               beq    _SFXdone                  >>
   3583  3     81B3 25   09               bcs    _SFXotherCommands         >>
   3584  2     81B5 C4   07               andb   #$07                      >>
   3585  5     81B7 F7   8212             stb    PSGSFXSkipFrames          >>
   3586        81BA               _SFXdone
   3587  6     81BA BF   820E             stx    PSGSFXPointer             >>
   3588  5     81BD 39                    rts                              >>
   3589
   3590        81BE               _SFXotherCommands
   3591  2     81BE C1   08               cmpb   #PSGSubString
   3592  3     81C0 24   1D               bcc    _SFXsubstring
   3593  2     81C2 C1   00               cmpb   #PSGEnd
   3594  3     81C4 27   0A               beq    _sfxLoop
   3595  2     81C6 C1   01               cmpb   #PSGLoop
   3596  3     81C8 27   01               beq    _SFXsetLoopPoint
   3597                            
   3598                             * *************************************>>
   3599                             * we should never get here!
   3600                             * if we do, it means the PSG SFX file i>>
   3601                             * *************************************>>
   3602
   3603  5     81CA 39                    rts
   3604
   3605        81CB               _SFXsetLoopPoint *@globals
   3606  6     81CB BF   8210             stx   PSGSFXLoopPoint
   3607  3     81CE 20   B1               bra   _intSFXLoop
   3608                            
   3609        81D0               _sfxLoop
   3610  5     81D0 B6   8213             lda   PSGSFXLoopFlag             >>
   3611  6     81D3 1027 FE0C             lbeq   PSGSFXStop                >>
   3612  6     81D7 BE   8210             ldx   PSGSFXLoopPoint
   3613  6     81DA BF   820E             stx   PSGSFXPointer
   3614  3     81DD 20   A2               bra   _intSFXLoop
   3615
   3616        81DF               _SFXsubstring
   3617  2     81DF C0   04               subb  #PSGSubString-4            >>
   3618  5     81E1 F7   8214             stb   PSGSFXSubstringLen         >>
   3619  5+3   81E4 EC   81               ldd   ,x++                       >>
   3620  6     81E6 BF   8215             stx   PSGSFXSubstringRetAddr     >>
   3621  6     81E9 BE   820C             ldx   PSGSFXStart
   3622  4+4   81EC 30   8B               leax  d,x                        >>
   3623  3     81EE 20   91               bra   _intSFXLoop
   3624
   3625                             * fundamental vars
   3626        81F0               PSGMusicStatus             rmb 1,0 ; are >>
   3627        81F1               PSGMusicPage               rmb 1,0 ; Memo>>
   3628        81F2               PSGMusicStart              rmb 2,0 ; the >>
   3629        81F4               PSGMusicPointer            rmb 2,0 ; the >>
   3630        81F6               PSGMusicLoopPoint          rmb 2,0 ; the >>
   3631        81F8               PSGMusicSkipFrames         rmb 1,0 ; the >>
   3632        81F9               PSGLoopFlag                rmb 1,0 ; the >>
   3633        81FA               PSGMusicLastLatch          rmb 1,0 ; the >>
   3634
   3635                             * decompression vars
   3636        81FB               PSGMusicSubstringLen       rmb 1,0 ; leng>>
   3637        81FC               PSGMusicSubstringRetAddr   rmb 2,0 ; retu>>
   3638
   3639                             * command buffers
   3640        81FE               PSGChan0Volume             rmb 1,0 ; the >>
   3641        81FF               PSGChan1Volume             rmb 1,0 ; the >>
   3642        8200               PSGChan2Volume             rmb 1,0 ; the >>
   3643        8201               PSGChan3Volume             rmb 1,0 ; the >>
   3644        8202               PSGChan2LowTone            rmb 1,0 ; the >>
   3645        8203               PSGChan3LowTone            rmb 1,0 ; the >>
   3646        8204               PSGChan2HighTone           rmb 1,0 ; the >>
   3647
   3648        8205               PSGMusicVolumeAttenuation  rmb 1,0 ; the >>
   3649
   3650                             * ******* SFX *************
   3651
   3652                             * flags for channels 2-3 access
   3653        8206               PSGChannel2SFX             rmb 1,0 ; !0 m>>
   3654        8207               PSGChannel3SFX             rmb 1,0 ; !0 m>>
   3655
   3656                             * command buffers for SFX
   3657        8208               PSGSFXChan2Volume          rmb 1,0 ; the >>
   3658        8209               PSGSFXChan3Volume          rmb 1,0 ; the >>
   3659
   3660                             * fundamental vars for SFX
   3661        820A               PSGSFXStatus               rmb 1,0 ; are >>
   3662        820B               PSGSFXPage                 rmb 1,0 ; Memo>>
   3663        820C               PSGSFXStart                rmb 2,0 ; the >>
   3664        820E               PSGSFXPointer              rmb 2,0 ; the >>
   3665        8210               PSGSFXLoopPoint            rmb 2,0 ; the >>
   3666        8212               PSGSFXSkipFrames           rmb 1,0 ; the >>
   3667        8213               PSGSFXLoopFlag             rmb 1,0 ; the >>
   3668
   3669                             * decompression vars for SFX
   3670        8214               PSGSFXSubstringLen         rmb 1,0 ; leng>>
   3671        8215               PSGSFXSubstringRetAddr     rmb 2,0 ; retu>>
   3672
   3673
   3674
    185                            
    186                           * =======================================>>
    187                           * Level Specific Generated Data
    188                           * IMG and ANI should be in first position>>
    189                           * =======================================>>
   3675                                   INCLUD IMAGEIDX
   3676                           * Generated Code
   3677
   3678        8217               Img_SonicAndTailsIn *@globals
   3679        8217 07 00 00 00           fcb   $07,$00,$00,$00,$88,$4F,$00>>
               821B 88 4F 00 00
               821F 06 00 00 BB
               8223 D9 0A
   3680        8225 CF E3                 fcb   $CF,$E3
   3681        8227               Img_SegaLogo_2 *@globals
   3682        8227 07 00 00 00           fcb   $07,$00,$00,$00,$5C,$39,$03>>
               822B 5C 39 03 00
               822F 06 00 00 D2
               8233 E4 0D
   3683        8235 C1 7E                 fcb   $C1,$7E
   3684        8237               Img_SegaLogo_1 *@globals
   3685        8237 07 00 00 00           fcb   $07,$00,$00,$00,$5C,$38,$03>>
               823B 5C 38 03 00
               823F 06 00 00 D2
               8243 E5 09
   3686        8245 D1 3D                 fcb   $D1,$3D
   3687        8247               Img_SegaTrails_1 *@globals
   3688        8247 07 10 00 00           fcb   $07,$10,$00,$00,$07,$3E,$00>>
               824B 07 3E 00 00
               824F 06 00 00 10
               8253 E0 05
   3689        8255 DD B9 00 06           fcb   $DD,$B9,$00,$06,$00,$00,$E8>>
               8259 00 00 E8 E0
               825D 05 DC 42
   3690        8260               Img_SegaSonic_12 *@globals
   3691        8260 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$45,$00>>
               8264 0F 45 00 06
               8268 00 00 00 F8
               826C E3 08
   3692        826E D7 DD 05 D9           fcb   $D7,$DD,$05,$D9,$94,$0A,$06>>
               8272 94 0A 06 00
               8276 00 00 F8 E3
               827A 09 C9
   3693        827C 78 06 DD 51           fcb   $78,$06,$DD,$51,$0A
               8280 0A
   3694        8281               Img_SegaSonic_23 *@globals
   3695        8281 07 14 00 00           fcb   $07,$14,$00,$00,$06,$1F,$00>>
               8285 06 1F 00 06
               8289 00 00 00 F1
               828D 01 05
   3696        828F D7 47 05 D6           fcb   $D7,$47,$05,$D6,$61,$02,$06>>
               8293 61 02 06 00
               8297 00 00 08 01
               829B 05 D4
   3697        829D 12 05 D3 2C           fcb   $12,$05,$D3,$2C,$02
               82A1 02
   3698        82A2               Img_SegaSonic_13 *@globals
   3699        82A2 07 14 00 00           fcb   $07,$14,$00,$00,$06,$25,$00>>
               82A6 06 25 00 06
               82AA 00 00 00 F1
               82AE 01 06
   3700        82B0 DA 87 05 D2           fcb   $DA,$87,$05,$D2,$1C,$03,$06>>
               82B4 1C 03 06 00
               82B8 00 00 08 01
               82BC 06 D7
   3701        82BE BB 05 D1 0D           fcb   $BB,$05,$D1,$0D,$03
               82C2 03
   3702        82C3               Img_SegaSonic_32 *@globals
   3703        82C3 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$45,$00>>
               82C7 0F 45 00 06
               82CB 00 00 00 F8
               82CF E3 09
   3704        82D1 C1 1C 06 D4           fcb   $C1,$1C,$06,$D4,$CF,$0A,$06>>
               82D5 CF 0A 06 00
               82D9 00 00 F8 E3
               82DD 09 B8
   3705        82DF BC 06 D1 DD           fcb   $BC,$06,$D1,$DD,$0A
               82E3 0A
   3706        82E4               Img_SegaSonic_21 *@globals
   3707        82E4 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               82E8 07 3F 00 06
               82EC 00 00 00 08
               82F0 E5 06
   3708        82F2 CD 3A 05 CF           fcb   $CD,$3A,$05,$CF,$3F,$04,$06>>
               82F6 3F 04 06 00
               82FA 00 00 F0 E5
               82FE 07 DB
   3709        8300 3E 05 CD 70           fcb   $3E,$05,$CD,$70,$04
               8304 04
   3710        8305               Img_SegaSonic_43 *@globals
   3711        8305 07 14 00 00           fcb   $07,$14,$00,$00,$06,$1F,$00>>
               8309 06 1F 00 06
               830D 00 00 00 F1
               8311 01 05
   3712        8313 CB 23 05 CA           fcb   $CB,$23,$05,$CA,$3B,$02,$06>>
               8317 3B 02 06 00
               831B 00 00 08 01
               831F 06 CA
   3713        8321 ED 05 C9 53           fcb   $ED,$05,$C9,$53,$02
               8325 02
   3714        8326               Img_SegaSonic_11 *@globals
   3715        8326 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               832A 07 3F 00 06
               832E 00 00 00 08
               8332 E5 08
   3716        8334 D3 09 05 C7           fcb   $D3,$09,$05,$C7,$59,$04,$06>>
               8338 59 04 06 00
               833C 00 00 F0 E5
               8340 08 CE
   3717        8342 35 05 C5 5F           fcb   $35,$05,$C5,$5F,$04
               8346 04
   3718        8347               Img_SegaSonic_33 *@globals
   3719        8347 07 14 00 00           fcb   $07,$14,$00,$00,$05,$25,$00>>
               834B 05 25 00 06
               834F 00 00 00 F2
               8353 01 05
   3720        8355 C3 29 05 C2           fcb   $C3,$29,$05,$C2,$3A,$02,$06>>
               8359 3A 02 06 00
               835D 00 00 08 01
               8361 05 C0
   3721        8363 04 05 BF 15           fcb   $04,$05,$BF,$15,$02
               8367 02
   3722        8368               Img_SegaSonic_22 *@globals
   3723        8368 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$47,$00>>
               836C 0F 47 00 06
               8370 00 00 00 F8
               8374 E1 09
   3724        8376 B0 95 06 C8           fcb   $B0,$95,$06,$C8,$2E,$0A,$06>>
               837A 2E 0A 06 00
               837E 00 00 F8 E1
               8382 09 A8
   3725        8384 56 06 C5 72           fcb   $56,$06,$C5,$72,$0A
               8388 0A
   3726        8389               Img_SegaSonic_41 *@globals
   3727        8389 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               838D 07 3F 00 06
               8391 00 00 00 08
               8395 E5 07
   3728        8397 D6 C3 05 BD           fcb   $D6,$C3,$05,$BD,$56,$04,$06>>
               839B 56 04 06 00
               839F 00 00 F0 E5
               83A3 07 D2
   3729        83A5 46 05 BB 97           fcb   $46,$05,$BB,$97,$04
               83A9 04
   3730        83AA               Img_SegaSonic_31 *@globals
   3731        83AA 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               83AE 07 3F 00 06
               83B2 00 00 00 08
               83B6 E5 08
   3732        83B8 C9 60 05 B9           fcb   $C9,$60,$05,$B9,$AA,$04,$06>>
               83BC AA 04 06 00
               83C0 00 00 F0 E5
               83C4 08 C4
   3733        83C6 8D 05 B7 BD           fcb   $8D,$05,$B7,$BD,$04
               83CA 04
   3734        83CB               Img_SegaSonic_42 *@globals
   3735        83CB 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$47,$00>>
               83CF 0F 47 00 06
               83D3 00 00 00 F8
               83D7 E1 09
   3736        83D9 A0 00 06 C2           fcb   $A0,$00,$06,$C2,$A5,$0A,$06>>
               83DD A5 0A 06 00
               83E1 00 00 F8 E1
               83E5 0A C7
   3737        83E7 7F 06 BF DA           fcb   $7F,$06,$BF,$DA,$0A
               83EB 0A
   3738        83EC               Img_SegaTrails_6 *@globals
   3739        83EC 00 07 00 00           fcb   $00,$07,$00,$00,$0F,$44,$00>>
               83F0 0F 44 00 00
               83F4 06 00 00 10
               83F8 DE 05
   3740        83FA B6 47                 fcb   $B6,$47
   3741        83FC               Img_SegaTrails_5 *@globals
   3742        83FC 00 07 00 00           fcb   $00,$07,$00,$00,$0F,$44,$00>>
               8400 0F 44 00 00
               8404 06 00 00 00
               8408 DE 05
   3743        840A B4 D1                 fcb   $B4,$D1
   3744        840C               Img_SegaTrails_4 *@globals
   3745        840C 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$44,$00>>
               8410 0F 44 00 00
               8414 06 00 00 E0
               8418 DE 05
   3746        841A B3 5B                 fcb   $B3,$5B
   3747        841C               Img_SegaTrails_3 *@globals
   3748        841C 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$44,$00>>
               8420 0F 44 00 00
               8424 06 00 00 F0
               8428 DE 05
   3749        842A B1 E5                 fcb   $B1,$E5
   3750        842C               Img_SegaTrails_2 *@globals
   3751        842C 07 10 00 00           fcb   $07,$10,$00,$00,$0F,$44,$00>>
               8430 0F 44 00 00
               8434 06 00 00 00
               8438 DE 05
   3752        843A B0 13 00 06           fcb   $B0,$13,$00,$06,$00,$00,$F0>>
               843E 00 00 F0 DE
               8442 05 AE 39
   3753        8445               Img_star_4 *@globals
   3754        8445 07 00 00 00           fcb   $07,$00,$00,$00,$0A,$16,$00>>
               8449 0A 16 00 06
               844D 00 00 00 FB
               8451 F5 05
   3755        8453 AB 98 05 AB           fcb   $AB,$98,$05,$AB,$03,$02
               8457 03 02
   3756        8459               Img_star_3 *@globals
   3757        8459 07 00 00 00           fcb   $07,$00,$00,$00,$06,$0E,$00>>
               845D 06 0E 00 06
               8461 00 00 00 FD
               8465 F9 05
   3758        8467 AA 01 05 A9           fcb   $AA,$01,$05,$A9,$A3,$01
               846B A3 01
   3759        846D               Img_sonicHand *@globals
   3760        846D 07 00 00 00           fcb   $07,$00,$00,$00,$0E,$2A,$00>>
               8471 0E 2A 00 06
               8475 0D 00 00 04
               8479 01 08
   3761        847B BF 38 05 A7           fcb   $BF,$38,$05,$A7,$D1,$05,$06>>
               847F D1 05 06 B9
               8483 4F
   3762        8484               Img_star_2 *@globals
   3763        8484 07 00 00 00           fcb   $07,$00,$00,$00,$02,$06,$00>>
               8488 02 06 00 06
               848C 00 0D 00 FF
               8490 FD 05
   3764        8492 A7 60 05 A7           fcb   $A7,$60,$05,$A7,$32,$01,$05>>
               8496 32 01 05 A6
               849A C3 05 A6 95
               849E 01
   3765        849F               Img_star_1 *@globals
   3766        849F 07 00 00 00           fcb   $07,$00,$00,$00,$02,$04,$00>>
               84A3 02 04 00 06
               84A7 00 0D 00 FF
               84AB FE 05
   3767        84AD A6 42 05 A6           fcb   $A6,$42,$05,$A6,$1E,$01,$05>>
               84B1 1E 01 05 A5
               84B5 CD 05 A5 A9
               84B9 01
   3768        84BA               Img_emblemBack08 *@globals
   3769        84BA 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$27,$00>>
               84BE 1F 27 00 00
               84C2 06 00 00 10
               84C6 DD 07
   3770        84C8 CD BA                 fcb   $CD,$BA
   3771        84CA               Img_emblemBack07 *@globals
   3772        84CA 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               84CE 1F 1F 00 00
               84D2 06 00 00 10
               84D6 BD 06
   3773        84D8 B5 B7                 fcb   $B5,$B7
   3774        84DA               Img_emblemBack09 *@globals
   3775        84DA 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$38,$00>>
               84DE 0F 38 00 00
               84E2 06 00 00 30
               84E6 B3 06
   3776        84E8 B2 4A                 fcb   $B2,$4A
   3777        84EA               Img_emblemBack04 *@globals
   3778        84EA 07 00 00 00           fcb   $07,$00,$00,$00,$24,$09,$00>>
               84EE 24 09 00 00
               84F2 06 00 00 EE
               84F6 B3 05
   3779        84F8 A4 0E                 fcb   $A4,$0E
   3780        84FA               Img_emblemBack03 *@globals
   3781        84FA 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$26,$00>>
               84FE 1F 26 00 00
               8502 06 00 00 D0
               8506 DD 06
   3782        8508 AE 6C                 fcb   $AE,$6C
   3783        850A               Img_emblemBack06 *@globals
   3784        850A 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1C,$00>>
               850E 1F 1C 00 00
               8512 06 00 00 F0
               8516 DD 05
   3785        8518 A2 53                 fcb   $A2,$53
   3786        851A               Img_emblemBack05 *@globals
   3787        851A 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               851E 1F 1F 00 00
               8522 06 00 00 F0
               8526 BD 06
   3788        8528 AA B6                 fcb   $AA,$B6
   3789        852A               Img_tails_5 *@globals
   3790        852A 07 00 00 00           fcb   $07,$00,$00,$00,$2B,$3F,$00>>
               852E 2B 3F 00 06
               8532 0D 00 00 03
               8536 0D 0A
   3791        8538 B8 99 07 C9           fcb   $B8,$99,$07,$C9,$43,$11,$0A>>
               853C 43 11 0A AE
               8540 3E
   3792        8541               Img_tails_4 *@globals
   3793        8541 07 00 00 00           fcb   $07,$00,$00,$00,$2C,$3A,$00>>
               8545 2C 3A 00 06
               8549 00 00 00 03
               854D 12 0A
   3794        854F A0 00 07 C5           fcb   $A0,$00,$07,$C5,$02,$10
               8553 02 10
   3795        8555               Img_tails_3 *@globals
   3796        8555 07 00 00 00           fcb   $07,$00,$00,$00,$2B,$3C,$00>>
               8559 2B 3C 00 06
               855D 00 00 00 04
               8561 11 0B
   3797        8563 CF BB 07 C0           fcb   $CF,$BB,$07,$C0,$97,$0F
               8567 97 0F
   3798        8569               Img_tails_2 *@globals
   3799        8569 07 00 00 00           fcb   $07,$00,$00,$00,$2B,$37,$00>>
               856D 2B 37 00 06
               8571 00 00 00 02
               8575 16 0B
   3800        8577 C3 57 06 A7           fcb   $C3,$57,$06,$A7,$05,$0F
               857B 05 0F
   3801        857D               Img_tails_1 *@globals
   3802        857D 07 00 00 00           fcb   $07,$00,$00,$00,$1B,$3F,$00>>
               8581 1B 3F 00 06
               8585 00 00 00 0C
               8589 11 0B
   3803        858B B7 ED 06 A3           fcb   $B7,$ED,$06,$A3,$99,$0E
               858F 99 0E
   3804        8591               Img_tailsHand *@globals
   3805        8591 07 00 00 00           fcb   $07,$00,$00,$00,$07,$12,$00>>
               8595 07 12 00 06
               8599 0D 00 00 04
               859D 06 06
   3806        859F A2 05 05 A1           fcb   $A2,$05,$05,$A1,$B1,$02,$05>>
               85A3 B1 02 05 A0
               85A7 AE
   3807        85A8               Img_sonic_1 *@globals
   3808        85A8 07 00 00 00           fcb   $07,$00,$00,$00,$23,$42,$00>>
               85AC 23 42 00 06
               85B0 00 00 00 02
               85B4 0E 0B
   3809        85B6 A9 52 07 BC           fcb   $A9,$52,$07,$BC,$68,$14
               85BA 68 14
   3810        85BC               Img_sonic_2 *@globals
   3811        85BC 07 00 00 00           fcb   $07,$00,$00,$00,$24,$53,$00>>
               85C0 24 53 00 06
               85C4 00 00 00 03
               85C8 0D 0C
   3812        85CA CD 86 07 B7           fcb   $CD,$86,$07,$B7,$BB,$17
               85CE BB 17
   3813        85D0               Img_emblemBack02 *@globals
   3814        85D0 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               85D4 1F 1F 00 00
               85D8 06 00 00 D0
               85DC BD 07
   3815        85DE B4 1D                 fcb   $B4,$1D
   3816        85E0               Img_emblemBack01 *@globals
   3817        85E0 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$37,$00>>
               85E4 0F 37 00 00
               85E8 06 00 00 C0
               85EC B3 07
   3818        85EE B0 B9                 fcb   $B0,$B9
   3819        85F0               Img_sonic_5 *@globals
   3820        85F0 07 00 00 00           fcb   $07,$00,$00,$00,$23,$49,$00>>
               85F4 23 49 00 06
               85F8 0D 00 00 0C
               85FC 0A 0C
   3821        85FE BE 6F 07 AC           fcb   $BE,$6F,$07,$AC,$72,$14,$0B>>
               8602 72 14 0B A0
               8606 00
   3822        8607               Img_sonic_3 *@globals
   3823        8607 07 00 00 00           fcb   $07,$00,$00,$00,$24,$46,$00>>
               860B 24 46 00 06
               860F 00 00 00 0B
               8613 0D 0C
   3824        8615 AE DF 08 BA           fcb   $AE,$DF,$08,$BA,$D4,$15
               8619 D4 15
   3825        861B               Img_sonic_4 *@globals
   3826        861B 07 00 00 00           fcb   $07,$00,$00,$00,$23,$49,$00>>
               861F 23 49 00 06
               8623 00 00 00 0C
               8627 0A 0C
   3827        8629 A0 00 07 A8           fcb   $A0,$00,$07,$A8,$3D,$14
               862D 3D 14
   3828        862F               Img_emblemFront07 *@globals
   3829        862F 07 00 00 00           fcb   $07,$00,$00,$00,$12,$12,$00>>
               8633 12 12 00 00
               8637 06 00 00 F7
               863B 3D 06
   3830        863D A0 00                 fcb   $A0,$00
   3831        863F               Img_emblemFront08 *@globals
   3832        863F 07 00 00 00           fcb   $07,$00,$00,$00,$26,$25,$00>>
               8643 26 25 00 00
               8647 06 00 00 10
               864B 1D 08
   3833        864D B6 2B                 fcb   $B6,$2B
   3834        864F               Img_emblemFront05 *@globals
   3835        864F 07 00 00 00           fcb   $07,$00,$00,$00,$26,$25,$00>>
               8653 26 25 00 00
               8657 06 00 00 C9
               865B 1D 08
   3836        865D B1 66                 fcb   $B1,$66
   3837        865F               Img_emblemFront06 *@globals
   3838        865F 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               8663 1F 1F 00 00
               8667 06 00 00 F0
               866B 1D 07
   3839        866D A4 06                 fcb   $A4,$06
   3840        866F               Img_emblemFront03 *@globals
   3841        866F 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               8673 1F 1F 00 00
               8677 06 00 00 F0
               867B FD 07
   3842        867D A0 00                 fcb   $A0,$00
   3843        867F               Img_emblemFront04 *@globals
   3844        867F 07 00 00 00           fcb   $07,$00,$00,$00,$1B,$1F,$00>>
               8683 1B 1F 00 00
               8687 06 00 00 10
               868B FD 08
   3845        868D AE 51                 fcb   $AE,$51
   3846        868F               Img_emblemFront01 *@globals
   3847        868F 07 00 00 00           fcb   $07,$00,$00,$00,$3D,$03,$00>>
               8693 3D 03 00 00
               8697 06 00 00 E1
               869B F9 05
   3848        869D A0 00                 fcb   $A0,$00
   3849        869F               Img_emblemFront02 *@globals
   3850        869F 07 00 00 00           fcb   $07,$00,$00,$00,$1A,$1F,$00>>
               86A3 1A 1F 00 00
               86A7 06 00 00 D5
               86AB FD 08
   3851        86AD AB 5B                 fcb   $AB,$5B
   3852
   3853                                   INCLUD ANIMSCPT
   3854                           * Generated Code
   3855
   3856        86AF 00                    fcb   0
   3857        86B0               Ani_SegaSonic_3 *@globals
   3858        86B0 82A2                  fdb   Img_SegaSonic_13
   3859        86B2 8281                  fdb   Img_SegaSonic_23
   3860        86B4 8347                  fdb   Img_SegaSonic_33
   3861        86B6 8305                  fdb   Img_SegaSonic_43
   3862        86B8 FF                    fcb   _resetAnim
   3863        86B9 00                    fcb   0
   3864        86BA               Ani_SegaSonic_2 *@globals
   3865        86BA 8260                  fdb   Img_SegaSonic_12
   3866        86BC 8368                  fdb   Img_SegaSonic_22
   3867        86BE 82C3                  fdb   Img_SegaSonic_32
   3868        86C0 83CB                  fdb   Img_SegaSonic_42
   3869        86C2 FF                    fcb   _resetAnim
   3870        86C3 00                    fcb   0
   3871        86C4               Ani_SegaSonic_1 *@globals
   3872        86C4 8326                  fdb   Img_SegaSonic_11
   3873        86C6 82E4                  fdb   Img_SegaSonic_21
   3874        86C8 83AA                  fdb   Img_SegaSonic_31
   3875        86CA 8389                  fdb   Img_SegaSonic_41
   3876        86CC FF                    fcb   _resetAnim
   3877        86CD 03                    fcb   3
   3878        86CE               Ani_smallStar *@globals
   3879        86CE 8484                  fdb   Img_star_2
   3880        86D0 849F                  fdb   Img_star_1
   3881        86D2 FF                    fcb   _resetAnim
   3882        86D3 01                    fcb   1
   3883        86D4               Ani_largeStar *@globals
   3884        86D4 849F                  fdb   Img_star_1
   3885        86D6 8484                  fdb   Img_star_2
   3886        86D8 8459                  fdb   Img_star_3
   3887        86DA 8484                  fdb   Img_star_2
   3888        86DC 849F                  fdb   Img_star_1
   3889        86DE FA                    fcb   _nextSubRoutine
   3890        86DF 01                    fcb   1
   3891        86E0               Ani_tails *@globals
   3892        86E0 857D                  fdb   Img_tails_1
   3893        86E2 8569                  fdb   Img_tails_2
   3894        86E4 8555                  fdb   Img_tails_3
   3895        86E6 8541                  fdb   Img_tails_4
   3896        86E8 852A                  fdb   Img_tails_5
   3897        86EA FA                    fcb   _nextSubRoutine
   3898        86EB 01                    fcb   1
   3899        86EC               Ani_sonic *@globals
   3900        86EC 85A8                  fdb   Img_sonic_1
   3901        86EE 85BC                  fdb   Img_sonic_2
   3902        86F0 8607                  fdb   Img_sonic_3
   3903        86F2 861B                  fdb   Img_sonic_4
   3904        86F4 FA                    fcb   _nextSubRoutine
   3905
   3906                                   INCLUD OBJINDEX
   3907                           * Generated Code
   3908
   3909        86F5               Obj_Index_Page
   3910        86F5 00                    fcb   $00
   3911        86F6 05                    fcb   $05
   3912        86F7 06                    fcb   $06
   3913        86F8 05                    fcb   $05
   3914        86F9 08                    fcb   $08
   3915        86FA 00                    fcb   $00
   3916        86FB 00                    fcb   $00
   3917        86FC 00                    fcb   $00
   3918        86FD 00                    fcb   $00
   3919        86FE 00                    fcb   $00
   3920        86FF 00                    fcb   $00
   3921        8700 00                    fcb   $00
   3922        8701 00                    fcb   $00
   3923        8702 00                    fcb   $00
   3924        8703 00                    fcb   $00
   3925        8704 00                    fcb   $00
   3926        8705 00                    fcb   $00
   3927        8706 00                    fcb   $00
   3928        8707 00                    fcb   $00
   3929        8708 00                    fcb   $00
   3930        8709 00                    fcb   $00
   3931        870A 00                    fcb   $00
   3932        870B 00                    fcb   $00
   3933        870C 00                    fcb   $00
   3934        870D 00                    fcb   $00
   3935        870E 00                    fcb   $00
   3936        870F 00                    fcb   $00
   3937        8710 00                    fcb   $00
   3938        8711 00                    fcb   $00
   3939        8712 00                    fcb   $00
   3940        8713 00                    fcb   $00
   3941        8714 00                    fcb   $00
   3942        8715 00                    fcb   $00
   3943        8716 00                    fcb   $00
   3944        8717 00                    fcb   $00
   3945        8718 00                    fcb   $00
   3946        8719 00                    fcb   $00
   3947        871A 00                    fcb   $00
   3948        871B 00                    fcb   $00
   3949        871C 00                    fcb   $00
   3950        871D 00                    fcb   $00
   3951        871E 00                    fcb   $00
   3952        871F 00                    fcb   $00
   3953        8720 00                    fcb   $00
   3954        8721 00                    fcb   $00
   3955        8722 00                    fcb   $00
   3956        8723 00                    fcb   $00
   3957        8724 00                    fcb   $00
   3958        8725 00                    fcb   $00
   3959        8726 00                    fcb   $00
   3960        8727 00                    fcb   $00
   3961        8728 00                    fcb   $00
   3962        8729 00                    fcb   $00
   3963        872A 00                    fcb   $00
   3964        872B 00                    fcb   $00
   3965        872C 00                    fcb   $00
   3966        872D 00                    fcb   $00
   3967        872E 00                    fcb   $00
   3968        872F 00                    fcb   $00
   3969        8730 00                    fcb   $00
   3970        8731 00                    fcb   $00
   3971        8732 00                    fcb   $00
   3972        8733 00                    fcb   $00
   3973        8734 00                    fcb   $00
   3974        8735 00                    fcb   $00
   3975        8736 00                    fcb   $00
   3976        8737 00                    fcb   $00
   3977        8738 00                    fcb   $00
   3978        8739 00                    fcb   $00
   3979        873A 00                    fcb   $00
   3980        873B 00                    fcb   $00
   3981        873C 00                    fcb   $00
   3982        873D 00                    fcb   $00
   3983        873E 00                    fcb   $00
   3984        873F 00                    fcb   $00
   3985        8740 00                    fcb   $00
   3986        8741 00                    fcb   $00
   3987        8742 00                    fcb   $00
   3988        8743 00                    fcb   $00
   3989        8744 00                    fcb   $00
   3990        8745 00                    fcb   $00
   3991        8746 00                    fcb   $00
   3992        8747 00                    fcb   $00
   3993        8748 00                    fcb   $00
   3994        8749 00                    fcb   $00
   3995        874A 00                    fcb   $00
   3996        874B 00                    fcb   $00
   3997        874C 00                    fcb   $00
   3998        874D 00                    fcb   $00
   3999        874E 00                    fcb   $00
   4000        874F 00                    fcb   $00
   4001        8750 00                    fcb   $00
   4002        8751 00                    fcb   $00
   4003        8752 00                    fcb   $00
   4004        8753 00                    fcb   $00
   4005        8754 00                    fcb   $00
   4006        8755 00                    fcb   $00
   4007        8756 00                    fcb   $00
   4008        8757 00                    fcb   $00
   4009        8758 00                    fcb   $00
   4010        8759 00                    fcb   $00
   4011        875A 00                    fcb   $00
   4012        875B 00                    fcb   $00
   4013        875C 00                    fcb   $00
   4014        875D 00                    fcb   $00
   4015        875E 00                    fcb   $00
   4016        875F 00                    fcb   $00
   4017        8760 00                    fcb   $00
   4018        8761 00                    fcb   $00
   4019        8762 00                    fcb   $00
   4020        8763 00                    fcb   $00
   4021        8764 00                    fcb   $00
   4022        8765 00                    fcb   $00
   4023        8766 00                    fcb   $00
   4024        8767 00                    fcb   $00
   4025        8768 00                    fcb   $00
   4026        8769 00                    fcb   $00
   4027        876A 00                    fcb   $00
   4028        876B 00                    fcb   $00
   4029        876C 00                    fcb   $00
   4030        876D 00                    fcb   $00
   4031        876E 00                    fcb   $00
   4032        876F 00                    fcb   $00
   4033        8770 00                    fcb   $00
   4034        8771 00                    fcb   $00
   4035        8772 00                    fcb   $00
   4036        8773 00                    fcb   $00
   4037        8774 00                    fcb   $00
   4038        8775 00                    fcb   $00
   4039        8776 00                    fcb   $00
   4040        8777 00                    fcb   $00
   4041        8778 00                    fcb   $00
   4042        8779 00                    fcb   $00
   4043        877A 00                    fcb   $00
   4044        877B 00                    fcb   $00
   4045        877C 00                    fcb   $00
   4046        877D 00                    fcb   $00
   4047        877E 00                    fcb   $00
   4048        877F 00                    fcb   $00
   4049        8780 00                    fcb   $00
   4050        8781 00                    fcb   $00
   4051        8782 00                    fcb   $00
   4052        8783 00                    fcb   $00
   4053        8784 00                    fcb   $00
   4054        8785 00                    fcb   $00
   4055        8786 00                    fcb   $00
   4056        8787 00                    fcb   $00
   4057        8788 00                    fcb   $00
   4058        8789 00                    fcb   $00
   4059        878A 00                    fcb   $00
   4060        878B 00                    fcb   $00
   4061        878C 00                    fcb   $00
   4062        878D 00                    fcb   $00
   4063        878E 00                    fcb   $00
   4064        878F 00                    fcb   $00
   4065        8790 00                    fcb   $00
   4066        8791 00                    fcb   $00
   4067        8792 00                    fcb   $00
   4068        8793 00                    fcb   $00
   4069        8794 00                    fcb   $00
   4070        8795 00                    fcb   $00
   4071        8796 00                    fcb   $00
   4072        8797 00                    fcb   $00
   4073        8798 00                    fcb   $00
   4074        8799 00                    fcb   $00
   4075        879A 00                    fcb   $00
   4076        879B 00                    fcb   $00
   4077        879C 00                    fcb   $00
   4078        879D 00                    fcb   $00
   4079        879E 00                    fcb   $00
   4080        879F 00                    fcb   $00
   4081        87A0 00                    fcb   $00
   4082        87A1 00                    fcb   $00
   4083        87A2 00                    fcb   $00
   4084        87A3 00                    fcb   $00
   4085        87A4 00                    fcb   $00
   4086        87A5 00                    fcb   $00
   4087        87A6 00                    fcb   $00
   4088        87A7 00                    fcb   $00
   4089        87A8 00                    fcb   $00
   4090        87A9 00                    fcb   $00
   4091        87AA 00                    fcb   $00
   4092        87AB 00                    fcb   $00
   4093        87AC 00                    fcb   $00
   4094        87AD 00                    fcb   $00
   4095        87AE 00                    fcb   $00
   4096        87AF 00                    fcb   $00
   4097        87B0 00                    fcb   $00
   4098        87B1 00                    fcb   $00
   4099        87B2 00                    fcb   $00
   4100        87B3 00                    fcb   $00
   4101        87B4 00                    fcb   $00
   4102        87B5 00                    fcb   $00
   4103        87B6 00                    fcb   $00
   4104        87B7 00                    fcb   $00
   4105        87B8 00                    fcb   $00
   4106        87B9 00                    fcb   $00
   4107        87BA 00                    fcb   $00
   4108        87BB 00                    fcb   $00
   4109        87BC 00                    fcb   $00
   4110        87BD 00                    fcb   $00
   4111        87BE 00                    fcb   $00
   4112        87BF 00                    fcb   $00
   4113        87C0 00                    fcb   $00
   4114        87C1 00                    fcb   $00
   4115        87C2 00                    fcb   $00
   4116        87C3 00                    fcb   $00
   4117        87C4 00                    fcb   $00
   4118        87C5 00                    fcb   $00
   4119        87C6 00                    fcb   $00
   4120        87C7 00                    fcb   $00
   4121        87C8 00                    fcb   $00
   4122        87C9 00                    fcb   $00
   4123        87CA 00                    fcb   $00
   4124        87CB 00                    fcb   $00
   4125        87CC 00                    fcb   $00
   4126        87CD 00                    fcb   $00
   4127        87CE 00                    fcb   $00
   4128        87CF 00                    fcb   $00
   4129        87D0 00                    fcb   $00
   4130        87D1 00                    fcb   $00
   4131        87D2 00                    fcb   $00
   4132        87D3 00                    fcb   $00
   4133        87D4 00                    fcb   $00
   4134        87D5 00                    fcb   $00
   4135        87D6 00                    fcb   $00
   4136        87D7 00                    fcb   $00
   4137        87D8 00                    fcb   $00
   4138        87D9 00                    fcb   $00
   4139        87DA 00                    fcb   $00
   4140        87DB 00                    fcb   $00
   4141        87DC 00                    fcb   $00
   4142        87DD 00                    fcb   $00
   4143        87DE 00                    fcb   $00
   4144        87DF 00                    fcb   $00
   4145        87E0 00                    fcb   $00
   4146        87E1 00                    fcb   $00
   4147        87E2 00                    fcb   $00
   4148        87E3 00                    fcb   $00
   4149        87E4 00                    fcb   $00
   4150        87E5 00                    fcb   $00
   4151        87E6 00                    fcb   $00
   4152        87E7 00                    fcb   $00
   4153        87E8 00                    fcb   $00
   4154        87E9 00                    fcb   $00
   4155        87EA 00                    fcb   $00
   4156        87EB 00                    fcb   $00
   4157        87EC 00                    fcb   $00
   4158        87ED 00                    fcb   $00
   4159        87EE 00                    fcb   $00
   4160        87EF 00                    fcb   $00
   4161        87F0 00                    fcb   $00
   4162        87F1 00                    fcb   $00
   4163        87F2 00                    fcb   $00
   4164        87F3 00                    fcb   $00
   4165        87F4 00                    fcb   $00
   4166        87F5               Obj_Index_Address
   4167        87F5 00 00                 fcb   $00,$00
   4168        87F7 DF 30                 fcb   $DF,$30
   4169        87F9 BC F6                 fcb   $BC,$F6
   4170        87FB AD 4B                 fcb   $AD,$4B
   4171        87FD A0 00                 fcb   $A0,$00
   4172        87FF 00 00                 fcb   $00,$00
   4173        8801 00 00                 fcb   $00,$00
   4174        8803 00 00                 fcb   $00,$00
   4175        8805 00 00                 fcb   $00,$00
   4176        8807 00 00                 fcb   $00,$00
   4177        8809 00 00                 fcb   $00,$00
   4178        880B 00 00                 fcb   $00,$00
   4179        880D 00 00                 fcb   $00,$00
   4180        880F 00 00                 fcb   $00,$00
   4181        8811 00 00                 fcb   $00,$00
   4182        8813 00 00                 fcb   $00,$00
   4183        8815 00 00                 fcb   $00,$00
   4184        8817 00 00                 fcb   $00,$00
   4185        8819 00 00                 fcb   $00,$00
   4186        881B 00 00                 fcb   $00,$00
   4187        881D 00 00                 fcb   $00,$00
   4188        881F 00 00                 fcb   $00,$00
   4189        8821 00 00                 fcb   $00,$00
   4190        8823 00 00                 fcb   $00,$00
   4191        8825 00 00                 fcb   $00,$00
   4192        8827 00 00                 fcb   $00,$00
   4193        8829 00 00                 fcb   $00,$00
   4194        882B 00 00                 fcb   $00,$00
   4195        882D 00 00                 fcb   $00,$00
   4196        882F 00 00                 fcb   $00,$00
   4197        8831 00 00                 fcb   $00,$00
   4198        8833 00 00                 fcb   $00,$00
   4199        8835 00 00                 fcb   $00,$00
   4200        8837 00 00                 fcb   $00,$00
   4201        8839 00 00                 fcb   $00,$00
   4202        883B 00 00                 fcb   $00,$00
   4203        883D 00 00                 fcb   $00,$00
   4204        883F 00 00                 fcb   $00,$00
   4205        8841 00 00                 fcb   $00,$00
   4206        8843 00 00                 fcb   $00,$00
   4207        8845 00 00                 fcb   $00,$00
   4208        8847 00 00                 fcb   $00,$00
   4209        8849 00 00                 fcb   $00,$00
   4210        884B 00 00                 fcb   $00,$00
   4211        884D 00 00                 fcb   $00,$00
   4212        884F 00 00                 fcb   $00,$00
   4213        8851 00 00                 fcb   $00,$00
   4214        8853 00 00                 fcb   $00,$00
   4215        8855 00 00                 fcb   $00,$00
   4216        8857 00 00                 fcb   $00,$00
   4217        8859 00 00                 fcb   $00,$00
   4218        885B 00 00                 fcb   $00,$00
   4219        885D 00 00                 fcb   $00,$00
   4220        885F 00 00                 fcb   $00,$00
   4221        8861 00 00                 fcb   $00,$00
   4222        8863 00 00                 fcb   $00,$00
   4223        8865 00 00                 fcb   $00,$00
   4224        8867 00 00                 fcb   $00,$00
   4225        8869 00 00                 fcb   $00,$00
   4226        886B 00 00                 fcb   $00,$00
   4227        886D 00 00                 fcb   $00,$00
   4228        886F 00 00                 fcb   $00,$00
   4229        8871 00 00                 fcb   $00,$00
   4230        8873 00 00                 fcb   $00,$00
   4231        8875 00 00                 fcb   $00,$00
   4232        8877 00 00                 fcb   $00,$00
   4233        8879 00 00                 fcb   $00,$00
   4234        887B 00 00                 fcb   $00,$00
   4235        887D 00 00                 fcb   $00,$00
   4236        887F 00 00                 fcb   $00,$00
   4237        8881 00 00                 fcb   $00,$00
   4238        8883 00 00                 fcb   $00,$00
   4239        8885 00 00                 fcb   $00,$00
   4240        8887 00 00                 fcb   $00,$00
   4241        8889 00 00                 fcb   $00,$00
   4242        888B 00 00                 fcb   $00,$00
   4243        888D 00 00                 fcb   $00,$00
   4244        888F 00 00                 fcb   $00,$00
   4245        8891 00 00                 fcb   $00,$00
   4246        8893 00 00                 fcb   $00,$00
   4247        8895 00 00                 fcb   $00,$00
   4248        8897 00 00                 fcb   $00,$00
   4249        8899 00 00                 fcb   $00,$00
   4250        889B 00 00                 fcb   $00,$00
   4251        889D 00 00                 fcb   $00,$00
   4252        889F 00 00                 fcb   $00,$00
   4253        88A1 00 00                 fcb   $00,$00
   4254        88A3 00 00                 fcb   $00,$00
   4255        88A5 00 00                 fcb   $00,$00
   4256        88A7 00 00                 fcb   $00,$00
   4257        88A9 00 00                 fcb   $00,$00
   4258        88AB 00 00                 fcb   $00,$00
   4259        88AD 00 00                 fcb   $00,$00
   4260        88AF 00 00                 fcb   $00,$00
   4261        88B1 00 00                 fcb   $00,$00
   4262        88B3 00 00                 fcb   $00,$00
   4263        88B5 00 00                 fcb   $00,$00
   4264        88B7 00 00                 fcb   $00,$00
   4265        88B9 00 00                 fcb   $00,$00
   4266        88BB 00 00                 fcb   $00,$00
   4267        88BD 00 00                 fcb   $00,$00
   4268        88BF 00 00                 fcb   $00,$00
   4269        88C1 00 00                 fcb   $00,$00
   4270        88C3 00 00                 fcb   $00,$00
   4271        88C5 00 00                 fcb   $00,$00
   4272        88C7 00 00                 fcb   $00,$00
   4273        88C9 00 00                 fcb   $00,$00
   4274        88CB 00 00                 fcb   $00,$00
   4275        88CD 00 00                 fcb   $00,$00
   4276        88CF 00 00                 fcb   $00,$00
   4277        88D1 00 00                 fcb   $00,$00
   4278        88D3 00 00                 fcb   $00,$00
   4279        88D5 00 00                 fcb   $00,$00
   4280        88D7 00 00                 fcb   $00,$00
   4281        88D9 00 00                 fcb   $00,$00
   4282        88DB 00 00                 fcb   $00,$00
   4283        88DD 00 00                 fcb   $00,$00
   4284        88DF 00 00                 fcb   $00,$00
   4285        88E1 00 00                 fcb   $00,$00
   4286        88E3 00 00                 fcb   $00,$00
   4287        88E5 00 00                 fcb   $00,$00
   4288        88E7 00 00                 fcb   $00,$00
   4289        88E9 00 00                 fcb   $00,$00
   4290        88EB 00 00                 fcb   $00,$00
   4291        88ED 00 00                 fcb   $00,$00
   4292        88EF 00 00                 fcb   $00,$00
   4293        88F1 00 00                 fcb   $00,$00
   4294        88F3 00 00                 fcb   $00,$00
   4295        88F5 00 00                 fcb   $00,$00
   4296        88F7 00 00                 fcb   $00,$00
   4297        88F9 00 00                 fcb   $00,$00
   4298        88FB 00 00                 fcb   $00,$00
   4299        88FD 00 00                 fcb   $00,$00
   4300        88FF 00 00                 fcb   $00,$00
   4301        8901 00 00                 fcb   $00,$00
   4302        8903 00 00                 fcb   $00,$00
   4303        8905 00 00                 fcb   $00,$00
   4304        8907 00 00                 fcb   $00,$00
   4305        8909 00 00                 fcb   $00,$00
   4306        890B 00 00                 fcb   $00,$00
   4307        890D 00 00                 fcb   $00,$00
   4308        890F 00 00                 fcb   $00,$00
   4309        8911 00 00                 fcb   $00,$00
   4310        8913 00 00                 fcb   $00,$00
   4311        8915 00 00                 fcb   $00,$00
   4312        8917 00 00                 fcb   $00,$00
   4313        8919 00 00                 fcb   $00,$00
   4314        891B 00 00                 fcb   $00,$00
   4315        891D 00 00                 fcb   $00,$00
   4316        891F 00 00                 fcb   $00,$00
   4317        8921 00 00                 fcb   $00,$00
   4318        8923 00 00                 fcb   $00,$00
   4319        8925 00 00                 fcb   $00,$00
   4320        8927 00 00                 fcb   $00,$00
   4321        8929 00 00                 fcb   $00,$00
   4322        892B 00 00                 fcb   $00,$00
   4323        892D 00 00                 fcb   $00,$00
   4324        892F 00 00                 fcb   $00,$00
   4325        8931 00 00                 fcb   $00,$00
   4326        8933 00 00                 fcb   $00,$00
   4327        8935 00 00                 fcb   $00,$00
   4328        8937 00 00                 fcb   $00,$00
   4329        8939 00 00                 fcb   $00,$00
   4330        893B 00 00                 fcb   $00,$00
   4331        893D 00 00                 fcb   $00,$00
   4332        893F 00 00                 fcb   $00,$00
   4333        8941 00 00                 fcb   $00,$00
   4334        8943 00 00                 fcb   $00,$00
   4335        8945 00 00                 fcb   $00,$00
   4336        8947 00 00                 fcb   $00,$00
   4337        8949 00 00                 fcb   $00,$00
   4338        894B 00 00                 fcb   $00,$00
   4339        894D 00 00                 fcb   $00,$00
   4340        894F 00 00                 fcb   $00,$00
   4341        8951 00 00                 fcb   $00,$00
   4342        8953 00 00                 fcb   $00,$00
   4343        8955 00 00                 fcb   $00,$00
   4344        8957 00 00                 fcb   $00,$00
   4345        8959 00 00                 fcb   $00,$00
   4346        895B 00 00                 fcb   $00,$00
   4347        895D 00 00                 fcb   $00,$00
   4348        895F 00 00                 fcb   $00,$00
   4349        8961 00 00                 fcb   $00,$00
   4350        8963 00 00                 fcb   $00,$00
   4351        8965 00 00                 fcb   $00,$00
   4352        8967 00 00                 fcb   $00,$00
   4353        8969 00 00                 fcb   $00,$00
   4354        896B 00 00                 fcb   $00,$00
   4355        896D 00 00                 fcb   $00,$00
   4356        896F 00 00                 fcb   $00,$00
   4357        8971 00 00                 fcb   $00,$00
   4358        8973 00 00                 fcb   $00,$00
   4359        8975 00 00                 fcb   $00,$00
   4360        8977 00 00                 fcb   $00,$00
   4361        8979 00 00                 fcb   $00,$00
   4362        897B 00 00                 fcb   $00,$00
   4363        897D 00 00                 fcb   $00,$00
   4364        897F 00 00                 fcb   $00,$00
   4365        8981 00 00                 fcb   $00,$00
   4366        8983 00 00                 fcb   $00,$00
   4367        8985 00 00                 fcb   $00,$00
   4368        8987 00 00                 fcb   $00,$00
   4369        8989 00 00                 fcb   $00,$00
   4370        898B 00 00                 fcb   $00,$00
   4371        898D 00 00                 fcb   $00,$00
   4372        898F 00 00                 fcb   $00,$00
   4373        8991 00 00                 fcb   $00,$00
   4374        8993 00 00                 fcb   $00,$00
   4375        8995 00 00                 fcb   $00,$00
   4376        8997 00 00                 fcb   $00,$00
   4377        8999 00 00                 fcb   $00,$00
   4378        899B 00 00                 fcb   $00,$00
   4379        899D 00 00                 fcb   $00,$00
   4380        899F 00 00                 fcb   $00,$00
   4381        89A1 00 00                 fcb   $00,$00
   4382        89A3 00 00                 fcb   $00,$00
   4383        89A5 00 00                 fcb   $00,$00
   4384        89A7 00 00                 fcb   $00,$00
   4385        89A9 00 00                 fcb   $00,$00
   4386        89AB 00 00                 fcb   $00,$00
   4387        89AD 00 00                 fcb   $00,$00
   4388        89AF 00 00                 fcb   $00,$00
   4389        89B1 00 00                 fcb   $00,$00
   4390        89B3 00 00                 fcb   $00,$00
   4391        89B5 00 00                 fcb   $00,$00
   4392        89B7 00 00                 fcb   $00,$00
   4393        89B9 00 00                 fcb   $00,$00
   4394        89BB 00 00                 fcb   $00,$00
   4395        89BD 00 00                 fcb   $00,$00
   4396        89BF 00 00                 fcb   $00,$00
   4397        89C1 00 00                 fcb   $00,$00
   4398        89C3 00 00                 fcb   $00,$00
   4399        89C5 00 00                 fcb   $00,$00
   4400        89C7 00 00                 fcb   $00,$00
   4401        89C9 00 00                 fcb   $00,$00
   4402        89CB 00 00                 fcb   $00,$00
   4403        89CD 00 00                 fcb   $00,$00
   4404        89CF 00 00                 fcb   $00,$00
   4405        89D1 00 00                 fcb   $00,$00
   4406        89D3 00 00                 fcb   $00,$00
   4407        89D5 00 00                 fcb   $00,$00
   4408        89D7 00 00                 fcb   $00,$00
   4409        89D9 00 00                 fcb   $00,$00
   4410        89DB 00 00                 fcb   $00,$00
   4411        89DD 00 00                 fcb   $00,$00
   4412        89DF 00 00                 fcb   $00,$00
   4413        89E1 00 00                 fcb   $00,$00
   4414        89E3 00 00                 fcb   $00,$00
   4415        89E5 00 00                 fcb   $00,$00
   4416        89E7 00 00                 fcb   $00,$00
   4417        89E9 00 00                 fcb   $00,$00
   4418        89EB 00 00                 fcb   $00,$00
   4419        89ED 00 00                 fcb   $00,$00
   4420        89EF 00 00                 fcb   $00,$00
   4421        89F1 00 00                 fcb   $00,$00
   4422        89F3 00 00                 fcb   $00,$00
   4423
   4424                                   INCLUD SOUNDIDX * A rendre dynami>>
   4425                           * Generated Code
   4426
   4427        89F5               Pcm_SEGA *@globals
   4428        89F5 0E A0 00 DF           fcb   $0E,$A0,$00,$DF,$F6
               89F9 F6
   4429        89FA 0D A0 00 C1           fcb   $0D,$A0,$00,$C1,$7E
               89FE 7E
   4430        89FF FF                    fcb   $FF
   4431        8A00               Psg_TitleScreen *@globals
   4432        8A00 08 A5 53 AB           fcb   $08,$A5,$53,$AB,$5B
               8A04 5B
   4433        8A05 FF                    fcb   $FF
   4434
   4435                                   INCLUD LOADACT
   4436                           * Generated Code
   4437
   4438        8A06               LoadAct
   4439  3     8A06 8E   0000             ldx   #$0000                   * >>
   4440  2     8A09 C6   62               ldb   #$62                     * >>
   4441  5     8A0B F7   E7E6             stb   $E7E6                    * >>
   4442  8     8A0E BD   7CD7             jsr   ClearCartMem
   4443  5     8A11 B6   E7DD             lda   $E7DD                    * >>
   4444  2     8A14 84   F0               anda  #$F0
   4445  2     8A16 8B   00               adda  #$00                     * >>
   4446  5     8A18 B7   E7DD             sta   $E7DD
   4447  2     8A1B 84   0F               anda  #$0F
   4448  2     8A1D 8B   80               adda  #$80
   4449  5     8A1F B7   7183             sta   screen_border_color+1    * >>
   4450  8     8A22 BD   7173             jsr   WaitVBL
   4451  3     8A25 8E   0000             ldx   #$0000                   * >>
   4452  2     8A28 C6   63               ldb   #$63                     * >>
   4453  5     8A2A F7   E7E6             stb   $E7E6                    * >>
   4454  8     8A2D BD   7CD7             jsr   ClearCartMem
   4455  3     8A30 CC   8A3A             ldd   #Pal_SEGA
   4456  6     8A33 FD   7D12             std   Cur_palette
   4457  7     8A36 7F   7D11             clr   Refresh_palette
   4458  5     8A39 39                    rts
   4459
    195                            
    196
   4460                                   INCLUD PALETTE
   4461                           * Generated Code
   4462
   4463        8A3A               Pal_SEGA * @globals
   4464        8A3A FF0F                  fdb   $ff0f
   4465        8A3C 4404                  fdb   $4404
   4466        8A3E 1101                  fdb   $1101
   4467        8A40 0000                  fdb   $0000
   4468        8A42 0300                  fdb   $0300
   4469        8A44 0F00                  fdb   $0f00
   4470        8A46 5E03                  fdb   $5e03
   4471        8A48 2501                  fdb   $2501
   4472        8A4A B70B                  fdb   $b70b
   4473        8A4C 740B                  fdb   $740b
   4474        8A4E 410B                  fdb   $410b
   4475        8A50 100B                  fdb   $100b
   4476        8A52 110C                  fdb   $110c
   4477        8A54 0008                  fdb   $0008
   4478        8A56 100B                  fdb   $100b
   4479        8A58 100B                  fdb   $100b
   4480
   4481        8A5A               Pal_TitleScreen * @globals
   4482        8A5A FF0F                  fdb   $ff0f
   4483        8A5C 0000                  fdb   $0000
   4484        8A5E 0800                  fdb   $0800
   4485        8A60 0200                  fdb   $0200
   4486        8A62 5D03                  fdb   $5d03
   4487        8A64 1600                  fdb   $1600
   4488        8A66 4F00                  fdb   $4f00
   4489        8A68 2700                  fdb   $2700
   4490        8A6A FF00                  fdb   $ff00
   4491        8A6C F300                  fdb   $f300
   4492        8A6E F80F                  fdb   $f80f
   4493        8A70 640E                  fdb   $640e
   4494        8A72 2205                  fdb   $2205
   4495        8A74 000E                  fdb   $000e
   4496        8A76 0100                  fdb   $0100
   4497        8A78 0000                  fdb   $0000
   4498
   4499        8A7A               Pal_SEGAMid * @globals
   4500        8A7A FF0F                  fdb   $ff0f
   4501        8A7C 4404                  fdb   $4404
   4502        8A7E 1101                  fdb   $1101
   4503        8A80 0000                  fdb   $0000
   4504        8A82 0300                  fdb   $0300
   4505        8A84 0F00                  fdb   $0f00
   4506        8A86 5E03                  fdb   $5e03
   4507        8A88 2501                  fdb   $2501
   4508        8A8A B70B                  fdb   $b70b
   4509        8A8C 740B                  fdb   $740b
   4510        8A8E 410B                  fdb   $410b
   4511        8A90 100B                  fdb   $100b
   4512        8A92 110C                  fdb   $110c
   4513        8A94 0008                  fdb   $0008
   4514        8A96 FF0F                  fdb   $ff0f
   4515        8A98 100B                  fdb   $100b
   4516
   4517        8A9A               Pal_SonicAndTailsIn * @globals
   4518        8A9A 0000                  fdb   $0000
   4519        8A9C FF0F                  fdb   $ff0f
   4520        8A9E 0000                  fdb   $0000
   4521        8AA0 0000                  fdb   $0000
   4522        8AA2 0000                  fdb   $0000
   4523        8AA4 0000                  fdb   $0000
   4524        8AA6 0000                  fdb   $0000
   4525        8AA8 0000                  fdb   $0000
   4526        8AAA 0000                  fdb   $0000
   4527        8AAC 0000                  fdb   $0000
   4528        8AAE 0000                  fdb   $0000
   4529        8AB0 0000                  fdb   $0000
   4530        8AB2 0000                  fdb   $0000
   4531        8AB4 0000                  fdb   $0000
   4532        8AB6 FF0F                  fdb   $ff0f
   4533        8AB8 FF0F                  fdb   $ff0f
   4534
   4535        8ABA               Pal_SEGAEnd * @globals
   4536        8ABA FF0F                  fdb   $ff0f
   4537        8ABC 4404                  fdb   $4404
   4538        8ABE 1101                  fdb   $1101
   4539        8AC0 0000                  fdb   $0000
   4540        8AC2 0300                  fdb   $0300
   4541        8AC4 0F00                  fdb   $0f00
   4542        8AC6 5E03                  fdb   $5e03
   4543        8AC8 2501                  fdb   $2501
   4544        8ACA B70B                  fdb   $b70b
   4545        8ACC 740B                  fdb   $740b
   4546        8ACE 410B                  fdb   $410b
   4547        8AD0 100B                  fdb   $100b
   4548        8AD2 110C                  fdb   $110c
   4549        8AD4 0008                  fdb   $0008
   4550        8AD6 FF0F                  fdb   $ff0f
   4551        8AD8 FF0F                  fdb   $ff0f
    198
    199

000000 Total Errors

000689 Total Symbols
     1x          Label 732D am_ObjectMove_01
     1x          Label 7343 am_ObjectMove_02
     3x          Label 71F5 am_RunNextObject
     2x          Label 718A am_SwapVideoPage
     2x          Equ   0004 anim
     0x          Label 729A AnimateSprite
     1x          Label 72C9 Anim_dyn
     1x          Label 731C Anim_End
     1x          Label 7311 Anim_End_FA
     1x          Label 7306 Anim_End_FB
     1x          Label 72F4 Anim_End_FC
     1x          Label 72EC Anim_End_FD
     1x          Label 72DB Anim_End_FE
     1x          Label 72E3 Anim_End_FE_dyn
     1x          Label 72D0 Anim_End_FF
     8x          Equ   0008 anim_frame
     4x          Equ   0009 anim_frame_duration
     2x          Label 72BB Anim_Next
     1x          Label 72A8 Anim_Run
     1x          Label 72CF Anim_Wait
     0x          Label 86D4 Ani_largeStar
     0x          Label 86C4 Ani_SegaSonic_1
     0x          Label 86BA Ani_SegaSonic_2
     0x          Label 86B0 Ani_SegaSonic_3
     0x          Label 86CE Ani_smallStar
     0x          Label 86EC Ani_sonic
     0x          Label 86E0 Ani_tails
     0x          Label 7BF2 BBA0
     1x          Label 7BFB BBA1
     1x          Label 7C1C BBA_DivideCell
     1x          Label 7C21 BBA_dyn
     1x          Label 7C11 BBA_FitCell
     2x          Label 7C02 BBA_Next
     2x          Label 7C3C BBA_rts
     0x          Label 7C4B BBF0
     1x          Label 7C61 BBF1
     1x          Label 7C8A BBF_AddNewEntry
     3x          Label 7C8D BBF_AddNewEntryAtEnd
     1x          Label 7CCA BBF_ExpandAtEnd
     1x          Label 7CA9 BBF_ExpandAtStart
     1x          Label 7C90 BBF_FindFreeSlot
     0x          Label 7CB4 BBF_Join
     2x          Label 7C75 BBF_Next
     4x          Label 7CD5 BBF_rts
     1x          Label 7C98 BBF_SetNewEntry
     2x          Label 7C9F BBF_SetNewEntryNextentry
     3x          Label 7CA4 BBF_SetNewEntryPrevLink
     2x          Label 7BEB BgBufferAlloc
     2x          Label 7C3E BgBufferFree
     0x          Label 7D34 Black_palette
     0x          Equ   0009 buf_bgdata
     2x          Equ   0024 buf_Lst_Priority_Unset
     1x          Equ   0007 buf_prev_mapping_frame
     5x          Equ   0011 buf_prev_render_flags
     0x          Equ   000D buf_prev_x1_pixel
     0x          Equ   000F buf_prev_x2_pixel
     0x          Equ   000D buf_prev_xy1_pixel
     0x          Equ   000F buf_prev_xy2_pixel
     1x          Equ   000B buf_prev_xy_pixel
     0x          Equ   000B buf_prev_x_pixel
     0x          Equ   000E buf_prev_y1_pixel
     0x          Equ   0010 buf_prev_y2_pixel
     0x          Equ   000C buf_prev_y_pixel
     5x          Equ   0000 buf_priority
     4x          Equ   0003 buf_priority_next_obj
     1x          Equ   0001 buf_priority_prev_obj
    33x          Equ   0000 buf_Tbl_Priority_First_Entry
    18x          Equ   0012 buf_Tbl_Priority_Last_Entry
     0x          Equ   0040 c1_button_A_mask
     0x          Equ   0002 c1_button_down_mask
     0x          Equ   0004 c1_button_left_mask
     0x          Equ   0008 c1_button_right_mask
     0x          Equ   0001 c1_button_up_mask
     0x          Equ   0080 c2_button_A_mask
     0x          Equ   0020 c2_button_down_mask
     0x          Equ   0040 c2_button_left_mask
     0x          Equ   0080 c2_button_right_mask
     0x          Equ   0010 c2_button_up_mask
     7x          Equ   0003 cell_end
     1x          Label 7C38 cell_end_return
     5x          Equ   0040 cell_size
     5x          Equ   0001 cell_start
     4x          Equ   6000 cell_start_adr
     1x          Label 7460 CheckSpritesRefresh
     2x          Label 7CD7 ClearCartMem
     1x          Label 7CE9 ClearCartMem_2
     1x          Label 7D05 ClearCartMem_3
     4x          Label 7427 ClearObj
     1x          Label 744E CLO_1
     0x          Label 7458 CLO_2
     0x          Label 7550 CSR_CheckDelHide
     3x          Label 773A CSR_CheckDraw
     2x          Label 765D CSR_CheckErase
     1x          Label 767D CSR_CheckErase_InRange
     0x          Label 757B CSR_CheckPlayFieldCoord
     0x          Label 7556 CSR_CheckRefresh
     1x          Label 75AB CSR_CheckVerticalPosition
     2x          Label 75DD CSR_CVP_Continue
     1x          Label 7581 CSR_DoNotDisplaySprite
     1x          Label 7637 CSR_DontCheckXFrontier
     1x          Label 764B CSR_DontCheckXFrontier_end
     3x          Label 75A4 CSR_NextObject
     1x          Label 75C7 CSR_NoDefinedFrame
     1x          Label 75D5 CSR_NoFrameFound
     1x          Label 75BB CSR_NoOverlay
     1x          Label 74D1 CSR_P1B0
     1x          Label 753F CSR_P1B1
     1x          Label 74C4 CSR_P2B0
     1x          Label 7532 CSR_P2B1
     1x          Label 74B7 CSR_P3B0
     1x          Label 7525 CSR_P3B1
     1x          Label 74AA CSR_P4B0
     1x          Label 7518 CSR_P4B1
     1x          Label 749D CSR_P5B0
     1x          Label 750B CSR_P5B1
     1x          Label 7490 CSR_P6B0
     1x          Label 74FE CSR_P6B1
     1x          Label 7483 CSR_P7B0
     1x          Label 74F1 CSR_P7B1
     0x          Label 7476 CSR_P8B0
     0x          Label 74E4 CSR_P8B1
    21x          Label 754D CSR_ProcessEachPriorityLevel
     1x          Label 74DE CSR_rtsB0
     1x          Label 754C CSR_rtsB1
     1x          Label 776A CSR_SDT1
     1x          Label 7771 CSR_SDT2
     1x          Label 7776 CSR_SDT3
     0x          Label 7471 CSR_SetBuffer0
     1x          Label 74DF CSR_SetBuffer1
     3x          Label 7791 CSR_SetDrawFalse
     0x          Label 775C CSR_SetDrawTrue
     1x          Label 7789 CSR_SetEraseDrawFalse
     2x          Label 7732 CSR_SetEraseFalse
     7x          Label 769D CSR_SetEraseTrue
     2x          Label 777C CSR_SetHide
    10x          Label 7655 CSR_SetOutOfRange
     0x          Label 7460 CSR_Start
     0x          Label 7711 CSR_SubDrawCheckCollision
     4x          Label 7709 CSR_SubDrawSearch
     2x          Label 7706 CSR_SubDrawSpriteSearchInit
     0x          Label 76BE CSR_SubEraseCheckCollisionB0
     0x          Label 76E6 CSR_SubEraseCheckCollisionB1
     4x          Label 76B6 CSR_SubEraseSearchB0
     5x          Label 76DE CSR_SubEraseSearchB1
     1x          Label 76AE CSR_SubEraseSpriteSearchInit
     0x          Label 755F CSR_UpdSpriteImageBasedOnMirror
     2x          Label 7D12 Cur_palette
    19x          Label 745A cur_priority
     4x          Label 745E cur_ptr_sub_obj_draw
     9x          Label 745C cur_ptr_sub_obj_erase
     0x          Label 7365 DeleteObject
     0x          Label 735F DeleteObject_x
     1x          Label 7221 DisplaySprite
     0x          Label 721B DisplaySprite_x
     0x          Equ   604F dk_destination
     0x          Equ   6049 dk_lecteur
     0x          Equ   604A dk_piste
     0x          Equ   604B dk_pisteL
     0x          Equ   604C dk_secteur
     1x          Label 73C9 DOB_ChainNextB0
     1x          Label 7413 DOB_ChainNextB1
     1x          Label 73A9 DOB_ChainPrevB0
     1x          Label 73EB DOB_ChainPrevB1
     1x          Label 73B3 DOB_CheckPrioNextB0
     1x          Label 73F5 DOB_CheckPrioNextB1
     1x          Label 7393 DOB_RemoveFromDPSB0
     1x          Label 73D5 DOB_RemoveFromDPSB1
     2x          Label 7411 DOB_rts
     1x          Label 7367 DOB_Start
     2x          Label 737C DOB_TestOnscreen1
     0x          Label 736C DOB_ToDeleteFlag0
     0x          Label 7381 DOB_ToDeleteFlag1
     0x          Label 7372 DOB_Unset0
     0x          Label 7387 DOB_Unset1
     0x          Label 71AC Dpad_Held
     0x          Label 71AE Dpad_Press
     2x          Label 71AA Dpad_Read
    27x          Label 64E4 DPS_buffer_0
    25x          Label 654A DPS_buffer_1
     1x          Label 79F8 DrawSprites
     4x          Equ   0001 draw_routine
     1x          Label 7AF8 DRS_DrawWithoutBackupB0
     1x          Label 7BC7 DRS_DrawWithoutBackupB1
     1x          Label 7B2F DRS_dyn1
     1x          Label 7B41 DRS_dyn2
     3x          Label 7AC3 DRS_dyn3B0
     3x          Label 7B92 DRS_dyn3B1
     3x          Label 7AF0 DRS_NextObjectB0
     3x          Label 7BBF DRS_NextObjectB1
     1x          Label 7AEB DRS_NoOverlayB0
     1x          Label 7BBA DRS_NoOverlayB1
     1x          Label 7A35 DRS_P1B0
     1x          Label 7A76 DRS_P1B1
     1x          Label 7A2D DRS_P2B0
     1x          Label 7A6E DRS_P2B1
     1x          Label 7A25 DRS_P3B0
     1x          Label 7A66 DRS_P3B1
     1x          Label 7A1D DRS_P4B0
     1x          Label 7A5E DRS_P4B1
     1x          Label 7A15 DRS_P5B0
     1x          Label 7A56 DRS_P5B1
     1x          Label 7A0D DRS_P6B0
     1x          Label 7A4E DRS_P6B1
     1x          Label 7A05 DRS_P7B0
     1x          Label 7A46 DRS_P7B1
     0x          Label 79FD DRS_P8B0
     1x          Label 7A3E DRS_P8B1
     9x          Label 7A7F DRS_ProcessEachPriorityLevelB0
     9x          Label 7B4E DRS_ProcessEachPriorityLevelB1
     1x          Label 7A3D DRS_rtsB0
     1x          Label 7A7E DRS_rtsB1
     0x          Label 79F8 DRS_Start
     1x          Label 7AED DRS_UpdateRenderFlagB0
     1x          Label 7BBC DRS_UpdateRenderFlagB1
     4x          Label 7B1C DRS_XYToAddress
     1x          Label 7B23 DRS_XYToAddressPositive
     0x          Label 7B29 DRS_XYToAddressRAM1First
     1x          Label 7B3B DRS_XYToAddressRAM2First
     0x          Label 7252 DSP_addFirstNode
     1x          Label 7262 DSP_addToExistingNode
     1x          Label 723E DSP_BufferPositionned
     1x          Label 7287 DSP_ChangePriority
     1x          Label 724B DSP_CheckLastEntry
     0x          Label 7248 DSP_InitPriority
     1x          Label 7277 DSP_LinkBuffer1
     1x          Label 7283 DSP_LinkCurWithPrev
     1x          Label 7260 DSP_rts
     0x          Label 722E DSP_SetBuffer0
     1x          Label 7237 DSP_SetBuffer1
     1x          Label 7223 DSP_Start
     0x          Label 66E4 Dynamic_Object_RAM
     2x          Label 7062 Dynamic_Object_RAM_End
     1x          Label 7D14 Dyn_palette
     3x          Equ   0007 entry_size
     1x          Label 77A0 EraseSprites
     4x          Equ   0006 erase_nb_cell
     2x          Equ   0004 erase_routine
     0x          Label 7897 ESP_CallEraseRoutineB0
     1x          Label 78AA ESP_CallEraseRoutineB0_00
     0x          Label 78E8 ESP_CallEraseRoutineB1
     1x          Label 78FB ESP_CallEraseRoutineB1_00
     1x          Label 788C ESP_CheckEraseB0
     1x          Label 78DD ESP_CheckEraseB1
     8x          Label 787A ESP_CheckPriorityB0
     8x          Label 78CB ESP_CheckPriorityB1
     0x          Label 78B7 ESP_FreeEraseBufferB0
     0x          Label 7908 ESP_FreeEraseBufferB1
     2x          Label 78C2 ESP_NextObjectB0
     2x          Label 7913 ESP_NextObjectB1
     0x          Label 77A5 ESP_P1B0
     1x          Label 780E ESP_P1B1
     1x          Label 77B2 ESP_P2B0
     1x          Label 781B ESP_P2B1
     1x          Label 77BF ESP_P3B0
     1x          Label 7828 ESP_P3B1
     1x          Label 77CC ESP_P4B0
     1x          Label 7835 ESP_P4B1
     1x          Label 77D9 ESP_P5B0
     1x          Label 7842 ESP_P5B1
     1x          Label 77E6 ESP_P6B0
     1x          Label 784F ESP_P6B1
     1x          Label 77F3 ESP_P7B0
     1x          Label 785C ESP_P7B1
     1x          Label 7800 ESP_P8B0
     1x          Label 7869 ESP_P8B1
     9x          Label 7877 ESP_ProcessEachPriorityLevelB0
     9x          Label 78C8 ESP_ProcessEachPriorityLevelB1
     1x          Label 780D ESP_rtsB0
     1x          Label 7876 ESP_rtsB1
     0x          Label 77A0 ESP_Start
     0x          Label 787E ESP_UnsetCheckRefreshB0
     0x          Label 78CF ESP_UnsetCheckRefreshB1
     1x          Label 78BA ESP_UnsetOnScreenFlagB0
     1x          Label 790B ESP_UnsetOnScreenFlagB1
     0x          Equ   001B ext_variables
     0x          Label 71AD Fire_Held
     0x          Label 71AF Fire_Press
     2x          Label 71AB Fire_Read
     0x          Label 613E Glb_Camera_X_Pos
     0x          Label 6140 Glb_Camera_Y_Pos
    10x          Label 613D Glb_Cur_Wrk_Screen_Id
     1x          Label 7172 Glb_MainCharacter_Is_Dead
     6x          Label 6142 Glb_Sprite_Screen_Pos_Part1
     6x          Label 6144 Glb_Sprite_Screen_Pos_Part2
     0x          Equ   00FE goBackNFrames
     0x          Equ   00FD goToAnimation
     0x          Equ   0038 gravity
     0x          Equ   0000 id
     1x          Equ   0006 image_center_offset
     5x          Equ   000A image_set
     2x          Equ   0004 image_subset_x1_offset
     1x          Equ   0005 image_subset_y1_offset
     2x          Equ   0004 image_x_size
     1x          Equ   0005 image_y_size
     0x          Label 85E0 Img_emblemBack01
     0x          Label 85D0 Img_emblemBack02
     0x          Label 84FA Img_emblemBack03
     0x          Label 84EA Img_emblemBack04
     0x          Label 851A Img_emblemBack05
     0x          Label 850A Img_emblemBack06
     0x          Label 84CA Img_emblemBack07
     0x          Label 84BA Img_emblemBack08
     0x          Label 84DA Img_emblemBack09
     0x          Label 868F Img_emblemFront01
     0x          Label 869F Img_emblemFront02
     0x          Label 866F Img_emblemFront03
     0x          Label 867F Img_emblemFront04
     0x          Label 864F Img_emblemFront05
     0x          Label 865F Img_emblemFront06
     0x          Label 862F Img_emblemFront07
     0x          Label 863F Img_emblemFront08
     0x          Label 8237 Img_SegaLogo_1
     0x          Label 8227 Img_SegaLogo_2
     1x          Label 8326 Img_SegaSonic_11
     1x          Label 8260 Img_SegaSonic_12
     1x          Label 82A2 Img_SegaSonic_13
     1x          Label 82E4 Img_SegaSonic_21
     1x          Label 8368 Img_SegaSonic_22
     1x          Label 8281 Img_SegaSonic_23
     1x          Label 83AA Img_SegaSonic_31
     1x          Label 82C3 Img_SegaSonic_32
     1x          Label 8347 Img_SegaSonic_33
     1x          Label 8389 Img_SegaSonic_41
     1x          Label 83CB Img_SegaSonic_42
     1x          Label 8305 Img_SegaSonic_43
     0x          Label 8247 Img_SegaTrails_1
     0x          Label 842C Img_SegaTrails_2
     0x          Label 841C Img_SegaTrails_3
     0x          Label 840C Img_SegaTrails_4
     0x          Label 83FC Img_SegaTrails_5
     0x          Label 83EC Img_SegaTrails_6
     0x          Label 8217 Img_SonicAndTailsIn
     0x          Label 846D Img_sonicHand
     1x          Label 85A8 Img_sonic_1
     1x          Label 85BC Img_sonic_2
     1x          Label 8607 Img_sonic_3
     1x          Label 861B Img_sonic_4
     0x          Label 85F0 Img_sonic_5
     3x          Label 849F Img_star_1
     3x          Label 8484 Img_star_2
     1x          Label 8459 Img_star_3
     0x          Label 8445 Img_star_4
     0x          Label 8591 Img_tailsHand
     1x          Label 857D Img_tails_1
     1x          Label 8569 Img_tails_2
     1x          Label 8555 Img_tails_3
     1x          Label 8541 Img_tails_4
     1x          Label 852A Img_tails_5
     0x          Label 6106 InitIRQ
     0x          Label 71AC Joypads
     2x          Label 71AC Joypads_Held
     1x          Label 71AE Joypads_Press
     2x          Label 71AA Joypads_Read
     1x          Label 6112 LevelMainLoop
     1x          Label 7062 LevelOnly_Object_RAM
     1x          Label 7170 LevelOnly_Object_RAM_End
     1x          Label 8A06 LoadAct
     4x          Label 6146 Lst_FreeCellFirstEntry_0
     4x          Label 6315 Lst_FreeCellFirstEntry_1
     2x          Label 6148 Lst_FreeCell_0
     2x          Label 6317 Lst_FreeCell_1
     8x          Label 6508 Lst_Priority_Unset_0
     7x          Label 656E Lst_Priority_Unset_1
     0x          Label 7219 MarkObjGone
    14x          Equ   0000 nb_cells
     1x          Equ   001B nb_dynamic_objects
     6x          Equ   0082 nb_free_cells
     0x          Equ   0003 nb_level_objects
     4x          Equ   0020 nb_objects
     4x          Equ   0008 nb_priority_levels
     0x          Equ   0002 nb_reserved_objects
     0x          Equ   00FC nextRoutine
     0x          Equ   00FA nextSubRoutine
     9x          Equ   0005 next_entry
     3x          Equ   005A next_object
     0x          Label 731D ObjectMove
     1x          Label 6630 Object_RAM
     2x          Label 7170 Object_RAM_End
     8x          Equ   005A object_size
     1x          Label 87F5 Obj_Index_Address
     1x          Label 86F5 Obj_Index_Page
     0x          Label 6630 Obj_MainCharacter
     0x          Label 668A Obj_Sidekick
     0x          Label 70BC Obj_SonicDust
     0x          Label 7116 Obj_TailsDust
     0x          Label 7062 Obj_TailsTails
     4x          Equ   0000 page_draw_routine
     2x          Equ   0003 page_erase_routine
     1x          Label 8A3A Pal_SEGA
     0x          Label 8ABA Pal_SEGAEnd
     0x          Label 8A7A Pal_SEGAMid
     0x          Label 8A9A Pal_SonicAndTailsIn
     0x          Label 8A5A Pal_TitleScreen
     1x          Equ   0003 pcm_end_addr
     1x          Equ   0005 pcm_meta_size
     1x          Equ   0000 pcm_page
     0x          Label 89F5 Pcm_SEGA
     1x          Equ   0001 pcm_start_addr
     0x          Label 7D9C PlayPCM
     1x          Label 7DD4 PlayPCM_End
     1x          Label 7DBE PlayPCM_Loop
     1x          Label 7DCE PlayPCM_NextChunk
     1x          Label 7DB3 PlayPCM_ReadChunk
     1x          Label 7DED PlayPCM_RestorePage
     2x          Equ   0006 prev_anim
     6x          Equ   0003 priority
     0x          Label 7EA7 PSGCancelLoop
     4x          Label 81FE PSGChan0Volume
     4x          Label 81FF PSGChan1Volume
     3x          Label 8204 PSGChan2HighTone
     3x          Label 8202 PSGChan2LowTone
     5x          Label 8200 PSGChan2Volume
     5x          Label 8203 PSGChan3LowTone
     5x          Label 8201 PSGChan3Volume
     6x          Equ   0000 PSGChannel0
     5x          Equ   0020 PSGChannel1
     9x          Equ   0040 PSGChannel2
    12x          Label 8206 PSGChannel2SFX
    10x          Equ   0060 PSGChannel3
    13x          Label 8207 PSGChannel3SFX
     2x          Equ   0040 PSGData
    35x          Equ   E7B0 PSGDataPort
     2x          Equ   0000 PSGEnd
     1x          Label 8061 PSGFrame
     1x          Label 806D PSGFrame_continue
     0x          Label 7EAB PSGGetStatus
     1x          Label 7DF3 PSGInit
    32x          Equ   0080 PSGLatch
     2x          Equ   0001 PSGLoop
     3x          Label 81F9 PSGLoopFlag
     3x          Label 81FA PSGMusicLastLatch
     3x          Label 81F6 PSGMusicLoopPoint
     2x          Label 81F1 PSGMusicPage
     3x          Label 81F4 PSGMusicPointer
     4x          Label 81F8 PSGMusicSkipFrames
     2x          Label 81F2 PSGMusicStart
    13x          Label 81F0 PSGMusicStatus
     4x          Label 81FB PSGMusicSubstringLen
     2x          Label 81FC PSGMusicSubstringRetAddr
    13x          Label 8205 PSGMusicVolumeAttenuation
     0x          Label 7E09 PSGPlay
     1x          Label 7E0B PSGPlay1
     0x          Label 7E05 PSGPlayNoRepeat
     0x          Label 7F23 PSGRestoreVolumes
     1x          Label 7F36 PSGRestoreVolumes1
     1x          Label 7F49 PSGRestoreVolumes2
     2x          Label 7F6D PSGRestoreVolumes3
     2x          Label 7F91 PSGRestoreVolumes4
     0x          Label 7E5C PSGResume
     1x          Label 7E8C PSGResume1
     1x          Label 7EA1 PSGResume2
     1x          Label 7EA6 PSGResume_end
     0x          Label 7EAF PSGSetMusicVolumeAttenuation
     1x          Label 7EC5 PSGSetMusicVolumeAttenuation1
     1x          Label 7ED8 PSGSetMusicVolumeAttenuation2
     1x          Label 7EF0 PSGSetMusicVolumeAttenuation3
     1x          Label 7F08 PSGSetMusicVolumeAttenuation4
     2x          Label 7F0D PSGSetMusicVolumeAttenuation_end
     0x          Label 8059 PSGSFXCancelLoop
     2x          Label 8208 PSGSFXChan2Volume
     2x          Label 8209 PSGSFXChan3Volume
     0x          Label 816E PSGSFXFrame
     1x          Label 81AE PSGSFXFrame_end
     0x          Label 805D PSGSFXGetStatus
     3x          Label 8213 PSGSFXLoopFlag
     3x          Label 8210 PSGSFXLoopPoint
     2x          Label 820B PSGSFXPage
     0x          Label 7F9B PSGSFXPlay
     1x          Label 7F9D PSGSFXPlay1
     1x          Label 7FC3 PSGSFXPlay2
     1x          Label 7FCC PSGSFXPlay3
     0x          Label 7F97 PSGSFXPlayLoop
     1x          Label 7FE2 PSGSFXPlayLoop_end
     4x          Label 820E PSGSFXPointer
     4x          Label 8212 PSGSFXSkipFrames
     2x          Label 820C PSGSFXStart
     7x          Label 820A PSGSFXStatus
     2x          Label 7FE3 PSGSFXStop
     1x          Label 7FF2 PSGSFXStop1
     1x          Label 7FFC PSGSFXStop2
     1x          Label 8026 PSGSFXStop3
     1x          Label 8048 PSGSFXStop4
     1x          Label 8058 PSGSFXStop_end
     4x          Label 8214 PSGSFXSubstringLen
     2x          Label 8215 PSGSFXSubstringRetAddr
     0x          Label 7F0E PSGSilenceChannels
     2x          Label 7E33 PSGStop
     1x          Label 7E4C PSGStop2
     1x          Label 7E56 PSGStop3
     1x          Label 7E5B PSGStop_end
     4x          Equ   0008 PSGSubString
    27x          Equ   0010 PSGVolumeData
     2x          Equ   0038 PSGWait
     5x          Equ   0001 PSG_PLAYING
     3x          Equ   0000 PSG_STOPPED
     0x          Label 8A00 Psg_TitleScreen
     1x          Label 71B0 ReadJoypads
     3x          Label 7D11 Refresh_palette
    24x          Equ   0002 render_flags
     4x          Equ   0020 render_hide_mask
     2x          Equ   0008 render_motionless_mask
     5x          Equ   0004 render_overlay_mask
     1x          Equ   0010 render_playfieldcoord_mask
     5x          Equ   0040 render_todelete_mask
     1x          Equ   0080 render_xloop_mask
     2x          Equ   0001 render_xmirror_mask
     2x          Equ   0002 render_ymirror_mask
     1x          Label 6630 Reserved_Object_RAM
     1x          Label 66E4 Reserved_Object_RAM_End
     0x          Equ   00FF resetAnim
     0x          Equ   00FB resetAnimAndSubRoutine
     2x          Equ   0018 routine
     3x          Equ   0019 routine_secondary
     3x          Equ   003F rsv_bgdata_0
     3x          Equ   0051 rsv_bgdata_1
     2x          Equ   0036 rsv_buffer_0
     2x          Equ   0048 rsv_buffer_1
     6x          Equ   002C rsv_image_center_offset
     4x          Equ   002E rsv_image_subset
    11x          Equ   0030 rsv_mapping_frame
     0x          Equ   002A rsv_prev_anim
     4x          Equ   003D rsv_prev_mapping_frame_0
     4x          Equ   004F rsv_prev_mapping_frame_1
    11x          Equ   0047 rsv_prev_render_flags_0
     9x          Equ   0059 rsv_prev_render_flags_1
     4x          Equ   0080 rsv_prev_render_onscreen_mask
     6x          Equ   0001 rsv_prev_render_overlay_mask
     0x          Equ   0043 rsv_prev_x1_pixel_0
     0x          Equ   0055 rsv_prev_x1_pixel_1
     0x          Equ   0045 rsv_prev_x2_pixel_0
     0x          Equ   0057 rsv_prev_x2_pixel_1
     2x          Equ   0043 rsv_prev_xy1_pixel_0
     2x          Equ   0055 rsv_prev_xy1_pixel_1
     2x          Equ   0045 rsv_prev_xy2_pixel_0
     2x          Equ   0057 rsv_prev_xy2_pixel_1
     1x          Equ   0041 rsv_prev_xy_pixel_0
     1x          Equ   0053 rsv_prev_xy_pixel_1
     0x          Equ   0041 rsv_prev_x_pixel_0
     0x          Equ   0053 rsv_prev_x_pixel_1
     0x          Equ   0044 rsv_prev_y1_pixel_0
     0x          Equ   0056 rsv_prev_y1_pixel_1
     0x          Equ   0046 rsv_prev_y2_pixel_0
     0x          Equ   0058 rsv_prev_y2_pixel_1
     0x          Equ   0042 rsv_prev_y_pixel_0
     0x          Equ   0054 rsv_prev_y_pixel_1
     6x          Equ   0036 rsv_priority_0
     6x          Equ   0048 rsv_priority_1
    14x          Equ   0039 rsv_priority_next_obj_0
    14x          Equ   004B rsv_priority_next_obj_1
    12x          Equ   0037 rsv_priority_prev_obj_0
    12x          Equ   0049 rsv_priority_prev_obj_1
     4x          Equ   0001 rsv_render_checkrefresh_mask
     5x          Equ   0004 rsv_render_displaysprite_mask
     8x          Equ   0002 rsv_render_erasesprite_mask
    28x          Equ   0029 rsv_render_flags
     4x          Equ   0008 rsv_render_outofrange_mask
     6x          Equ   0032 rsv_x1_pixel
     5x          Equ   0034 rsv_x2_pixel
     3x          Equ   0032 rsv_xy1_pixel
     3x          Equ   0034 rsv_xy2_pixel
     5x          Equ   0033 rsv_y1_pixel
     4x          Equ   0035 rsv_y2_pixel
     1x          Label 71F2 RunNextObject
     3x          Label 71D9 RunObject
     1x          Label 71D1 RunObjects
     1x          Label 71FC RunObjectsWhenPlayerIsDead
     0x          Label 71D4 RunObjects_01
     0x          Label 71FB RunObjects_End
     1x          Label 7182 screen_border_color
     2x          Equ   00E3 screen_bottom
     2x          Equ   0030 screen_left
     2x          Equ   00CF screen_right
     2x          Equ   001C screen_top
     0x          Equ   00A0 screen_width
     2x          Equ   0001 SFX_CHANNEL2
     2x          Equ   0002 SFX_CHANNEL3
     2x          Equ   0003 SFX_CHANNELS2AND3
     0x          Label 7348 SingleObjLoad2
     1x          Label 7352 SingleObjLoad2_01
     2x          Label 735E SingleObjLoad2_02
     1x          Equ   001A status
     0x          Equ   0004 status_bit2
     0x          Equ   0080 status_bit7
     0x          Equ   0002 status_inair
     0x          Equ   0010 status_jumpingafterrolling
     0x          Equ   0004 status_jumporroll
     0x          Equ   0020 status_mainchar_pushing
     0x          Equ   0008 status_mainchar_standing
     0x          Equ   0008 status_norgroundnorfall
     0x          Equ   0020 status_pushing
     0x          Equ   0040 status_sidekick_pushing
     0x          Equ   0010 status_sidekick_standing
     0x          Equ   0040 status_underwater
     1x          Equ   0001 status_x_orientation
     1x          Equ   0002 status_y_orientation
     0x          Equ   0001 subtype
     0x          Label 717D SwapVideoPage
     2x          Label 64E4 Tbl_Priority_First_Entry_0
     2x          Label 654A Tbl_Priority_First_Entry_1
     3x          Label 64F6 Tbl_Priority_Last_Entry_0
     2x          Label 655C Tbl_Priority_Last_Entry_1
     2x          Label 65F0 Tbl_Sub_Object_Draw
     3x          Label 65B0 Tbl_Sub_Object_Erase
     0x          Label 791E UDP_B0
     1x          Label 798B UDP_B1
     1x          Label 7965 UDP_ChainNextB0
     1x          Label 79D2 UDP_ChainNextB1
     1x          Label 7945 UDP_ChainPrevB0
     1x          Label 79B2 UDP_ChainPrevB1
     1x          Label 796F UDP_CheckDeleteB0
     1x          Label 79DC UDP_CheckDeleteB1
     2x          Label 7921 UDP_CheckEndB0
     2x          Label 798E UDP_CheckEndB1
     1x          Label 794F UDP_CheckPrioNextB0
     1x          Label 79BC UDP_CheckPrioNextB1
     1x          Label 792D UDP_CheckPrioPrevB0
     1x          Label 799A UDP_CheckPrioPrevB1
     0x          Label 7926 UDP_InitListB0
     0x          Label 7993 UDP_InitListB1
     3x          Label 7984 UDP_SetNewPrioB0
     3x          Label 79F1 UDP_SetNewPrioB1
     0x          Label 7919 UDP_Start
     1x          Label 7919 UnsetDisplayPriority
     1x          Label 7D74 UpdatePalette
     1x          Label 7D9B UPP_return
     1x          Label 7D8E UPP_SetColor
     1x          Label 7D7D UPP_Tempo
     2x          Label 71A8 Vint_runcount
     3x          Label 7173 WaitVBL
     1x          Label 7178 WaitVBL_01
     0x          Label 7D54 White_palette
     7x          Equ   0012 xy_pixel
     3x          Equ   0012 x_pixel
     4x          Equ   000C x_pos
     0x          Equ   000E x_sub
     2x          Equ   0014 x_vel
     1x          Equ   0013 y_pixel
     4x          Equ   000F y_pos
     0x          Equ   0011 y_sub
     2x          Equ   0016 y_vel
     1x          Label 7F4E _chkchn2
     1x          Label 7F72 _chkchn3
     1x          Label 80E2 _chn2
     1x          Label 80FF _command
     2x          Label 8085 _continue
     1x          Label 810A _done
     0x          Equ   00FE _goBackNFrames
     0x          Equ   00FD _goToAnimation
     1x          Label 8163 _high_part_Tone
     1x          Label 80CF _ifchn0
     1x          Label 80B8 _ifchn2
    11x          Label 8075 _intLoop
     4x          Label 8181 _intSFXLoop
     1x          Label 612C _IRQ
     1x          Label 6135 _IRQ_end
     1x          Label 80C2 _latch_Volume
     1x          Label 80D4 _latch_Volume_23
     1x          Label 8144 _musicLoop
     0x          Equ   00FC _nextRoutine
     3x          Equ   00FA _nextSubRoutine
     1x          Label 80F6 _noLatch
     1x          Label 810E _otherCommands
     1x          Label 8138 _output_NoLatch
     4x          Equ   00FF _resetAnim
     0x          Equ   00FB _resetAnimAndSubRoutine
     1x          Label 7F68 _restoreSFX2
     1x          Label 7F96 _restoreSFX2_end
     1x          Label 7F8C _restoreSFX3
     1x          Label 7EF5 _restore_channel3
     6x          Label 80EC _send2PSG
     4x          Label 811B _sendVolume2PSG
     2x          Label 8129 _sendVolume2PSG1
     1x          Label 8130 _sendVolume2PSG2
     1x          Label 813E _setLoopPoint
     1x          Label 81AF _SFXcommand
     2x          Label 8191 _SFXcontinue
     1x          Label 81BA _SFXdone
     1x          Label 81D0 _sfxLoop
     1x          Label 81BE _SFXotherCommands
     2x          Label 81A5 _SFXoutbyte
     1x          Label 81CB _SFXsetLoopPoint
     1x          Label 81DF _SFXsubstring
     1x          Label 81A2 _SFXvolumechn3
     1x          Label 80F1 _skipFrame
     1x          Label 804F _skipRestore
     1x          Label 81AA _skipSFXFrame
     1x          Label 802B _skip_chn2
     1x          Label 804D _skip_chn3
     1x          Label 8151 _substring

