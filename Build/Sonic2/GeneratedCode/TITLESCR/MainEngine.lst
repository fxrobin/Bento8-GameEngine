/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : .\Sonic2\GeneratedCode\TITLESCR\MainEngine.asm
 * Fichier destination : .\Sonic2\GeneratedCode\TMP.BIN
 * Contenu :
 *     Main     0:MAIN.ASM     4140
 *     Include  0:CONSTANT.ASM 5768
 *     Include  0:WAITVBL.ASM  1795
 *     Include  0:READJPDS.ASM 1855
 *     Include  0:RUNOBJTS.ASM 1312
 *     Include  0:MRKOBJGN.ASM 481
 *     Include  0:DISPLSPR.ASM 2223
 *     Include  0:ANIMSPR.ASM  1998
 *     Include  0:OBJMOVE.ASM  752
 *     Include  0:OBJLOAD.ASM  1109
 *     Include  0:DELETOBJ.ASM 2732
 *     Include  0:CLEAROBJ.ASM 647
 *     Include  0:CHECKSPR.ASM 10494
 *     Include  0:ERASESPR.ASM 4868
 *     Include  0:UNSETDSP.ASM 2832
 *     Include  0:DRAWSPR.ASM  6323
 *     Include  0:BGBALLOC.ASM 1029
 *     Include  0:BGBFREE.ASM  1879
 *     Include  0:CLRCARTM.ASM 642
 *     Include  0:UPDTPAL.ASM  922
 *     Include  0:PLAYPCM.ASM  1216
 *     Include  0:PSGLIB.ASM   16960
 *     Include  0:IMAGEIDX.ASM 5025
 *     Include  0:ANIMSCPT.ASM 991
 *     Include  0:OBJINDEX.ASM 6715
 *     Include  0:SOUNDIDX.ASM 174
 *     Include  0:LOADACT.ASM  364
 *     Include  0:PALETTE.ASM  1208
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
    199                                   INCLUD CONSTANT
    200                           * --------------------------------------->>
    201                           * Constants
    202                           *
    203                           * Naming convention
    204                           * -----------------
    205                           * - lower case
    206                           * - underscore-separated names
    207                           *
    208                           * --------------------------------------->>
    209
    210                           * =======================================>>
    211                           * TO8 Registers
    212                           * =======================================>>
    213
    214                  6049     dk_lecteur                    equ $6049
    215                  604A     dk_piste                      equ $604A
    216                  604B     dk_pisteL                     equ $604B
    217                  604C     dk_secteur                    equ $604C
    218                  604F     dk_destination                equ $604F
    219
    220                           * =======================================>>
    221                           * Display Constants
    222                           * =======================================>>
    223
    224                  00A0     screen_width                  equ 160 ; s>>
    225                  001C     screen_top                    equ 28 ; in>>
    226                  00E3     screen_bottom                 equ 28+199 >>
    227                  0030     screen_left                   equ 48 ; in>>
    228                  00CF     screen_right                  equ 48+159 >>
    229                  0008     nb_priority_levels            equ 8   ; n>>
    230
    231                           * =======================================>>
    232                           * Physics Constants
    233                           * =======================================>>
    234
    235                  0038     gravity                       equ $38 ; G>>
    236
    237                           * =======================================>>
    238                           * Animation Constants
    239                           * =======================================>>
    240
    241                  00FF     _resetAnim                    equ $FF
    242                  00FE     _goBackNFrames                equ $FE
    243                  00FD     _goToAnimation                equ $FD
    244                  00FC     _nextRoutine                  equ $FC
    245                  00FB     _resetAnimAndSubRoutine       equ $FB
    246                  00FA     _nextSubRoutine               equ $FA
    247
    248                           * =======================================>>
    249                           * Images Constants
    250                           * =======================================>>
    251
    252                  0004     image_x_size                  equ 4
    253                  0005     image_y_size                  equ 5
    254                  0006     image_center_offset           equ 6
    255
    256                  0004     image_subset_x1_offset        equ 4
    257                  0005     image_subset_y1_offset        equ 5
    258
    259                  0000     page_draw_routine             equ 0
    260                  0001     draw_routine                  equ 1
    261                  0003     page_erase_routine            equ 3
    262                  0004     erase_routine                 equ 4
    263                  0006     erase_nb_cell                 equ 6
    264
    265                           * =======================================>>
    266                           * Sound Constants
    267                           * =======================================>>
    268
    269                  0000     pcm_page        equ 0
    270                  0001     pcm_start_addr  equ 1
    271                  0003     pcm_end_addr    equ 3
    272                  0005     pcm_meta_size   equ 5
    273
    274                           * =======================================>>
    275                           * Object Constants
    276                           * =======================================>>
    277
    278                  0002     nb_reserved_objects           equ 2
    279                  001B     nb_dynamic_objects            equ 27
    280                  0003     nb_level_objects              equ 3
    281                  0020     nb_objects                    equ 32 * ma>>
    282
    283                           * --------------------------------------->>
    284                           * Object Status Table offsets
    285                           * --------------------------------------->>
    286
    287                  005A     object_size                   equ 90 ; th>>
    288                  005A     next_object                   equ object_>>
    289
    290                  0000     id                            equ 0      >>
    291                  0001     subtype                       equ 1      >>
    292                  0002     render_flags                  equ 2
    293
    294                           * --- render_flags bitfield variables --->>
    295                  0001     render_xmirror_mask           equ $01 ; (>>
    296                  0002     render_ymirror_mask           equ $02 ; (>>
    297                  0004     render_overlay_mask           equ $04 ; (>>
    298                  0008     render_motionless_mask        equ $08 ; (>>
    299                  0010     render_playfieldcoord_mask    equ $10 ; (>>
    300                  0020     render_hide_mask              equ $20 ; (>>
    301                  0040     render_todelete_mask          equ $40 ; (>>
    302                  0080     render_xloop_mask             equ $80 ; (>>
    303                            
    304                  0003     priority                      equ 3      >>
    305                  0004     anim                          equ 4  ; an>>
    306                  0006     prev_anim                     equ 6  ; an>>
    307                  0008     anim_frame                    equ 8      >>
    308                  0009     anim_frame_duration           equ 9      >>
    309                  000A     image_set                     equ 10 ; an>>
    310                  000C     x_pos                         equ 12 ; an>>
    311                  000E     x_sub                         equ 14     >>
    312                  000F     y_pos                         equ 15 ; an>>
    313                  0011     y_sub                         equ 17     >>
    314                  0012     xy_pixel                      equ 18     >>
    315                  0012     x_pixel                       equ 18     >>
    316                  0013     y_pixel                       equ 19     >>
    317                  0014     x_vel                         equ 20 ; an>>
    318                  0016     y_vel                         equ 22 ; an>>
    319                  0018     routine                       equ 24     >>
    320                  0019     routine_secondary             equ 25     >>
    321                  001A     status                        equ 26
    322
    323                           * --- status bitfield variables for objec>>
    324                  0001     status_x_orientation          equ   $01 ;>>
    325                  0002     status_y_orientation          equ   $02 ;>>
    326                  0004     status_bit2                   equ   $04 ;>>
    327                  0008     status_mainchar_standing      equ   $08 ;>>
    328                  0010     status_sidekick_standing      equ   $10 ;>>
    329                  0020     status_mainchar_pushing       equ   $20 ;>>
    330                  0040     status_sidekick_pushing       equ   $40 ;>>
    331                  0080     status_bit7                   equ   $80 ;>>
    332
    333                           * --- status bitfield variables for Main >>
    334                  0002     status_inair                  equ   $02 ;>>
    335                  0004     status_jumporroll             equ   $04 ;>>
    336                  0008     status_norgroundnorfall       equ   $08 ;>>
    337                  0010     status_jumpingafterrolling    equ   $10 ;>>
    338                  0020     status_pushing                equ   $20 ;>>
    339                  0040     status_underwater             equ   $40 ;>>
    340
    341                  001B     ext_variables                 equ 27 ; to>>
    342
    343                           * --------------------------------------->>
    344                           * reserved variables (engine)
    345
    346                  0029     rsv_render_flags              equ 41
    347
    348                           * --- rsv_render_flags bitfield variables>>
    349                  0001     rsv_render_checkrefresh_mask  equ $01 ; (>>
    350                  0002     rsv_render_erasesprite_mask   equ $02 ; (>>
    351                  0004     rsv_render_displaysprite_mask equ $04 ; (>>
    352                  0008     rsv_render_outofrange_mask    equ $08 ; (>>
    353
    354                  002A     rsv_prev_anim                 equ 42 ; an>>
    355                  002C     rsv_image_center_offset       equ 44 ; 0 >>
    356                           * ne sert plus                       ; an>>
    357                  002E     rsv_image_subset              equ 46 ; an>>
    358                  0030     rsv_mapping_frame             equ 48 ; an>>
    359                  0032     rsv_xy1_pixel                 equ 50     >>
    360                  0032     rsv_x1_pixel                  equ 50     >>
    361                  0033     rsv_y1_pixel                  equ 51     >>
    362                  0034     rsv_xy2_pixel                 equ 52     >>
    363                  0034     rsv_x2_pixel                  equ 52     >>
    364                  0035     rsv_y2_pixel                  equ 53     >>
    365
    366                           * --------------------------------------->>
    367                           * reserved variables (engine) - buffer sp>>
    368
    369                  0036     rsv_buffer_0                  equ 54 ; St>>
    370                  0036     rsv_priority_0                equ 54 ; in>>
    371                  0037     rsv_priority_prev_obj_0       equ 55 ; an>>
    372                  0039     rsv_priority_next_obj_0       equ 57 ; an>>
    373                           *rsv_prev_image_subset_0       equ 59 ; a>>
    374                  003D     rsv_prev_mapping_frame_0      equ 61 ; an>>
    375                  003F     rsv_bgdata_0                  equ 63 ; an>>
    376                  0041     rsv_prev_xy_pixel_0           equ 65 ;
    377                  0041     rsv_prev_x_pixel_0            equ 65 ; pr>>
    378                  0042     rsv_prev_y_pixel_0            equ 66 ; pr>>
    379                  0043     rsv_prev_xy1_pixel_0          equ 67 ;
    380                  0043     rsv_prev_x1_pixel_0           equ 67 ; pr>>
    381                  0044     rsv_prev_y1_pixel_0           equ 68 ; pr>>
    382                  0045     rsv_prev_xy2_pixel_0          equ 69 ;
    383                  0045     rsv_prev_x2_pixel_0           equ 69 ; pr>>
    384                  0046     rsv_prev_y2_pixel_0           equ 70 ; pr>>
    385                  0047     rsv_prev_render_flags_0       equ 71 ;
    386                           * --- rsv_prev_render_flags_0 bitfield va>>
    387                  0001     rsv_prev_render_overlay_mask  equ $01 ; (>>
    388                  0080     rsv_prev_render_onscreen_mask equ $80 ; (>>
    389
    390                  0048     rsv_buffer_1                  equ 72 ; St>>
    391                  0048     rsv_priority_1                equ 72 ; in>>
    392                  0049     rsv_priority_prev_obj_1       equ 73 ; an>>
    393                  004B     rsv_priority_next_obj_1       equ 75 ; an>>
    394                           *rsv_prev_image_subset_1       equ 77 ; a>>
    395                  004F     rsv_prev_mapping_frame_1      equ 79 ; an>>
    396                  0051     rsv_bgdata_1                  equ 81 ; an>>
    397                  0053     rsv_prev_xy_pixel_1           equ 83 ;
    398                  0053     rsv_prev_x_pixel_1            equ 83 ; pr>>
    399                  0054     rsv_prev_y_pixel_1            equ 84 ; pr>>
    400                  0055     rsv_prev_xy1_pixel_1          equ 85 ;
    401                  0055     rsv_prev_x1_pixel_1           equ 85 ; pr>>
    402                  0056     rsv_prev_y1_pixel_1           equ 86 ; pr>>
    403                  0057     rsv_prev_xy2_pixel_1          equ 87 ;
    404                  0057     rsv_prev_x2_pixel_1           equ 87 ; pr>>
    405                  0058     rsv_prev_y2_pixel_1           equ 88 ; pr>>
    406                  0059     rsv_prev_render_flags_1       equ 89 ;
    407
    408                  0000     buf_priority                  equ 0  ; of>>
    409                  0001     buf_priority_prev_obj         equ 1  ;
    410                  0003     buf_priority_next_obj         equ 3  ;
    411                           *buf_prev_image_subset         equ 5  ;
    412                  0007     buf_prev_mapping_frame        equ 7  ;
    413                  0009     buf_bgdata                    equ 9  ;
    414                  000B     buf_prev_xy_pixel             equ 11 ;
    415                  000B     buf_prev_x_pixel              equ 11 ;
    416                  000C     buf_prev_y_pixel              equ 12 ;
    417                  000D     buf_prev_xy1_pixel            equ 13 ;
    418                  000D     buf_prev_x1_pixel             equ 13 ;
    419                  000E     buf_prev_y1_pixel             equ 14 ;
    420                  000F     buf_prev_xy2_pixel            equ 15 ;
    421                  000F     buf_prev_x2_pixel             equ 15 ;
    422                  0010     buf_prev_y2_pixel             equ 16 ;
    423                  0011     buf_prev_render_flags         equ 17 ;
    424
     10        6100                       org   $6100
     11
     12  8     6100 BD   8A04             jsr   LoadAct
     13                                   * jsr   PSGInit
     14
     15        6103               InitIRQ
     16  3     6103 CC   6129             ldd   #_IRQ                      >>
     17  6     6106 FD   6027             std   $6027
     18  3     6109 CC   09C4             ldd   #$09C4                     >>
     19  6     610C FD   E7C6             std   $E7C6                      >>
     20
     21                           * =======================================>>
     22                           * Main Loop
     23                           * =======================================>>
     24        610F               LevelMainLoop
     25  8     610F BD   7170             jsr   WaitVBL
     26  8     6112 BD   71AD             jsr   ReadJoypads
     27  8     6115 BD   7D72             jsr   UpdatePalette
     28  8     6118 BD   71CE             jsr   RunObjects
     29  8     611B BD   745D             jsr   CheckSpritesRefresh
     30  8     611E BD   779D             jsr   EraseSprites
     31  8     6121 BD   7916             jsr   UnsetDisplayPriority
     32  8     6124 BD   79F5             jsr   DrawSprites
     33  3     6127 20   E6               bra   LevelMainLoop
     34                            
     35                           * =======================================>>
     36                           * IRQ
     37                           * =======================================>>
     38        6129               _IRQ
     39  5     6129 B6   E7E5             lda   $E7E5
     40  5     612C B7   6133             sta   _IRQ_end+1                 >>
     41  8     612F BD   805F             jsr   PSGFrame
     42                                   * jsr   PSGSFXFrame
     43        6132               _IRQ_end
     44  2     6132 86   00               lda   #$00
     45  5     6134 B7   E7E5             sta   $E7E5                      >>
     46  4     6137 7E   E830             jmp   $E830
     47
     48                           * =======================================>>
     49                           * Global Data
     50                           *
     51                           * Naming convention
     52                           * -----------------
     53                           * - underscore-separated names
     54                           * - first letter of each word in upper ca>>
     55                           *
     56                           * Templates
     57                           * ---------
     58                           * - Glb_*        : global variable
     59                           * - Tbl_*        : data table
     60                           * - Lst_*        : list is a data table w>>
     61                           * - Obj_*        : address of an object i>>
     62                           *
     63                           * - *_Object_RAM : sub group of objects
     64                           * - *_end        : data end label
     65                           *
     66                           * =======================================>>
     67
     68                           * --------------------------------------->>
     69                           * Display
     70                           * --------------------------------------->>
     71                            
     72        613A 00            Glb_Cur_Wrk_Screen_Id         fcb   $00  >>
     73        613B 0000          Glb_Camera_X_Pos              fdb   $0000>>
     74        613D 0000          Glb_Camera_Y_Pos              fdb   $0000>>
     75        613F 0000          Glb_Sprite_Screen_Pos_Part1   fdb   $0000>>
     76        6141 0000          Glb_Sprite_Screen_Pos_Part2   fdb   $0000>>
     77
     78                           * --------------------------------------->>
     79                           * Background Backup Cells - BBC
     80                           * --------------------------------------->>
     81
     82                           * ----- Cell variables
     83                  0000     nb_cells                      equ   0
     84                  0001     cell_start                    equ   1
     85                  0003     cell_end                      equ   3
     86                  0005     next_entry                    equ   5
     87                  0007     entry_size                    equ   7
     88
     89                           * ----- Cells List
     90                  0082     nb_free_cells                 equ   130
     91                  0040     cell_size                     equ   64   >>
     92                  6000     cell_start_adr                equ   $6000>>
     93
     94        6143 6145          Lst_FreeCellFirstEntry_0      fdb   Lst_F>>
     95        6145 82            Lst_FreeCell_0                fcb   nb_fr>>
     96        6146 3F80                                        fdb   cell_>>
     97        6148 6000                                        fdb   cell_>>
     98        614A 0000                                        fdb   $0000>>
     99        614C                                             rmb   (entr>>
    100                            
    101        6312 6314          Lst_FreeCellFirstEntry_1      fdb   Lst_F>>
    102        6314 82            Lst_FreeCell_1                fcb   nb_fr>>
    103        6315 3F80                                        fdb   cell_>>
    104        6317 6000                                        fdb   cell_>>
    105        6319 0000                                        fdb   $0000>>
    106        631B                                             rmb   (entr>>
    107                           * --------------------------------------->>
    108                           * Display Priority Structure - DPS
    109                           * --------------------------------------->>
    110
    111        64E1               DPS_buffer_0
    112        64E1               Tbl_Priority_First_Entry_0    rmb   2+(nb>>
    113        64F3               Tbl_Priority_Last_Entry_0     rmb   2+(nb>>
    114        6505 6507          Lst_Priority_Unset_0          fdb   Lst_P>>
    115        6507                                             rmb   (nb_o>>
    116        6547               DPS_buffer_1
    117        6547               Tbl_Priority_First_Entry_1    rmb   2+(nb>>
    118        6559               Tbl_Priority_Last_Entry_1     rmb   2+(nb>>
    119        656B 656D          Lst_Priority_Unset_1          fdb   Lst_P>>
    120        656D                                             rmb   (nb_o>>
    121                            
    122                  0000     buf_Tbl_Priority_First_Entry  equ   0
    123                  0012     buf_Tbl_Priority_Last_Entry   equ   Tbl_P>>
    124                  0024     buf_Lst_Priority_Unset        equ   Lst_P>>
    125
    126                           * --------------------------------------->>
    127                           * Sub Priority Objects List - SOL
    128                           * --------------------------------------->>
    129
    130        65AD               Tbl_Sub_Object_Erase          rmb   nb_ob>>
    131        65ED               Tbl_Sub_Object_Draw           rmb   nb_ob>>
    132
    133                           * --------------------------------------->>
    134                           * Object Status Table - OST
    135                           * --------------------------------------->>
    136                            
    137        662D               Object_RAM *@globals
    138        662D               Reserved_Object_RAM
    139        662D 0203          Obj_MainCharacter             fdb   $0203>>
    140        662F                                             rmb   objec>>
    141        6687               Obj_Sidekick                  rmb   objec>>
    142        66E1               Reserved_Object_RAM_End
    143
    144        66E1               Dynamic_Object_RAM            rmb   nb_dy>>
    145        705F               Dynamic_Object_RAM_End
    146
    147        705F               LevelOnly_Object_RAM                     >>
    148        705F               Obj_TailsTails                rmb   objec>>
    149        70B9               Obj_SonicDust                 rmb   objec>>
    150        7113               Obj_TailsDust                 rmb   objec>>
    151        716D               LevelOnly_Object_RAM_End
    152        716D 716D          Object_RAM_End                fdb *
    153
    154                           * --------------------------------------->>
    155                           * Lifecycle
    156                           * --------------------------------------->>
    157
    158        716F               Glb_MainCharacter_Is_Dead     rmb   $1,0
    159
    160                           * =======================================>>
    161                           * Routines
    162                           * =======================================>>
    163                                   * a rendre dynamique a partir du >>
    425                                   INCLUD WAITVBL
    426                           *****************************************>>
    427                           * Attente VBL
    428                           * Alternance de la page 2 et 3 entre affi>>
    429                           * Alternance de la RAMA et RAM B dans l'e>>
    430                           * --------------------------------------->>
    431                           *
    432                           * Page Affichee par l'automate Video
    433                           * ----------------------------------
    434                           *   $E7DD determine la page affichee a l'>>
    435                           *   bit7=0 bit6=0 bit5=0 bit4=0 (#$0_) : >>
    436                           *   bit7=0 bit6=1 bit5=0 bit4=0 (#$4_) : >>
    437                           *   bit7=1 bit6=0 bit5=0 bit4=0 (#$8_) : >>
    438                           *   bit7=1 bit6=1 bit5=0 bit4=0 (#$C_) : >>
    439                           *   bit3 bit2 bit1 bit0  (#$_0 a #$_F) : >>
    440                           *   Remarque : bit5 et bit4 utilisable un>>
    441                           *
    442                           * Page en espace cartouche (ecriture dans>>
    443                           * --------------------------------------->>
    444                           *   $E7E6 determine la page visible dans >>
    445                           *   bit7 toujours a 0
    446                           *   bit6=1 : ecriture autorisee
    447                           *   bit5=1 : espace cartouche recouvert p>>
    448                           *   bit4=0 : CAS1N valide : banques 0-15 >>
    449                           *   bit5=1 bit4=0 bit3=0 bit2=0 bit1=0 bi>>
    450                           *   ...
    451                           *   bit5=1 bit4=0 bit3=1 bit2=1 bit1=1 bi>>
    452                           *   bit5=1 bit4=1 bit3=0 bit2=0 bit1=0 bi>>
    453                           *   ...
    454                           *   bit5=1 bit4=1 bit3=1 bit2=1 bit1=1 bi>>
    455                           *
    456                           * Demi-Page 0 en espace ecran (4000 a 5FF>>
    457                           * --------------------------------------->>
    458                           *   $E7C3 determine la demi-page de la pa>>
    459                           *   bit0=0 : 8Ko RAMA
    460                           *   bit0=1 : 8ko RAMB
    461                           *
    462                           *****************************************>>
    463        7170               WaitVBL
    464  7     7170 7D   E7E7             tst   $E7E7              * le fai>>
    465  3     7173 2A   FB               bpl   WaitVBL            * tant q>>
    466        7175               WaitVBL_01
    467  7     7175 7D   E7E7             tst   $E7E7              * le fai>>
    468  3     7178 2B   FB               bmi   WaitVBL_01         * tant q>>
    469                            
    470  6     717A FC   71A5             ldd   Vint_runcount
    471  4     717D C3   0001             addd  #1
    472  6     7180 FD   71A5             std   Vint_runcount
    473                            
    474        7183               SwapVideoPage
    475  5     7183 F6   7191             ldb   am_SwapVideoPage+1 * charge>>
    476  2     7186 C4   40               andb  #$40               * altern>>
    477        7188               screen_border_color *@globals
    478  2     7188 CA   80               orb   #$80               * bit7=1>>
    479  5     718A F7   E7DD             stb   $E7DD              * change>>
    480  7     718D 73   7191             com   am_SwapVideoPage+1 * altern>>
    481        7190               am_SwapVideoPage
    482  2     7190 C6   00               ldb   #$00
    483  2     7192 C4   01               andb  #$01               * altern>>
    484  5     7194 F7   613A             stb   Glb_Cur_Wrk_Screen_Id
    485  2     7197 CA   62               orb   #$62               * bit6=1>>
    486  5     7199 F7   E7E6             stb   $E7E6              * change>>
    487  5     719C F6   E7C3             ldb   $E7C3              * charge>>
    488  2     719F C8   01               eorb  #$01               * altern>>
    489  5     71A1 F7   E7C3             stb   $E7C3
    490  5     71A4 39                    rts
    491                            
    492        71A5               Vint_runcount rmb   $2,0 *@globals
    493
    494                                   INCLUD READJPDS
    495                           * --------------------------------------->>
    496                           * Controller Buttons
    497                           *
    498                  0001     c1_button_up_mask            equ   $01 *@>>
    499                  0002     c1_button_down_mask          equ   $02 *@>>
    500                  0004     c1_button_left_mask          equ   $04 *@>>
    501                  0008     c1_button_right_mask         equ   $08 *@>>
    502                  0010     c2_button_up_mask            equ   $10 *@>>
    503                  0020     c2_button_down_mask          equ   $20 *@>>
    504                  0040     c2_button_left_mask          equ   $40 *@>>
    505                  0080     c2_button_right_mask         equ   $80 *@>>
    506                  0040     c1_button_A_mask             equ   $40 *@>>
    507                  0080     c2_button_A_mask             equ   $80 *@>>
    508
    509        71A7               Joypads_Read
    510        71A7 00            Dpad_Read                    fcb   $00
    511        71A8 00            Fire_Read                    fcb   $00
    512                            
    513        71A9               Joypads
    514        71A9               Joypads_Held                           *@>>
    515        71A9 00            Dpad_Held                    fcb   $00 *@>>
    516        71AA 00            Fire_Held                    fcb   $00 *@>>
    517        71AB               Joypads_Press                          *@>>
    518        71AB 00            Dpad_Press                   fcb   $00 *@>>
    519        71AC 00            Fire_Press                   fcb   $00 *@>>
    520
    521                           *****************************************>>
    522                           * Get joystick parameters
    523                           *
    524                           * Direction des Joypads
    525                           * ---------------------
    526                           * Registre: $E7CC (8bits)
    527                           *
    528                           * Joypad2     Joypad1
    529                           * 1111        1111 (0: appuye | 1: relach>>
    530                           * ||||_Haut   ||||_Haut
    531                           * |||__Bas    |||__Bas
    532                           * ||___Gauche ||___Gauche
    533                           * |____Droite |____Droite
    534                           *
    535                           * Boutons des Joypads
    536                           * -------------------
    537                           * Registre: $E7CD (8bits)
    538                           *
    539                           * 11 000000 (0: appuye | 1: relache)
    540                           * ||[------] 6 bits convertisseur numeriq>>
    541                           * ||_Fire Joypad1
    542                           * |__Fire Joypad2
    543                           *
    544                           * Variables globales: Joypads_Held, Joypa>>
    545                           * --------------------------------------->>
    546                           * (16 bits)
    547                           * Joypad2     Joypad1
    548                           * 0000        0000 (0: relache | 1: appuy>>
    549                           * ||||_Haut   ||||_Haut                  >>
    550                           * |||__Bas    |||__Bas                   >>
    551                           * ||___Gauche ||___Gauche                >>
    552                           * |____Droite |____Droite
    553                           *
    554                           *****************************************>>
    555                            
    556                                                                  *;>>
    557                                                                  *;>>
    558                                                                  *;>>
    559                                                                  *;>>
    560                                                                  *
    561                                                                  *;>>
    562        71AD               ReadJoypads                            *R>>
    563                                                                  * >>
    564                                                                  * >>
    565                                                                  * >>
    566                                                                  * >>
    567                                                                  *
    568                                                                  *;>>
    569                                                                  *J>>
    570                                                                  * >>
    571                                                                  * >>
    572                                                                  * >>
    573                                                                  * >>
    574                                                                  * >>
    575                                                                  * >>
    576                                                                  * >>
    577                                                                  * >>
    578                                                                  * >>
    579                                                                  * >>
    580                                                                  * >>
    581                                                                  * >>
    582  6     71AD FC   E7CC             ldd   $E7CC
    583  2     71B0 43                    coma
    584  2     71B1 53                    comb                           * >>
    585  6     71B2 FD   71A7             std   Joypads_Read
    586  6     71B5 FC   71A9             ldd   Joypads_Held             * >>
    587  5     71B8 B8   71A7             eora  Dpad_Read                * >>
    588  5     71BB F8   71A8             eorb  Fire_Read
    589                                                                  * >>
    590  5     71BE B4   71A7             anda  Dpad_Read                * >>
    591  5     71C1 F4   71A8             andb  Fire_Read
    592  6     71C4 FD   71AB             std   Joypads_Press            * >>
    593  6     71C7 FC   71A7             ldd   Joypads_Read
    594  6     71CA FD   71A9             std   Joypads_Held
    595  5     71CD 39                    rts                            * >>
    596                                                                  *;>>
    597
    598
    599                                   INCLUD RUNOBJTS
    600                           * --------------------------------------->>
    601                           * RunObjects
    602                           * ------------
    603                           * Subroutine to run objects code
    604                           *
    605                           * input REG : none
    606                           * --------------------------------------->>
    607                                                                    >>
    608                                                                    >>
    609                                                                    >>
    610                                                                    >>
    611                                                                    >>
    612                                                                    >>
    613                                                                    >>
    614        71CE               RunObjects                               >>
    615                                                                    >>
    616                                                                    >>
    617  3     71CE CE   662D             ldu   #Object_RAM                >>
    618                                                                    >>
    619                                                                    >>
    620                                                                    >>
    621                                                                    >>
    622                                                                    >>
    623                                                                    >>
    624                                                                    >>
    625        71D1               RunObjects_01                            >>
    626                                                                    >>
    627                                                                    >>
    628                                                                    >>
    629                                                                    >>
    630  7     71D1 7D   716F             tst   Glb_MainCharacter_Is_Dead  >>
    631  3     71D4 26   23               bne   RunObjectsWhenPlayerIsDead >>
    632                                                                    >>
    633                                                                    >>
    634                                                                    >>
    635                                                                    >>
    636                                                                    >>
    637                                                                    >>
    638                                                                    >>
    639                                                                    >>
    640                                                                    >>
    641                                                                    >>
    642        71D6               RunObject                                >>
    643  2     71D6 86   00               lda   #$00
    644  4+0   71D8 E6   C4               ldb   ,u                         >>
    645  3     71DA 27   13               beq   RunNextObject              >>
    646
    647  4     71DC 108E 86F3             ldy   #Obj_Index_Page
    648  4+4   71E0 A6   AB               lda   d,y                        >>
    649  5     71E2 B7   E7E5             sta   $E7E5                      >>
    650  2     71E5 86   00               lda   #$00
    651  2     71E7 58                    aslb                             >>
    652  2     71E8 49                    rola                             >>
    653  4     71E9 108E 87F3             ldy   #Obj_Index_Address         >>
    654  7+7   71ED AD   BB               jsr   [d,y]                      >>
    655                                                                    >>
    656                                                                    >>
    657                                                                    >>
    658        71EF               RunNextObject                            >>
    659  4+1   71EF 33   C8 5A            leau  next_object,u              >>
    660        71F2               am_RunNextObject
    661  5     71F2 1183 716D             cmpu  #Object_RAM_End            >>
    662  3     71F6 26   DE               bne   RunObject                  >>
    663        71F8               RunObjects_End                           >>
    664  5     71F8 39                    rts                              >>
    665                                                                    >>
    666                                                                    >>
    667                                                                    >>
    668                                                                    >>
    669        71F9               RunObjectsWhenPlayerIsDead               >>
    670  3     71F9 CE   662D             ldu   #Reserved_Object_RAM
    671  3     71FC 8E   66E1             ldx   #Reserved_Object_RAM_End
    672  6     71FF BF   71F4             stx   am_RunNextObject+2         >>
    673  7     7202 8D   D2               bsr   RunObject                  >>
    674                                                                    >>
    675                                                                    >>
    676  3     7204 CE   705F             ldu   #LevelOnly_Object_RAM
    677  3     7207 8E   716D             ldx   #LevelOnly_Object_RAM_End
    678  6     720A BF   71F4             stx   am_RunNextObject+2         >>
    679  7     720D 8D   C7               bsr   RunObject                  >>
    680                                                                    >>
    681  3     720F 8E   716D             ldx   #Object_RAM_End            >>
    682  6     7212 BF   71F4             stx   am_RunNextObject+2
    683  5     7215 39                    rts
    684                                                                    >>
    685                                                                    >>
    686                                                                    >>
    687                                                                    >>
    688                                                                    >>
    689                                                                    >>
    690                                                                    >>
    691                                                                    >>
    692                                                                    >>
    693                                                                    >>
    694                                                                    >>
    695                                                                    >>
    696                                                                    >>
    697                            
    698                                                                    >>
    699                                                                    >>
    700                                                                    >>
    701                                                                    >>
    702
    703                                   INCLUD MRKOBJGN
    704                           * --------------------------------------->>
    705                           * MarkObjGone
    706                           * -----------
    707                           * Subroutine to destroy an object that is>>
    708                           * -- TODO --
    709                           * waiting for camera implementation
    710                           *
    711                           * input REG : none
    712                           * clear REG : none
    713                           * --------------------------------------->>
    714
    715                                                                  *;>>
    716                                                                  *;>>
    717                                                                  *;>>
    718                                                                  *
    719                                                                  *;>>
    720                                                                  *;>>
    721                                                                  *;>>
    722        7216               MarkObjGone *@globals                  *M>>
    723                                                                  * >>
    724                                                                  * >>
    725  3     7216 20   06               bra   DisplaySprite            * >>
    726                                                                  *+>>
    727                                                                  * >>
    728                                                                  * >>
    729                                                                  * >>
    730                                                                  * >>
    731                                                                  * >>
    732                                                                  * >>
    733                                                                  *
    734                                                                  *+>>
    735                                                                  * >>
    736                                                                  * >>
    737                                                                  * >>
    738                                                                  * >>
    739                                                                  *+>>
    740                                                                  * >>
    741
    742                                   INCLUD DISPLSPR
    743                           * --------------------------------------->>
    744                           * DisplaySprite
    745                           * -------------
    746                           * Subroutine to manage sprite priority.
    747                           * Object's priority is read and object is>>
    748                           * priority: 0 - unregistred
    749                           * priority: 1 - register non moving overl>>
    750                           * priority; 2-8 - register moving sprite >>
    751                           *
    752                           * Unlike original S2 code, sprite priorit>>
    753                           * it allows to keep an exact sprite order>>
    754                           *
    755                           * DisplaySprite
    756                           * input REG : [u] object pointer (OST)
    757                           *
    758                           * DisplaySprite_x
    759                           * input REG : [x] object pointer (OST)
    760                           * --------------------------------------->>
    761                            
    762        7218               DisplaySprite_x *@globals
    763  5+6   7218 34   56               pshs  d,x,u
    764  6     721A 1F   13               tfr   x,u
    765  3     721C 20   02               bra   DSP_Start
    766                            
    767        721E               DisplaySprite *@globals
    768  5+6   721E 34   56               pshs  d,x,u
    769                            
    770        7220               DSP_Start
    771  4+1   7220 A6   42               lda   render_flags,u
    772  2     7222 84   DF               anda  #:render_hide_mask         >>
    773  4+1   7224 A7   42               sta   render_flags,u
    774
    775  5     7226 B6   613A             lda   Glb_Cur_Wrk_Screen_Id      >>
    776  3     7229 26   09               bne   DSP_SetBuffer1
    777                            
    778        722B               DSP_SetBuffer0
    779  4+1   722B 30   C8 36            leax  rsv_buffer_0,u             >>
    780  4     722E 108E 64E1             ldy   #DPS_buffer_0              >>
    781  3     7232 20   07               bra   DSP_BufferPositionned
    782                            
    783        7234               DSP_SetBuffer1
    784  4+1   7234 30   C8 48            leax  rsv_buffer_1,u             >>
    785  4     7237 108E 6547             ldy   #DPS_buffer_1              >>
    786                            
    787        723B               DSP_BufferPositionned
    788  4+1   723B A6   43               lda   priority,u                 >>
    789  4+1   723D A1   00               cmpa  buf_priority,x
    790  3     723F 27   1C               beq   DSP_rts                    >>
    791  4+1   7241 E6   00               ldb   buf_priority,x
    792  3     7243 26   3F               bne   DSP_ChangePriority
    793                            
    794        7245               DSP_InitPriority
    795  4+1   7245 A7   00               sta   buf_priority,x             >>
    796  2     7247 48                    asla                             >>
    797                            
    798        7248               DSP_CheckLastEntry
    799  4+1   7248 31   A8 12            leay  buf_Tbl_Priority_Last_Entry>>
    800  6+1   724B 6D   A6               tst   a,y                        >>
    801  3     724D 26   10               bne   DSP_addToExistingNode      >>
    802                            
    803        724F               DSP_addFirstNode
    804  5+1   724F EF   A6               stu   a,y                        >>
    805  4+1   7251 31   A8 EE            leay  buf_Tbl_Priority_First_Entr>>
    806  5+1   7254 EF   A6               stu   a,y                        >>
    807  3     7256 CC   0000             ldd   #0
    808  5+1   7259 ED   01               std   buf_priority_prev_obj,x    >>
    809  5+1   725B ED   03               std   buf_priority_next_obj,x
    810                            
    811        725D               DSP_rts
    812  5+8   725D 35   D6               puls  d,x,u,pc                   >>
    813                            
    814        725F               DSP_addToExistingNode
    815  5+1   725F AE   A6               ldx   a,y                        >>
    816  5     7261 F6   613A             ldb   Glb_Cur_Wrk_Screen_Id
    817  3     7264 26   0E               bne   DSP_LinkBuffer1
    818  5+1   7266 EF   88 39            stu   rsv_priority_next_obj_0,x  >>
    819  5+1   7269 AF   C8 37            stx   rsv_priority_prev_obj_0,u  >>
    820  6+1   726C 6F   C8 39            clr   rsv_priority_next_obj_0,u  >>
    821  6+1   726F 6F   C8 3A            clr   rsv_priority_next_obj_0+1,u>>
    822  3     7272 20   0C               bra   DSP_LinkCurWithPrev
    823        7274               DSP_LinkBuffer1
    824  5+1   7274 EF   88 4B            stu   rsv_priority_next_obj_1,x  >>
    825  5+1   7277 AF   C8 49            stx   rsv_priority_prev_obj_1,u  >>
    826  6+1   727A 6F   C8 4B            clr   rsv_priority_next_obj_1,u  >>
    827  6+1   727D 6F   C8 4C            clr   rsv_priority_next_obj_1+1,u>>
    828                            
    829        7280               DSP_LinkCurWithPrev
    830  5+1   7280 EF   A6               stu   a,y                        >>
    831  5+8   7282 35   D6               puls  d,x,u,pc                   >>
    832                            
    833        7284               DSP_ChangePriority
    834  4+1   7284 31   A8 24            leay  buf_Lst_Priority_Unset,y
    835  5+3   7287 EF   B4               stu   [,y]                       >>
    836  4+1   7289 31   22               leay  2,y
    837  6+0   728B 10AF A4               sty   ,y                         >>
    838  4+1   728E 31   A8 DA            leay  -buf_Lst_Priority_Unset-2,y>>
    839  2     7291 81   00               cmpa  #0
    840  3     7293 26   B3               bne   DSP_CheckLastEntry         >>
    841  5+8   7295 35   D6               puls  d,x,u,pc                   >>
    842
    843                            
    844                                                                  *;>>
    845                                                                  *;>>
    846                                                                  *;>>
    847                                                                  *
    848                                                                  *;>>
    849                                                                  *
    850                                                                  *;>>
    851                                                                  *D>>
    852                                                                  * >>
    853                                                                  * >>
    854                                                                  * >>
    855                                                                  * >>
    856                                                                  * >>
    857                            
    858                                                                  * >>
    859                                                                  * >>
    860                                                                  * >>
    861                            
    862                                                                  * >>
    863                                                                  * >>
    864                                                                  *
    865                                                                  *r>>
    866                            
    867                                                                  * >>
    868                                                                  *;>>
    869
    870                                   INCLUD ANIMSPR
    871                           * --------------------------------------->>
    872                           * Subroutine to animate a sprite using an>>
    873                           *
    874                           *   this function also change render flag>>
    875                           *   the status byte;
    876                           *
    877                           * input REG : [u] pointeur sur l'objet
    878                           *
    879                           * --------------------------------------->>
    880
    881                  00FF     resetAnim              equ $FF
    882                  00FE     goBackNFrames          equ $FE ; followed>>
    883                  00FD     goToAnimation          equ $FD ; followed>>
    884                  00FC     nextRoutine            equ $FC
    885                  00FB     resetAnimAndSubRoutine equ $FB
    886                  00FA     nextSubRoutine         equ $FA
    887
    888                                                                    >>
    889                                                                    >>
    890                                                                    >>
    891                                                                    >>
    892                                                                    >>
    893                                                                    >>
    894                                                                    >>
    895        7297               AnimateSprite * @globals                 >>
    896                                                                    >>
    897  5+1   7297 AE   44               ldx   anim,u                     >>
    898  6+1   7299 AC   46               cmpx  prev_anim,u                >>
    899  3     729B 27   08               beq   Anim_Run                   >>
    900  5+1   729D AF   46               stx   prev_anim,u                >>
    901  2     729F C6   00                     ldb   #0
    902  4+1   72A1 E7   48               stb   anim_frame,u               >>
    903  4+1   72A3 E7   49               stb   anim_frame_duration,u      >>
    904                                                                    >>
    905        72A5               Anim_Run                                 >>
    906  6+1   72A5 6A   49               dec   anim_frame_duration,u      >>
    907  3     72A7 2A   23               bpl   Anim_Wait                  >>
    908                                   * no offset table                >>
    909                                   * anim is the address of anim    >>
    910  4+1   72A9 E6   1F               ldb   -1,x
    911  4+1   72AB E7   49                     stb   anim_frame_duration,u>>
    912                                                                    >>
    913  4+1   72AD E6   48               ldb   anim_frame,u               >>
    914  2     72AF 58                    aslb
    915  4+1   72B0 31   85               leay  b,x
    916  5+0   72B2 EC   A4               ldd   ,y                         >>
    917                                   * bmi   Anim_End_FF              >>
    918  2     72B4 81   FA                     cmpa  #$FA                 >>
    919  3     72B6 24   15                     bhs   Anim_End_FF          >>
    920                                                                    >>
    921        72B8               Anim_Next                                >>
    922                                      * ne pas utiliser             >>
    923  5+1   72B8 ED   4A               std   image_set,u                >>
    924  4+1   72BA E6   C8 1A            ldb   status,u                   >>
    925  2     72BD C4   03               andb  #status_x_orientation+statu>>
    926  5     72BF F7   72C7             stb   Anim_dyn+1
    927                                                                    >>
    928  4+1   72C2 A6   42               lda   render_flags,u             >>
    929  2     72C4 84   FC               anda  #:(render_xmirror_mask+rend>>
    930        72C6               Anim_dyn
    931  2     72C6 8A   00               ora   #$00                       >>
    932                                                                    >>
    933  4+1   72C8 A7   42               sta   render_flags,u
    934  6+1   72CA 6C   48               inc   anim_frame,u               >>
    935                                                                    >>
    936        72CC               Anim_Wait                                >>
    937  5     72CC 39                    rts                              >>
    938                                                                    >>
    939                                                                    >>
    940        72CD               Anim_End_FF                              >>
    941  2     72CD 4C                    inca                             >>
    942  3     72CE 26   08               bne   Anim_End_FE                >>
    943  2     72D0 C6   00                     ldb   #0
    944  4+1   72D2 E7   48               stb   anim_frame,u               >>
    945  5+0   72D4 EC   84               ldd   ,x                         >>
    946  3     72D6 20   E0               bra   Anim_Next                  >>
    947                                                                    >>
    948                                                                    >>
    949        72D8               Anim_End_FE                              >>
    950  2     72D8 4C                    inca                             >>
    951  3     72D9 26   0E               bne   Anim_End_FD                >>
    952  4+1   72DB A6   48               lda   anim_frame,u
    953  5     72DD F7   72E1             stb   Anim_End_FE_dyn+1          >>
    954        72E0               Anim_End_FE_dyn
    955  2     72E0 80   00               suba  #$00                       >>
    956  4+1   72E2 A7   48               sta   anim_frame,u               >>
    957                                                                    >>
    958  2     72E4 48                    asla
    959  5+1   72E5 EC   86               ldd   a,x                        >>
    960  3     72E7 20   CF               bra   Anim_Next                  >>
    961                                                                    >>
    962                                                                    >>
    963        72E9               Anim_End_FD                              >>
    964  2     72E9 4C                    inca                             >>
    965  3     72EA 26   05               bne   Anim_End_FC                >>
    966  5+1   72EC EC   21               ldd   1,y                        >>
    967  5+1   72EE ED   44               std   anim,u                     >>
    968  5     72F0 39                    rts                              >>
    969                                                                    >>
    970                                                                    >>
    971        72F1               Anim_End_FC                              >>
    972  2     72F1 4C                    inca                             >>
    973  3     72F2 26   0F               bne   Anim_End_FB                >>
    974  4+1   72F4 E6   C8 18            ldb   routine,u
    975  2     72F7 CB   03               addb  #$03
    976  4+1   72F9 E7   C8 18            stb   routine,u                  >>
    977  2     72FC 86   00               lda   #0
    978  4+1   72FE A7   49               sta   anim_frame_duration,u      >>
    979  6+1   7300 6C   48               inc   anim_frame,u               >>
    980  5     7302 39                    rts                              >>
    981                                                                    >>
    982                                                                    >>
    983        7303               Anim_End_FB                              >>
    984  2     7303 4C                    inca                             >>
    985  3     7304 26   08               bne   Anim_End_FA                >>
    986  2     7306 86   00               lda   #0
    987  4+1   7308 A7   48               sta   anim_frame,u               >>
    988  4+1   730A A7   C8 19            sta   routine_secondary,u        >>
    989  5     730D 39                    rts                              >>
    990                                                                    >>
    991                                                                    >>
    992        730E               Anim_End_FA                              >>
    993  2     730E 4C                    inca                             >>
    994  3     730F 26   08               bne   Anim_End                   >>
    995  4+1   7311 E6   C8 19            ldb   routine_secondary,u        >>
    996  2     7314 CB   03               addb  #$03
    997  4+1   7316 E7   C8 19            stb   routine_secondary,u
    998        7319               Anim_End
    999  5     7319 39                    rts                              >>
   1000                                                                    >>
   1001                                                                    >>
   1002                                                                    >>
   1003                                                                    >>
   1004                                                                    >>
   1005                                                                    >>
   1006                                                                    >>
   1007                                                                    >>
   1008                                                                    >>
   1009                                                                    >>
   1010
   1011                                   INCLUD OBJMOVE
   1012                           * --------------------------------------->>
   1013                           * Subroutine translating object speed to >>
   1014                           * This moves the object horizontally and >>
   1015                           * but does not apply gravity to it
   1016                           * --------------------------------------->>
   1017
   1018                                                                  *;>>
   1019                                                                  *;>>
   1020                                                                  *;>>
   1021                                                                  *;>>
   1022                                                                  *;>>
   1023                                                                  *
   1024                                                                  *;>>
   1025                                                                  *
   1026                                                                  *;>>
   1027        731A               ObjectMove                             *O>>
   1028                                                                  * >>
   1029                                                                  * >>
   1030                                                                  * >>
   1031                                                                  * >>
   1032                                                                  * >>
   1033                                                                  * >>
   1034  4+1   731A E6   C8 14            ldb   x_vel,u
   1035  2     731D 1D                    sex                            ; >>
   1036  5     731E B7   732B             sta   am_ObjectMove_01+1
   1037  5+1   7321 EC   C8 14            ldd   x_vel,u
   1038  6+1   7324 E3   4D               addd  x_pos+1,u                ; >>
   1039  5+1   7326 ED   4D               std   x_pos+1,u                ; >>
   1040  4+1   7328 A6   4C               lda   x_pos,u
   1041        732A               am_ObjectMove_01
   1042  2     732A 89   00               adca  #$00                     ; >>
   1043  4+1   732C A7   4C               sta   x_pos,u                  ; >>
   1044                            
   1045                                                                  * >>
   1046                                                                  * >>
   1047                                                                  * >>
   1048                                                                  * >>
   1049                                                                  * >>
   1050                                                                  * >>
   1051  4+1   732E E6   C8 16            ldb   y_vel,u
   1052  2     7331 1D                    sex                            ; >>
   1053  5     7332 B7   7341             sta   am_ObjectMove_02+1
   1054  5+1   7335 EC   C8 16            ldd   y_vel,u
   1055  6+1   7338 E3   C8 10            addd  y_pos+1,u                ; >>
   1056  5+1   733B ED   C8 10            std   y_pos+1,u                ; >>
   1057  4+1   733E A6   4F               lda   y_pos,u
   1058        7340               am_ObjectMove_02
   1059  2     7340 89   00               adca  #$00                     ; >>
   1060  4+1   7342 A7   4F               sta   y_pos,u                  ; >>
   1061  5     7344 39                    rts                            * >>
   1062                                                                  *;>>
   1063                                                                  *;>>
   1064
   1065                                   INCLUD OBJLOAD
   1066                           * --------------------------------------->>
   1067                           * Single object loading subroutine
   1068                           * Find an empty object array
   1069                           *
   1070                           * input  REG : [u] pointeur sur l'objet c>>
   1071                           * output REG : [x] pointeur sur l'objet l>>
   1072                           * --------------------------------------->>
   1073
   1074                                                                  *;>>
   1075                                                                  *;>>
   1076                                                                  *;>>
   1077                                                                  *;>>
   1078                                                                  *;>>
   1079                                                                  *
   1080                                                                  *;>>
   1081                                                                  *S>>
   1082                                                                  * >>
   1083                                                                  * >>
   1084                                                                  * >>
   1085                                                                  * >>
   1086                                                                  * >>
   1087                                                                  *
   1088                                                                  */>>
   1089                                                                  * >>
   1090                                                                  * >>
   1091                                                                  * >>
   1092                                                                  * >>
   1093                                                                  *
   1094                                                                  *r>>
   1095                                                                  * >>
   1096                                                                  *;>>
   1097                                                                  *;>>
   1098                                                                  *;>>
   1099                                                                  *;>>
   1100                                                                  *;>>
   1101                                                                  *
   1102                                                                  *;>>
   1103                                                                  *
   1104                                                                  *;>>
   1105        7345               SingleObjLoad2                         *S>>
   1106  6     7345 1F   31               tfr   u,x                      * >>
   1107  4+1   7347 30   88 5A            leax  next_object,x            * >>
   1108  4     734A 8C   705F             cmpx  #Dynamic_Object_RAM_End  * >>
   1109  3     734D 27   0C               beq   SingleObjLoad2_02        * >>
   1110                                                                  * >>
   1111                                                                  * >>
   1112                                                                  * >>
   1113                                                                  * >>
   1114                                                                  * >>
   1115                                                                  * >>
   1116                                                                  * >>
   1117                                                                  * >>
   1118                                                                  *
   1119        734F               SingleObjLoad2_01                      *->>
   1120  6+0   734F 6D   84               tst   ,x                       * >>
   1121  3     7351 27   08               beq   SingleObjLoad2_02        * >>
   1122  4+1   7353 30   88 5A            leax  next_object,x            * >>
   1123  4     7356 8C   705F             cmpx  #Dynamic_Object_RAM_End
   1124  3     7359 26   F4               bne   SingleObjLoad2_01        * >>
   1125                                                                  *
   1126        735B               SingleObjLoad2_02                      *r>>
   1127  5     735B 39                    rts                            * >>
   1128                                                                  *
   1129                                                                  * >>
   1130                                                                  *+>>
   1131                                                                  *.>>
   1132                                                                  *.>>
   1133                                                                  *
   1134                                                                  * >>
   1135                                                                  * >>
   1136                                                                  * >>
   1137                                                                  * >>
   1138                                                                  * >>
   1139                                                                  * >>
   1140                                                                  *
   1141                                                                  *.>>
   1142                                                                  *.>>
   1143                                                                  * >>
   1144                                                                  * >>
   1145                                                                  * >>
   1146                                                                  *;>>
   1147                                                                  *;>>
   1148                                                                  *;>>
   1149                                                                  *;>>
   1150                                                                  *;>>
   1151                                                                  *
   1152                                                                  *;>>
   1153                                                                  *
   1154                                                                  *;>>
   1155                                                                  *S>>
   1156                                                                  * >>
   1157                                                                  * >>
   1158                                                                  *
   1159                                                                  *->>
   1160                                                                  * >>
   1161                                                                  * >>
   1162                                                                  * >>
   1163                                                                  * >>
   1164                                                                  *
   1165                                                                  *r>>
   1166                                                                  * >>
   1167                                                                  *;>>
   1168
   1169
   1170                                   INCLUD DELETOBJ
   1171                           * --------------------------------------->>
   1172                           * DeleteObject
   1173                           * ------------
   1174                           * Subroutine to delete an object.
   1175                           * If the object is rendered as a sprite i>>
   1176                           * routine
   1177                           *
   1178                           * DeleteObject
   1179                           * input REG : [u] object pointer (OST)
   1180                           *
   1181                           * DeleteObject_x
   1182                           * input REG : [x] object pointer (OST)
   1183                           * --------------------------------------->>
   1184
   1185                                                                  *;>>
   1186                                                                  *;>>
   1187                                                                  *;>>
   1188                                                                  *
   1189                                                                  *;>>
   1190                                                                  *
   1191                                                                  *;>>
   1192        735C               DeleteObject_x *@globals               *D>>
   1193  5+6   735C 34   56               pshs  d,x,u                    * >>
   1194  4+0   735E 33   84               leau  ,x                       *;>>
   1195  3     7360 20   02               bra   DOB_Start
   1196                            
   1197        7362               DeleteObject *@globals                 *D>>
   1198  5+6   7362 34   56               pshs  d,x,u
   1199                            
   1200        7364               DOB_Start
   1201  4+1   7364 A6   C8 47            lda   rsv_prev_render_flags_0,u
   1202  3     7367 2A   27               bpl   DOB_RemoveFromDPSB0        >>
   1203
   1204        7369               DOB_ToDeleteFlag0
   1205  4+1   7369 A6   42               lda   render_flags,u
   1206  2     736B 8A   40               ora   #render_todelete_mask
   1207  4+1   736D A7   42               sta   render_flags,u             >>
   1208                            
   1209        736F               DOB_Unset0
   1210  6     736F BE   6505             ldx   Lst_Priority_Unset_0       >>
   1211  5+0   7372 EF   84               stu   ,x
   1212  4+1   7374 30   02               leax  2,x
   1213  6     7376 BF   6505             stx   Lst_Priority_Unset_0
   1214                            
   1215        7379               DOB_TestOnscreen1
   1216  4+1   7379 A6   C8 59            lda   rsv_prev_render_flags_1,u
   1217  3     737C 2A   54               bpl   DOB_RemoveFromDPSB1        >>
   1218                            
   1219        737E               DOB_ToDeleteFlag1
   1220  4+1   737E A6   42               lda   render_flags,u
   1221  2     7380 8A   40               ora   #render_todelete_mask
   1222  4+1   7382 A7   42               sta   render_flags,u             >>
   1223                            
   1224        7384               DOB_Unset1
   1225  6     7384 BE   656B             ldx   Lst_Priority_Unset_1       >>
   1226  5+0   7387 EF   84               stu   ,x
   1227  4+1   7389 30   02               leax  2,x
   1228  6     738B BF   656B             stx   Lst_Priority_Unset_1
   1229  5+8   738E 35   D6               puls  d,x,u,pc                   >>
   1230
   1231        7390               DOB_RemoveFromDPSB0
   1232  5+1   7390 EC   C8 37            ldd   rsv_priority_prev_obj_0,u  >>
   1233  3     7393 26   11               bne   DOB_ChainPrevB0
   1234                            
   1235  4+1   7395 A6   C8 36            lda   rsv_priority_0,u
   1236  2     7398 48                    lsla
   1237  4     7399 108E 64E1             ldy   #Tbl_Priority_First_Entry_0>>
   1238  4+1   739D 31   A6               leay  a,y
   1239  5+1   739F EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1240  5+0   73A2 ED   A4               std   ,y
   1241  3     73A4 20   0A               bra   DOB_CheckPrioNextB0
   1242                            
   1243        73A6               DOB_ChainPrevB0
   1244  5+1   73A6 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1245  6+1   73A9 10AE C8 37            ldy   rsv_priority_prev_obj_0,u
   1246  5+1   73AD ED   A8 39            std   rsv_priority_next_obj_0,y
   1247
   1248        73B0               DOB_CheckPrioNextB0
   1249  5+1   73B0 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1250  3     73B3 26   11               bne   DOB_ChainNextB0
   1251
   1252  4+1   73B5 A6   C8 36            lda   rsv_priority_0,u
   1253  2     73B8 48                    lsla
   1254  4     73B9 108E 64F3             ldy   #Tbl_Priority_Last_Entry_0
   1255  4+1   73BD 31   A6               leay  a,y
   1256  5+1   73BF EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   1257  5+0   73C2 ED   A4               std   ,y
   1258  3     73C4 20   B3               bra   DOB_TestOnscreen1
   1259                            
   1260        73C6               DOB_ChainNextB0
   1261  5+1   73C6 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   1262  6+1   73C9 10AE C8 39            ldy   rsv_priority_next_obj_0,u
   1263  5+1   73CD ED   A8 37            std   rsv_priority_prev_obj_0,y
   1264  3     73D0 20   A7               bra   DOB_TestOnscreen1
   1265
   1266        73D2               DOB_RemoveFromDPSB1
   1267  5+1   73D2 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1268  3     73D5 26   11               bne   DOB_ChainPrevB1
   1269                            
   1270  4+1   73D7 A6   C8 48            lda   rsv_priority_1,u
   1271  2     73DA 48                    lsla
   1272  4     73DB 108E 6547             ldy   #Tbl_Priority_First_Entry_1>>
   1273  4+1   73DF 31   A6               leay  a,y
   1274  5+1   73E1 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1275  5+0   73E4 ED   A4               std   ,y
   1276  3     73E6 20   0A               bra   DOB_CheckPrioNextB1
   1277                            
   1278        73E8               DOB_ChainPrevB1
   1279  5+1   73E8 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1280  6+1   73EB 10AE C8 49            ldy   rsv_priority_prev_obj_1,u
   1281  5+1   73EF ED   A8 4B            std   rsv_priority_next_obj_1,y
   1282
   1283        73F2               DOB_CheckPrioNextB1
   1284  5+1   73F2 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1285  3     73F5 26   19               bne   DOB_ChainNextB1
   1286
   1287  4+1   73F7 A6   C8 48            lda   rsv_priority_1,u
   1288  2     73FA 48                    lsla
   1289  4     73FB 108E 6559             ldy   #Tbl_Priority_Last_Entry_1
   1290  4+1   73FF 31   A6               leay  a,y
   1291  5+1   7401 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1292  5+0   7404 ED   A4               std   ,y
   1293  4+1   7406 A6   C8 47            lda   rsv_prev_render_flags_0,u
   1294  3     7409 2B   03               bmi   DOB_rts                    >>
   1295  8     740B BD   7424             jsr   ClearObj                   >>
   1296        740E               DOB_rts                                *
   1297  5+8   740E 35   D6               puls  d,x,u,pc
   1298                            
   1299        7410               DOB_ChainNextB1
   1300  5+1   7410 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1301  6+1   7413 10AE C8 4B            ldy   rsv_priority_next_obj_1,u
   1302  5+1   7417 ED   A8 49            std   rsv_priority_prev_obj_1,y
   1303  4+1   741A A6   C8 47            lda   rsv_prev_render_flags_0,u
   1304  3     741D 2B   EF               bmi   DOB_rts                    >>
   1305  8     741F BD   7424             jsr   ClearObj                   >>
   1306  5+8   7422 35   D6               puls  d,x,u,pc
   1307
   1308                                                                  * >>
   1309                                                                  *
   1310                                                                  * >>
   1311                                                                  * >>
   1312                                                                  *->>
   1313                                                                  * >>
   1314                                                                  * >>
   1315                                                                  * >>
   1316                                                                  * >>
   1317                                                                  *
   1318                                                                  * >>
   1319                                                                  *;>>
   1320
   1321                                   INCLUD CLEAROBJ
   1322                           * --------------------------------------->>
   1323                           * ClearObj
   1324                           * --------
   1325                           * Subroutine to clear an object data in O>>
   1326                           *
   1327                           * input REG : [u] pointer on objet (OST)
   1328                           * clear REG : [d,y]
   1329                           * --------------------------------------->>
   1330
   1331        7424               ClearObj *@globals
   1332  5+8   7424 34   76               pshs  d,x,y,u
   1333  7     7426 10FF 744D             sts   CLO_1+2
   1334  4+1   742A 32   C8 5A            leas  object_size,u
   1335  3     742D CC   0000             ldd   #$0000
   1336  3     7430 8E   0000             ldx   #$0000
   1337  4+0   7433 31   84               leay  ,x
   1338  4+0   7435 33   84               leau  ,x
   1339  5+8   7437 34   76               pshs  d,x,y,u
   1340  5+8   7439 34   76               pshs  d,x,y,u
   1341  5+8   743B 34   76               pshs  d,x,y,u
   1342  5+8   743D 34   76               pshs  d,x,y,u
   1343  5+8   743F 34   76               pshs  d,x,y,u
   1344  5+8   7441 34   76               pshs  d,x,y,u
   1345  5+8   7443 34   76               pshs  d,x,y,u
   1346  5+8   7445 34   76               pshs  d,x,y,u
   1347  5+8   7447 34   76               pshs  d,x,y,u
   1348  4+0   7449 33   E4               leau  ,s
   1349        744B               CLO_1
   1350  4     744B 10CE 0000             lds   #$0000        ; start of ob>>
   1351  5+6   744F 36   36               pshu  d,x,y         ; saving 12 b>>
   1352  5+6   7451 36   36               pshu  d,x,y         ; DEPENDENCY >>
   1353  5+6   7453 36   36               pshu  d,x,y         ; DEPENDENCY >>
   1354        7455               CLO_2
   1355  5+10  7455 35   F6               puls  d,x,y,u,pc
   1356
   1357                                   INCLUD CHECKSPR
   1358                           * --------------------------------------->>
   1359                           * CheckSpritesRefresh
   1360                           * -------------------
   1361                           * Subroutine to determine if sprites are >>
   1362                           * Read Display Priority Structure (back t>>
   1363                           * priority: 0 - unregistred
   1364                           * priority: 1 - register non moving overl>>
   1365                           * priority; 2-8 - register moving sprite >>
   1366                           *
   1367                           * input REG : none
   1368                           * --------------------------------------->>
   1369
   1370        7457 0000          cur_priority            fdb   $00
   1371        7459 0000          cur_ptr_sub_obj_erase   fdb   $0000
   1372        745B 0000          cur_ptr_sub_obj_draw    fdb   $0000
   1373                            
   1374        745D               CheckSpritesRefresh
   1375
   1376        745D               CSR_Start
   1377  3     745D CC   65AD             ldd   #Tbl_Sub_Object_Erase
   1378  6     7460 FD   7459             std   cur_ptr_sub_obj_erase
   1379  3     7463 CC   65ED             ldd   #Tbl_Sub_Object_Draw
   1380  6     7466 FD   745B             std   cur_ptr_sub_obj_draw
   1381  5     7469 B6   613A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1382  3     746C 26   6E               bne   CSR_SetBuffer1
   1383                            
   1384        746E               CSR_SetBuffer0
   1385  2     746E 86   36               lda   #rsv_buffer_0              >>
   1386  5     7470 B7   754C             sta   CSR_ProcessEachPriorityLeve>>
   1387        7473               CSR_P8B0
   1388  6     7473 FE   64F1             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1389  3     7476 27   08               beq   CSR_P7B0
   1390  2     7478 86   08               lda   #$08
   1391  5     747A B7   7457             sta   cur_priority
   1392  8     747D BD   754A             jsr   CSR_ProcessEachPriorityLeve>>
   1393        7480               CSR_P7B0
   1394  6     7480 FE   64EF             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1395  3     7483 27   08               beq   CSR_P6B0
   1396  2     7485 86   07               lda   #$07
   1397  5     7487 B7   7457             sta   cur_priority
   1398  8     748A BD   754A             jsr   CSR_ProcessEachPriorityLeve>>
   1399        748D               CSR_P6B0
   1400  6     748D FE   64ED             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1401  3     7490 27   08               beq   CSR_P5B0
   1402  2     7492 86   06               lda   #$06
   1403  5     7494 B7   7457             sta   cur_priority
   1404  8     7497 BD   754A             jsr   CSR_ProcessEachPriorityLeve>>
   1405        749A               CSR_P5B0
   1406  6     749A FE   64EB             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1407  3     749D 27   08               beq   CSR_P4B0
   1408  2     749F 86   05               lda   #$05
   1409  5     74A1 B7   7457             sta   cur_priority
   1410  8     74A4 BD   754A             jsr   CSR_ProcessEachPriorityLeve>>
   1411        74A7               CSR_P4B0
   1412  6     74A7 FE   64E9             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1413  3     74AA 27   08               beq   CSR_P3B0
   1414  2     74AC 86   04               lda   #$04
   1415  5     74AE B7   7457             sta   cur_priority
   1416  8     74B1 BD   754A             jsr   CSR_ProcessEachPriorityLeve>>
   1417        74B4               CSR_P3B0
   1418  6     74B4 FE   64E7             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1419  3     74B7 27   08               beq   CSR_P2B0
   1420  2     74B9 86   03               lda   #$03
   1421  5     74BB B7   7457             sta   cur_priority
   1422  8     74BE BD   754A             jsr   CSR_ProcessEachPriorityLeve>>
   1423        74C1               CSR_P2B0
   1424  6     74C1 FE   64E5             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1425  3     74C4 27   08               beq   CSR_P1B0
   1426  2     74C6 86   02               lda   #$02
   1427  5     74C8 B7   7457             sta   cur_priority
   1428  8     74CB BD   754A             jsr   CSR_ProcessEachPriorityLeve>>
   1429        74CE               CSR_P1B0
   1430  6     74CE FE   64E3             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1431  3     74D1 27   08               beq   CSR_rtsB0
   1432  2     74D3 86   01               lda   #$01
   1433  5     74D5 B7   7457             sta   cur_priority
   1434  8     74D8 BD   754A             jsr   CSR_ProcessEachPriorityLeve>>
   1435        74DB               CSR_rtsB0
   1436  5     74DB 39                    rts
   1437                            
   1438        74DC               CSR_SetBuffer1
   1439  2     74DC 86   48               lda   #rsv_buffer_1              >>
   1440  5     74DE B7   754C             sta   CSR_ProcessEachPriorityLeve>>
   1441        74E1               CSR_P8B1
   1442  6     74E1 FE   6557             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1443  3     74E4 27   08               beq   CSR_P7B1
   1444  2     74E6 86   08               lda   #$08
   1445  5     74E8 B7   7457             sta   cur_priority
   1446  8     74EB BD   754A             jsr   CSR_ProcessEachPriorityLeve>>
   1447        74EE               CSR_P7B1
   1448  6     74EE FE   6555             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1449  3     74F1 27   08               beq   CSR_P6B1
   1450  2     74F3 86   07               lda   #$07
   1451  5     74F5 B7   7457             sta   cur_priority
   1452  8     74F8 BD   754A             jsr   CSR_ProcessEachPriorityLeve>>
   1453        74FB               CSR_P6B1
   1454  6     74FB FE   6553             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1455  3     74FE 27   08               beq   CSR_P5B1
   1456  2     7500 86   06               lda   #$06
   1457  5     7502 B7   7457             sta   cur_priority
   1458  8     7505 BD   754A             jsr   CSR_ProcessEachPriorityLeve>>
   1459        7508               CSR_P5B1
   1460  6     7508 FE   6551             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1461  3     750B 27   08               beq   CSR_P4B1
   1462  2     750D 86   05               lda   #$05
   1463  5     750F B7   7457             sta   cur_priority
   1464  8     7512 BD   754A             jsr   CSR_ProcessEachPriorityLeve>>
   1465        7515               CSR_P4B1
   1466  6     7515 FE   654F             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1467  3     7518 27   08               beq   CSR_P3B1
   1468  2     751A 86   04               lda   #$04
   1469  5     751C B7   7457             sta   cur_priority
   1470  8     751F BD   754A             jsr   CSR_ProcessEachPriorityLeve>>
   1471        7522               CSR_P3B1
   1472  6     7522 FE   654D             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1473  3     7525 27   08               beq   CSR_P2B1
   1474  2     7527 86   03               lda   #$03
   1475  5     7529 B7   7457             sta   cur_priority
   1476  8     752C BD   754A             jsr   CSR_ProcessEachPriorityLeve>>
   1477        752F               CSR_P2B1
   1478  6     752F FE   654B             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1479  3     7532 27   08               beq   CSR_P1B1
   1480  2     7534 86   02               lda   #$02
   1481  5     7536 B7   7457             sta   cur_priority
   1482  8     7539 BD   754A             jsr   CSR_ProcessEachPriorityLeve>>
   1483        753C               CSR_P1B1
   1484  6     753C FE   6549             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1485  3     753F 27   08               beq   CSR_rtsB1
   1486  2     7541 86   01               lda   #$01
   1487  5     7543 B7   7457             sta   cur_priority
   1488  8     7546 BD   754A             jsr   CSR_ProcessEachPriorityLeve>>
   1489        7549               CSR_rtsB1
   1490  5     7549 39                    rts
   1491
   1492        754A               CSR_ProcessEachPriorityLevel
   1493  4+1   754A 30   C8 10            leax  16,u                       >>
   1494                            
   1495        754D               CSR_CheckDelHide
   1496  4+1   754D A6   42               lda   render_flags,u
   1497  2     754F 84   60               anda  #render_hide_mask!render_to>>
   1498  3     7551 26   2B               bne   CSR_DoNotDisplaySprite
   1499
   1500        7553               CSR_CheckRefresh
   1501  4+1   7553 A6   C8 29            lda   rsv_render_flags,u
   1502  2     7556 84   01               anda  #rsv_render_checkrefresh_ma>>
   1503  6     7558 1026 00FE             lbne  CSR_CheckErase
   1504
   1505        755C               CSR_UpdSpriteImageBasedOnMirror
   1506  4+1   755C A6   C8 29            lda   rsv_render_flags,u
   1507  2     755F 8A   01               ora   #rsv_render_checkrefresh_ma>>
   1508  4+1   7561 A7   C8 29            sta   rsv_render_flags,u         >>
   1509                            
   1510  4+1   7564 A6   42               lda   render_flags,u             >>
   1511  2     7566 84   03               anda  #render_xmirror_mask!render>>
   1512  6+1   7568 10AE 4A               ldy   image_set,u
   1513  4+1   756B E6   26               ldb   image_center_offset,y
   1514  4+1   756D E7   C8 2C            stb   rsv_image_center_offset,u
   1515  4+1   7570 E6   A6               ldb   a,y
   1516  4+1   7572 31   A5               leay  b,y                        >>
   1517  6+1   7574 10AF C8 2E            sty   rsv_image_subset,u
   1518                            
   1519        7578               CSR_CheckPlayFieldCoord
   1520  4+1   7578 A6   42               lda   render_flags,u
   1521  2     757A 84   10               anda  #render_playfieldcoord_mask>>
   1522  3     757C 27   2A               beq   CSR_CheckVerticalPosition  >>
   1523                            
   1524                                   * not yet implemented
   1525                                   * need to be updated with new alg>>
   1526                                   *ldd   x_pos,u
   1527                                   *subd  Glb_Camera_X_Pos
   1528                                   *ldy   rsv_mapping_frame,u
   1529                                   *addd  image_x_offset,y
   1530                                   *lbvs   CSR_SetOutOfRange        >>
   1531                                   *lbmi   CSR_SetOutOfRange        >>
   1532                                   *stb   x_pixel,u
   1533                                   *addb  image_x_size_l,y
   1534                                   *lbvs   CSR_SetOutOfRange        >>
   1535                                   *stb   rsv_x2_pixel,u
   1536                                   *cmpb  #screen_width
   1537                                   *lbgt   CSR_SetOutOfRange        >>
   1538
   1539                                   *ldd   y_pos,u
   1540                                   *subd  Glb_Camera_Y_Pos
   1541                                   *addd  image_y1_offset,y
   1542                                   *bvs   CSR_SetOutOfRange         >>
   1543                                   *bmi   CSR_SetOutOfRange         >>
   1544                                   *stb   y_pixel,u
   1545                                   *addb  image_y_size_l,y
   1546                                   *bvs   CSR_SetOutOfRange         >>
   1547                                   *stb   rsv_y2_pixel,u
   1548                                   *cmpb  #screen_bottom
   1549                                   *bhi   CSR_SetOutOfRange         >>
   1550                                   *lda   rsv_render_flags,u
   1551                                   *anda  #:rsv_render_outofrange_ma>>
   1552                                   *sta   rsv_render_flags,u
   1553                                   *bra   CSR_CheckErase
   1554                            
   1555        757E               CSR_DoNotDisplaySprite
   1556  4+1   757E A6   43               lda   priority,u
   1557  5     7580 B1   7457             cmpa  cur_priority
   1558  3     7583 26   1C               bne   CSR_NextObject             >>
   1559                            
   1560  4+1   7585 A6   C8 29            lda   rsv_render_flags,u
   1561  2     7588 84   F9               anda  #:rsv_render_erasesprite_ma>>
   1562  4+1   758A A7   C8 29            sta   rsv_render_flags,u
   1563                            
   1564  4+1   758D E6   88 11            ldb   buf_prev_render_flags,x
   1565  3     7590 2A   0F               bpl   CSR_NextObject             >>
   1566                            
   1567  2     7592 8A   02               ora   #rsv_render_erasesprite_mas>>
   1568  4+1   7594 A7   C8 29            sta   rsv_render_flags,u
   1569                            
   1570  7     7597 10BE 7459             ldy   cur_ptr_sub_obj_erase      >>
   1571  5+3   759B EF   A1               stu   ,y++
   1572  7     759D 10BF 7459             sty   cur_ptr_sub_obj_erase
   1573                            
   1574        75A1               CSR_NextObject
   1575  5+1   75A1 EE   03               ldu   buf_priority_next_obj,x
   1576  6     75A3 1026 FFA3             lbne  CSR_ProcessEachPriorityLeve>>
   1577  5     75A7 39                    rts
   1578
   1579        75A8               CSR_CheckVerticalPosition
   1580  4+1   75A8 A6   C8 12            lda   x_pixel,u                  >>
   1581  4+1   75AB A8   C8 2C            eora  rsv_image_center_offset,u  >>
   1582  2     75AE 84   01               anda  #$01                       >>
   1583  2     75B0 48                    asla                             >>
   1584  4+1   75B1 E6   42               ldb   render_flags,u
   1585  2     75B3 C4   04               andb  #render_overlay_mask       >>
   1586  3     75B5 27   01               beq   CSR_NoOverlay
   1587  2     75B7 4C                    inca
   1588        75B8               CSR_NoOverlay
   1589  4+1   75B8 E6   A6               ldb   a,y
   1590  3     75BA 27   08               beq   CSR_NoDefinedFrame
   1591  4+1   75BC 31   A5               leay  b,y                        >>
   1592  6+1   75BE 10AF C8 30            sty   rsv_mapping_frame,u
   1593  3     75C2 20   16               bra CSR_CVP_Continue
   1594                            
   1595        75C4               CSR_NoDefinedFrame
   1596  2     75C4 84   01               anda  #$01                       >>
   1597  4+1   75C6 E6   A6               ldb   a,y
   1598  3     75C8 27   08               beq   CSR_NoFrameFound           >>
   1599  4+1   75CA 31   A5               leay  b,y                        >>
   1600  6+1   75CC 10AF C8 30            sty   rsv_mapping_frame,u
   1601  3     75D0 20   08               bra CSR_CVP_Continue
   1602                            
   1603        75D2               CSR_NoFrameFound
   1604  4     75D2 108E 0000             ldy   #$0000
   1605  6+1   75D6 10AF C8 30            sty   rsv_mapping_frame,u
   1606
   1607        75DA               CSR_CVP_Continue
   1608  4+1   75DA E6   C8 13            ldb   y_pixel,u                  >>
   1609  6+1   75DD 10AE C8 2E            ldy   rsv_image_subset,u
   1610  4+1   75E1 EB   25               addb  image_subset_y1_offset,y
   1611  2     75E3 C1   E3               cmpb  #screen_bottom
   1612  3     75E5 22   6B               bhi   CSR_SetOutOfRange
   1613  2     75E7 C1   1C               cmpb  #screen_top
   1614  3     75E9 25   67               blo   CSR_SetOutOfRange
   1615  4+1   75EB E7   C8 33            stb   rsv_y1_pixel,u
   1616  6+1   75EE 10AE 4A               ldy   image_set,u
   1617  4+1   75F1 EB   25               addb  image_y_size,y
   1618  2     75F3 C1   E3               cmpb  #screen_bottom
   1619  3     75F5 22   5B               bhi   CSR_SetOutOfRange
   1620  2     75F7 C1   1C               cmpb  #screen_top
   1621  3     75F9 25   57               blo   CSR_SetOutOfRange
   1622  4+1   75FB E7   C8 35            stb   rsv_y2_pixel,u
   1623  4+1   75FE E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1624  3     7601 25   4F               blo   CSR_SetOutOfRange
   1625                            
   1626  4+1   7603 A6   42               lda   render_flags,u             >>
   1627  2     7605 85   80               bita  #render_xloop_mask
   1628  3     7607 26   2B               bne   CSR_DontCheckXFrontier
   1629                            
   1630  4+1   7609 E6   C8 12            ldb   x_pixel,u
   1631  6+1   760C 10AE C8 2E            ldy   rsv_image_subset,u
   1632  4+1   7610 EB   24               addb  image_subset_x1_offset,y
   1633  2     7612 C1   CF               cmpb  #screen_right
   1634  3     7614 22   3C               bhi   CSR_SetOutOfRange
   1635  2     7616 C1   30               cmpb  #screen_left
   1636  3     7618 25   38               blo   CSR_SetOutOfRange
   1637  4+1   761A E7   C8 32            stb   rsv_x1_pixel,u
   1638  6+1   761D 10AE 4A               ldy   image_set,u
   1639  4+1   7620 EB   24               addb  image_x_size,y
   1640  2     7622 C1   CF               cmpb  #screen_right
   1641  3     7624 22   2C               bhi   CSR_SetOutOfRange
   1642  2     7626 C1   30               cmpb  #screen_left
   1643  3     7628 25   28               blo   CSR_SetOutOfRange
   1644  4+1   762A E7   C8 34            stb   rsv_x2_pixel,u
   1645  4+1   762D E1   C8 32            cmpb  rsv_x1_pixel,u             >>
   1646  3     7630 25   20               blo   CSR_SetOutOfRange
   1647                            
   1648  3     7632 20   14               bra   CSR_DontCheckXFrontier_end
   1649                            
   1650        7634               CSR_DontCheckXFrontier
   1651  4+1   7634 E6   C8 12            ldb   x_pixel,u
   1652  6+1   7637 10AE C8 2E            ldy   rsv_image_subset,u
   1653  4+1   763B EB   24               addb  image_subset_x1_offset,y
   1654  4+1   763D E7   C8 32            stb   rsv_x1_pixel,u
   1655                            
   1656  6+1   7640 10AE 4A               ldy   image_set,u
   1657  4+1   7643 EB   24               addb  image_x_size,y
   1658  4+1   7645 E7   C8 34            stb   rsv_x2_pixel,u
   1659
   1660        7648               CSR_DontCheckXFrontier_end
   1661  4+1   7648 A6   C8 29            lda   rsv_render_flags,u
   1662  2     764B 84   F7               anda  #:rsv_render_outofrange_mas>>
   1663  4+1   764D A7   C8 29            sta   rsv_render_flags,u
   1664  3     7650 20   08               bra   CSR_CheckErase
   1665                            
   1666        7652               CSR_SetOutOfRange
   1667  4+1   7652 A6   C8 29            lda   rsv_render_flags,u
   1668  2     7655 8A   08               ora   #rsv_render_outofrange_mask>>
   1669  4+1   7657 A7   C8 29            sta   rsv_render_flags,u
   1670
   1671        765A               CSR_CheckErase
   1672  6     765A BF   7738             stx   CSR_CheckDraw+1
   1673  4+1   765D A6   00               lda   buf_priority,x
   1674  5     765F B1   7457             cmpa  cur_priority
   1675  6     7662 1026 00D1             lbne  CSR_CheckDraw
   1676                            
   1677  7     7666 10BE 7459             ldy   cur_ptr_sub_obj_erase
   1678                            
   1679  4+1   766A A6   C8 29            lda   rsv_render_flags,u
   1680  2     766D 84   08               anda  #rsv_render_outofrange_mask>>
   1681  3     766F 27   09               beq   CSR_CheckErase_InRange
   1682  4+1   7671 A6   88 11            lda   buf_prev_render_flags,x
   1683  6     7674 102A 010E             lbpl  CSR_SetEraseDrawFalse      >>
   1684  3     7678 20   20               bra   CSR_SetEraseTrue
   1685                            
   1686        767A               CSR_CheckErase_InRange
   1687  4+1   767A A6   88 11            lda   buf_prev_render_flags,x
   1688  6     767D 102A 00AE             lbpl  CSR_SetEraseFalse          >>
   1689  5+1   7681 EC   C8 12            ldd   xy_pixel,u
   1690  2     7684 44                    lsra                             >>
   1691  7+1   7685 10A3 0B               cmpd  buf_prev_xy_pixel,x
   1692  3     7688 26   10               bne   CSR_SetEraseTrue           >>
   1693  5+1   768A EC   C8 30            ldd   rsv_mapping_frame,u
   1694  7+1   768D 10A3 07               cmpd  buf_prev_mapping_frame,x
   1695  3     7690 26   08               bne   CSR_SetEraseTrue           >>
   1696  4+1   7692 A6   43               lda   priority,u
   1697  4+1   7694 A1   00               cmpa  buf_priority,x
   1698  3     7696 26   02               bne   CSR_SetEraseTrue           >>
   1699  3     7698 20   11               bra   CSR_SubEraseSpriteSearchIni>>
   1700                            
   1701        769A               CSR_SetEraseTrue
   1702  4+1   769A A6   C8 29            lda   rsv_render_flags,u
   1703  2     769D 8A   02               ora   #rsv_render_erasesprite_mas>>
   1704  4+1   769F A7   C8 29            sta   rsv_render_flags,u
   1705                            
   1706  5+3   76A2 EF   A1               stu   ,y++
   1707  7     76A4 10BF 7459             sty   cur_ptr_sub_obj_erase
   1708                            
   1709  5     76A8 16   008C             lbra   CSR_CheckDraw
   1710                            
   1711        76AB               CSR_SubEraseSpriteSearchInit
   1712
   1713                                   * search a collision with a sprit>>
   1714                                   * the sprite under should have to>>
   1715                                   * in this case it forces the refr>>
   1716                                   * as a sub loop, this should be o>>
   1717                                   * there are two lists because a s>>
   1718                                   * and displayed at another positi>>
   1719
   1720  6     76AB BE   7459             ldx   cur_ptr_sub_obj_erase
   1721  5     76AE B6   613A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1722  3     76B1 26   28               bne   CSR_SubEraseSearchB1
   1723                            
   1724        76B3               CSR_SubEraseSearchB0
   1725  4     76B3 8C   65AD             cmpx  #Tbl_Sub_Object_Erase
   1726  3     76B6 27   4B               beq   CSR_SubDrawSpriteSearchInit>>
   1727  6+3   76B8 10AE 83               ldy   ,--x
   1728                            
   1729        76BB               CSR_SubEraseCheckCollisionB0
   1730  5+1   76BB EC   A8 43            ldd   rsv_prev_xy1_pixel_0,y     >>
   1731  4+1   76BE A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1732  3     76C1 22   F0               bhi   CSR_SubEraseSearchB0
   1733  4+1   76C3 E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1734  3     76C6 22   EB               bhi   CSR_SubEraseSearchB0
   1735  5+1   76C8 EC   A8 45            ldd   rsv_prev_xy2_pixel_0,y     >>
   1736  4+1   76CB A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1737  3     76CE 25   E3               blo   CSR_SubEraseSearchB0
   1738  4+1   76D0 E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1739  3     76D3 25   DE               blo   CSR_SubEraseSearchB0
   1740                            
   1741  7     76D5 10BE 7459             ldy   cur_ptr_sub_obj_erase
   1742  3     76D9 20   BF               bra   CSR_SetEraseTrue           >>
   1743
   1744        76DB               CSR_SubEraseSearchB1
   1745  4     76DB 8C   65AD             cmpx  #Tbl_Sub_Object_Erase
   1746  3     76DE 27   23               beq   CSR_SubDrawSpriteSearchInit>>
   1747  6+3   76E0 10AE 83               ldy   ,--x
   1748                            
   1749        76E3               CSR_SubEraseCheckCollisionB1
   1750  5+1   76E3 EC   A8 55            ldd   rsv_prev_xy1_pixel_1,y     >>
   1751  4+1   76E6 A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1752  3     76E9 22   F0               bhi   CSR_SubEraseSearchB1
   1753  4+1   76EB E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1754  3     76EE 22   EB               bhi   CSR_SubEraseSearchB1
   1755  5+1   76F0 EC   A8 57            ldd   rsv_prev_xy2_pixel_1,y     >>
   1756  4+1   76F3 A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1757  3     76F6 25   E3               blo   CSR_SubEraseSearchB1
   1758  4+1   76F8 E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1759  3     76FB 25   DE               blo   CSR_SubEraseSearchB1
   1760                            
   1761  7     76FD 10BE 7459             ldy   cur_ptr_sub_obj_erase
   1762  3     7701 20   97               bra   CSR_SetEraseTrue           >>
   1763
   1764        7703               CSR_SubDrawSpriteSearchInit
   1765  6     7703 BE   745B             ldx   cur_ptr_sub_obj_draw
   1766                            
   1767        7706               CSR_SubDrawSearch
   1768  4     7706 8C   65ED             cmpx  #Tbl_Sub_Object_Draw
   1769  3     7709 27   24               beq   CSR_SetEraseFalse          >>
   1770  6+3   770B 10AE 83               ldy   ,--x
   1771
   1772        770E               CSR_SubDrawCheckCollision
   1773  5+1   770E EC   A8 32            ldd   rsv_xy1_pixel,y            >>
   1774  4+1   7711 A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1775  3     7714 22   F0               bhi   CSR_SubDrawSearch
   1776  4+1   7716 E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1777  3     7719 22   EB               bhi   CSR_SubDrawSearch
   1778  5+1   771B EC   A8 34            ldd   rsv_xy2_pixel,y            >>
   1779  4+1   771E A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1780  3     7721 25   E3               blo   CSR_SubDrawSearch
   1781  4+1   7723 E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1782  3     7726 25   DE               blo   CSR_SubDrawSearch
   1783                            
   1784  7     7728 10BE 7459             ldy   cur_ptr_sub_obj_erase
   1785  5     772C 16   FF6B             lbra  CSR_SetEraseTrue           >>
   1786
   1787        772F               CSR_SetEraseFalse
   1788  4+1   772F A6   C8 29            lda   rsv_render_flags,u
   1789  2     7732 84   FD               anda  #:rsv_render_erasesprite_ma>>
   1790  4+1   7734 A7   C8 29            sta   rsv_render_flags,u
   1791                            
   1792        7737               CSR_CheckDraw
   1793  3     7737 8E   FFFF             ldx   #$FFFF                     >>
   1794  4+1   773A A6   43               lda   priority,u
   1795  5     773C B1   7457             cmpa  cur_priority
   1796  6     773F 1026 FE5E             lbne  CSR_NextObject
   1797                            
   1798  7     7743 10BE 745B             ldy   cur_ptr_sub_obj_draw
   1799                            
   1800  4+1   7747 A6   C8 29            lda   rsv_render_flags,u
   1801  2     774A 84   08               anda  #rsv_render_outofrange_mask>>
   1802  3     774C 26   40               bne   CSR_SetDrawFalse           >>
   1803  5+1   774E EC   C8 30            ldd   rsv_mapping_frame,u
   1804  3     7751 27   3B               beq   CSR_SetDrawFalse           >>
   1805  4+1   7753 A6   42               lda   render_flags,u
   1806  2     7755 84   20               anda  #render_hide_mask
   1807  3     7757 26   35               bne   CSR_SetDrawFalse           >>
   1808                            
   1809        7759               CSR_SetDrawTrue
   1810  4+1   7759 A6   C8 29            lda   rsv_render_flags,u
   1811  2     775C 8A   04               ora   #rsv_render_displaysprite_m>>
   1812  4+1   775E A7   C8 29            sta   rsv_render_flags,u
   1813                            
   1814  2     7761 85   02               bita  #rsv_render_erasesprite_mas>>
   1815  3     7763 27   02               beq   CSR_SDT1
   1816  3     7765 20   07               bra   CSR_SDT2
   1817        7767               CSR_SDT1
   1818  4+1   7767 E6   88 11            ldb   buf_prev_render_flags,x
   1819  3     776A 2B   0D               bmi   CSR_SetHide
   1820  3     776C 20   05               bra   CSR_SDT3
   1821        776E               CSR_SDT2
   1822  4+1   776E E6   88 11            ldb   buf_prev_render_flags,x
   1823  3     7771 2A   06               bpl   CSR_SetHide
   1824        7773               CSR_SDT3
   1825  5+3   7773 EF   A1               stu   ,y++
   1826  7     7775 10BF 745B             sty   cur_ptr_sub_obj_draw       >>
   1827
   1828        7779               CSR_SetHide
   1829  4+1   7779 A6   42               lda   render_flags,u
   1830  2     777B 8A   20               ora   #render_hide_mask          >>
   1831  4+1   777D A7   42               sta   render_flags,u
   1832                            
   1833  5+1   777F EE   03               ldu   buf_priority_next_obj,x
   1834  6     7781 1026 FDC5             lbne  CSR_ProcessEachPriorityLeve>>
   1835  5     7785 39                    rts
   1836
   1837        7786               CSR_SetEraseDrawFalse
   1838  4+1   7786 A6   C8 29            lda   rsv_render_flags,u
   1839  2     7789 84   FD               anda  #:rsv_render_erasesprite_ma>>
   1840  4+1   778B A7   C8 29            sta   rsv_render_flags,u
   1841
   1842        778E               CSR_SetDrawFalse
   1843  4+1   778E A6   C8 29            lda   rsv_render_flags,u
   1844  2     7791 84   FB               anda  #:rsv_render_displaysprite_>>
   1845  4+1   7793 A7   C8 29            sta   rsv_render_flags,u
   1846                            
   1847  5+1   7796 EE   03               ldu   buf_priority_next_obj,x
   1848  6     7798 1026 FDAE             lbne   CSR_ProcessEachPriorityLev>>
   1849  5     779C 39                    rts
   1850
   1851
   1852                                   INCLUD ERASESPR
   1853                           * --------------------------------------->>
   1854                           * EraseSprites
   1855                           * ------------
   1856                           * Subroutine to erase sprites on screen
   1857                           * Read Display Priority Structure (front >>
   1858                           * priority: 0 - unregistred
   1859                           * priority: 1 - register non moving overl>>
   1860                           * priority; 2-8 - register moving sprite >>
   1861                           *
   1862                           * input REG : none
   1863                           * --------------------------------------->>
   1864                            
   1865        779D               EraseSprites
   1866
   1867        779D               ESP_Start
   1868  5     779D B6   613A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1869  3     77A0 26   69               bne   ESP_P1B1
   1870
   1871        77A2               ESP_P1B0
   1872  6     77A2 FE   64F5             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1873  3     77A5 27   08               beq   ESP_P2B0
   1874  2     77A7 86   01               lda   #$01
   1875  5     77A9 B7   7878             sta   ESP_CheckPriorityB0+1
   1876  8     77AC BD   7874             jsr   ESP_ProcessEachPriorityLeve>>
   1877        77AF               ESP_P2B0
   1878  6     77AF FE   64F7             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1879  3     77B2 27   08               beq   ESP_P3B0
   1880  2     77B4 86   02               lda   #$02
   1881  5     77B6 B7   7878             sta   ESP_CheckPriorityB0+1
   1882  8     77B9 BD   7874             jsr   ESP_ProcessEachPriorityLeve>>
   1883        77BC               ESP_P3B0
   1884  6     77BC FE   64F9             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1885  3     77BF 27   08               beq   ESP_P4B0
   1886  2     77C1 86   03               lda   #$03
   1887  5     77C3 B7   7878             sta   ESP_CheckPriorityB0+1
   1888  8     77C6 BD   7874             jsr   ESP_ProcessEachPriorityLeve>>
   1889        77C9               ESP_P4B0
   1890  6     77C9 FE   64FB             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1891  3     77CC 27   08               beq   ESP_P5B0
   1892  2     77CE 86   04               lda   #$04
   1893  5     77D0 B7   7878             sta   ESP_CheckPriorityB0+1
   1894  8     77D3 BD   7874             jsr   ESP_ProcessEachPriorityLeve>>
   1895        77D6               ESP_P5B0
   1896  6     77D6 FE   64FD             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1897  3     77D9 27   08               beq   ESP_P6B0
   1898  2     77DB 86   05               lda   #$05
   1899  5     77DD B7   7878             sta   ESP_CheckPriorityB0+1
   1900  8     77E0 BD   7874             jsr   ESP_ProcessEachPriorityLeve>>
   1901        77E3               ESP_P6B0
   1902  6     77E3 FE   64FF             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1903  3     77E6 27   08               beq   ESP_P7B0
   1904  2     77E8 86   06               lda   #$06
   1905  5     77EA B7   7878             sta   ESP_CheckPriorityB0+1
   1906  8     77ED BD   7874             jsr   ESP_ProcessEachPriorityLeve>>
   1907        77F0               ESP_P7B0
   1908  6     77F0 FE   6501             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1909  3     77F3 27   08               beq   ESP_P8B0
   1910  2     77F5 86   07               lda   #$07
   1911  5     77F7 B7   7878             sta   ESP_CheckPriorityB0+1
   1912  8     77FA BD   7874             jsr   ESP_ProcessEachPriorityLeve>>
   1913        77FD               ESP_P8B0
   1914  6     77FD FE   6503             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1915  3     7800 27   08               beq   ESP_rtsB0
   1916  2     7802 86   08               lda   #$08
   1917  5     7804 B7   7878             sta   ESP_CheckPriorityB0+1
   1918  8     7807 BD   7874             jsr   ESP_ProcessEachPriorityLeve>>
   1919        780A               ESP_rtsB0
   1920  5     780A 39                    rts
   1921                            
   1922        780B               ESP_P1B1
   1923  6     780B FE   655B             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1924  3     780E 27   08               beq   ESP_P2B1
   1925  2     7810 86   01               lda   #$01
   1926  5     7812 B7   78C9             sta   ESP_CheckPriorityB1+1
   1927  8     7815 BD   78C5             jsr   ESP_ProcessEachPriorityLeve>>
   1928        7818               ESP_P2B1
   1929  6     7818 FE   655D             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1930  3     781B 27   08               beq   ESP_P3B1
   1931  2     781D 86   02               lda   #$02
   1932  5     781F B7   78C9             sta   ESP_CheckPriorityB1+1
   1933  8     7822 BD   78C5             jsr   ESP_ProcessEachPriorityLeve>>
   1934        7825               ESP_P3B1
   1935  6     7825 FE   655F             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1936  3     7828 27   08               beq   ESP_P4B1
   1937  2     782A 86   03               lda   #$03
   1938  5     782C B7   78C9             sta   ESP_CheckPriorityB1+1
   1939  8     782F BD   78C5             jsr   ESP_ProcessEachPriorityLeve>>
   1940        7832               ESP_P4B1
   1941  6     7832 FE   6561             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1942  3     7835 27   08               beq   ESP_P5B1
   1943  2     7837 86   04               lda   #$04
   1944  5     7839 B7   78C9             sta   ESP_CheckPriorityB1+1
   1945  8     783C BD   78C5             jsr   ESP_ProcessEachPriorityLeve>>
   1946        783F               ESP_P5B1
   1947  6     783F FE   6563             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1948  3     7842 27   08               beq   ESP_P6B1
   1949  2     7844 86   05               lda   #$05
   1950  5     7846 B7   78C9             sta   ESP_CheckPriorityB1+1
   1951  8     7849 BD   78C5             jsr   ESP_ProcessEachPriorityLeve>>
   1952        784C               ESP_P6B1
   1953  6     784C FE   6565             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1954  3     784F 27   08               beq   ESP_P7B1
   1955  2     7851 86   06               lda   #$06
   1956  5     7853 B7   78C9             sta   ESP_CheckPriorityB1+1
   1957  8     7856 BD   78C5             jsr   ESP_ProcessEachPriorityLeve>>
   1958        7859               ESP_P7B1
   1959  6     7859 FE   6567             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1960  3     785C 27   08               beq   ESP_P8B1
   1961  2     785E 86   07               lda   #$07
   1962  5     7860 B7   78C9             sta   ESP_CheckPriorityB1+1
   1963  8     7863 BD   78C5             jsr   ESP_ProcessEachPriorityLeve>>
   1964        7866               ESP_P8B1
   1965  6     7866 FE   6569             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1966  3     7869 27   08               beq   ESP_rtsB1
   1967  2     786B 86   08               lda   #$08
   1968  5     786D B7   78C9             sta   ESP_CheckPriorityB1+1
   1969  8     7870 BD   78C5             jsr   ESP_ProcessEachPriorityLeve>>
   1970        7873               ESP_rtsB1
   1971  5     7873 39                    rts
   1972
   1973                           * *******
   1974                           * BUFFER0
   1975                           * *******
   1976
   1977        7874               ESP_ProcessEachPriorityLevelB0
   1978  4+1   7874 A6   C8 36            lda   rsv_priority_0,u
   1979                            
   1980        7877               ESP_CheckPriorityB0
   1981  2     7877 81   00               cmpa  #0                         >>
   1982  3     7879 26   44               bne   ESP_NextObjectB0           >>
   1983                            
   1984        787B               ESP_UnsetCheckRefreshB0
   1985  4+1   787B A6   C8 29            lda   rsv_render_flags,u
   1986  4+1   787E E6   42               ldb   render_flags,u
   1987  2     7880 C4   08               andb  #render_motionless_mask
   1988  3     7882 26   05               bne   ESP_CheckEraseB0
   1989  2     7884 84   FE               anda  #:rsv_render_checkrefresh_m>>
   1990  4+1   7886 A7   C8 29            sta   rsv_render_flags,u
   1991                            
   1992        7889               ESP_CheckEraseB0
   1993  2     7889 84   02               anda  #rsv_render_erasesprite_mas>>
   1994  3     788B 27   32               beq   ESP_NextObjectB0
   1995  4+1   788D E6   C8 47            ldb   rsv_prev_render_flags_0,u
   1996  2     7890 C4   01               andb  #rsv_prev_render_overlay_ma>>
   1997  3     7892 26   23               bne   ESP_UnsetOnScreenFlagB0
   1998                            
   1999        7894               ESP_CallEraseRoutineB0
   2000  6     7894 FF   78A8             stu   ESP_CallEraseRoutineB0_00+1>>
   2001  5+1   7897 AE   C8 3D            ldx   rsv_prev_mapping_frame_0,u >>
   2002  4+1   789A A6   03               lda   page_erase_routine,x
   2003  5     789C B7   E7E5             sta   $E7E5                      >>
   2004  5+1   789F EE   C8 3F            ldu   rsv_bgdata_0,u             >>
   2005  7+4   78A2 AD   98 04            jsr   [erase_routine,x]          >>
   2006  4+0   78A5 31   C4               leay  ,u                         >>
   2007        78A7               ESP_CallEraseRoutineB0_00
   2008  3     78A7 CE   0000             ldu   #$0000                     >>
   2009  5+1   78AA EC   C8 3F            ldd   rsv_bgdata_0,u             >>
   2010  4     78AD 83   0010             subd  #16
   2011  2     78B0 C4   C0               andb  #256-cell_size             >>
   2012  6     78B2 1F   01               tfr   d,x                        >>
   2013                            
   2014        78B4               ESP_FreeEraseBufferB0
   2015  8     78B4 BD   7C3B             jsr   BgBufferFree               >>
   2016                            
   2017        78B7               ESP_UnsetOnScreenFlagB0
   2018  4+1   78B7 A6   C8 47            lda   rsv_prev_render_flags_0,u
   2019  2     78BA 84   7F               anda  #:rsv_prev_render_onscreen_>>
   2020  4+1   78BC A7   C8 47            sta   rsv_prev_render_flags_0,u
   2021
   2022        78BF               ESP_NextObjectB0
   2023  5+1   78BF EE   C8 37            ldu   rsv_priority_prev_obj_0,u
   2024  3     78C2 26   B0               bne   ESP_ProcessEachPriorityLeve>>
   2025  5     78C4 39                    rts
   2026
   2027                           * *******
   2028                           * BUFFER1
   2029                           * *******
   2030                            
   2031        78C5               ESP_ProcessEachPriorityLevelB1
   2032  4+1   78C5 A6   C8 48            lda   rsv_priority_1,u
   2033                            
   2034        78C8               ESP_CheckPriorityB1
   2035  2     78C8 81   00               cmpa  #0                         >>
   2036  3     78CA 26   44               bne   ESP_NextObjectB1           >>
   2037                            
   2038        78CC               ESP_UnsetCheckRefreshB1
   2039  4+1   78CC A6   C8 29            lda   rsv_render_flags,u
   2040  4+1   78CF E6   42               ldb   render_flags,u
   2041  2     78D1 C4   08               andb  #render_motionless_mask
   2042  3     78D3 26   05               bne   ESP_CheckEraseB1
   2043  2     78D5 84   FE               anda  #:rsv_render_checkrefresh_m>>
   2044  4+1   78D7 A7   C8 29            sta   rsv_render_flags,u
   2045                            
   2046        78DA               ESP_CheckEraseB1
   2047  2     78DA 84   02               anda  #rsv_render_erasesprite_mas>>
   2048  3     78DC 27   32               beq   ESP_NextObjectB1
   2049  4+1   78DE E6   C8 59            ldb   rsv_prev_render_flags_1,u
   2050  2     78E1 C4   01               andb  #rsv_prev_render_overlay_ma>>
   2051  3     78E3 26   23               bne   ESP_UnsetOnScreenFlagB1
   2052                            
   2053        78E5               ESP_CallEraseRoutineB1
   2054  6     78E5 FF   78F9             stu   ESP_CallEraseRoutineB1_00+1>>
   2055  5+1   78E8 AE   C8 4F            ldx   rsv_prev_mapping_frame_1,u >>
   2056  4+1   78EB A6   03               lda   page_erase_routine,x
   2057  5     78ED B7   E7E5             sta   $E7E5                      >>
   2058  5+1   78F0 EE   C8 51            ldu   rsv_bgdata_1,u             >>
   2059  7+4   78F3 AD   98 04            jsr   [erase_routine,x]          >>
   2060  4+0   78F6 31   C4               leay  ,u                         >>
   2061        78F8               ESP_CallEraseRoutineB1_00
   2062  3     78F8 CE   0000             ldu   #$0000                     >>
   2063  5+1   78FB EC   C8 51            ldd   rsv_bgdata_1,u             >>
   2064  4     78FE 83   0010             subd  #16
   2065  2     7901 C4   C0               andb  #256-cell_size             >>
   2066  6     7903 1F   01               tfr   d,x                        >>
   2067                            
   2068        7905               ESP_FreeEraseBufferB1
   2069  8     7905 BD   7C3B             jsr   BgBufferFree               >>
   2070                            
   2071        7908               ESP_UnsetOnScreenFlagB1
   2072  4+1   7908 A6   C8 59            lda   rsv_prev_render_flags_1,u
   2073  2     790B 84   7F               anda  #:rsv_prev_render_onscreen_>>
   2074  4+1   790D A7   C8 59            sta   rsv_prev_render_flags_1,u
   2075                            
   2076        7910               ESP_NextObjectB1
   2077  5+1   7910 EE   C8 49            ldu   rsv_priority_prev_obj_1,u
   2078  3     7913 26   B0               bne   ESP_ProcessEachPriorityLeve>>
   2079  5     7915 39                    rts
   2080
   2081                                   INCLUD UNSETDSP
   2082                           * --------------------------------------->>
   2083                           * UnsetDisplayPriority
   2084                           * --------------------
   2085                           * Subroutine to unset sprites in Display >>
   2086                           * Read Lst_Priority_Unset_0/1
   2087                           *
   2088                           * input REG : none
   2089                           * --------------------------------------->>
   2090                            
   2091        7916               UnsetDisplayPriority
   2092
   2093        7916               UDP_Start
   2094  5     7916 B6   613A             lda   Glb_Cur_Wrk_Screen_Id      >>
   2095  3     7919 26   6D               bne   UDP_B1
   2096                            
   2097        791B               UDP_B0
   2098  3     791B 8E   6507             ldx   #Lst_Priority_Unset_0+2
   2099                            
   2100        791E               UDP_CheckEndB0
   2101  7     791E BC   6505             cmpx  Lst_Priority_Unset_0       >>
   2102  3     7921 26   07               bne   UDP_CheckPrioPrevB0
   2103                            
   2104        7923               UDP_InitListB0
   2105  3     7923 8E   6507             ldx   #Lst_Priority_Unset_0+2
   2106  6     7926 BF   6505             stx   Lst_Priority_Unset_0       >>
   2107  5     7929 39                    rts
   2108                            
   2109        792A               UDP_CheckPrioPrevB0
   2110  5+3   792A EE   81               ldu   ,x++
   2111  5+1   792C EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2112  3     792F 26   11               bne   UDP_ChainPrevB0
   2113                            
   2114  4+1   7931 A6   C8 36            lda   rsv_priority_0,u
   2115  2     7934 48                    lsla
   2116  4     7935 108E 64E1             ldy   #Tbl_Priority_First_Entry_0>>
   2117  4+1   7939 31   A6               leay  a,y
   2118  5+1   793B EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2119  5+0   793E ED   A4               std   ,y
   2120  3     7940 20   0A               bra   UDP_CheckPrioNextB0
   2121                            
   2122        7942               UDP_ChainPrevB0
   2123  5+1   7942 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2124  6+1   7945 10AE C8 37            ldy   rsv_priority_prev_obj_0,u
   2125  5+1   7949 ED   A8 39            std   rsv_priority_next_obj_0,y
   2126
   2127        794C               UDP_CheckPrioNextB0
   2128  5+1   794C EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2129  3     794F 26   11               bne   UDP_ChainNextB0
   2130
   2131  4+1   7951 A6   C8 36            lda   rsv_priority_0,u
   2132  2     7954 48                    lsla
   2133  4     7955 108E 64F3             ldy   #Tbl_Priority_Last_Entry_0
   2134  4+1   7959 31   A6               leay  a,y
   2135  5+1   795B EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2136  5+0   795E ED   A4               std   ,y
   2137  3     7960 20   0A               bra   UDP_CheckDeleteB0
   2138                            
   2139        7962               UDP_ChainNextB0
   2140  5+1   7962 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2141  6+1   7965 10AE C8 39            ldy   rsv_priority_next_obj_0,u
   2142  5+1   7969 ED   A8 37            std   rsv_priority_prev_obj_0,y
   2143                            
   2144        796C               UDP_CheckDeleteB0
   2145  4+1   796C A6   42               lda   render_flags,u
   2146  2     796E 84   40               anda  #render_todelete_mask
   2147  3     7970 27   0F               beq   UDP_SetNewPrioB0
   2148  4+1   7972 A6   C8 47            lda   rsv_prev_render_flags_0,u
   2149  3     7975 2B   0A               bmi   UDP_SetNewPrioB0
   2150  4+1   7977 A6   C8 59            lda   rsv_prev_render_flags_1,u
   2151  3     797A 2B   05               bmi   UDP_SetNewPrioB0
   2152  8     797C BD   7424             jsr   ClearObj
   2153  3     797F 20   9D               bra   UDP_CheckEndB0
   2154                            
   2155        7981               UDP_SetNewPrioB0
   2156  4+1   7981 A6   43               lda   priority,u
   2157  4+1   7983 A7   C8 36            sta   rsv_priority_0,u
   2158  3     7986 20   96               bra   UDP_CheckEndB0
   2159
   2160        7988               UDP_B1
   2161  3     7988 8E   656D             ldx   #Lst_Priority_Unset_1+2
   2162                            
   2163        798B               UDP_CheckEndB1
   2164  7     798B BC   656B             cmpx  Lst_Priority_Unset_1       >>
   2165  3     798E 26   07               bne   UDP_CheckPrioPrevB1
   2166                            
   2167        7990               UDP_InitListB1
   2168  3     7990 8E   656D             ldx   #Lst_Priority_Unset_1+2
   2169  6     7993 BF   656B             stx   Lst_Priority_Unset_1       >>
   2170  5     7996 39                    rts
   2171                            
   2172        7997               UDP_CheckPrioPrevB1
   2173  5+3   7997 EE   81               ldu   ,x++
   2174  5+1   7999 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2175  3     799C 26   11               bne   UDP_ChainPrevB1
   2176                            
   2177  4+1   799E A6   C8 48            lda   rsv_priority_1,u
   2178  2     79A1 48                    lsla
   2179  4     79A2 108E 6547             ldy   #Tbl_Priority_First_Entry_1>>
   2180  4+1   79A6 31   A6               leay  a,y
   2181  5+1   79A8 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2182  5+0   79AB ED   A4               std   ,y
   2183  3     79AD 20   0A               bra   UDP_CheckPrioNextB1
   2184                            
   2185        79AF               UDP_ChainPrevB1
   2186  5+1   79AF EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2187  6+1   79B2 10AE C8 49            ldy   rsv_priority_prev_obj_1,u
   2188  5+1   79B6 ED   A8 4B            std   rsv_priority_next_obj_1,y
   2189
   2190        79B9               UDP_CheckPrioNextB1
   2191  5+1   79B9 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2192  3     79BC 26   11               bne   UDP_ChainNextB1
   2193
   2194  4+1   79BE A6   C8 48            lda   rsv_priority_1,u
   2195  2     79C1 48                    lsla
   2196  4     79C2 108E 6559             ldy   #Tbl_Priority_Last_Entry_1
   2197  4+1   79C6 31   A6               leay  a,y
   2198  5+1   79C8 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2199  5+0   79CB ED   A4               std   ,y
   2200  3     79CD 20   0A               bra   UDP_CheckDeleteB1
   2201                            
   2202        79CF               UDP_ChainNextB1
   2203  5+1   79CF EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2204  6+1   79D2 10AE C8 4B            ldy   rsv_priority_next_obj_1,u
   2205  5+1   79D6 ED   A8 49            std   rsv_priority_prev_obj_1,y
   2206                            
   2207        79D9               UDP_CheckDeleteB1
   2208  4+1   79D9 A6   42               lda   render_flags,u
   2209  2     79DB 84   40               anda  #render_todelete_mask
   2210  3     79DD 27   0F               beq   UDP_SetNewPrioB1
   2211  4+1   79DF A6   C8 47            lda   rsv_prev_render_flags_0,u
   2212  3     79E2 2B   0A               bmi   UDP_SetNewPrioB1
   2213  4+1   79E4 A6   C8 59            lda   rsv_prev_render_flags_1,u
   2214  3     79E7 2B   05               bmi   UDP_SetNewPrioB1
   2215  8     79E9 BD   7424             jsr   ClearObj
   2216  3     79EC 20   9D               bra   UDP_CheckEndB1
   2217                            
   2218        79EE               UDP_SetNewPrioB1
   2219  4+1   79EE A6   43               lda   priority,u
   2220  4+1   79F0 A7   C8 48            sta   rsv_priority_1,u
   2221  3     79F3 20   96               bra   UDP_CheckEndB1
   2222
   2223                                   INCLUD DRAWSPR
   2224                           * --------------------------------------->>
   2225                           * DrawSprites
   2226                           * ------------
   2227                           * Subroutine to draw sprites on screen
   2228                           * Read Display Priority Structure (back t>>
   2229                           * priority: 0 - unregistred
   2230                           * priority: 1 - register non moving overl>>
   2231                           * priority; 2-8 - register moving sprite >>
   2232                           *
   2233                           * input REG : none
   2234                           * --------------------------------------->>
   2235                            
   2236        79F5               DrawSprites
   2237
   2238        79F5               DRS_Start
   2239  5     79F5 B6   613A             lda   Glb_Cur_Wrk_Screen_Id      >>
   2240  3     79F8 26   41               bne   DRS_P8B1
   2241                            
   2242        79FA               DRS_P8B0
   2243  6     79FA BE   64F1             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2244  3     79FD 27   03               beq   DRS_P7B0
   2245  8     79FF BD   7A7C             jsr   DRS_ProcessEachPriorityLeve>>
   2246        7A02               DRS_P7B0
   2247  6     7A02 BE   64EF             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2248  3     7A05 27   03               beq   DRS_P6B0
   2249  8     7A07 BD   7A7C             jsr   DRS_ProcessEachPriorityLeve>>
   2250        7A0A               DRS_P6B0
   2251  6     7A0A BE   64ED             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2252  3     7A0D 27   03               beq   DRS_P5B0
   2253  8     7A0F BD   7A7C             jsr   DRS_ProcessEachPriorityLeve>>
   2254        7A12               DRS_P5B0
   2255  6     7A12 BE   64EB             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2256  3     7A15 27   03               beq   DRS_P4B0
   2257  8     7A17 BD   7A7C             jsr   DRS_ProcessEachPriorityLeve>>
   2258        7A1A               DRS_P4B0
   2259  6     7A1A BE   64E9             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2260  3     7A1D 27   03               beq   DRS_P3B0
   2261  8     7A1F BD   7A7C             jsr   DRS_ProcessEachPriorityLeve>>
   2262        7A22               DRS_P3B0
   2263  6     7A22 BE   64E7             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2264  3     7A25 27   03               beq   DRS_P2B0
   2265  8     7A27 BD   7A7C             jsr   DRS_ProcessEachPriorityLeve>>
   2266        7A2A               DRS_P2B0
   2267  6     7A2A BE   64E5             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2268  3     7A2D 27   03               beq   DRS_P1B0
   2269  8     7A2F BD   7A7C             jsr   DRS_ProcessEachPriorityLeve>>
   2270        7A32               DRS_P1B0
   2271  6     7A32 BE   64E3             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2272  3     7A35 27   03               beq   DRS_rtsB0
   2273  8     7A37 BD   7A7C             jsr   DRS_ProcessEachPriorityLeve>>
   2274        7A3A               DRS_rtsB0
   2275  5     7A3A 39                    rts
   2276                            
   2277        7A3B               DRS_P8B1
   2278  6     7A3B BE   6557             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2279  3     7A3E 27   03               beq   DRS_P7B1
   2280  8     7A40 BD   7B4B             jsr   DRS_ProcessEachPriorityLeve>>
   2281        7A43               DRS_P7B1
   2282  6     7A43 BE   6555             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2283  3     7A46 27   03               beq   DRS_P6B1
   2284  8     7A48 BD   7B4B             jsr   DRS_ProcessEachPriorityLeve>>
   2285        7A4B               DRS_P6B1
   2286  6     7A4B BE   6553             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2287  3     7A4E 27   03               beq   DRS_P5B1
   2288  8     7A50 BD   7B4B             jsr   DRS_ProcessEachPriorityLeve>>
   2289        7A53               DRS_P5B1
   2290  6     7A53 BE   6551             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2291  3     7A56 27   03               beq   DRS_P4B1
   2292  8     7A58 BD   7B4B             jsr   DRS_ProcessEachPriorityLeve>>
   2293        7A5B               DRS_P4B1
   2294  6     7A5B BE   654F             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2295  3     7A5E 27   03               beq   DRS_P3B1
   2296  8     7A60 BD   7B4B             jsr   DRS_ProcessEachPriorityLeve>>
   2297        7A63               DRS_P3B1
   2298  6     7A63 BE   654D             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2299  3     7A66 27   03               beq   DRS_P2B1
   2300  8     7A68 BD   7B4B             jsr   DRS_ProcessEachPriorityLeve>>
   2301        7A6B               DRS_P2B1
   2302  6     7A6B BE   654B             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2303  3     7A6E 27   03               beq   DRS_P1B1
   2304  8     7A70 BD   7B4B             jsr   DRS_ProcessEachPriorityLeve>>
   2305        7A73               DRS_P1B1
   2306  6     7A73 BE   6549             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2307  3     7A76 27   03               beq   DRS_rtsB1
   2308  8     7A78 BD   7B4B             jsr   DRS_ProcessEachPriorityLeve>>
   2309        7A7B               DRS_rtsB1
   2310  5     7A7B 39                    rts
   2311
   2312        7A7C               DRS_ProcessEachPriorityLevelB0
   2313  4+1   7A7C A6   88 29            lda   rsv_render_flags,x
   2314  2     7A7F 84   04               anda  #rsv_render_displaysprite_m>>
   2315  3     7A81 27   6A               beq   DRS_NextObjectB0
   2316  4+1   7A83 A6   88 47            lda   rsv_prev_render_flags_0,x
   2317  3     7A86 2B   65               bmi   DRS_NextObjectB0
   2318  4+1   7A88 A6   02               lda   render_flags,x
   2319  2     7A8A 84   04               anda  #render_overlay_mask
   2320  3     7A8C 26   67               bne   DRS_DrawWithoutBackupB0
   2321  5+1   7A8E EE   88 30            ldu   rsv_mapping_frame,x
   2322  4+1   7A91 A6   46               lda   erase_nb_cell,u
   2323  8     7A93 BD   7BE8             jsr   BgBufferAlloc              >>
   2324  5     7A96 108C 0000             cmpy  #$0000                     >>
   2325  3     7A9A 27   51               beq   DRS_NextObjectB0           >>
   2326  5+1   7A9C EC   88 12            ldd   xy_pixel,x                 >>
   2327  4+1   7A9F A0   88 2C            suba  rsv_image_center_offset,x
   2328  8     7AA2 BD   7B19             jsr   DRS_XYToAddress
   2329                           *        ldu   rsv_image_subset,x
   2330                           *        stu   rsv_prev_image_subset_0,x
   2331  5+1   7AA5 EE   88 30            ldu   rsv_mapping_frame,x        >>
   2332  5+1   7AA8 EF   88 3D            stu   rsv_prev_mapping_frame_0,x >>
   2333  4+1   7AAB A6   40               lda   page_draw_routine,u
   2334  5     7AAD B7   E7E5             sta   $E7E5                      >>
   2335  6     7AB0 BF   7AC1             stx   DRS_dyn3B0+1               >>
   2336  5+1   7AB3 AE   41               ldx   draw_routine,u
   2337  4+0   7AB5 33   A4               leau  ,y                         >>
   2338  4     7AB7 108E 6141             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2339  6     7ABB FC   613F             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2340  7+0   7ABE AD   84               jsr   ,x                         >>
   2341        7AC0               DRS_dyn3B0
   2342  3     7AC0 8E   0000             ldx   #$0000                     >>
   2343  5+1   7AC3 EF   88 3F            stu   rsv_bgdata_0,x             >>
   2344  5+1   7AC6 EC   88 12            ldd   xy_pixel,x                 >>
   2345  2     7AC9 44                    lsra                             >>
   2346  5+1   7ACA ED   88 41            std   rsv_prev_xy_pixel_0,x      >>
   2347  5+1   7ACD EC   88 32            ldd   rsv_xy1_pixel,x            >>
   2348  5+1   7AD0 ED   88 43            std   rsv_prev_xy1_pixel_0,x     >>
   2349  5+1   7AD3 EC   88 34            ldd   rsv_xy2_pixel,x            >>
   2350  5+1   7AD6 ED   88 45            std   rsv_prev_xy2_pixel_0,x     >>
   2351  4+1   7AD9 A6   88 47            lda   rsv_prev_render_flags_0,x
   2352  2     7ADC 8A   80               ora   #rsv_prev_render_onscreen_m>>
   2353  4+1   7ADE E6   02               ldb   render_flags,x
   2354  2     7AE0 C5   04               bitb  #render_overlay_mask
   2355  3     7AE2 27   04               beq   DRS_NoOverlayB0
   2356  2     7AE4 8A   01               ora   #rsv_prev_render_overlay_ma>>
   2357  3     7AE6 20   02               bra   DRS_UpdateRenderFlagB0
   2358                            
   2359        7AE8               DRS_NoOverlayB0
   2360  2     7AE8 84   FE               anda   #:rsv_prev_render_overlay_>>
   2361
   2362        7AEA               DRS_UpdateRenderFlagB0
   2363  4+1   7AEA A7   88 47            sta   rsv_prev_render_flags_0,x  >>
   2364                            
   2365        7AED               DRS_NextObjectB0
   2366  5+1   7AED AE   88 39            ldx   rsv_priority_next_obj_0,x
   2367  6     7AF0 1026 FF88             lbne  DRS_ProcessEachPriorityLeve>>
   2368  5     7AF4 39                    rts
   2369                            
   2370        7AF5               DRS_DrawWithoutBackupB0
   2371  5+1   7AF5 EC   88 12            ldd   xy_pixel,x                 >>
   2372  4+1   7AF8 A0   88 2C            suba  rsv_image_center_offset,x
   2373  8     7AFB BD   7B19             jsr   DRS_XYToAddress
   2374  5+1   7AFE EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2375  5+1   7B01 EF   88 3D            stu   rsv_prev_mapping_frame_0,x >>
   2376  4+1   7B04 A6   40               lda   page_draw_routine,u
   2377  5     7B06 B7   E7E5             sta   $E7E5                      >>
   2378  6     7B09 BF   7AC1             stx   DRS_dyn3B0+1               >>
   2379  5+1   7B0C AE   41               ldx   draw_routine,u
   2380  4     7B0E 108E 6141             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2381  6     7B12 FC   613F             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2382  7+0   7B15 AD   84               jsr   ,x                         >>
   2383  3     7B17 20   A7               bra   DRS_dyn3B0
   2384
   2385                           *****************************************>>
   2386                           * x_pixel and y_pixel coordinate system
   2387                           * x coordinates:
   2388                           *    - off-screen left 00-2F (0-47)
   2389                           *    - on screen 30-CF (48-207)
   2390                           *    - off-screen right D0-FF (208-255)
   2391                           *
   2392                           * y coordinates:
   2393                           *    - off-screen top 00-1B (0-27)
   2394                           *    - on screen 1C-E3 (28-227)
   2395                           *    - off-screen bottom E4-FF (228-255)
   2396                           *****************************************>>
   2397
   2398        7B19               DRS_XYToAddress
   2399  2     7B19 80   30               suba  #$30
   2400  3     7B1B 24   03               bcc   DRS_XYToAddressPositive
   2401  2     7B1D 80   60               suba  #$60                       >>
   2402  2     7B1F 5A                    decb
   2403        7B20               DRS_XYToAddressPositive
   2404  2     7B20 C0   1C               subb  #$1C                       >>
   2405  2     7B22 44                    lsra                             >>
   2406  2     7B23 44                    lsra                             >>
   2407  3     7B24 25   12               bcs   DRS_XYToAddressRAM2First   >>
   2408        7B26               DRS_XYToAddressRAM1First
   2409  5     7B26 B7   7B2E             sta   DRS_dyn1+2
   2410  2     7B29 86   28               lda   #$28                       >>
   2411  11    7B2B 3D                    mul
   2412        7B2C               DRS_dyn1
   2413  4     7B2C C3   0000             addd  #$0000                     >>
   2414  6     7B2F FD   6141             std   Glb_Sprite_Screen_Pos_Part2>>
   2415  2     7B32 8A   20               ora   #$20                       >>
   2416  6     7B34 FD   613F             std   Glb_Sprite_Screen_Pos_Part1>>
   2417  5     7B37 39                    rts
   2418        7B38               DRS_XYToAddressRAM2First
   2419  5     7B38 B7   7B40             sta   DRS_dyn2+2
   2420  2     7B3B 86   28               lda   #$28                       >>
   2421  11    7B3D 3D                    mul
   2422        7B3E               DRS_dyn2
   2423  4     7B3E C3   2000             addd  #$2000                     >>
   2424  6     7B41 FD   6141             std   Glb_Sprite_Screen_Pos_Part2>>
   2425  4     7B44 83   1FFF             subd  #$1FFF
   2426  6     7B47 FD   613F             std   Glb_Sprite_Screen_Pos_Part1>>
   2427  5     7B4A 39                    rts
   2428                            
   2429        7B4B               DRS_ProcessEachPriorityLevelB1
   2430  4+1   7B4B A6   88 29            lda   rsv_render_flags,x
   2431  2     7B4E 84   04               anda  #rsv_render_displaysprite_m>>
   2432  3     7B50 27   6A               beq   DRS_NextObjectB1
   2433  4+1   7B52 A6   88 59            lda   rsv_prev_render_flags_1,x
   2434  3     7B55 2B   65               bmi   DRS_NextObjectB1
   2435  4+1   7B57 A6   02               lda   render_flags,x
   2436  2     7B59 84   04               anda  #render_overlay_mask
   2437  3     7B5B 26   67               bne   DRS_DrawWithoutBackupB1
   2438  5+1   7B5D EE   88 30            ldu   rsv_mapping_frame,x
   2439  4+1   7B60 A6   46               lda   erase_nb_cell,u
   2440  8     7B62 BD   7BE8             jsr   BgBufferAlloc              >>
   2441  5     7B65 108C 0000             cmpy  #$0000                     >>
   2442  3     7B69 27   51               beq   DRS_NextObjectB1           >>
   2443  5+1   7B6B EC   88 12            ldd   xy_pixel,x                 >>
   2444  4+1   7B6E A0   88 2C            suba  rsv_image_center_offset,x
   2445  8     7B71 BD   7B19             jsr   DRS_XYToAddress
   2446                                   *ldu   rsv_image_subset,x
   2447                                   *stu   rsv_prev_image_subset_1,x
   2448  5+1   7B74 EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2449  5+1   7B77 EF   88 4F            stu   rsv_prev_mapping_frame_1,x >>
   2450  4+1   7B7A A6   40               lda   page_draw_routine,u
   2451  5     7B7C B7   E7E5             sta   $E7E5                      >>
   2452  6     7B7F BF   7B90             stx   DRS_dyn3B1+1               >>
   2453  5+1   7B82 AE   41               ldx   draw_routine,u
   2454  4+0   7B84 33   A4               leau  ,y                         >>
   2455  4     7B86 108E 6141             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2456  6     7B8A FC   613F             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2457  7+0   7B8D AD   84               jsr   ,x                         >>
   2458        7B8F               DRS_dyn3B1
   2459  3     7B8F 8E   0000             ldx   #$0000                     >>
   2460  5+1   7B92 EF   88 51            stu   rsv_bgdata_1,x             >>
   2461  5+1   7B95 EC   88 12            ldd   xy_pixel,x                 >>
   2462  2     7B98 44                    lsra                             >>
   2463  5+1   7B99 ED   88 53            std   rsv_prev_xy_pixel_1,x      >>
   2464  5+1   7B9C EC   88 32            ldd   rsv_xy1_pixel,x            >>
   2465  5+1   7B9F ED   88 55            std   rsv_prev_xy1_pixel_1,x     >>
   2466  5+1   7BA2 EC   88 34            ldd   rsv_xy2_pixel,x            >>
   2467  5+1   7BA5 ED   88 57            std   rsv_prev_xy2_pixel_1,x     >>
   2468  4+1   7BA8 A6   88 59            lda   rsv_prev_render_flags_1,x
   2469  2     7BAB 8A   80               ora   #rsv_prev_render_onscreen_m>>
   2470  4+1   7BAD E6   02               ldb   render_flags,x
   2471  2     7BAF C5   04               bitb  #render_overlay_mask
   2472  3     7BB1 27   04               beq   DRS_NoOverlayB1
   2473  2     7BB3 8A   01               ora   #rsv_prev_render_overlay_ma>>
   2474  3     7BB5 20   02               bra   DRS_UpdateRenderFlagB1
   2475                            
   2476        7BB7               DRS_NoOverlayB1
   2477  2     7BB7 84   FE               anda   #:rsv_prev_render_overlay_>>
   2478
   2479        7BB9               DRS_UpdateRenderFlagB1
   2480  4+1   7BB9 A7   88 59            sta   rsv_prev_render_flags_1,x  >>
   2481                            
   2482        7BBC               DRS_NextObjectB1
   2483  5+1   7BBC AE   88 4B            ldx   rsv_priority_next_obj_1,x
   2484  6     7BBF 1026 FF88             lbne  DRS_ProcessEachPriorityLeve>>
   2485  5     7BC3 39                    rts
   2486                            
   2487        7BC4               DRS_DrawWithoutBackupB1
   2488  5+1   7BC4 EC   88 12            ldd   xy_pixel,x                 >>
   2489  4+1   7BC7 A0   88 2C            suba  rsv_image_center_offset,x
   2490  8     7BCA BD   7B19             jsr   DRS_XYToAddress
   2491  5+1   7BCD EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2492  5+1   7BD0 EF   88 4F            stu   rsv_prev_mapping_frame_1,x >>
   2493  4+1   7BD3 A6   40               lda   page_draw_routine,u
   2494  5     7BD5 B7   E7E5             sta   $E7E5                      >>
   2495  6     7BD8 BF   7B90             stx   DRS_dyn3B1+1               >>
   2496  5+1   7BDB AE   41               ldx   draw_routine,u
   2497  4     7BDD 108E 6141             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2498  6     7BE1 FC   613F             ldd   Glb_Sprite_Screen_Pos_Part1>>
   2499  7+0   7BE4 AD   84               jsr   ,x                         >>
   2500  3     7BE6 20   A7               bra   DRS_dyn3B1
   2501
   2502                                   INCLUD BGBALLOC
   2503                           * --------------------------------------->>
   2504                           * BgBufferAlloc
   2505                           * -------------
   2506                           * Subroutine to allocate memory into back>>
   2507                           *
   2508                           * input  REG : [a] number of requested ce>>
   2509                           * output REG : [y] cell_end or 0000 if no>>
   2510                           * --------------------------------------->>
   2511
   2512        7BE8               BgBufferAlloc
   2513  5+3   7BE8 34   14               pshs  b,x
   2514  5     7BEA F6   613A             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2515  3     7BED 26   09               bne   BBA1                       >>
   2516                            
   2517        7BEF               BBA0
   2518  3     7BEF 8E   6143             ldx   #Lst_FreeCellFirstEntry_0  >>
   2519  7     7BF2 10BE 6143             ldy   Lst_FreeCellFirstEntry_0   >>
   2520  3     7BF6 20   07               bra   BBA_Next
   2521                            
   2522        7BF8               BBA1
   2523  3     7BF8 8E   6312             ldx   #Lst_FreeCellFirstEntry_1  >>
   2524  7     7BFB 10BE 6312             ldy   Lst_FreeCellFirstEntry_1   >>
   2525                            
   2526        7BFF               BBA_Next
   2527  3     7BFF 27   38               beq   BBA_rts                    >>
   2528  4+1   7C01 A1   20               cmpa  nb_cells,y                 >>
   2529  3     7C03 27   09               beq   BBA_FitCell                >>
   2530  3     7C05 23   12               bls   BBA_DivideCell             >>
   2531  4+1   7C07 30   25               leax  next_entry,y               >>
   2532  6+1   7C09 10AE 25               ldy   next_entry,y               >>
   2533  3     7C0C 20   F1               bra   BBA_Next
   2534                            
   2535        7C0E               BBA_FitCell
   2536  5+1   7C0E EC   25               ldd   next_entry,y
   2537  5+0   7C10 ED   84               std   ,x                         >>
   2538  6+1   7C12 6F   20               clr   nb_cells,y                 >>
   2539  6+1   7C14 10AE 23               ldy   cell_end,y                 >>
   2540  3     7C17 20   20               bra   BBA_rts
   2541                            
   2542        7C19               BBA_DivideCell
   2543  5     7C19 B7   7C1F             sta   BBA_dyn+1
   2544  4+1   7C1C E6   20               ldb   nb_cells,y
   2545        7C1E               BBA_dyn
   2546  2     7C1E C0   00               subb  #$00                       >>
   2547  4+1   7C20 E7   20               stb   nb_cells,y                 >>
   2548                            
   2549  2     7C22 C6   40               ldb   #cell_size
   2550  11    7C24 3D                    mul
   2551  2     7C25 88   FF               eora  #$FF                       >>
   2552  2     7C27 C8   FF               eorb  #$FF                       >>
   2553  4     7C29 C3   0001             addd  #$01
   2554  5+1   7C2C AE   23               ldx   cell_end,y
   2555  6     7C2E BF   7C37             stx   cell_end_return+2
   2556  4+4   7C31 30   8B               leax  d,x                        >>
   2557  5+1   7C33 AF   23               stx   cell_end,y                 >>
   2558        7C35               cell_end_return
   2559  4     7C35 108E 0000             ldy   #$0000
   2560        7C39               BBA_rts
   2561  5+5   7C39 35   94               puls  b,x,pc
   2562
   2563                                   INCLUD BGBFREE
   2564                           * --------------------------------------->>
   2565                           * BgBufferFree
   2566                           * ------------
   2567                           * Subroutine to free memory from backgrou>>
   2568                           *
   2569                           * input  REG : [x] cell_start
   2570                           *              [y] cell_end
   2571                           * output REG : none
   2572                           * --------------------------------------->>
   2573
   2574        7C3B               BgBufferFree
   2575  5+4   7C3B 34   46               pshs  d,u
   2576  3     7C3D CC   0000             ldd   #$0000
   2577  6     7C40 FD   7C9D             std   BBF_SetNewEntryNextentry+1 >>
   2578  5     7C43 F6   613A             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2579  3     7C46 26   16               bne   BBF1                       >>
   2580                            
   2581        7C48               BBF0
   2582  5+1   7C48 EE   C8 3D            ldu   rsv_prev_mapping_frame_0,u >>
   2583  4+1   7C4B A6   46               lda   erase_nb_cell,u            >>
   2584  3     7C4D CE   6143             ldu   #Lst_FreeCellFirstEntry_0
   2585  6     7C50 FF   7CA2             stu   BBF_SetNewEntryPrevLink+1  >>
   2586  3     7C53 CE   6145             ldu   #Lst_FreeCell_0            >>
   2587  6     7C56 FF   7C8B             stu   BBF_AddNewEntryAtEnd+1     >>
   2588  6     7C59 FE   6143             ldu   Lst_FreeCellFirstEntry_0   >>
   2589  3     7C5C 20   14               bra   BBF_Next
   2590                            
   2591        7C5E               BBF1
   2592  5+1   7C5E EE   C8 4F            ldu   rsv_prev_mapping_frame_1,u
   2593  4+1   7C61 A6   46               lda   erase_nb_cell,u
   2594  3     7C63 CE   6312             ldu   #Lst_FreeCellFirstEntry_1
   2595  6     7C66 FF   7CA2             stu   BBF_SetNewEntryPrevLink+1
   2596  3     7C69 CE   6314             ldu   #Lst_FreeCell_1
   2597  6     7C6C FF   7C8B             stu   BBF_AddNewEntryAtEnd+1
   2598  6     7C6F FE   6312             ldu   Lst_FreeCellFirstEntry_1
   2599                            
   2600        7C72               BBF_Next
   2601  3     7C72 27   16               beq   BBF_AddNewEntryAtEnd       >>
   2602  7+1   7C74 10AC 41               cmpy  cell_start,u               >>
   2603  3     7C77 27   2D               beq   BBF_ExpandAtStart          >>
   2604  3     7C79 22   4C               bhi   BBF_ExpandAtEnd            >>
   2605  5+1   7C7B EE   45               ldu   next_entry,u               >>
   2606  6     7C7D 1F   30               tfr   u,d
   2607  4     7C7F C3   0005             addd  #next_entry                >>
   2608  6     7C82 FD   7CA2             std   BBF_SetNewEntryPrevLink+1
   2609  3     7C85 20   EB               bra   BBF_Next
   2610
   2611        7C87               BBF_AddNewEntry
   2612  6     7C87 FF   7C9D             stu   BBF_SetNewEntryNextentry+1
   2613        7C8A               BBF_AddNewEntryAtEnd
   2614  3     7C8A CE   0000             ldu   #$0000                     >>
   2615        7C8D               BBF_FindFreeSlot
   2616  4+1   7C8D E6   40               ldb   nb_cells,u                 >>
   2617  3     7C8F 27   04               beq   BBF_SetNewEntry            >>
   2618  4+1   7C91 33   47               leau  entry_size,u               >>
   2619  3     7C93 20   F8               bra   BBF_FindFreeSlot           >>
   2620        7C95               BBF_SetNewEntry
   2621  4+1   7C95 A7   40               sta   nb_cells,u                 >>
   2622  5+1   7C97 AF   41               stx   cell_start,u               >>
   2623  6+1   7C99 10AF 43               sty   cell_end,u                 >>
   2624        7C9C               BBF_SetNewEntryNextentry
   2625  3     7C9C 8E   0000             ldx   #$0000                     >>
   2626  5+1   7C9F AF   45               stx   next_entry,u               >>
   2627        7CA1               BBF_SetNewEntryPrevLink
   2628  6     7CA1 FF   FFFF             stu   $FFFF                      >>
   2629  3     7CA4 20   2C               bra   BBF_rts
   2630
   2631        7CA6               BBF_ExpandAtStart
   2632  5+1   7CA6 AF   41               stx   cell_start,u
   2633  4+1   7CA8 AB   40               adda  nb_cells,u
   2634  4+1   7CAA A7   40               sta   nb_cells,u
   2635  6+1   7CAC 10AE 45               ldy   next_entry,u
   2636  3     7CAF 27   21               beq   BBF_rts
   2637        7CB1               BBF_Join
   2638  6+1   7CB1 AC   23               cmpx  cell_end,y
   2639  3     7CB3 26   1D               bne   BBF_rts
   2640  5+1   7CB5 EC   21               ldd   cell_start,y
   2641  5+1   7CB7 ED   41               std   cell_start,u
   2642  4+1   7CB9 A6   20               lda   nb_cells,y
   2643  4+1   7CBB AB   40               adda  nb_cells,u
   2644  4+1   7CBD A7   40               sta   nb_cells,u
   2645  6+1   7CBF 6F   20               clr   nb_cells,y                 >>
   2646  5+1   7CC1 EC   25               ldd   next_entry,y
   2647  5+1   7CC3 ED   45               std   next_entry,u               >>
   2648  3     7CC5 20   0B               bra   BBF_rts
   2649
   2650        7CC7               BBF_ExpandAtEnd
   2651  6+1   7CC7 AC   43               cmpx  cell_end,u
   2652  3     7CC9 26   BC               bne   BBF_AddNewEntry
   2653  6+1   7CCB 10AF 43               sty   cell_end,u
   2654  4+1   7CCE AB   40               adda  nb_cells,u
   2655  4+1   7CD0 A7   40               sta   nb_cells,u
   2656                            
   2657        7CD2               BBF_rts
   2658  5+6   7CD2 35   C6               puls  d,u,pc
   2659
   2660                                   INCLUD CLRCARTM
   2661                           *****************************************>>
   2662                           * Clear memory in cardtridge area
   2663                           *****************************************>>
   2664
   2665        7CD4               ClearCartMem *@globals
   2666  5+3   7CD4 34   48               pshs  u,dp
   2667  7     7CD6 10FF 7D04             sts   ClearCartMem_3+2
   2668  4     7CDA 10CE 4000             lds   #$4000
   2669  4+0   7CDE 33   84               leau  ,x
   2670  4+0   7CE0 31   84               leay  ,x
   2671  6     7CE2 1F   10               tfr   x,d
   2672  6     7CE4 1F   8B               tfr   a,dp
   2673        7CE6               ClearCartMem_2
   2674  5+9   7CE6 34   7E               pshs  u,y,x,dp,b,a
   2675  5+9   7CE8 34   7E               pshs  u,y,x,dp,b,a
   2676  5+9   7CEA 34   7E               pshs  u,y,x,dp,b,a
   2677  5+9   7CEC 34   7E               pshs  u,y,x,dp,b,a
   2678  5+9   7CEE 34   7E               pshs  u,y,x,dp,b,a
   2679  5+9   7CF0 34   7E               pshs  u,y,x,dp,b,a
   2680  5+9   7CF2 34   7E               pshs  u,y,x,dp,b,a
   2681  5+9   7CF4 34   7E               pshs  u,y,x,dp,b,a
   2682  5+9   7CF6 34   7E               pshs  u,y,x,dp,b,a
   2683  5+7   7CF8 34   78               pshs  u,y,x,dp
   2684  5     7CFA 118C 0010             cmps  #$0010
   2685  3     7CFE 26   E6               bne   ClearCartMem_2
   2686  4+0   7D00 33   E4               leau  ,s
   2687        7D02               ClearCartMem_3
   2688  4     7D02 10CE 0000             lds   #$0000        ; start of me>>
   2689  5+6   7D06 36   36               pshu  d,x,y         ; saving 12 b>>
   2690  5+6   7D08 36   36               pshu  d,x,y         ; DEPENDENCY >>
   2691  5+4   7D0A 36   16               pshu  d,x
   2692  5+5   7D0C 35   C8               puls  dp,u,pc
   2693
   2694
   2695                                   INCLUD UPDTPAL
   2696                           * --------------------------------------->>
   2697                           * UpdatePalette
   2698                           * -------------
   2699                           * Subroutine to update palette
   2700                           * should be called quickly after WaitVBL
   2701                           *
   2702                           * input REG : none
   2703                           * reset REG : [d] [x]
   2704                           * --------------------------------------->>
   2705
   2706        7D0E 00            cpt             fcb   $00
   2707        7D0F FF            Refresh_palette fcb   $FF            *@gl>>
   2708        7D10 7D12          Cur_palette     fdb   Dyn_palette    *@gl>>
   2709        7D12               Dyn_palette     rmb   $20,0          *@gl>>
   2710        7D32               Black_palette   rmb   $20,0          *@gl>>
   2711        7D52 FF0F          White_palette   fdb   $ff0f          *@gl>>
   2712        7D54 FF0F                          fdb   $ff0f
   2713        7D56 FF0F                          fdb   $ff0f
   2714        7D58 FF0F                          fdb   $ff0f
   2715        7D5A FF0F                          fdb   $ff0f
   2716        7D5C FF0F                          fdb   $ff0f
   2717        7D5E FF0F                          fdb   $ff0f
   2718        7D60 FF0F                          fdb   $ff0f
   2719        7D62 FF0F                          fdb   $ff0f
   2720        7D64 FF0F                          fdb   $ff0f
   2721        7D66 FF0F                          fdb   $ff0f
   2722        7D68 FF0F                          fdb   $ff0f
   2723        7D6A FF0F                          fdb   $ff0f
   2724        7D6C FF0F                          fdb   $ff0f
   2725        7D6E FF0F                          fdb   $ff0f
   2726        7D70 FF0F                          fdb   $ff0f
   2727
   2728        7D72               UpdatePalette *@globals
   2729  7     7D72 7D   7D0F             tst   Refresh_palette
   2730  3     7D75 26   22               bne   UPP_return
   2731  6     7D77 BE   7D10            ldx   Cur_palette
   2732  7     7D7A 7F   7D0E            clr   cpt                      * c>>
   2733  5     7D7D B6   7D0E             lda   cpt                        >>
   2734        7D80               UPP_SetColor
   2735  2     7D80 48                   asla                              >>
   2736  5     7D81 B7   E7DB            sta   $E7DB                       >>
   2737  5+3   7D84 EC   81              ldd   ,x++                        >>
   2738  5     7D86 B7   E7DA            sta   $E7DA                       >>
   2739  5     7D89 F7   E7DA            stb   $E7DA                    * s>>
   2740  7     7D8C 7C   7D0E            inc   cpt                         >>
   2741  5     7D8F B6   7D0E            lda   cpt
   2742  2     7D92 81   10              cmpa  #$10                     * t>>
   2743  3     7D94 26   EA              bne   UPP_SetColor             * o>>
   2744  7     7D96 73   7D0F            com   Refresh_palette          * u>>
   2745        7D99               UPP_return
   2746  5     7D99 39                    rts
   2747
   2748
   2749                                   INCLUD PLAYPCM * A rendre dynamiq>>
   2750                           * --------------------------------------->>
   2751                           * PlayPCM
   2752                           * ------------
   2753                           * Subroutine to play a PCM sample at 16kH>>
   2754                           * This will freeze anything running
   2755                           * DAC Init from Mission: Liftoff (merci P>>
   2756                           *
   2757                           * input REG : [y] Pcm_ index to play
   2758                           * reset REG : [d] [x] [y]
   2759                           * --------------------------------------->>
   2760
   2761        7D9A               PlayPCM *@globals
   2762
   2763  5     7D9A B6   E7E5             lda   $E7E5
   2764  5     7D9D B7   7DEC             sta   PlayPCM_RestorePage+1
   2765
   2766  3     7DA0 CC   FB3F             ldd   #$fb3f  ! Mute by CRA to
   2767  5     7DA3 B4   E7CF             anda  $e7cf   ! avoid sound when
   2768  5     7DA6 B7   E7CF             sta   $e7cf   ! $e7cd written
   2769  5     7DA9 F7   E7CD             stb   $e7cd   ! Full sound line
   2770  2     7DAC 8A   04               ora   #$04    ! Disable mute by
   2771  5     7DAE B7   E7CF             sta   $e7cf   ! CRA and sound
   2772                            
   2773        7DB1               PlayPCM_ReadChunk
   2774  4+1   7DB1 A6   20               lda   pcm_page,y                 >>
   2775  2     7DB3 81   FF               cmpa  #$FF
   2776  3     7DB5 27   1B               beq   PlayPCM_End
   2777  5     7DB7 B7   E7E5             sta   $E7E5                      >>
   2778  5+1   7DBA AE   21               ldx   pcm_start_addr,y           >>
   2779                            
   2780        7DBC               PlayPCM_Loop
   2781  4+2   7DBC A6   80               lda   ,x+
   2782  5     7DBE B7   E7CD             sta   $e7cd                      >>
   2783  6+1   7DC1 AC   23               cmpx  pcm_end_addr,y
   2784  3     7DC3 27   07               beq   PlayPCM_NextChunk
   2785  11    7DC5 3D                    mul                              >>
   2786  11    7DC6 3D                    mul
   2787  11    7DC7 3D                    mul
   2788  6     7DC8 1F   89               tfr   a,b
   2789  3     7DCA 20   F0               bra   PlayPCM_Loop               >>
   2790                            
   2791        7DCC               PlayPCM_NextChunk
   2792  4+1   7DCC 31   25               leay  pcm_meta_size,y
   2793  11    7DCE 3D                    mul                              >>
   2794  2     7DCF 12                    nop
   2795  3     7DD0 20   DF               bra   PlayPCM_ReadChunk
   2796                            
   2797        7DD2               PlayPCM_End
   2798  2     7DD2 86   00               lda   #$00
   2799  5     7DD4 B7   E7CD             sta   $e7cd
   2800                            
   2801  3     7DD7 CC   FBFC             ldd   #$fbfc  ! Mute by CRA to
   2802  5     7DDA B4   E7CF             anda  $e7cf   ! avoid sound when
   2803  5     7DDD B7   E7CF             sta   $e7cf   ! $e7cd is written
   2804  5     7DE0 F4   E7CD             andb  $e7cd   ! Activate
   2805  5     7DE3 F7   E7CD             stb   $e7cd   ! joystick port
   2806  2     7DE6 8A   04               ora   #$04    ! Disable mute by
   2807  5     7DE8 B7   E7CF             sta   $e7cf   ! CRA + joystick
   2808
   2809        7DEB               PlayPCM_RestorePage
   2810  2     7DEB 86   00               lda   #$00
   2811  5     7DED B7   E7E5             sta   $E7E5
   2812                            
   2813  5     7DF0 39                    rts
   2814
   2815
   2816                                   INCLUD PSGLIB  * A rendre dynamiq>>
   2817                           * --------------------------------------->>
   2818                           * PSGlib
   2819                           * ------------
   2820                           * Converted to 6809 from:
   2821                           * PSGlib - Programmable Sound Generator a>>
   2822                           *          https://github.com/sverx/PSGli>>
   2823                           *
   2824                           * Typical workflow:
   2825                           * 1) You (or a friend of yours) track one>>
   2826                           * 2) Optional, but warmly suggested: opti>>
   2827                           * 3) Convert the VGM to PSG file(s) using>>
   2828                           * 4) Optional, suggested: compress the PS>>
   2829                           * 5) include the library and 'incbin' the>>
   2830                           * 6) call PSGInit once somewhere near the>>
   2831                           * 7) Set up a steady interrupt (vertical >>
   2832                           * 8) Start/stop tunes when needed using P>>
   2833                           * - Looping SFXs are supported too: fire >>
   2834                           * - Tunes can be set to run just once ins>>
   2835                           * - To check if a tune is still playing u>>
   2836                           *
   2837                           * PSGlib functions reference
   2838                           * ==========================
   2839                           *
   2840                           * engine initializer function
   2841                           * ---------------------------
   2842                           *
   2843                           * **PSGInit**: initializes the PSG engine>>
   2844                           * - no required parameters
   2845                           * - no return values
   2846                           * - destroys A
   2847                           *
   2848                           * functions for music
   2849                           * -------------------
   2850                           *
   2851                           * **PSGFrame**: processes a music frame
   2852                           * - no required parameters
   2853                           * - no return values
   2854                           * - destroys A,B,X
   2855                           *
   2856                           * **PSGPlay** / **PSGPlayNoRepeat**: star>>
   2857                           * - *needs* the address of the PSG to sta>>
   2858                           * - no return values
   2859                           * - destroys A
   2860                           *
   2861                           * **PSGStop**: stops (pauses) the music (>>
   2862                           * - no required parameters
   2863                           * - no return values
   2864                           * - destroys A
   2865                           *
   2866                           * **PSGResume**: resume the previously st>>
   2867                           * - no required parameters
   2868                           * - no return values
   2869                           * - destroys A
   2870                           *
   2871                           * **PSGCancelLoop**: sets the currently l>>
   2872                           * - no required parameters
   2873                           * - no return values
   2874                           * - destroys A
   2875                           *
   2876                           * **PSGGetStatus**: gets the current stat>>
   2877                           * - no required parameters
   2878                           * - *returns* `PSG_PLAYING` in register A>>
   2879                           *
   2880                           * functions for SFX
   2881                           * -----------------
   2882                           *
   2883                           * **PSGSFXFrame**: processes a SFX frame
   2884                           * - no required parameters
   2885                           * - no return values
   2886                           * - destroys A,B,Y
   2887                           *
   2888                           * **PSGSFXPlay** / **PSGSFXPlayLoop**: st>>
   2889                           * - *needs* the address of the SFX to sta>>
   2890                           * - *needs* a mask indicating which chann>>
   2891                           * - destroys A
   2892                           *
   2893                           * **PSGSFXStop**: stops the SFX (leaving >>
   2894                           * - no required parameters
   2895                           * - no return values
   2896                           * - destroys A
   2897                           *
   2898                           * **PSGSFXCancelLoop**: sets the currentl>>
   2899                           * - no required parameters
   2900                           * - no return values
   2901                           * - destroys A
   2902                           *
   2903                           * **PSGSFXGetStatus**: gets the current s>>
   2904                           * - no required parameters
   2905                           * - *returns* `PSG_PLAYING` in register A>>
   2906                           *
   2907                           * functions for music volume and hardware>>
   2908                           * --------------------------------------->>
   2909                           *
   2910                           * **PSGSetMusicVolumeAttenuation**: sets >>
   2911                           * - *needs* the volume attenuation value >>
   2912                           * - no return values
   2913                           * - destroys A
   2914                           *
   2915                           * **PSGSilenceChannels**: sets all hardwa>>
   2916                           * - no required parameters
   2917                           * - no return values
   2918                           * - destroys A
   2919                           *
   2920                           * **PSGRestoreVolumes**: resets silenced >>
   2921                           * - no required parameters
   2922                           * - no return values
   2923                           * - destroys A
   2924                           *
   2925                           * --------------------------------------->>
   2926
   2927                  0000     PSG_STOPPED         equ 0
   2928                  0001     PSG_PLAYING         equ 1
   2929
   2930                  E7B0     PSGDataPort         equ $e7b0
   2931
   2932                  0080     PSGLatch            equ $80
   2933                  0040     PSGData             equ $40
   2934
   2935                  0000     PSGChannel0         equ $00
   2936                  0020     PSGChannel1         equ $20
   2937                  0040     PSGChannel2         equ $40
   2938                  0060     PSGChannel3         equ $60
   2939                  0010     PSGVolumeData       equ $10
   2940
   2941                  0038     PSGWait             equ $38
   2942                  0008     PSGSubString        equ $08
   2943                  0001     PSGLoop             equ $01
   2944                  0000     PSGEnd              equ $00
   2945
   2946                  0001     SFX_CHANNEL2        equ $01
   2947                  0002     SFX_CHANNEL3        equ $02
   2948                  0003     SFX_CHANNELS2AND3   equ SFX_CHANNEL2!SFX_>>
   2949
   2950                           * ***************************************>>
   2951                           * initializes the PSG 'engine'
   2952                           * destroys A
   2953
   2954        7DF1               PSGInit *@globals
   2955  2     7DF1 86   00               lda   #PSG_STOPPED               >>
   2956  5     7DF3 B7   81EE             sta   PSGMusicStatus             >>
   2957  5     7DF6 B7   8208             sta   PSGSFXStatus               >>
   2958  5     7DF9 B7   8204             sta   PSGChannel2SFX             >>
   2959  5     7DFC B7   8205             sta   PSGChannel3SFX             >>
   2960  5     7DFF B7   8203             sta   PSGMusicVolumeAttenuation  >>
   2961  5     7E02 39                    rts
   2962
   2963                           * ***************************************>>
   2964                           * receives in X the address of the PSG to>>
   2965                           * destroys A
   2966
   2967        7E03               PSGPlayNoRepeat *@globals
   2968  2     7E03 86   00               lda   #0                         >>
   2969  3     7E05 20   02               bra   PSGPlay1
   2970        7E07               PSGPlay
   2971  2     7E07 86   01               lda   #1                         >>
   2972        7E09               PSGPlay1
   2973  5     7E09 B7   81F7             sta   PSGLoopFlag
   2974  7     7E0C 8D   23               bsr   PSGStop                    >>
   2975                            
   2976  4+0   7E0E A6   84               lda   ,x
   2977  5     7E10 B7   81EF             sta   PSGMusicPage
   2978  5+1   7E13 AE   01               ldx   1,x
   2979  6     7E15 BF   81F0             stx   PSGMusicStart              >>
   2980  6     7E18 BF   81F2             stx   PSGMusicPointer            >>
   2981  6     7E1B BF   81F4             stx   PSGMusicLoopPoint          >>
   2982  2     7E1E 86   00               lda   #0
   2983  5     7E20 B7   81F6             sta   PSGMusicSkipFrames         >>
   2984  5     7E23 B7   81F9             sta   PSGMusicSubstringLen       >>
   2985  2     7E26 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   2986  5     7E28 B7   81F8             sta   PSGMusicLastLatch          >>
   2987  2     7E2B 86   01               lda   #PSG_PLAYING
   2988  5     7E2D B7   81EE             sta   PSGMusicStatus             >>
   2989  5     7E30 39                    rts
   2990
   2991                           * ***************************************>>
   2992                           * stops the music (leaving the SFX on, if>>
   2993                           * destroys A
   2994
   2995        7E31               PSGStop *@globals
   2996  5     7E31 B6   81EE             lda   PSGMusicStatus             >>
   2997  3     7E34 27   23               beq   PSGStop_end
   2998  2     7E36 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   2999  5     7E38 B7   E7B0             sta   PSGDataPort
   3000  2     7E3B 86   BF               lda   #PSGLatch!PSGChannel1!PSGVo>>
   3001  5     7E3D B7   E7B0             sta   PSGDataPort
   3002  5     7E40 B6   8204             lda   PSGChannel2SFX
   3003  3     7E43 26   05               bne   PSGStop2
   3004  2     7E45 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   3005  5     7E47 B7   E7B0             sta   PSGDataPort
   3006        7E4A               PSGStop2
   3007  5     7E4A B6   8205             lda   PSGChannel3SFX
   3008  3     7E4D 26   05               bne   PSGStop3
   3009  2     7E4F 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3010  5     7E51 B7   E7B0             sta   PSGDataPort
   3011        7E54               PSGStop3
   3012  2     7E54 86   00               lda   #PSG_STOPPED               >>
   3013  5     7E56 B7   81EE             sta   PSGMusicStatus             >>
   3014        7E59               PSGStop_end
   3015  5     7E59 39              rts
   3016
   3017
   3018                           * ***************************************>>
   3019                           * resume a previously stopped music
   3020                           * destroys A
   3021
   3022        7E5A               PSGResume *@globals
   3023  5     7E5A B6   81EE             lda   PSGMusicStatus             >>
   3024  3     7E5D 26   45               bne   PSGResume_end
   3025  5     7E5F B6   81FC             lda   PSGChan0Volume             >>
   3026  2     7E62 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   3027  5     7E64 B7   E7B0             sta   PSGDataPort
   3028  5     7E67 B6   81FD             lda   PSGChan1Volume             >>
   3029  2     7E6A 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   3030  5     7E6C B7   E7B0             sta   PSGDataPort
   3031  5     7E6F B6   8204             lda   PSGChannel2SFX
   3032  3     7E72 26   16               bne   PSGResume1
   3033  5     7E74 B6   8200             lda   PSGChan2LowTone            >>
   3034  2     7E77 8A   C0               ora   #PSGLatch!PSGChannel2
   3035  5     7E79 B7   E7B0             sta   PSGDataPort
   3036  5     7E7C B6   8202             lda   PSGChan2HighTone
   3037  5     7E7F B7   E7B0             sta   PSGDataPort
   3038  5     7E82 B6   81FE             lda   PSGChan2Volume             >>
   3039  2     7E85 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3040  5     7E87 B7   E7B0             sta   PSGDataPort
   3041        7E8A               PSGResume1
   3042  5     7E8A B6   8205             lda   PSGChannel3SFX
   3043  3     7E8D 26   10               bne   PSGResume2
   3044  5     7E8F B6   8201             lda   PSGChan3LowTone            >>
   3045  2     7E92 8A   E0               ora   #PSGLatch!PSGChannel3
   3046  5     7E94 B7   E7B0             sta   PSGDataPort
   3047  5     7E97 B6   81FF             lda   PSGChan3Volume             >>
   3048  2     7E9A 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3049  5     7E9C B7   E7B0             sta   PSGDataPort
   3050        7E9F               PSGResume2
   3051  2     7E9F 86   01               lda   #PSG_PLAYING
   3052  5     7EA1 B7   81EE             sta   PSGMusicStatus             >>
   3053        7EA4               PSGResume_end
   3054  5     7EA4 39                    rts
   3055
   3056                           * ***************************************>>
   3057                           * sets the currently looping music to no >>
   3058                           * destroys A
   3059
   3060        7EA5               PSGCancelLoop *@globals
   3061  7     7EA5 7F   81F7               clr   PSGLoopFlag
   3062  5     7EA8 39                      rts
   3063
   3064                           * ***************************************>>
   3065                           * gets the current status of music into r>>
   3066
   3067        7EA9               PSGGetStatus *@globals
   3068  5     7EA9 B6   81EE             lda   PSGMusicStatus
   3069  5     7EAC 39                    rts
   3070
   3071                           * ***************************************>>
   3072                           * receives in A the volume attenuation fo>>
   3073                           * destroys A
   3074
   3075        7EAD               PSGSetMusicVolumeAttenuation *@globals
   3076  5     7EAD B7   8203             sta   PSGMusicVolumeAttenuation
   3077  5     7EB0 B6   81EE             lda   PSGMusicStatus             >>
   3078  3     7EB3 27   56               beq   PSGSetMusicVolumeAttenuatio>>
   3079
   3080  5     7EB5 B6   81FC             lda   PSGChan0Volume
   3081  2     7EB8 84   0F               anda  #$0F
   3082  5     7EBA BB   8203             adda  PSGMusicVolumeAttenuation
   3083  2     7EBD 81   10               cmpa  #$10                       >>
   3084  3     7EBF 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3085  2     7EC1 86   0F               lda   #$0F                       >>
   3086        7EC3               PSGSetMusicVolumeAttenuation1
   3087  2     7EC3 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   3088  5     7EC5 B7   E7B0             sta   PSGDataPort                >>
   3089                            
   3090  5     7EC8 B6   81FD             lda   PSGChan1Volume
   3091  2     7ECB 84   0F               anda  #$0F
   3092  5     7ECD BB   8203             adda  PSGMusicVolumeAttenuation
   3093  2     7ED0 81   10               cmpa  #$10                       >>
   3094  3     7ED2 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3095  2     7ED4 86   0F               lda   #$0F                       >>
   3096        7ED6               PSGSetMusicVolumeAttenuation2
   3097  2     7ED6 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   3098  5     7ED8 B7   E7B0             sta   PSGDataPort                >>
   3099                            
   3100
   3101  5     7EDB B6   8204             lda   PSGChannel2SFX             >>
   3102  3     7EDE 26   13               bne   _restore_channel3          >>
   3103
   3104  5     7EE0 B6   81FE             lda   PSGChan2Volume
   3105  2     7EE3 84   0F               anda  #$0F
   3106  5     7EE5 BB   8203             adda  PSGMusicVolumeAttenuation
   3107  2     7EE8 81   10               cmpa  #$10                       >>
   3108  3     7EEA 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3109  2     7EEC 86   0F               lda   #$0F                       >>
   3110        7EEE               PSGSetMusicVolumeAttenuation3
   3111  2     7EEE 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3112  5     7EF0 B7   E7B0             sta   PSGDataPort
   3113
   3114        7EF3               _restore_channel3
   3115  5     7EF3 B6   8205             lda   PSGChannel3SFX             >>
   3116  3     7EF6 26   13               bne   PSGSetMusicVolumeAttenuatio>>
   3117
   3118  5     7EF8 B6   81FF             lda   PSGChan3Volume
   3119  2     7EFB 84   0F               anda  #$0F
   3120  5     7EFD BB   8203             adda  PSGMusicVolumeAttenuation
   3121  2     7F00 81   10               cmpa  #$10                       >>
   3122  3     7F02 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   3123  2     7F04 86   0F               lda   #$0F                       >>
   3124        7F06               PSGSetMusicVolumeAttenuation4
   3125  2     7F06 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   3126  5     7F08 B7   E7B0             sta   PSGDataPort
   3127                            
   3128        7F0B               PSGSetMusicVolumeAttenuation_end
   3129  5     7F0B 39                    rts
   3130
   3131                           * ***************************************>>
   3132                           * sets all PSG channels to volume ZERO (u>>
   3133                           * destroys A
   3134
   3135        7F0C               PSGSilenceChannels *@globals
   3136  2     7F0C 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   3137  5     7F0E B7   E7B0             sta   PSGDataPort
   3138  2     7F11 86   BF               lda   #PSGLatch!PSGChannel1!PSGVo>>
   3139  5     7F13 B7   E7B0             sta   PSGDataPort
   3140  2     7F16 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   3141  5     7F18 B7   E7B0             sta   PSGDataPort
   3142  2     7F1B 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3143  5     7F1D B7   E7B0             sta   PSGDataPort
   3144  5     7F20 39                    rts
   3145
   3146                           * ***************************************>>
   3147                           * resets all PSG channels to previous vol>>
   3148                           * destroys A
   3149
   3150        7F21               PSGRestoreVolumes *@globals
   3151  5     7F21 B6   81EE             lda   PSGMusicStatus             >>
   3152  3     7F24 27   26               beq   _chkchn2                   >>
   3153
   3154  5     7F26 B6   81FC             lda   PSGChan0Volume
   3155  2     7F29 84   0F               anda  #$0F
   3156  5     7F2B BB   8203             adda  PSGMusicVolumeAttenuation
   3157  2     7F2E 81   10               cmpa  #$10                       >>
   3158  3     7F30 25   02               bcs   PSGRestoreVolumes1         >>
   3159  2     7F32 86   0F               lda   #$0F                       >>
   3160        7F34               PSGRestoreVolumes1
   3161  2     7F34 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   3162  5     7F36 B7   E7B0             sta   PSGDataPort                >>
   3163
   3164  5     7F39 B6   81FD             lda   PSGChan1Volume
   3165  2     7F3C 84   0F               anda  #$0F
   3166  5     7F3E BB   8203             adda  PSGMusicVolumeAttenuation
   3167  2     7F41 81   10               cmpa  #$10                       >>
   3168  3     7F43 25   02               bcs   PSGRestoreVolumes2         >>
   3169  2     7F45 86   0F               lda   #$0F                       >>
   3170        7F47               PSGRestoreVolumes2
   3171  2     7F47 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   3172  5     7F49 B7   E7B0             sta   PSGDataPort                >>
   3173                            
   3174        7F4C               _chkchn2
   3175  5     7F4C B6   8204             lda   PSGChannel2SFX             >>
   3176  3     7F4F 26   15               bne   _restoreSFX2
   3177                            
   3178  5     7F51 B6   81EE             lda   PSGMusicStatus             >>
   3179  3     7F54 27   1A               beq   _chkchn3                   >>
   3180
   3181  5     7F56 B6   81FE             lda   PSGChan2Volume
   3182  2     7F59 84   0F               anda  #$0F
   3183  5     7F5B BB   8203             adda  PSGMusicVolumeAttenuation
   3184  2     7F5E 81   10               cmpa  #$10                       >>
   3185  3     7F60 25   09               bcs   PSGRestoreVolumes3         >>
   3186  2     7F62 86   0F               lda   #$0F                       >>
   3187  3     7F64 20   05               bra   PSGRestoreVolumes3
   3188
   3189        7F66               _restoreSFX2
   3190  5     7F66 B6   8206             lda   PSGSFXChan2Volume
   3191  4     7F69 94   0F               anda  $0F
   3192        7F6B               PSGRestoreVolumes3
   3193  2     7F6B 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3194  5     7F6D B7   E7B0             sta   PSGDataPort                >>
   3195
   3196        7F70               _chkchn3
   3197  5     7F70 B6   8205             lda   PSGChannel3SFX             >>
   3198  3     7F73 26   15               bne   _restoreSFX3
   3199                            
   3200  5     7F75 B6   81EE             lda   PSGMusicStatus             >>
   3201  3     7F78 27   1A               beq   _restoreSFX2_end           >>
   3202
   3203  5     7F7A B6   81FF             lda   PSGChan3Volume
   3204  2     7F7D 84   0F               anda  #$0F
   3205  5     7F7F BB   8203             adda  PSGMusicVolumeAttenuation
   3206  2     7F82 81   10               cmpa  #$10                       >>
   3207  3     7F84 25   09               bcs   PSGRestoreVolumes4         >>
   3208  2     7F86 86   0F               lda   #$0F                       >>
   3209  3     7F88 20   05               bra   PSGRestoreVolumes4
   3210
   3211        7F8A               _restoreSFX3
   3212  5     7F8A B6   8207             lda   PSGSFXChan3Volume
   3213  2     7F8D 84   0F               anda  #$0F
   3214        7F8F               PSGRestoreVolumes4
   3215  2     7F8F 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   3216  5     7F91 B7   E7B0             sta   PSGDataPort                >>
   3217        7F94               _restoreSFX2_end
   3218  5     7F94 39                    rts
   3219
   3220
   3221                           * ***************************************>>
   3222                           * receives in X the address of the SFX PS>>
   3223                           * receives in B the mask that indicates w>>
   3224                           * destroys A
   3225
   3226        7F95               PSGSFXPlayLoop *@globals
   3227  2     7F95 86   01               lda   #1                         >>
   3228  3     7F97 20   02               bra   PSGSFXPlay1
   3229        7F99               PSGSFXPlay
   3230  2     7F99 86   00               lda   #0                         >>
   3231        7F9B               PSGSFXPlay1
   3232  5     7F9B B7   8211             sta   PSGSFXLoopFlag
   3233  7     7F9E 8D   41               bsr   PSGSFXStop                 >>
   3234
   3235  4+0   7FA0 A6   84               lda   ,x
   3236  5     7FA2 B7   8209             sta   PSGSFXPage
   3237  5+1   7FA5 AE   01               ldx   1,x
   3238  6     7FA7 BF   820A             stx   PSGSFXStart                >>
   3239  6     7FAA BF   820C             stx   PSGSFXPointer              >>
   3240  6     7FAD BF   820E             stx   PSGSFXLoopPoint            >>
   3241  2     7FB0 86   00               lda   #0
   3242  5     7FB2 B7   8210             sta   PSGSFXSkipFrames           >>
   3243  5     7FB5 B7   8212             sta   PSGSFXSubstringLen         >>
   3244  2     7FB8 C5   01               bitb  #SFX_CHANNEL2              >>
   3245  3     7FBA 27   05               beq   PSGSFXPlay2
   3246  2     7FBC 86   01               lda   #PSG_PLAYING
   3247  5     7FBE B7   8204             sta   PSGChannel2SFX
   3248        7FC1               PSGSFXPlay2
   3249  2     7FC1 C5   02               bitb  #SFX_CHANNEL3              >>
   3250  3     7FC3 27   05               beq   PSGSFXPlay3
   3251  2     7FC5 86   01               lda   #PSG_PLAYING
   3252  5     7FC7 B7   8205             sta   PSGChannel3SFX
   3253        7FCA               PSGSFXPlay3
   3254  5     7FCA B7   8208             sta   PSGSFXStatus               >>
   3255  5     7FCD B6   8201             lda   PSGChan3LowTone            >>
   3256  2     7FD0 84   03               anda  #SFX_CHANNELS2AND3
   3257  2     7FD2 81   03               cmpa  #SFX_CHANNELS2AND3
   3258  3     7FD4 26   0A               bne   PSGSFXPlayLoop_end         >>
   3259  2     7FD6 86   01               lda   #PSG_PLAYING
   3260  5     7FD8 B7   8205             sta   PSGChannel3SFX             >>
   3261  2     7FDB 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3262  5     7FDD B7   E7B0             sta   PSGDataPort
   3263        7FE0               PSGSFXPlayLoop_end
   3264  5     7FE0 39                    rts
   3265
   3266
   3267                           * ***************************************>>
   3268                           * stops the SFX (leaving the music on, if>>
   3269                           * destroys A
   3270
   3271        7FE1               PSGSFXStop *@globals
   3272  5     7FE1 B6   8208             lda   PSGSFXStatus               >>
   3273  3     7FE4 27   70               beq   PSGSFXStop_end             >>
   3274  5     7FE6 B6   8204             lda   PSGChannel2SFX             >>
   3275  3     7FE9 27   05               beq   PSGSFXStop1
   3276  2     7FEB 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   3277  5     7FED B7   E7B0             sta   PSGDataPort
   3278        7FF0               PSGSFXStop1
   3279  5     7FF0 B6   8205             lda   PSGChannel3SFX             >>
   3280  3     7FF3 27   05               beq   PSGSFXStop2
   3281  2     7FF5 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3282  5     7FF7 B7   E7B0             sta   PSGDataPort
   3283        7FFA               PSGSFXStop2
   3284  5     7FFA B6   81EE             lda   PSGMusicStatus             >>
   3285  3     7FFD 27   4E               beq   _skipRestore               >>
   3286  5     7FFF B6   8204             lda   PSGChannel2SFX             >>
   3287  3     8002 27   25               beq   _skip_chn2
   3288  5     8004 B6   8200             lda   PSGChan2LowTone
   3289  2     8007 84   0F               anda  #$0F                       >>
   3290  2     8009 8A   80               ora   #PSGLatch|PSGChannel2      >>
   3291  5     800B B7   E7B0             sta   PSGDataPort
   3292  5     800E B6   8202             lda   PSGChan2HighTone           >>
   3293  2     8011 84   3F               anda  #$3F                       >>
   3294  5     8013 B7   E7B0             sta   PSGDataPort
   3295  5     8016 B6   81FE             lda   PSGChan2Volume             >>
   3296  2     8019 84   0F               anda  #$0F                       >>
   3297  5     801B BB   8203             adda  PSGMusicVolumeAttenuation
   3298  2     801E 81   10               cmpa  #$10                       >>
   3299  3     8020 25   02               bcs   PSGSFXStop3                >>
   3300  2     8022 86   0F               lda   #$0F                       >>
   3301        8024               PSGSFXStop3
   3302  2     8024 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3303  5     8026 B7   E7B0             sta   PSGDataPort                >>
   3304        8029               _skip_chn2
   3305  5     8029 B6   8205             lda   PSGChannel3SFX             >>
   3306  3     802C 27   1D               beq   _skip_chn3
   3307  5     802E B6   8201             lda   PSGChan3LowTone
   3308  4     8031 94   07               anda  $07                        >>
   3309  2     8033 8A   E0               ora   #PSGLatch!PSGChannel3      >>
   3310  5     8035 B7   E7B0             sta   PSGDataPort
   3311  5     8038 B6   81FF             lda   PSGChan3Volume             >>
   3312  2     803B 84   0F               anda  #$0F                       >>
   3313  5     803D BB   8203             adda  PSGMusicVolumeAttenuation
   3314  2     8040 81   10               cmpa  #$10                       >>
   3315  3     8042 25   02               bcs   PSGSFXStop4                >>
   3316  2     8044 86   0F               lda   #$0F                       >>
   3317        8046               PSGSFXStop4
   3318  2     8046 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   3319  5     8048 B7   E7B0             sta   PSGDataPort                >>
   3320
   3321        804B               _skip_chn3
   3322  2     804B 86   00               lda   #PSG_STOPPED               >>
   3323        804D               _skipRestore
   3324  5     804D B7   8204             sta   PSGChannel2SFX
   3325  5     8050 B7   8205             sta   PSGChannel3SFX
   3326  5     8053 B7   8208             sta   PSGSFXStatus               >>
   3327        8056               PSGSFXStop_end
   3328  5     8056 39                    rts
   3329
   3330                           * ***************************************>>
   3331                           * sets the currently looping SFX to no mo>>
   3332                           * destroys A
   3333
   3334        8057               PSGSFXCancelLoop *@globals
   3335  7     8057 7F   8211             clr   PSGSFXLoopFlag
   3336  5     805A 39                    rts
   3337
   3338
   3339                           * ***************************************>>
   3340                           * gets the current SFX status into regist>>
   3341
   3342        805B               PSGSFXGetStatus *@globals
   3343  5     805B B6   8208             lda   PSGSFXStatus
   3344  5     805E 39                    rts
   3345
   3346
   3347                           * ***************************************>>
   3348                           * processes a music frame
   3349                           * destroys A,B,X
   3350                            
   3351        805F               PSGFrame *@globals
   3352
   3353  5     805F B6   81EF             lda   PSGMusicPage
   3354  5     8062 B7   E7E5             sta   $E7E5
   3355
   3356  5     8065 B6   81EE             lda   PSGMusicStatus             >>
   3357  3     8068 26   01               bne   PSGFrame_continue
   3358  5     806A 39                    rts
   3359
   3360        806B               PSGFrame_continue
   3361  5     806B B6   81F6             lda   PSGMusicSkipFrames         >>
   3362  3     806E 26   7F               bne   _skipFrame
   3363  6     8070 BE   81F2             ldx   PSGMusicPointer            >>
   3364
   3365        8073               _intLoop
   3366  4+2   8073 E6   80               ldb   ,x+                        >>
   3367  5     8075 B6   81F9             lda   PSGMusicSubstringLen       >>
   3368  3     8078 27   09               beq   _continue                  >>
   3369  2     807A 4A                    deca                             >>
   3370  5     807B B7   81F9             sta   PSGMusicSubstringLen       >>
   3371  3     807E 26   03               bne   _continue
   3372  6     8080 BE   81FA             ldx   PSGMusicSubstringRetAddr   >>
   3373
   3374        8083               _continue
   3375  2     8083 C1   80               cmpb  #PSGLatch                  >>
   3376  3     8085 25   6D               bcs   _noLatch                   >>
   3377  5     8087 F7   81F8             stb   PSGMusicLastLatch          >>
   3378                            
   3379  2     808A C5   04               bitb  #4                         >>
   3380  3     808C 26   32               bne   _latch_Volume              >>
   3381  2     808E C5   06               bitb  #6                         >>
   3382  3     8090 27   58               beq   _send2PSG                  >>
   3383
   3384  2     8092 C5   05               bitb  #5                         >>
   3385  3     8094 27   20               beq   _ifchn2                    >>
   3386  5     8096 F7   8201             stb   PSGChan3LowTone            >>
   3387  5     8099 B6   8205             lda   PSGChannel3SFX             >>
   3388  3     809C 26   D5               bne   _intLoop
   3389  5     809E B6   8201             lda   PSGChan3LowTone
   3390  2     80A1 84   03               anda  #3                         >>
   3391  2     80A3 81   03               cmpa  #3
   3392  3     80A5 26   43               bne   _send2PSG                  >>
   3393  5     80A7 B6   8208             lda   PSGSFXStatus               >>
   3394  3     80AA 27   3E               beq   _send2PSG                  >>
   3395  5     80AC B7   8205             sta   PSGChannel3SFX             >>
   3396  2     80AF 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3397  5     80B1 B7   E7B0             sta   PSGDataPort
   3398  3     80B4 20   BD               bra   _intLoop
   3399
   3400        80B6               _ifchn2
   3401  5     80B6 F7   8200             stb   PSGChan2LowTone            >>
   3402  5     80B9 B6   8204             lda   PSGChannel2SFX             >>
   3403  3     80BC 27   2C               beq   _send2PSG
   3404  3     80BE 20   B3               bra   _intLoop
   3405                            
   3406        80C0               _latch_Volume
   3407  2     80C0 C5   06               bitb  #6                         >>
   3408  3     80C2 26   0E               bne   _latch_Volume_23           >>
   3409  2     80C4 C5   05               bitb  #5                         >>
   3410  3     80C6 27   05               beq   _ifchn0                    >>
   3411  5     80C8 F7   81FD             stb   PSGChan1Volume             >>
   3412  3     80CB 20   4C               bra   _sendVolume2PSG
   3413                            
   3414        80CD               _ifchn0
   3415  5     80CD F7   81FC             stb   PSGChan0Volume             >>
   3416  3     80D0 20   47               bra   _sendVolume2PSG
   3417
   3418        80D2               _latch_Volume_23
   3419  2     80D2 C5   05               bitb  #5                         >>
   3420  3     80D4 27   0A               beq   _chn2                      >>
   3421  5     80D6 F7   81FF             stb   PSGChan3Volume             >>
   3422  5     80D9 B6   8205             lda   PSGChannel3SFX             >>
   3423  3     80DC 27   3B               beq   _sendVolume2PSG
   3424  3     80DE 20   93               bra   _intLoop
   3425
   3426        80E0               _chn2
   3427  5     80E0 F7   81FE             stb   PSGChan2Volume             >>
   3428  5     80E3 B6   8204             lda   PSGChannel2SFX             >>
   3429  3     80E6 27   31               beq   _sendVolume2PSG
   3430  3     80E8 20   89               bra   _intLoop
   3431                            
   3432        80EA               _send2PSG
   3433  5     80EA F7   E7B0             stb   PSGDataPort                >>
   3434  3     80ED 20   84               bra   _intLoop
   3435                            
   3436        80EF               _skipFrame
   3437  2     80EF 4A                    deca
   3438  5     80F0 B7   81F6             sta   PSGMusicSkipFrames
   3439  5     80F3 39                    rts
   3440
   3441        80F4               _noLatch
   3442  2     80F4 C1   40               cmpb  #PSGData
   3443  3     80F6 25   05               bcs   _command                   >>
   3444                                                                    >>
   3445  5     80F8 B6   81F8             lda   PSGMusicLastLatch          >>
   3446  3     80FB 20   39               bra   _output_NoLatch
   3447
   3448        80FD               _command
   3449  2     80FD C1   38               cmpb  #PSGWait
   3450  3     80FF 27   07               beq   _done                      >>
   3451  3     8101 25   09               bcs   _otherCommands             >>
   3452  2     8103 C4   07               andb  #$07                       >>
   3453  5     8105 F7   81F6             stb   PSGMusicSkipFrames         >>
   3454                            
   3455        8108               _done
   3456  6     8108 BF   81F2             stx   PSGMusicPointer            >>
   3457  5     810B 39                    rts                              >>
   3458
   3459        810C               _otherCommands
   3460  2     810C C1   08               cmpb  #PSGSubString
   3461  3     810E 24   3F               bcc   _substring
   3462  2     8110 C1   00               cmpb  #PSGEnd
   3463  3     8112 27   2E               beq   _musicLoop
   3464  2     8114 C1   01               cmpb  #PSGLoop
   3465  3     8116 27   24               beq   _setLoopPoint
   3466
   3467                             * *************************************>>
   3468                             * we should never get here!
   3469                             * if we do, it means the PSG file is pr>>
   3470                             * *************************************>>
   3471
   3472  5     8118 39                    rts
   3473
   3474        8119               _sendVolume2PSG *@globals
   3475  5     8119 F7   8128             stb   _sendVolume2PSG1+1         >>
   3476  2     811C C4   0F               andb  #$0F                       >>
   3477  5     811E FB   8203             addb  PSGMusicVolumeAttenuation  >>
   3478  2     8121 C1   10               cmpb  #$10                       >>
   3479  3     8123 25   02               bcs   _sendVolume2PSG1           >>
   3480  2     8125 C6   0F               ldb   #$0F                       >>
   3481        8127               _sendVolume2PSG1
   3482  2     8127 86   00               lda   #0                         >>
   3483  5     8129 F7   812F             stb   _sendVolume2PSG2+1
   3484  2     812C 84   F0               anda  #$F0                       >>
   3485        812E               _sendVolume2PSG2
   3486  2     812E 8A   00               ora   #0                         >>
   3487  5     8130 B7   E7B0             sta   PSGDataPort                >>
   3488  5     8133 16   FF3D             lbra   _intLoop
   3489
   3490        8136               _output_NoLatch
   3491                             * we got the last latch in A and the PS>>
   3492                             * and we have to check if the value sho>>
   3493                             * note that non-latch commands can be o>>
   3494                             * for channels 0,1,2 only (no noise)
   3495  2     8136 85   06               bita  #6                         >>
   3496  3     8138 26   27               bne   _high_part_Tone            >>
   3497  3     813A 20   AE               bra   _send2PSG                  >>
   3498
   3499        813C               _setLoopPoint
   3500  6     813C BF   81F4             stx   PSGMusicLoopPoint
   3501  5     813F 16   FF31             lbra   _intLoop
   3502
   3503        8142               _musicLoop
   3504  5     8142 B6   81F7             lda   PSGLoopFlag                >>
   3505  6     8145 1027 FCE8             lbeq   PSGStop                   >>
   3506  6     8149 BE   81F4             ldx   PSGMusicLoopPoint
   3507  5     814C 16   FF24             lbra   _intLoop
   3508
   3509        814F               _substring
   3510  2     814F C0   04               subb  #PSGSubString-4            >>
   3511  5     8151 F7   81F9             stb   PSGMusicSubstringLen       >>
   3512  5+3   8154 EC   81               ldd   ,x++                       >>
   3513  6     8156 BF   81FA             stx   PSGMusicSubstringRetAddr   >>
   3514  6     8159 BE   81F0             ldx   PSGMusicStart
   3515  4+4   815C 30   8B               leax  d,x                        >>
   3516  5     815E 16   FF12             lbra   _intLoop
   3517
   3518        8161               _high_part_Tone
   3519  5     8161 F7   8202             stb   PSGChan2HighTone           >>
   3520  5     8164 B6   8204             lda   PSGChannel2SFX             >>
   3521  3     8167 27   81               beq   _send2PSG
   3522  5     8169 16   FF07             lbra   _intLoop
   3523
   3524
   3525                           * ***************************************>>
   3526                           * processes a SFX frame
   3527                           * destroys A,B,X
   3528
   3529        816C               PSGSFXFrame *@globals
   3530
   3531  5     816C B6   8209             lda   PSGSFXPage
   3532  5     816F B7   E7E5             sta   $E7E5
   3533                            
   3534  5     8172 B6   8208             lda   PSGSFXStatus               >>
   3535  3     8175 27   35               beq   PSGSFXFrame_end
   3536
   3537  5     8177 B6   8210             lda   PSGSFXSkipFrames           >>
   3538  3     817A 26   2C               bne   _skipSFXFrame
   3539                            
   3540  6     817C BE   820C             ldx   PSGSFXPointer              >>
   3541
   3542        817F               _intSFXLoop
   3543  4+2   817F E6   80               ldb   ,x+                        >>
   3544  5     8181 B6   8212             lda   PSGSFXSubstringLen         >>
   3545  3     8184 27   09               beq   _SFXcontinue               >>
   3546  2     8186 4A                    deca                             >>
   3547  5     8187 B7   8212             sta   PSGSFXSubstringLen         >>
   3548  3     818A 26   03               bne   _SFXcontinue
   3549  6     818C BE   8213             ldx   PSGSFXSubstringRetAddr     >>
   3550
   3551        818F               _SFXcontinue
   3552  2     818F C1   40               cmpb   #PSGData
   3553  3     8191 25   1A               bcs    _SFXcommand               >>
   3554  2     8193 C5   04               bitb   #4                        >>
   3555  3     8195 27   0C               beq    _SFXoutbyte               >>
   3556  2     8197 C5   05               bitb   #5                        >>
   3557  3     8199 26   05               bne    _SFXvolumechn3
   3558  5     819B F7   8206             stb    PSGSFXChan2Volume
   3559  3     819E 20   03               bra   _SFXoutbyte
   3560
   3561        81A0               _SFXvolumechn3
   3562  5     81A0 F7   8207             stb   PSGSFXChan3Volume
   3563
   3564        81A3               _SFXoutbyte
   3565  5     81A3 F7   E7B0             stb   PSGDataPort                >>
   3566  3     81A6 20   D7               bra   _intSFXLoop
   3567                            
   3568        81A8               _skipSFXFrame
   3569  2     81A8 4A                    deca
   3570  5     81A9 B7   8210             sta   PSGSFXSkipFrames
   3571        81AC               PSGSFXFrame_end
   3572  5     81AC 39                    rts
   3573
   3574        81AD               _SFXcommand
   3575  2     81AD C1   38               cmpb   #PSGWait
   3576  3     81AF 27   07               beq    _SFXdone                  >>
   3577  3     81B1 25   09               bcs    _SFXotherCommands         >>
   3578  2     81B3 C4   07               andb   #$07                      >>
   3579  5     81B5 F7   8210             stb    PSGSFXSkipFrames          >>
   3580        81B8               _SFXdone
   3581  6     81B8 BF   820C             stx    PSGSFXPointer             >>
   3582  5     81BB 39                    rts                              >>
   3583
   3584        81BC               _SFXotherCommands
   3585  2     81BC C1   08               cmpb   #PSGSubString
   3586  3     81BE 24   1D               bcc    _SFXsubstring
   3587  2     81C0 C1   00               cmpb   #PSGEnd
   3588  3     81C2 27   0A               beq    _sfxLoop
   3589  2     81C4 C1   01               cmpb   #PSGLoop
   3590  3     81C6 27   01               beq    _SFXsetLoopPoint
   3591                            
   3592                             * *************************************>>
   3593                             * we should never get here!
   3594                             * if we do, it means the PSG SFX file i>>
   3595                             * *************************************>>
   3596
   3597  5     81C8 39                    rts
   3598
   3599        81C9               _SFXsetLoopPoint *@globals
   3600  6     81C9 BF   820E             stx   PSGSFXLoopPoint
   3601  3     81CC 20   B1               bra   _intSFXLoop
   3602                            
   3603        81CE               _sfxLoop
   3604  5     81CE B6   8211             lda   PSGSFXLoopFlag             >>
   3605  6     81D1 1027 FE0C             lbeq   PSGSFXStop                >>
   3606  6     81D5 BE   820E             ldx   PSGSFXLoopPoint
   3607  6     81D8 BF   820C             stx   PSGSFXPointer
   3608  3     81DB 20   A2               bra   _intSFXLoop
   3609
   3610        81DD               _SFXsubstring
   3611  2     81DD C0   04               subb  #PSGSubString-4            >>
   3612  5     81DF F7   8212             stb   PSGSFXSubstringLen         >>
   3613  5+3   81E2 EC   81               ldd   ,x++                       >>
   3614  6     81E4 BF   8213             stx   PSGSFXSubstringRetAddr     >>
   3615  6     81E7 BE   820A             ldx   PSGSFXStart
   3616  4+4   81EA 30   8B               leax  d,x                        >>
   3617  3     81EC 20   91               bra   _intSFXLoop
   3618
   3619                             * fundamental vars
   3620        81EE               PSGMusicStatus             rmb 1,0 ; are >>
   3621        81EF               PSGMusicPage               rmb 1,0 ; Memo>>
   3622        81F0               PSGMusicStart              rmb 2,0 ; the >>
   3623        81F2               PSGMusicPointer            rmb 2,0 ; the >>
   3624        81F4               PSGMusicLoopPoint          rmb 2,0 ; the >>
   3625        81F6               PSGMusicSkipFrames         rmb 1,0 ; the >>
   3626        81F7               PSGLoopFlag                rmb 1,0 ; the >>
   3627        81F8               PSGMusicLastLatch          rmb 1,0 ; the >>
   3628
   3629                             * decompression vars
   3630        81F9               PSGMusicSubstringLen       rmb 1,0 ; leng>>
   3631        81FA               PSGMusicSubstringRetAddr   rmb 2,0 ; retu>>
   3632
   3633                             * command buffers
   3634        81FC               PSGChan0Volume             rmb 1,0 ; the >>
   3635        81FD               PSGChan1Volume             rmb 1,0 ; the >>
   3636        81FE               PSGChan2Volume             rmb 1,0 ; the >>
   3637        81FF               PSGChan3Volume             rmb 1,0 ; the >>
   3638        8200               PSGChan2LowTone            rmb 1,0 ; the >>
   3639        8201               PSGChan3LowTone            rmb 1,0 ; the >>
   3640        8202               PSGChan2HighTone           rmb 1,0 ; the >>
   3641
   3642        8203               PSGMusicVolumeAttenuation  rmb 1,0 ; the >>
   3643
   3644                             * ******* SFX *************
   3645
   3646                             * flags for channels 2-3 access
   3647        8204               PSGChannel2SFX             rmb 1,0 ; !0 m>>
   3648        8205               PSGChannel3SFX             rmb 1,0 ; !0 m>>
   3649
   3650                             * command buffers for SFX
   3651        8206               PSGSFXChan2Volume          rmb 1,0 ; the >>
   3652        8207               PSGSFXChan3Volume          rmb 1,0 ; the >>
   3653
   3654                             * fundamental vars for SFX
   3655        8208               PSGSFXStatus               rmb 1,0 ; are >>
   3656        8209               PSGSFXPage                 rmb 1,0 ; Memo>>
   3657        820A               PSGSFXStart                rmb 2,0 ; the >>
   3658        820C               PSGSFXPointer              rmb 2,0 ; the >>
   3659        820E               PSGSFXLoopPoint            rmb 2,0 ; the >>
   3660        8210               PSGSFXSkipFrames           rmb 1,0 ; the >>
   3661        8211               PSGSFXLoopFlag             rmb 1,0 ; the >>
   3662
   3663                             * decompression vars for SFX
   3664        8212               PSGSFXSubstringLen         rmb 1,0 ; leng>>
   3665        8213               PSGSFXSubstringRetAddr     rmb 2,0 ; retu>>
   3666
   3667
   3668
    184                            
    185                           * =======================================>>
    186                           * Level Specific Generated Data
    187                           * IMG and ANI should be in first position>>
    188                           * =======================================>>
   3669                                   INCLUD IMAGEIDX
   3670                           * Generated Code
   3671
   3672        8215               Img_SonicAndTailsIn *@globals
   3673        8215 07 00 00 00           fcb   $07,$00,$00,$00,$88,$4F,$00>>
               8219 88 4F 00 00
               821D 06 00 00 BB
               8221 D9 0A
   3674        8223 D0 04                 fcb   $D0,$04
   3675        8225               Img_SegaLogo_2 *@globals
   3676        8225 07 00 00 00           fcb   $07,$00,$00,$00,$5C,$39,$03>>
               8229 5C 39 03 00
               822D 06 00 00 D2
               8231 E4 0D
   3677        8233 C1 7E                 fcb   $C1,$7E
   3678        8235               Img_SegaLogo_1 *@globals
   3679        8235 07 00 00 00           fcb   $07,$00,$00,$00,$5C,$38,$03>>
               8239 5C 38 03 00
               823D 06 00 00 D2
               8241 E5 09
   3680        8243 D1 3B                 fcb   $D1,$3B
   3681        8245               Img_SegaTrails_1 *@globals
   3682        8245 07 10 00 00           fcb   $07,$10,$00,$00,$07,$3E,$00>>
               8249 07 3E 00 00
               824D 06 00 00 10
               8251 E0 05
   3683        8253 DD BB 00 06           fcb   $DD,$BB,$00,$06,$00,$00,$E8>>
               8257 00 00 E8 E0
               825B 05 DC 44
   3684        825E               Img_SegaSonic_12 *@globals
   3685        825E 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$45,$00>>
               8262 0F 45 00 06
               8266 00 00 00 F8
               826A E3 08
   3686        826C D7 DD 05 D9           fcb   $D7,$DD,$05,$D9,$94,$0A,$06>>
               8270 94 0A 06 00
               8274 00 00 F8 E3
               8278 09 C9
   3687        827A 76 06 DD 53           fcb   $76,$06,$DD,$53,$0A
               827E 0A
   3688        827F               Img_SegaSonic_23 *@globals
   3689        827F 07 14 00 00           fcb   $07,$14,$00,$00,$06,$1F,$00>>
               8283 06 1F 00 06
               8287 00 00 00 F1
               828B 01 05
   3690        828D D7 47 05 D6           fcb   $D7,$47,$05,$D6,$61,$02,$06>>
               8291 61 02 06 00
               8295 00 00 08 01
               8299 05 D4
   3691        829B 12 05 D3 2C           fcb   $12,$05,$D3,$2C,$02
               829F 02
   3692        82A0               Img_SegaSonic_13 *@globals
   3693        82A0 07 14 00 00           fcb   $07,$14,$00,$00,$06,$25,$00>>
               82A4 06 25 00 06
               82A8 00 00 00 F1
               82AC 01 06
   3694        82AE DA 89 05 D2           fcb   $DA,$89,$05,$D2,$1C,$03,$06>>
               82B2 1C 03 06 00
               82B6 00 00 08 01
               82BA 06 D7
   3695        82BC BD 05 D1 0D           fcb   $BD,$05,$D1,$0D,$03
               82C0 03
   3696        82C1               Img_SegaSonic_32 *@globals
   3697        82C1 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$45,$00>>
               82C5 0F 45 00 06
               82C9 00 00 00 F8
               82CD E3 09
   3698        82CF C1 1C 06 D4           fcb   $C1,$1C,$06,$D4,$CF,$0A,$06>>
               82D3 CF 0A 06 00
               82D7 00 00 F8 E3
               82DB 09 B8
   3699        82DD BC 06 D1 DE           fcb   $BC,$06,$D1,$DE,$0A
               82E1 0A
   3700        82E2               Img_SegaSonic_21 *@globals
   3701        82E2 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               82E6 07 3F 00 06
               82EA 00 00 00 08
               82EE E5 06
   3702        82F0 CD 3B 05 CF           fcb   $CD,$3B,$05,$CF,$3F,$04,$06>>
               82F4 3F 04 06 00
               82F8 00 00 F0 E5
               82FC 07 DB
   3703        82FE 3E 05 CD 70           fcb   $3E,$05,$CD,$70,$04
               8302 04
   3704        8303               Img_SegaSonic_43 *@globals
   3705        8303 07 14 00 00           fcb   $07,$14,$00,$00,$06,$1F,$00>>
               8307 06 1F 00 06
               830B 00 00 00 F1
               830F 01 05
   3706        8311 CB 23 05 CA           fcb   $CB,$23,$05,$CA,$3B,$02,$06>>
               8315 3B 02 06 00
               8319 00 00 08 01
               831D 06 CA
   3707        831F EE 05 C9 53           fcb   $EE,$05,$C9,$53,$02
               8323 02
   3708        8324               Img_SegaSonic_11 *@globals
   3709        8324 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               8328 07 3F 00 06
               832C 00 00 00 08
               8330 E5 08
   3710        8332 D3 09 05 C7           fcb   $D3,$09,$05,$C7,$59,$04,$06>>
               8336 59 04 06 00
               833A 00 00 F0 E5
               833E 08 CE
   3711        8340 35 05 C5 5E           fcb   $35,$05,$C5,$5E,$04
               8344 04
   3712        8345               Img_SegaSonic_33 *@globals
   3713        8345 07 14 00 00           fcb   $07,$14,$00,$00,$05,$25,$00>>
               8349 05 25 00 06
               834D 00 00 00 F2
               8351 01 05
   3714        8353 C3 28 05 C2           fcb   $C3,$28,$05,$C2,$39,$02,$06>>
               8357 39 02 06 00
               835B 00 00 08 01
               835F 05 C0
   3715        8361 03 05 BF 14           fcb   $03,$05,$BF,$14,$02
               8365 02
   3716        8366               Img_SegaSonic_22 *@globals
   3717        8366 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$47,$00>>
               836A 0F 47 00 06
               836E 00 00 00 F8
               8372 E1 09
   3718        8374 B0 95 06 C8           fcb   $B0,$95,$06,$C8,$30,$0A,$06>>
               8378 30 0A 06 00
               837C 00 00 F8 E1
               8380 09 A8
   3719        8382 56 06 C5 74           fcb   $56,$06,$C5,$74,$0A
               8386 0A
   3720        8387               Img_SegaSonic_41 *@globals
   3721        8387 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               838B 07 3F 00 06
               838F 00 00 00 08
               8393 E5 07
   3722        8395 D6 C3 05 BD           fcb   $D6,$C3,$05,$BD,$55,$04,$06>>
               8399 55 04 06 00
               839D 00 00 F0 E5
               83A1 07 D2
   3723        83A3 46 05 BB 96           fcb   $46,$05,$BB,$96,$04
               83A7 04
   3724        83A8               Img_SegaSonic_31 *@globals
   3725        83A8 07 14 00 00           fcb   $07,$14,$00,$00,$07,$3F,$00>>
               83AC 07 3F 00 06
               83B0 00 00 00 08
               83B4 E5 08
   3726        83B6 C9 60 05 B9           fcb   $C9,$60,$05,$B9,$A9,$04,$06>>
               83BA A9 04 06 00
               83BE 00 00 F0 E5
               83C2 08 C4
   3727        83C4 8D 05 B7 BC           fcb   $8D,$05,$B7,$BC,$04
               83C8 04
   3728        83C9               Img_SegaSonic_42 *@globals
   3729        83C9 07 14 00 00           fcb   $07,$14,$00,$00,$0F,$47,$00>>
               83CD 0F 47 00 06
               83D1 00 00 00 F8
               83D5 E1 09
   3730        83D7 A0 00 06 C2           fcb   $A0,$00,$06,$C2,$A7,$0A,$06>>
               83DB A7 0A 06 00
               83DF 00 00 F8 E1
               83E3 0A C7
   3731        83E5 A0 06 BF DC           fcb   $A0,$06,$BF,$DC,$0A
               83E9 0A
   3732        83EA               Img_SegaTrails_6 *@globals
   3733        83EA 00 07 00 00           fcb   $00,$07,$00,$00,$0F,$44,$00>>
               83EE 0F 44 00 00
               83F2 06 00 00 10
               83F6 DE 05
   3734        83F8 B6 46                 fcb   $B6,$46
   3735        83FA               Img_SegaTrails_5 *@globals
   3736        83FA 00 07 00 00           fcb   $00,$07,$00,$00,$0F,$44,$00>>
               83FE 0F 44 00 00
               8402 06 00 00 00
               8406 DE 05
   3737        8408 B4 D0                 fcb   $B4,$D0
   3738        840A               Img_SegaTrails_4 *@globals
   3739        840A 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$44,$00>>
               840E 0F 44 00 00
               8412 06 00 00 E0
               8416 DE 05
   3740        8418 B3 5A                 fcb   $B3,$5A
   3741        841A               Img_SegaTrails_3 *@globals
   3742        841A 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$44,$00>>
               841E 0F 44 00 00
               8422 06 00 00 F0
               8426 DE 05
   3743        8428 B1 E4                 fcb   $B1,$E4
   3744        842A               Img_SegaTrails_2 *@globals
   3745        842A 07 10 00 00           fcb   $07,$10,$00,$00,$0F,$44,$00>>
               842E 0F 44 00 00
               8432 06 00 00 00
               8436 DE 05
   3746        8438 B0 12 00 06           fcb   $B0,$12,$00,$06,$00,$00,$F0>>
               843C 00 00 F0 DE
               8440 05 AE 38
   3747        8443               Img_star_4 *@globals
   3748        8443 07 00 00 00           fcb   $07,$00,$00,$00,$0A,$16,$00>>
               8447 0A 16 00 06
               844B 00 00 00 FB
               844F F5 05
   3749        8451 AB 97 05 AB           fcb   $AB,$97,$05,$AB,$02,$02
               8455 02 02
   3750        8457               Img_star_3 *@globals
   3751        8457 07 00 00 00           fcb   $07,$00,$00,$00,$06,$0E,$00>>
               845B 06 0E 00 06
               845F 00 00 00 FD
               8463 F9 05
   3752        8465 AA 00 05 A9           fcb   $AA,$00,$05,$A9,$A2,$01
               8469 A2 01
   3753        846B               Img_sonicHand *@globals
   3754        846B 07 00 00 00           fcb   $07,$00,$00,$00,$0E,$2A,$00>>
               846F 0E 2A 00 06
               8473 0D 00 00 04
               8477 01 08
   3755        8479 BF 38 05 A7           fcb   $BF,$38,$05,$A7,$D1,$05,$06>>
               847D D1 05 06 B9
               8481 51
   3756        8482               Img_star_2 *@globals
   3757        8482 07 00 00 00           fcb   $07,$00,$00,$00,$02,$06,$00>>
               8486 02 06 00 06
               848A 00 0D 00 FF
               848E FD 05
   3758        8490 A7 60 05 A7           fcb   $A7,$60,$05,$A7,$32,$01,$05>>
               8494 32 01 05 A6
               8498 C3 05 A6 95
               849C 01
   3759        849D               Img_star_1 *@globals
   3760        849D 07 00 00 00           fcb   $07,$00,$00,$00,$02,$04,$00>>
               84A1 02 04 00 06
               84A5 00 0D 00 FF
               84A9 FE 05
   3761        84AB A6 42 05 A6           fcb   $A6,$42,$05,$A6,$1E,$01,$05>>
               84AF 1E 01 05 A5
               84B3 CD 05 A5 A9
               84B7 01
   3762        84B8               Img_emblemBack08 *@globals
   3763        84B8 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$27,$00>>
               84BC 1F 27 00 00
               84C0 06 00 00 10
               84C4 DD 07
   3764        84C6 CD BA                 fcb   $CD,$BA
   3765        84C8               Img_emblemBack07 *@globals
   3766        84C8 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               84CC 1F 1F 00 00
               84D0 06 00 00 10
               84D4 BD 06
   3767        84D6 B5 B9                 fcb   $B5,$B9
   3768        84D8               Img_emblemBack09 *@globals
   3769        84D8 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$38,$00>>
               84DC 0F 38 00 00
               84E0 06 00 00 30
               84E4 B3 06
   3770        84E6 B2 4C                 fcb   $B2,$4C
   3771        84E8               Img_emblemBack04 *@globals
   3772        84E8 07 00 00 00           fcb   $07,$00,$00,$00,$24,$09,$00>>
               84EC 24 09 00 00
               84F0 06 00 00 EE
               84F4 B3 05
   3773        84F6 A4 0E                 fcb   $A4,$0E
   3774        84F8               Img_emblemBack03 *@globals
   3775        84F8 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$26,$00>>
               84FC 1F 26 00 00
               8500 06 00 00 D0
               8504 DD 06
   3776        8506 AE 6E                 fcb   $AE,$6E
   3777        8508               Img_emblemBack06 *@globals
   3778        8508 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1C,$00>>
               850C 1F 1C 00 00
               8510 06 00 00 F0
               8514 DD 05
   3779        8516 A2 53                 fcb   $A2,$53
   3780        8518               Img_emblemBack05 *@globals
   3781        8518 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               851C 1F 1F 00 00
               8520 06 00 00 F0
               8524 BD 06
   3782        8526 AA B8                 fcb   $AA,$B8
   3783        8528               Img_tails_5 *@globals
   3784        8528 07 00 00 00           fcb   $07,$00,$00,$00,$2B,$3F,$00>>
               852C 2B 3F 00 06
               8530 0D 00 00 03
               8534 0D 0A
   3785        8536 B8 B4 07 C9           fcb   $B8,$B4,$07,$C9,$42,$11,$0A>>
               853A 42 11 0A AE
               853E 41
   3786        853F               Img_tails_4 *@globals
   3787        853F 07 00 00 00           fcb   $07,$00,$00,$00,$2C,$3A,$00>>
               8543 2C 3A 00 06
               8547 00 00 00 03
               854B 12 0A
   3788        854D A0 00 07 C5           fcb   $A0,$00,$07,$C5,$03,$10
               8551 03 10
   3789        8553               Img_tails_3 *@globals
   3790        8553 07 00 00 00           fcb   $07,$00,$00,$00,$2B,$3C,$00>>
               8557 2B 3C 00 06
               855B 00 00 00 04
               855F 11 0B
   3791        8561 CF C7 07 C0           fcb   $CF,$C7,$07,$C0,$97,$0F
               8565 97 0F
   3792        8567               Img_tails_2 *@globals
   3793        8567 07 00 00 00           fcb   $07,$00,$00,$00,$2B,$37,$00>>
               856B 2B 37 00 06
               856F 00 00 00 02
               8573 16 0B
   3794        8575 C3 61 06 A7           fcb   $C3,$61,$06,$A7,$07,$0F
               8579 07 0F
   3795        857B               Img_tails_1 *@globals
   3796        857B 07 00 00 00           fcb   $07,$00,$00,$00,$1B,$3F,$00>>
               857F 1B 3F 00 06
               8583 00 00 00 0C
               8587 11 0B
   3797        8589 B7 ED 06 A3           fcb   $B7,$ED,$06,$A3,$99,$0E
               858D 99 0E
   3798        858F               Img_tailsHand *@globals
   3799        858F 07 00 00 00           fcb   $07,$00,$00,$00,$07,$12,$00>>
               8593 07 12 00 06
               8597 0D 00 00 04
               859B 06 06
   3800        859D A2 05 05 A1           fcb   $A2,$05,$05,$A1,$B1,$02,$05>>
               85A1 B1 02 05 A0
               85A5 AE
   3801        85A6               Img_sonic_1 *@globals
   3802        85A6 07 00 00 00           fcb   $07,$00,$00,$00,$23,$42,$00>>
               85AA 23 42 00 06
               85AE 00 00 00 02
               85B2 0E 0B
   3803        85B4 A9 52 07 BC           fcb   $A9,$52,$07,$BC,$68,$14
               85B8 68 14
   3804        85BA               Img_sonic_2 *@globals
   3805        85BA 07 00 00 00           fcb   $07,$00,$00,$00,$24,$53,$00>>
               85BE 24 53 00 06
               85C2 00 00 00 03
               85C6 0D 0C
   3806        85C8 CD 86 07 B7           fcb   $CD,$86,$07,$B7,$BB,$17
               85CC BB 17
   3807        85CE               Img_emblemBack02 *@globals
   3808        85CE 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               85D2 1F 1F 00 00
               85D6 06 00 00 D0
               85DA BD 07
   3809        85DC B4 1D                 fcb   $B4,$1D
   3810        85DE               Img_emblemBack01 *@globals
   3811        85DE 07 00 00 00           fcb   $07,$00,$00,$00,$0F,$37,$00>>
               85E2 0F 37 00 00
               85E6 06 00 00 C0
               85EA B3 07
   3812        85EC B0 B9                 fcb   $B0,$B9
   3813        85EE               Img_sonic_5 *@globals
   3814        85EE 07 00 00 00           fcb   $07,$00,$00,$00,$23,$49,$00>>
               85F2 23 49 00 06
               85F6 0D 00 00 0C
               85FA 0A 0C
   3815        85FC BE 6F 07 AC           fcb   $BE,$6F,$07,$AC,$72,$14,$0B>>
               8600 72 14 0B A0
               8604 00
   3816        8605               Img_sonic_3 *@globals
   3817        8605 07 00 00 00           fcb   $07,$00,$00,$00,$24,$46,$00>>
               8609 24 46 00 06
               860D 00 00 00 0B
               8611 0D 0C
   3818        8613 AE DF 08 BA           fcb   $AE,$DF,$08,$BA,$D4,$15
               8617 D4 15
   3819        8619               Img_sonic_4 *@globals
   3820        8619 07 00 00 00           fcb   $07,$00,$00,$00,$23,$49,$00>>
               861D 23 49 00 06
               8621 00 00 00 0C
               8625 0A 0C
   3821        8627 A0 00 07 A8           fcb   $A0,$00,$07,$A8,$3D,$14
               862B 3D 14
   3822        862D               Img_emblemFront07 *@globals
   3823        862D 07 00 00 00           fcb   $07,$00,$00,$00,$12,$12,$00>>
               8631 12 12 00 00
               8635 06 00 00 F7
               8639 3D 06
   3824        863B A0 00                 fcb   $A0,$00
   3825        863D               Img_emblemFront08 *@globals
   3826        863D 07 00 00 00           fcb   $07,$00,$00,$00,$26,$25,$00>>
               8641 26 25 00 00
               8645 06 00 00 10
               8649 1D 08
   3827        864B B6 2B                 fcb   $B6,$2B
   3828        864D               Img_emblemFront05 *@globals
   3829        864D 07 00 00 00           fcb   $07,$00,$00,$00,$26,$25,$00>>
               8651 26 25 00 00
               8655 06 00 00 C9
               8659 1D 08
   3830        865B B1 66                 fcb   $B1,$66
   3831        865D               Img_emblemFront06 *@globals
   3832        865D 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               8661 1F 1F 00 00
               8665 06 00 00 F0
               8669 1D 07
   3833        866B A4 06                 fcb   $A4,$06
   3834        866D               Img_emblemFront03 *@globals
   3835        866D 07 00 00 00           fcb   $07,$00,$00,$00,$1F,$1F,$00>>
               8671 1F 1F 00 00
               8675 06 00 00 F0
               8679 FD 07
   3836        867B A0 00                 fcb   $A0,$00
   3837        867D               Img_emblemFront04 *@globals
   3838        867D 07 00 00 00           fcb   $07,$00,$00,$00,$1B,$1F,$00>>
               8681 1B 1F 00 00
               8685 06 00 00 10
               8689 FD 08
   3839        868B AE 51                 fcb   $AE,$51
   3840        868D               Img_emblemFront01 *@globals
   3841        868D 07 00 00 00           fcb   $07,$00,$00,$00,$3D,$03,$00>>
               8691 3D 03 00 00
               8695 06 00 00 E1
               8699 F9 05
   3842        869B A0 00                 fcb   $A0,$00
   3843        869D               Img_emblemFront02 *@globals
   3844        869D 07 00 00 00           fcb   $07,$00,$00,$00,$1A,$1F,$00>>
               86A1 1A 1F 00 00
               86A5 06 00 00 D5
               86A9 FD 08
   3845        86AB AB 5B                 fcb   $AB,$5B
   3846
   3847                                   INCLUD ANIMSCPT
   3848                           * Generated Code
   3849
   3850        86AD 00                    fcb   0
   3851        86AE               Ani_SegaSonic_3 *@globals
   3852        86AE 82A0                  fdb   Img_SegaSonic_13
   3853        86B0 827F                  fdb   Img_SegaSonic_23
   3854        86B2 8345                  fdb   Img_SegaSonic_33
   3855        86B4 8303                  fdb   Img_SegaSonic_43
   3856        86B6 FF                    fcb   _resetAnim
   3857        86B7 00                    fcb   0
   3858        86B8               Ani_SegaSonic_2 *@globals
   3859        86B8 825E                  fdb   Img_SegaSonic_12
   3860        86BA 8366                  fdb   Img_SegaSonic_22
   3861        86BC 82C1                  fdb   Img_SegaSonic_32
   3862        86BE 83C9                  fdb   Img_SegaSonic_42
   3863        86C0 FF                    fcb   _resetAnim
   3864        86C1 00                    fcb   0
   3865        86C2               Ani_SegaSonic_1 *@globals
   3866        86C2 8324                  fdb   Img_SegaSonic_11
   3867        86C4 82E2                  fdb   Img_SegaSonic_21
   3868        86C6 83A8                  fdb   Img_SegaSonic_31
   3869        86C8 8387                  fdb   Img_SegaSonic_41
   3870        86CA FF                    fcb   _resetAnim
   3871        86CB 03                    fcb   3
   3872        86CC               Ani_smallStar *@globals
   3873        86CC 8482                  fdb   Img_star_2
   3874        86CE 849D                  fdb   Img_star_1
   3875        86D0 FF                    fcb   _resetAnim
   3876        86D1 01                    fcb   1
   3877        86D2               Ani_largeStar *@globals
   3878        86D2 849D                  fdb   Img_star_1
   3879        86D4 8482                  fdb   Img_star_2
   3880        86D6 8457                  fdb   Img_star_3
   3881        86D8 8482                  fdb   Img_star_2
   3882        86DA 849D                  fdb   Img_star_1
   3883        86DC FA                    fcb   _nextSubRoutine
   3884        86DD 01                    fcb   1
   3885        86DE               Ani_tails *@globals
   3886        86DE 857B                  fdb   Img_tails_1
   3887        86E0 8567                  fdb   Img_tails_2
   3888        86E2 8553                  fdb   Img_tails_3
   3889        86E4 853F                  fdb   Img_tails_4
   3890        86E6 8528                  fdb   Img_tails_5
   3891        86E8 FA                    fcb   _nextSubRoutine
   3892        86E9 01                    fcb   1
   3893        86EA               Ani_sonic *@globals
   3894        86EA 85A6                  fdb   Img_sonic_1
   3895        86EC 85BA                  fdb   Img_sonic_2
   3896        86EE 8605                  fdb   Img_sonic_3
   3897        86F0 8619                  fdb   Img_sonic_4
   3898        86F2 FA                    fcb   _nextSubRoutine
   3899
   3900                                   INCLUD OBJINDEX
   3901                           * Generated Code
   3902
   3903        86F3               Obj_Index_Page
   3904        86F3 00                    fcb   $00
   3905        86F4 05                    fcb   $05
   3906        86F5 06                    fcb   $06
   3907        86F6 05                    fcb   $05
   3908        86F7 08                    fcb   $08
   3909        86F8 00                    fcb   $00
   3910        86F9 00                    fcb   $00
   3911        86FA 00                    fcb   $00
   3912        86FB 00                    fcb   $00
   3913        86FC 00                    fcb   $00
   3914        86FD 00                    fcb   $00
   3915        86FE 00                    fcb   $00
   3916        86FF 00                    fcb   $00
   3917        8700 00                    fcb   $00
   3918        8701 00                    fcb   $00
   3919        8702 00                    fcb   $00
   3920        8703 00                    fcb   $00
   3921        8704 00                    fcb   $00
   3922        8705 00                    fcb   $00
   3923        8706 00                    fcb   $00
   3924        8707 00                    fcb   $00
   3925        8708 00                    fcb   $00
   3926        8709 00                    fcb   $00
   3927        870A 00                    fcb   $00
   3928        870B 00                    fcb   $00
   3929        870C 00                    fcb   $00
   3930        870D 00                    fcb   $00
   3931        870E 00                    fcb   $00
   3932        870F 00                    fcb   $00
   3933        8710 00                    fcb   $00
   3934        8711 00                    fcb   $00
   3935        8712 00                    fcb   $00
   3936        8713 00                    fcb   $00
   3937        8714 00                    fcb   $00
   3938        8715 00                    fcb   $00
   3939        8716 00                    fcb   $00
   3940        8717 00                    fcb   $00
   3941        8718 00                    fcb   $00
   3942        8719 00                    fcb   $00
   3943        871A 00                    fcb   $00
   3944        871B 00                    fcb   $00
   3945        871C 00                    fcb   $00
   3946        871D 00                    fcb   $00
   3947        871E 00                    fcb   $00
   3948        871F 00                    fcb   $00
   3949        8720 00                    fcb   $00
   3950        8721 00                    fcb   $00
   3951        8722 00                    fcb   $00
   3952        8723 00                    fcb   $00
   3953        8724 00                    fcb   $00
   3954        8725 00                    fcb   $00
   3955        8726 00                    fcb   $00
   3956        8727 00                    fcb   $00
   3957        8728 00                    fcb   $00
   3958        8729 00                    fcb   $00
   3959        872A 00                    fcb   $00
   3960        872B 00                    fcb   $00
   3961        872C 00                    fcb   $00
   3962        872D 00                    fcb   $00
   3963        872E 00                    fcb   $00
   3964        872F 00                    fcb   $00
   3965        8730 00                    fcb   $00
   3966        8731 00                    fcb   $00
   3967        8732 00                    fcb   $00
   3968        8733 00                    fcb   $00
   3969        8734 00                    fcb   $00
   3970        8735 00                    fcb   $00
   3971        8736 00                    fcb   $00
   3972        8737 00                    fcb   $00
   3973        8738 00                    fcb   $00
   3974        8739 00                    fcb   $00
   3975        873A 00                    fcb   $00
   3976        873B 00                    fcb   $00
   3977        873C 00                    fcb   $00
   3978        873D 00                    fcb   $00
   3979        873E 00                    fcb   $00
   3980        873F 00                    fcb   $00
   3981        8740 00                    fcb   $00
   3982        8741 00                    fcb   $00
   3983        8742 00                    fcb   $00
   3984        8743 00                    fcb   $00
   3985        8744 00                    fcb   $00
   3986        8745 00                    fcb   $00
   3987        8746 00                    fcb   $00
   3988        8747 00                    fcb   $00
   3989        8748 00                    fcb   $00
   3990        8749 00                    fcb   $00
   3991        874A 00                    fcb   $00
   3992        874B 00                    fcb   $00
   3993        874C 00                    fcb   $00
   3994        874D 00                    fcb   $00
   3995        874E 00                    fcb   $00
   3996        874F 00                    fcb   $00
   3997        8750 00                    fcb   $00
   3998        8751 00                    fcb   $00
   3999        8752 00                    fcb   $00
   4000        8753 00                    fcb   $00
   4001        8754 00                    fcb   $00
   4002        8755 00                    fcb   $00
   4003        8756 00                    fcb   $00
   4004        8757 00                    fcb   $00
   4005        8758 00                    fcb   $00
   4006        8759 00                    fcb   $00
   4007        875A 00                    fcb   $00
   4008        875B 00                    fcb   $00
   4009        875C 00                    fcb   $00
   4010        875D 00                    fcb   $00
   4011        875E 00                    fcb   $00
   4012        875F 00                    fcb   $00
   4013        8760 00                    fcb   $00
   4014        8761 00                    fcb   $00
   4015        8762 00                    fcb   $00
   4016        8763 00                    fcb   $00
   4017        8764 00                    fcb   $00
   4018        8765 00                    fcb   $00
   4019        8766 00                    fcb   $00
   4020        8767 00                    fcb   $00
   4021        8768 00                    fcb   $00
   4022        8769 00                    fcb   $00
   4023        876A 00                    fcb   $00
   4024        876B 00                    fcb   $00
   4025        876C 00                    fcb   $00
   4026        876D 00                    fcb   $00
   4027        876E 00                    fcb   $00
   4028        876F 00                    fcb   $00
   4029        8770 00                    fcb   $00
   4030        8771 00                    fcb   $00
   4031        8772 00                    fcb   $00
   4032        8773 00                    fcb   $00
   4033        8774 00                    fcb   $00
   4034        8775 00                    fcb   $00
   4035        8776 00                    fcb   $00
   4036        8777 00                    fcb   $00
   4037        8778 00                    fcb   $00
   4038        8779 00                    fcb   $00
   4039        877A 00                    fcb   $00
   4040        877B 00                    fcb   $00
   4041        877C 00                    fcb   $00
   4042        877D 00                    fcb   $00
   4043        877E 00                    fcb   $00
   4044        877F 00                    fcb   $00
   4045        8780 00                    fcb   $00
   4046        8781 00                    fcb   $00
   4047        8782 00                    fcb   $00
   4048        8783 00                    fcb   $00
   4049        8784 00                    fcb   $00
   4050        8785 00                    fcb   $00
   4051        8786 00                    fcb   $00
   4052        8787 00                    fcb   $00
   4053        8788 00                    fcb   $00
   4054        8789 00                    fcb   $00
   4055        878A 00                    fcb   $00
   4056        878B 00                    fcb   $00
   4057        878C 00                    fcb   $00
   4058        878D 00                    fcb   $00
   4059        878E 00                    fcb   $00
   4060        878F 00                    fcb   $00
   4061        8790 00                    fcb   $00
   4062        8791 00                    fcb   $00
   4063        8792 00                    fcb   $00
   4064        8793 00                    fcb   $00
   4065        8794 00                    fcb   $00
   4066        8795 00                    fcb   $00
   4067        8796 00                    fcb   $00
   4068        8797 00                    fcb   $00
   4069        8798 00                    fcb   $00
   4070        8799 00                    fcb   $00
   4071        879A 00                    fcb   $00
   4072        879B 00                    fcb   $00
   4073        879C 00                    fcb   $00
   4074        879D 00                    fcb   $00
   4075        879E 00                    fcb   $00
   4076        879F 00                    fcb   $00
   4077        87A0 00                    fcb   $00
   4078        87A1 00                    fcb   $00
   4079        87A2 00                    fcb   $00
   4080        87A3 00                    fcb   $00
   4081        87A4 00                    fcb   $00
   4082        87A5 00                    fcb   $00
   4083        87A6 00                    fcb   $00
   4084        87A7 00                    fcb   $00
   4085        87A8 00                    fcb   $00
   4086        87A9 00                    fcb   $00
   4087        87AA 00                    fcb   $00
   4088        87AB 00                    fcb   $00
   4089        87AC 00                    fcb   $00
   4090        87AD 00                    fcb   $00
   4091        87AE 00                    fcb   $00
   4092        87AF 00                    fcb   $00
   4093        87B0 00                    fcb   $00
   4094        87B1 00                    fcb   $00
   4095        87B2 00                    fcb   $00
   4096        87B3 00                    fcb   $00
   4097        87B4 00                    fcb   $00
   4098        87B5 00                    fcb   $00
   4099        87B6 00                    fcb   $00
   4100        87B7 00                    fcb   $00
   4101        87B8 00                    fcb   $00
   4102        87B9 00                    fcb   $00
   4103        87BA 00                    fcb   $00
   4104        87BB 00                    fcb   $00
   4105        87BC 00                    fcb   $00
   4106        87BD 00                    fcb   $00
   4107        87BE 00                    fcb   $00
   4108        87BF 00                    fcb   $00
   4109        87C0 00                    fcb   $00
   4110        87C1 00                    fcb   $00
   4111        87C2 00                    fcb   $00
   4112        87C3 00                    fcb   $00
   4113        87C4 00                    fcb   $00
   4114        87C5 00                    fcb   $00
   4115        87C6 00                    fcb   $00
   4116        87C7 00                    fcb   $00
   4117        87C8 00                    fcb   $00
   4118        87C9 00                    fcb   $00
   4119        87CA 00                    fcb   $00
   4120        87CB 00                    fcb   $00
   4121        87CC 00                    fcb   $00
   4122        87CD 00                    fcb   $00
   4123        87CE 00                    fcb   $00
   4124        87CF 00                    fcb   $00
   4125        87D0 00                    fcb   $00
   4126        87D1 00                    fcb   $00
   4127        87D2 00                    fcb   $00
   4128        87D3 00                    fcb   $00
   4129        87D4 00                    fcb   $00
   4130        87D5 00                    fcb   $00
   4131        87D6 00                    fcb   $00
   4132        87D7 00                    fcb   $00
   4133        87D8 00                    fcb   $00
   4134        87D9 00                    fcb   $00
   4135        87DA 00                    fcb   $00
   4136        87DB 00                    fcb   $00
   4137        87DC 00                    fcb   $00
   4138        87DD 00                    fcb   $00
   4139        87DE 00                    fcb   $00
   4140        87DF 00                    fcb   $00
   4141        87E0 00                    fcb   $00
   4142        87E1 00                    fcb   $00
   4143        87E2 00                    fcb   $00
   4144        87E3 00                    fcb   $00
   4145        87E4 00                    fcb   $00
   4146        87E5 00                    fcb   $00
   4147        87E6 00                    fcb   $00
   4148        87E7 00                    fcb   $00
   4149        87E8 00                    fcb   $00
   4150        87E9 00                    fcb   $00
   4151        87EA 00                    fcb   $00
   4152        87EB 00                    fcb   $00
   4153        87EC 00                    fcb   $00
   4154        87ED 00                    fcb   $00
   4155        87EE 00                    fcb   $00
   4156        87EF 00                    fcb   $00
   4157        87F0 00                    fcb   $00
   4158        87F1 00                    fcb   $00
   4159        87F2 00                    fcb   $00
   4160        87F3               Obj_Index_Address
   4161        87F3 00 00                 fcb   $00,$00
   4162        87F5 DF 32                 fcb   $DF,$32
   4163        87F7 BC F8                 fcb   $BC,$F8
   4164        87F9 AD 4A                 fcb   $AD,$4A
   4165        87FB A0 00                 fcb   $A0,$00
   4166        87FD 00 00                 fcb   $00,$00
   4167        87FF 00 00                 fcb   $00,$00
   4168        8801 00 00                 fcb   $00,$00
   4169        8803 00 00                 fcb   $00,$00
   4170        8805 00 00                 fcb   $00,$00
   4171        8807 00 00                 fcb   $00,$00
   4172        8809 00 00                 fcb   $00,$00
   4173        880B 00 00                 fcb   $00,$00
   4174        880D 00 00                 fcb   $00,$00
   4175        880F 00 00                 fcb   $00,$00
   4176        8811 00 00                 fcb   $00,$00
   4177        8813 00 00                 fcb   $00,$00
   4178        8815 00 00                 fcb   $00,$00
   4179        8817 00 00                 fcb   $00,$00
   4180        8819 00 00                 fcb   $00,$00
   4181        881B 00 00                 fcb   $00,$00
   4182        881D 00 00                 fcb   $00,$00
   4183        881F 00 00                 fcb   $00,$00
   4184        8821 00 00                 fcb   $00,$00
   4185        8823 00 00                 fcb   $00,$00
   4186        8825 00 00                 fcb   $00,$00
   4187        8827 00 00                 fcb   $00,$00
   4188        8829 00 00                 fcb   $00,$00
   4189        882B 00 00                 fcb   $00,$00
   4190        882D 00 00                 fcb   $00,$00
   4191        882F 00 00                 fcb   $00,$00
   4192        8831 00 00                 fcb   $00,$00
   4193        8833 00 00                 fcb   $00,$00
   4194        8835 00 00                 fcb   $00,$00
   4195        8837 00 00                 fcb   $00,$00
   4196        8839 00 00                 fcb   $00,$00
   4197        883B 00 00                 fcb   $00,$00
   4198        883D 00 00                 fcb   $00,$00
   4199        883F 00 00                 fcb   $00,$00
   4200        8841 00 00                 fcb   $00,$00
   4201        8843 00 00                 fcb   $00,$00
   4202        8845 00 00                 fcb   $00,$00
   4203        8847 00 00                 fcb   $00,$00
   4204        8849 00 00                 fcb   $00,$00
   4205        884B 00 00                 fcb   $00,$00
   4206        884D 00 00                 fcb   $00,$00
   4207        884F 00 00                 fcb   $00,$00
   4208        8851 00 00                 fcb   $00,$00
   4209        8853 00 00                 fcb   $00,$00
   4210        8855 00 00                 fcb   $00,$00
   4211        8857 00 00                 fcb   $00,$00
   4212        8859 00 00                 fcb   $00,$00
   4213        885B 00 00                 fcb   $00,$00
   4214        885D 00 00                 fcb   $00,$00
   4215        885F 00 00                 fcb   $00,$00
   4216        8861 00 00                 fcb   $00,$00
   4217        8863 00 00                 fcb   $00,$00
   4218        8865 00 00                 fcb   $00,$00
   4219        8867 00 00                 fcb   $00,$00
   4220        8869 00 00                 fcb   $00,$00
   4221        886B 00 00                 fcb   $00,$00
   4222        886D 00 00                 fcb   $00,$00
   4223        886F 00 00                 fcb   $00,$00
   4224        8871 00 00                 fcb   $00,$00
   4225        8873 00 00                 fcb   $00,$00
   4226        8875 00 00                 fcb   $00,$00
   4227        8877 00 00                 fcb   $00,$00
   4228        8879 00 00                 fcb   $00,$00
   4229        887B 00 00                 fcb   $00,$00
   4230        887D 00 00                 fcb   $00,$00
   4231        887F 00 00                 fcb   $00,$00
   4232        8881 00 00                 fcb   $00,$00
   4233        8883 00 00                 fcb   $00,$00
   4234        8885 00 00                 fcb   $00,$00
   4235        8887 00 00                 fcb   $00,$00
   4236        8889 00 00                 fcb   $00,$00
   4237        888B 00 00                 fcb   $00,$00
   4238        888D 00 00                 fcb   $00,$00
   4239        888F 00 00                 fcb   $00,$00
   4240        8891 00 00                 fcb   $00,$00
   4241        8893 00 00                 fcb   $00,$00
   4242        8895 00 00                 fcb   $00,$00
   4243        8897 00 00                 fcb   $00,$00
   4244        8899 00 00                 fcb   $00,$00
   4245        889B 00 00                 fcb   $00,$00
   4246        889D 00 00                 fcb   $00,$00
   4247        889F 00 00                 fcb   $00,$00
   4248        88A1 00 00                 fcb   $00,$00
   4249        88A3 00 00                 fcb   $00,$00
   4250        88A5 00 00                 fcb   $00,$00
   4251        88A7 00 00                 fcb   $00,$00
   4252        88A9 00 00                 fcb   $00,$00
   4253        88AB 00 00                 fcb   $00,$00
   4254        88AD 00 00                 fcb   $00,$00
   4255        88AF 00 00                 fcb   $00,$00
   4256        88B1 00 00                 fcb   $00,$00
   4257        88B3 00 00                 fcb   $00,$00
   4258        88B5 00 00                 fcb   $00,$00
   4259        88B7 00 00                 fcb   $00,$00
   4260        88B9 00 00                 fcb   $00,$00
   4261        88BB 00 00                 fcb   $00,$00
   4262        88BD 00 00                 fcb   $00,$00
   4263        88BF 00 00                 fcb   $00,$00
   4264        88C1 00 00                 fcb   $00,$00
   4265        88C3 00 00                 fcb   $00,$00
   4266        88C5 00 00                 fcb   $00,$00
   4267        88C7 00 00                 fcb   $00,$00
   4268        88C9 00 00                 fcb   $00,$00
   4269        88CB 00 00                 fcb   $00,$00
   4270        88CD 00 00                 fcb   $00,$00
   4271        88CF 00 00                 fcb   $00,$00
   4272        88D1 00 00                 fcb   $00,$00
   4273        88D3 00 00                 fcb   $00,$00
   4274        88D5 00 00                 fcb   $00,$00
   4275        88D7 00 00                 fcb   $00,$00
   4276        88D9 00 00                 fcb   $00,$00
   4277        88DB 00 00                 fcb   $00,$00
   4278        88DD 00 00                 fcb   $00,$00
   4279        88DF 00 00                 fcb   $00,$00
   4280        88E1 00 00                 fcb   $00,$00
   4281        88E3 00 00                 fcb   $00,$00
   4282        88E5 00 00                 fcb   $00,$00
   4283        88E7 00 00                 fcb   $00,$00
   4284        88E9 00 00                 fcb   $00,$00
   4285        88EB 00 00                 fcb   $00,$00
   4286        88ED 00 00                 fcb   $00,$00
   4287        88EF 00 00                 fcb   $00,$00
   4288        88F1 00 00                 fcb   $00,$00
   4289        88F3 00 00                 fcb   $00,$00
   4290        88F5 00 00                 fcb   $00,$00
   4291        88F7 00 00                 fcb   $00,$00
   4292        88F9 00 00                 fcb   $00,$00
   4293        88FB 00 00                 fcb   $00,$00
   4294        88FD 00 00                 fcb   $00,$00
   4295        88FF 00 00                 fcb   $00,$00
   4296        8901 00 00                 fcb   $00,$00
   4297        8903 00 00                 fcb   $00,$00
   4298        8905 00 00                 fcb   $00,$00
   4299        8907 00 00                 fcb   $00,$00
   4300        8909 00 00                 fcb   $00,$00
   4301        890B 00 00                 fcb   $00,$00
   4302        890D 00 00                 fcb   $00,$00
   4303        890F 00 00                 fcb   $00,$00
   4304        8911 00 00                 fcb   $00,$00
   4305        8913 00 00                 fcb   $00,$00
   4306        8915 00 00                 fcb   $00,$00
   4307        8917 00 00                 fcb   $00,$00
   4308        8919 00 00                 fcb   $00,$00
   4309        891B 00 00                 fcb   $00,$00
   4310        891D 00 00                 fcb   $00,$00
   4311        891F 00 00                 fcb   $00,$00
   4312        8921 00 00                 fcb   $00,$00
   4313        8923 00 00                 fcb   $00,$00
   4314        8925 00 00                 fcb   $00,$00
   4315        8927 00 00                 fcb   $00,$00
   4316        8929 00 00                 fcb   $00,$00
   4317        892B 00 00                 fcb   $00,$00
   4318        892D 00 00                 fcb   $00,$00
   4319        892F 00 00                 fcb   $00,$00
   4320        8931 00 00                 fcb   $00,$00
   4321        8933 00 00                 fcb   $00,$00
   4322        8935 00 00                 fcb   $00,$00
   4323        8937 00 00                 fcb   $00,$00
   4324        8939 00 00                 fcb   $00,$00
   4325        893B 00 00                 fcb   $00,$00
   4326        893D 00 00                 fcb   $00,$00
   4327        893F 00 00                 fcb   $00,$00
   4328        8941 00 00                 fcb   $00,$00
   4329        8943 00 00                 fcb   $00,$00
   4330        8945 00 00                 fcb   $00,$00
   4331        8947 00 00                 fcb   $00,$00
   4332        8949 00 00                 fcb   $00,$00
   4333        894B 00 00                 fcb   $00,$00
   4334        894D 00 00                 fcb   $00,$00
   4335        894F 00 00                 fcb   $00,$00
   4336        8951 00 00                 fcb   $00,$00
   4337        8953 00 00                 fcb   $00,$00
   4338        8955 00 00                 fcb   $00,$00
   4339        8957 00 00                 fcb   $00,$00
   4340        8959 00 00                 fcb   $00,$00
   4341        895B 00 00                 fcb   $00,$00
   4342        895D 00 00                 fcb   $00,$00
   4343        895F 00 00                 fcb   $00,$00
   4344        8961 00 00                 fcb   $00,$00
   4345        8963 00 00                 fcb   $00,$00
   4346        8965 00 00                 fcb   $00,$00
   4347        8967 00 00                 fcb   $00,$00
   4348        8969 00 00                 fcb   $00,$00
   4349        896B 00 00                 fcb   $00,$00
   4350        896D 00 00                 fcb   $00,$00
   4351        896F 00 00                 fcb   $00,$00
   4352        8971 00 00                 fcb   $00,$00
   4353        8973 00 00                 fcb   $00,$00
   4354        8975 00 00                 fcb   $00,$00
   4355        8977 00 00                 fcb   $00,$00
   4356        8979 00 00                 fcb   $00,$00
   4357        897B 00 00                 fcb   $00,$00
   4358        897D 00 00                 fcb   $00,$00
   4359        897F 00 00                 fcb   $00,$00
   4360        8981 00 00                 fcb   $00,$00
   4361        8983 00 00                 fcb   $00,$00
   4362        8985 00 00                 fcb   $00,$00
   4363        8987 00 00                 fcb   $00,$00
   4364        8989 00 00                 fcb   $00,$00
   4365        898B 00 00                 fcb   $00,$00
   4366        898D 00 00                 fcb   $00,$00
   4367        898F 00 00                 fcb   $00,$00
   4368        8991 00 00                 fcb   $00,$00
   4369        8993 00 00                 fcb   $00,$00
   4370        8995 00 00                 fcb   $00,$00
   4371        8997 00 00                 fcb   $00,$00
   4372        8999 00 00                 fcb   $00,$00
   4373        899B 00 00                 fcb   $00,$00
   4374        899D 00 00                 fcb   $00,$00
   4375        899F 00 00                 fcb   $00,$00
   4376        89A1 00 00                 fcb   $00,$00
   4377        89A3 00 00                 fcb   $00,$00
   4378        89A5 00 00                 fcb   $00,$00
   4379        89A7 00 00                 fcb   $00,$00
   4380        89A9 00 00                 fcb   $00,$00
   4381        89AB 00 00                 fcb   $00,$00
   4382        89AD 00 00                 fcb   $00,$00
   4383        89AF 00 00                 fcb   $00,$00
   4384        89B1 00 00                 fcb   $00,$00
   4385        89B3 00 00                 fcb   $00,$00
   4386        89B5 00 00                 fcb   $00,$00
   4387        89B7 00 00                 fcb   $00,$00
   4388        89B9 00 00                 fcb   $00,$00
   4389        89BB 00 00                 fcb   $00,$00
   4390        89BD 00 00                 fcb   $00,$00
   4391        89BF 00 00                 fcb   $00,$00
   4392        89C1 00 00                 fcb   $00,$00
   4393        89C3 00 00                 fcb   $00,$00
   4394        89C5 00 00                 fcb   $00,$00
   4395        89C7 00 00                 fcb   $00,$00
   4396        89C9 00 00                 fcb   $00,$00
   4397        89CB 00 00                 fcb   $00,$00
   4398        89CD 00 00                 fcb   $00,$00
   4399        89CF 00 00                 fcb   $00,$00
   4400        89D1 00 00                 fcb   $00,$00
   4401        89D3 00 00                 fcb   $00,$00
   4402        89D5 00 00                 fcb   $00,$00
   4403        89D7 00 00                 fcb   $00,$00
   4404        89D9 00 00                 fcb   $00,$00
   4405        89DB 00 00                 fcb   $00,$00
   4406        89DD 00 00                 fcb   $00,$00
   4407        89DF 00 00                 fcb   $00,$00
   4408        89E1 00 00                 fcb   $00,$00
   4409        89E3 00 00                 fcb   $00,$00
   4410        89E5 00 00                 fcb   $00,$00
   4411        89E7 00 00                 fcb   $00,$00
   4412        89E9 00 00                 fcb   $00,$00
   4413        89EB 00 00                 fcb   $00,$00
   4414        89ED 00 00                 fcb   $00,$00
   4415        89EF 00 00                 fcb   $00,$00
   4416        89F1 00 00                 fcb   $00,$00
   4417
   4418                                   INCLUD SOUNDIDX * A rendre dynami>>
   4419                           * Generated Code
   4420
   4421        89F3               Pcm_SEGA *@globals
   4422        89F3 0E A0 00 DF           fcb   $0E,$A0,$00,$DF,$F6
               89F7 F6
   4423        89F8 0D A0 00 C1           fcb   $0D,$A0,$00,$C1,$7E
               89FC 7E
   4424        89FD FF                    fcb   $FF
   4425        89FE               Psg_TitleScreen *@globals
   4426        89FE 08 A5 53 AB           fcb   $08,$A5,$53,$AB,$5B
               8A02 5B
   4427        8A03 FF                    fcb   $FF
   4428
   4429                                   INCLUD LOADACT
   4430                           * Generated Code
   4431
   4432        8A04               LoadAct
   4433  3     8A04 8E   0000             ldx   #$0000                   * >>
   4434  2     8A07 C6   62               ldb   #$62                     * >>
   4435  5     8A09 F7   E7E6             stb   $E7E6                    * >>
   4436  8     8A0C BD   7CD4             jsr   ClearCartMem
   4437  5     8A0F B6   E7DD             lda   $E7DD                    * >>
   4438  2     8A12 84   F0               anda  #$F0
   4439  2     8A14 8B   00               adda  #$00                     * >>
   4440  5     8A16 B7   E7DD             sta   $E7DD
   4441  2     8A19 84   0F               anda  #$0F
   4442  2     8A1B 8B   80               adda  #$80
   4443  5     8A1D B7   7189             sta   screen_border_color+1    * >>
   4444  8     8A20 BD   7170             jsr   WaitVBL
   4445  3     8A23 8E   0000             ldx   #$0000                   * >>
   4446  2     8A26 C6   63               ldb   #$63                     * >>
   4447  5     8A28 F7   E7E6             stb   $E7E6                    * >>
   4448  8     8A2B BD   7CD4             jsr   ClearCartMem
   4449  3     8A2E CC   8A38             ldd   #Pal_SEGA
   4450  6     8A31 FD   7D10             std   Cur_palette
   4451  7     8A34 7F   7D0F             clr   Refresh_palette
   4452  5     8A37 39                    rts
   4453
    194                            
    195
   4454                                   INCLUD PALETTE
   4455                           * Generated Code
   4456
   4457        8A38               Pal_SEGA * @globals
   4458        8A38 FF0F                  fdb   $ff0f
   4459        8A3A 4404                  fdb   $4404
   4460        8A3C 1101                  fdb   $1101
   4461        8A3E 0000                  fdb   $0000
   4462        8A40 0300                  fdb   $0300
   4463        8A42 0F00                  fdb   $0f00
   4464        8A44 5E03                  fdb   $5e03
   4465        8A46 2501                  fdb   $2501
   4466        8A48 B70B                  fdb   $b70b
   4467        8A4A 740B                  fdb   $740b
   4468        8A4C 410B                  fdb   $410b
   4469        8A4E 100B                  fdb   $100b
   4470        8A50 110C                  fdb   $110c
   4471        8A52 0008                  fdb   $0008
   4472        8A54 100B                  fdb   $100b
   4473        8A56 100B                  fdb   $100b
   4474
   4475        8A58               Pal_TitleScreen * @globals
   4476        8A58 FF0F                  fdb   $ff0f
   4477        8A5A 0000                  fdb   $0000
   4478        8A5C 0800                  fdb   $0800
   4479        8A5E 0200                  fdb   $0200
   4480        8A60 5D03                  fdb   $5d03
   4481        8A62 1600                  fdb   $1600
   4482        8A64 4F00                  fdb   $4f00
   4483        8A66 2700                  fdb   $2700
   4484        8A68 FF00                  fdb   $ff00
   4485        8A6A F300                  fdb   $f300
   4486        8A6C F80F                  fdb   $f80f
   4487        8A6E 750C                  fdb   $750c
   4488        8A70 530E                  fdb   $530e
   4489        8A72 2205                  fdb   $2205
   4490        8A74 000E                  fdb   $000e
   4491        8A76 0100                  fdb   $0100
   4492
   4493        8A78               Pal_SEGAMid * @globals
   4494        8A78 FF0F                  fdb   $ff0f
   4495        8A7A 4404                  fdb   $4404
   4496        8A7C 1101                  fdb   $1101
   4497        8A7E 0000                  fdb   $0000
   4498        8A80 0300                  fdb   $0300
   4499        8A82 0F00                  fdb   $0f00
   4500        8A84 5E03                  fdb   $5e03
   4501        8A86 2501                  fdb   $2501
   4502        8A88 B70B                  fdb   $b70b
   4503        8A8A 740B                  fdb   $740b
   4504        8A8C 410B                  fdb   $410b
   4505        8A8E 100B                  fdb   $100b
   4506        8A90 110C                  fdb   $110c
   4507        8A92 0008                  fdb   $0008
   4508        8A94 FF0F                  fdb   $ff0f
   4509        8A96 100B                  fdb   $100b
   4510
   4511        8A98               Pal_SonicAndTailsIn * @globals
   4512        8A98 0000                  fdb   $0000
   4513        8A9A FF0F                  fdb   $ff0f
   4514        8A9C 0000                  fdb   $0000
   4515        8A9E 0000                  fdb   $0000
   4516        8AA0 0000                  fdb   $0000
   4517        8AA2 0000                  fdb   $0000
   4518        8AA4 0000                  fdb   $0000
   4519        8AA6 0000                  fdb   $0000
   4520        8AA8 0000                  fdb   $0000
   4521        8AAA 0000                  fdb   $0000
   4522        8AAC 0000                  fdb   $0000
   4523        8AAE 0000                  fdb   $0000
   4524        8AB0 0000                  fdb   $0000
   4525        8AB2 0000                  fdb   $0000
   4526        8AB4 FF0F                  fdb   $ff0f
   4527        8AB6 FF0F                  fdb   $ff0f
   4528
   4529        8AB8               Pal_SEGAEnd * @globals
   4530        8AB8 FF0F                  fdb   $ff0f
   4531        8ABA 4404                  fdb   $4404
   4532        8ABC 1101                  fdb   $1101
   4533        8ABE 0000                  fdb   $0000
   4534        8AC0 0300                  fdb   $0300
   4535        8AC2 0F00                  fdb   $0f00
   4536        8AC4 5E03                  fdb   $5e03
   4537        8AC6 2501                  fdb   $2501
   4538        8AC8 B70B                  fdb   $b70b
   4539        8ACA 740B                  fdb   $740b
   4540        8ACC 410B                  fdb   $410b
   4541        8ACE 100B                  fdb   $100b
   4542        8AD0 110C                  fdb   $110c
   4543        8AD2 0008                  fdb   $0008
   4544        8AD4 FF0F                  fdb   $ff0f
   4545        8AD6 FF0F                  fdb   $ff0f
    197
    198

000000 Total Errors

000689 Total Symbols
     1x          Label 732A am_ObjectMove_01
     1x          Label 7340 am_ObjectMove_02
     3x          Label 71F2 am_RunNextObject
     2x          Label 7190 am_SwapVideoPage
     2x          Equ   0004 anim
     0x          Label 7297 AnimateSprite
     1x          Label 72C6 Anim_dyn
     1x          Label 7319 Anim_End
     1x          Label 730E Anim_End_FA
     1x          Label 7303 Anim_End_FB
     1x          Label 72F1 Anim_End_FC
     1x          Label 72E9 Anim_End_FD
     1x          Label 72D8 Anim_End_FE
     1x          Label 72E0 Anim_End_FE_dyn
     1x          Label 72CD Anim_End_FF
     8x          Equ   0008 anim_frame
     4x          Equ   0009 anim_frame_duration
     2x          Label 72B8 Anim_Next
     1x          Label 72A5 Anim_Run
     1x          Label 72CC Anim_Wait
     0x          Label 86D2 Ani_largeStar
     0x          Label 86C2 Ani_SegaSonic_1
     0x          Label 86B8 Ani_SegaSonic_2
     0x          Label 86AE Ani_SegaSonic_3
     0x          Label 86CC Ani_smallStar
     0x          Label 86EA Ani_sonic
     0x          Label 86DE Ani_tails
     0x          Label 7BEF BBA0
     1x          Label 7BF8 BBA1
     1x          Label 7C19 BBA_DivideCell
     1x          Label 7C1E BBA_dyn
     1x          Label 7C0E BBA_FitCell
     2x          Label 7BFF BBA_Next
     2x          Label 7C39 BBA_rts
     0x          Label 7C48 BBF0
     1x          Label 7C5E BBF1
     1x          Label 7C87 BBF_AddNewEntry
     3x          Label 7C8A BBF_AddNewEntryAtEnd
     1x          Label 7CC7 BBF_ExpandAtEnd
     1x          Label 7CA6 BBF_ExpandAtStart
     1x          Label 7C8D BBF_FindFreeSlot
     0x          Label 7CB1 BBF_Join
     2x          Label 7C72 BBF_Next
     4x          Label 7CD2 BBF_rts
     1x          Label 7C95 BBF_SetNewEntry
     2x          Label 7C9C BBF_SetNewEntryNextentry
     3x          Label 7CA1 BBF_SetNewEntryPrevLink
     2x          Label 7BE8 BgBufferAlloc
     2x          Label 7C3B BgBufferFree
     0x          Label 7D32 Black_palette
     0x          Equ   0009 buf_bgdata
     2x          Equ   0024 buf_Lst_Priority_Unset
     1x          Equ   0007 buf_prev_mapping_frame
     5x          Equ   0011 buf_prev_render_flags
     0x          Equ   000D buf_prev_x1_pixel
     0x          Equ   000F buf_prev_x2_pixel
     0x          Equ   000D buf_prev_xy1_pixel
     0x          Equ   000F buf_prev_xy2_pixel
     1x          Equ   000B buf_prev_xy_pixel
     0x          Equ   000B buf_prev_x_pixel
     0x          Equ   000E buf_prev_y1_pixel
     0x          Equ   0010 buf_prev_y2_pixel
     0x          Equ   000C buf_prev_y_pixel
     5x          Equ   0000 buf_priority
     4x          Equ   0003 buf_priority_next_obj
     1x          Equ   0001 buf_priority_prev_obj
    33x          Equ   0000 buf_Tbl_Priority_First_Entry
    18x          Equ   0012 buf_Tbl_Priority_Last_Entry
     0x          Equ   0040 c1_button_A_mask
     0x          Equ   0002 c1_button_down_mask
     0x          Equ   0004 c1_button_left_mask
     0x          Equ   0008 c1_button_right_mask
     0x          Equ   0001 c1_button_up_mask
     0x          Equ   0080 c2_button_A_mask
     0x          Equ   0020 c2_button_down_mask
     0x          Equ   0040 c2_button_left_mask
     0x          Equ   0080 c2_button_right_mask
     0x          Equ   0010 c2_button_up_mask
     7x          Equ   0003 cell_end
     1x          Label 7C35 cell_end_return
     5x          Equ   0040 cell_size
     5x          Equ   0001 cell_start
     4x          Equ   6000 cell_start_adr
     1x          Label 745D CheckSpritesRefresh
     2x          Label 7CD4 ClearCartMem
     1x          Label 7CE6 ClearCartMem_2
     1x          Label 7D02 ClearCartMem_3
     4x          Label 7424 ClearObj
     1x          Label 744B CLO_1
     0x          Label 7455 CLO_2
     4x          Label 7D0E cpt
     0x          Label 754D CSR_CheckDelHide
     3x          Label 7737 CSR_CheckDraw
     2x          Label 765A CSR_CheckErase
     1x          Label 767A CSR_CheckErase_InRange
     0x          Label 7578 CSR_CheckPlayFieldCoord
     0x          Label 7553 CSR_CheckRefresh
     1x          Label 75A8 CSR_CheckVerticalPosition
     2x          Label 75DA CSR_CVP_Continue
     1x          Label 757E CSR_DoNotDisplaySprite
     1x          Label 7634 CSR_DontCheckXFrontier
     1x          Label 7648 CSR_DontCheckXFrontier_end
     3x          Label 75A1 CSR_NextObject
     1x          Label 75C4 CSR_NoDefinedFrame
     1x          Label 75D2 CSR_NoFrameFound
     1x          Label 75B8 CSR_NoOverlay
     1x          Label 74CE CSR_P1B0
     1x          Label 753C CSR_P1B1
     1x          Label 74C1 CSR_P2B0
     1x          Label 752F CSR_P2B1
     1x          Label 74B4 CSR_P3B0
     1x          Label 7522 CSR_P3B1
     1x          Label 74A7 CSR_P4B0
     1x          Label 7515 CSR_P4B1
     1x          Label 749A CSR_P5B0
     1x          Label 7508 CSR_P5B1
     1x          Label 748D CSR_P6B0
     1x          Label 74FB CSR_P6B1
     1x          Label 7480 CSR_P7B0
     1x          Label 74EE CSR_P7B1
     0x          Label 7473 CSR_P8B0
     0x          Label 74E1 CSR_P8B1
    21x          Label 754A CSR_ProcessEachPriorityLevel
     1x          Label 74DB CSR_rtsB0
     1x          Label 7549 CSR_rtsB1
     1x          Label 7767 CSR_SDT1
     1x          Label 776E CSR_SDT2
     1x          Label 7773 CSR_SDT3
     0x          Label 746E CSR_SetBuffer0
     1x          Label 74DC CSR_SetBuffer1
     3x          Label 778E CSR_SetDrawFalse
     0x          Label 7759 CSR_SetDrawTrue
     1x          Label 7786 CSR_SetEraseDrawFalse
     2x          Label 772F CSR_SetEraseFalse
     7x          Label 769A CSR_SetEraseTrue
     2x          Label 7779 CSR_SetHide
    10x          Label 7652 CSR_SetOutOfRange
     0x          Label 745D CSR_Start
     0x          Label 770E CSR_SubDrawCheckCollision
     4x          Label 7706 CSR_SubDrawSearch
     2x          Label 7703 CSR_SubDrawSpriteSearchInit
     0x          Label 76BB CSR_SubEraseCheckCollisionB0
     0x          Label 76E3 CSR_SubEraseCheckCollisionB1
     4x          Label 76B3 CSR_SubEraseSearchB0
     5x          Label 76DB CSR_SubEraseSearchB1
     1x          Label 76AB CSR_SubEraseSpriteSearchInit
     0x          Label 755C CSR_UpdSpriteImageBasedOnMirror
     2x          Label 7D10 Cur_palette
    19x          Label 7457 cur_priority
     4x          Label 745B cur_ptr_sub_obj_draw
     9x          Label 7459 cur_ptr_sub_obj_erase
     0x          Label 7362 DeleteObject
     0x          Label 735C DeleteObject_x
     1x          Label 721E DisplaySprite
     0x          Label 7218 DisplaySprite_x
     0x          Equ   604F dk_destination
     0x          Equ   6049 dk_lecteur
     0x          Equ   604A dk_piste
     0x          Equ   604B dk_pisteL
     0x          Equ   604C dk_secteur
     1x          Label 73C6 DOB_ChainNextB0
     1x          Label 7410 DOB_ChainNextB1
     1x          Label 73A6 DOB_ChainPrevB0
     1x          Label 73E8 DOB_ChainPrevB1
     1x          Label 73B0 DOB_CheckPrioNextB0
     1x          Label 73F2 DOB_CheckPrioNextB1
     1x          Label 7390 DOB_RemoveFromDPSB0
     1x          Label 73D2 DOB_RemoveFromDPSB1
     2x          Label 740E DOB_rts
     1x          Label 7364 DOB_Start
     2x          Label 7379 DOB_TestOnscreen1
     0x          Label 7369 DOB_ToDeleteFlag0
     0x          Label 737E DOB_ToDeleteFlag1
     0x          Label 736F DOB_Unset0
     0x          Label 7384 DOB_Unset1
     0x          Label 71A9 Dpad_Held
     0x          Label 71AB Dpad_Press
     2x          Label 71A7 Dpad_Read
    27x          Label 64E1 DPS_buffer_0
    25x          Label 6547 DPS_buffer_1
     1x          Label 79F5 DrawSprites
     4x          Equ   0001 draw_routine
     1x          Label 7AF5 DRS_DrawWithoutBackupB0
     1x          Label 7BC4 DRS_DrawWithoutBackupB1
     1x          Label 7B2C DRS_dyn1
     1x          Label 7B3E DRS_dyn2
     3x          Label 7AC0 DRS_dyn3B0
     3x          Label 7B8F DRS_dyn3B1
     3x          Label 7AED DRS_NextObjectB0
     3x          Label 7BBC DRS_NextObjectB1
     1x          Label 7AE8 DRS_NoOverlayB0
     1x          Label 7BB7 DRS_NoOverlayB1
     1x          Label 7A32 DRS_P1B0
     1x          Label 7A73 DRS_P1B1
     1x          Label 7A2A DRS_P2B0
     1x          Label 7A6B DRS_P2B1
     1x          Label 7A22 DRS_P3B0
     1x          Label 7A63 DRS_P3B1
     1x          Label 7A1A DRS_P4B0
     1x          Label 7A5B DRS_P4B1
     1x          Label 7A12 DRS_P5B0
     1x          Label 7A53 DRS_P5B1
     1x          Label 7A0A DRS_P6B0
     1x          Label 7A4B DRS_P6B1
     1x          Label 7A02 DRS_P7B0
     1x          Label 7A43 DRS_P7B1
     0x          Label 79FA DRS_P8B0
     1x          Label 7A3B DRS_P8B1
     9x          Label 7A7C DRS_ProcessEachPriorityLevelB0
     9x          Label 7B4B DRS_ProcessEachPriorityLevelB1
     1x          Label 7A3A DRS_rtsB0
     1x          Label 7A7B DRS_rtsB1
     0x          Label 79F5 DRS_Start
     1x          Label 7AEA DRS_UpdateRenderFlagB0
     1x          Label 7BB9 DRS_UpdateRenderFlagB1
     4x          Label 7B19 DRS_XYToAddress
     1x          Label 7B20 DRS_XYToAddressPositive
     0x          Label 7B26 DRS_XYToAddressRAM1First
     1x          Label 7B38 DRS_XYToAddressRAM2First
     0x          Label 724F DSP_addFirstNode
     1x          Label 725F DSP_addToExistingNode
     1x          Label 723B DSP_BufferPositionned
     1x          Label 7284 DSP_ChangePriority
     1x          Label 7248 DSP_CheckLastEntry
     0x          Label 7245 DSP_InitPriority
     1x          Label 7274 DSP_LinkBuffer1
     1x          Label 7280 DSP_LinkCurWithPrev
     1x          Label 725D DSP_rts
     0x          Label 722B DSP_SetBuffer0
     1x          Label 7234 DSP_SetBuffer1
     1x          Label 7220 DSP_Start
     0x          Label 66E1 Dynamic_Object_RAM
     2x          Label 705F Dynamic_Object_RAM_End
     1x          Label 7D12 Dyn_palette
     3x          Equ   0007 entry_size
     1x          Label 779D EraseSprites
     4x          Equ   0006 erase_nb_cell
     2x          Equ   0004 erase_routine
     0x          Label 7894 ESP_CallEraseRoutineB0
     1x          Label 78A7 ESP_CallEraseRoutineB0_00
     0x          Label 78E5 ESP_CallEraseRoutineB1
     1x          Label 78F8 ESP_CallEraseRoutineB1_00
     1x          Label 7889 ESP_CheckEraseB0
     1x          Label 78DA ESP_CheckEraseB1
     8x          Label 7877 ESP_CheckPriorityB0
     8x          Label 78C8 ESP_CheckPriorityB1
     0x          Label 78B4 ESP_FreeEraseBufferB0
     0x          Label 7905 ESP_FreeEraseBufferB1
     2x          Label 78BF ESP_NextObjectB0
     2x          Label 7910 ESP_NextObjectB1
     0x          Label 77A2 ESP_P1B0
     1x          Label 780B ESP_P1B1
     1x          Label 77AF ESP_P2B0
     1x          Label 7818 ESP_P2B1
     1x          Label 77BC ESP_P3B0
     1x          Label 7825 ESP_P3B1
     1x          Label 77C9 ESP_P4B0
     1x          Label 7832 ESP_P4B1
     1x          Label 77D6 ESP_P5B0
     1x          Label 783F ESP_P5B1
     1x          Label 77E3 ESP_P6B0
     1x          Label 784C ESP_P6B1
     1x          Label 77F0 ESP_P7B0
     1x          Label 7859 ESP_P7B1
     1x          Label 77FD ESP_P8B0
     1x          Label 7866 ESP_P8B1
     9x          Label 7874 ESP_ProcessEachPriorityLevelB0
     9x          Label 78C5 ESP_ProcessEachPriorityLevelB1
     1x          Label 780A ESP_rtsB0
     1x          Label 7873 ESP_rtsB1
     0x          Label 779D ESP_Start
     0x          Label 787B ESP_UnsetCheckRefreshB0
     0x          Label 78CC ESP_UnsetCheckRefreshB1
     1x          Label 78B7 ESP_UnsetOnScreenFlagB0
     1x          Label 7908 ESP_UnsetOnScreenFlagB1
     0x          Equ   001B ext_variables
     0x          Label 71AA Fire_Held
     0x          Label 71AC Fire_Press
     2x          Label 71A8 Fire_Read
     0x          Label 613B Glb_Camera_X_Pos
     0x          Label 613D Glb_Camera_Y_Pos
    10x          Label 613A Glb_Cur_Wrk_Screen_Id
     1x          Label 716F Glb_MainCharacter_Is_Dead
     6x          Label 613F Glb_Sprite_Screen_Pos_Part1
     6x          Label 6141 Glb_Sprite_Screen_Pos_Part2
     0x          Equ   00FE goBackNFrames
     0x          Equ   00FD goToAnimation
     0x          Equ   0038 gravity
     0x          Equ   0000 id
     1x          Equ   0006 image_center_offset
     5x          Equ   000A image_set
     2x          Equ   0004 image_subset_x1_offset
     1x          Equ   0005 image_subset_y1_offset
     2x          Equ   0004 image_x_size
     1x          Equ   0005 image_y_size
     0x          Label 85DE Img_emblemBack01
     0x          Label 85CE Img_emblemBack02
     0x          Label 84F8 Img_emblemBack03
     0x          Label 84E8 Img_emblemBack04
     0x          Label 8518 Img_emblemBack05
     0x          Label 8508 Img_emblemBack06
     0x          Label 84C8 Img_emblemBack07
     0x          Label 84B8 Img_emblemBack08
     0x          Label 84D8 Img_emblemBack09
     0x          Label 868D Img_emblemFront01
     0x          Label 869D Img_emblemFront02
     0x          Label 866D Img_emblemFront03
     0x          Label 867D Img_emblemFront04
     0x          Label 864D Img_emblemFront05
     0x          Label 865D Img_emblemFront06
     0x          Label 862D Img_emblemFront07
     0x          Label 863D Img_emblemFront08
     0x          Label 8235 Img_SegaLogo_1
     0x          Label 8225 Img_SegaLogo_2
     1x          Label 8324 Img_SegaSonic_11
     1x          Label 825E Img_SegaSonic_12
     1x          Label 82A0 Img_SegaSonic_13
     1x          Label 82E2 Img_SegaSonic_21
     1x          Label 8366 Img_SegaSonic_22
     1x          Label 827F Img_SegaSonic_23
     1x          Label 83A8 Img_SegaSonic_31
     1x          Label 82C1 Img_SegaSonic_32
     1x          Label 8345 Img_SegaSonic_33
     1x          Label 8387 Img_SegaSonic_41
     1x          Label 83C9 Img_SegaSonic_42
     1x          Label 8303 Img_SegaSonic_43
     0x          Label 8245 Img_SegaTrails_1
     0x          Label 842A Img_SegaTrails_2
     0x          Label 841A Img_SegaTrails_3
     0x          Label 840A Img_SegaTrails_4
     0x          Label 83FA Img_SegaTrails_5
     0x          Label 83EA Img_SegaTrails_6
     0x          Label 8215 Img_SonicAndTailsIn
     0x          Label 846B Img_sonicHand
     1x          Label 85A6 Img_sonic_1
     1x          Label 85BA Img_sonic_2
     1x          Label 8605 Img_sonic_3
     1x          Label 8619 Img_sonic_4
     0x          Label 85EE Img_sonic_5
     3x          Label 849D Img_star_1
     3x          Label 8482 Img_star_2
     1x          Label 8457 Img_star_3
     0x          Label 8443 Img_star_4
     0x          Label 858F Img_tailsHand
     1x          Label 857B Img_tails_1
     1x          Label 8567 Img_tails_2
     1x          Label 8553 Img_tails_3
     1x          Label 853F Img_tails_4
     1x          Label 8528 Img_tails_5
     0x          Label 6103 InitIRQ
     0x          Label 71A9 Joypads
     2x          Label 71A9 Joypads_Held
     1x          Label 71AB Joypads_Press
     2x          Label 71A7 Joypads_Read
     1x          Label 610F LevelMainLoop
     1x          Label 705F LevelOnly_Object_RAM
     1x          Label 716D LevelOnly_Object_RAM_End
     1x          Label 8A04 LoadAct
     4x          Label 6143 Lst_FreeCellFirstEntry_0
     4x          Label 6312 Lst_FreeCellFirstEntry_1
     2x          Label 6145 Lst_FreeCell_0
     2x          Label 6314 Lst_FreeCell_1
     8x          Label 6505 Lst_Priority_Unset_0
     7x          Label 656B Lst_Priority_Unset_1
     0x          Label 7216 MarkObjGone
    14x          Equ   0000 nb_cells
     1x          Equ   001B nb_dynamic_objects
     6x          Equ   0082 nb_free_cells
     0x          Equ   0003 nb_level_objects
     4x          Equ   0020 nb_objects
     4x          Equ   0008 nb_priority_levels
     0x          Equ   0002 nb_reserved_objects
     0x          Equ   00FC nextRoutine
     0x          Equ   00FA nextSubRoutine
     9x          Equ   0005 next_entry
     3x          Equ   005A next_object
     0x          Label 731A ObjectMove
     1x          Label 662D Object_RAM
     2x          Label 716D Object_RAM_End
     8x          Equ   005A object_size
     1x          Label 87F3 Obj_Index_Address
     1x          Label 86F3 Obj_Index_Page
     0x          Label 662D Obj_MainCharacter
     0x          Label 6687 Obj_Sidekick
     0x          Label 70B9 Obj_SonicDust
     0x          Label 7113 Obj_TailsDust
     0x          Label 705F Obj_TailsTails
     4x          Equ   0000 page_draw_routine
     2x          Equ   0003 page_erase_routine
     1x          Label 8A38 Pal_SEGA
     0x          Label 8AB8 Pal_SEGAEnd
     0x          Label 8A78 Pal_SEGAMid
     0x          Label 8A98 Pal_SonicAndTailsIn
     0x          Label 8A58 Pal_TitleScreen
     1x          Equ   0003 pcm_end_addr
     1x          Equ   0005 pcm_meta_size
     1x          Equ   0000 pcm_page
     0x          Label 89F3 Pcm_SEGA
     1x          Equ   0001 pcm_start_addr
     0x          Label 7D9A PlayPCM
     1x          Label 7DD2 PlayPCM_End
     1x          Label 7DBC PlayPCM_Loop
     1x          Label 7DCC PlayPCM_NextChunk
     1x          Label 7DB1 PlayPCM_ReadChunk
     1x          Label 7DEB PlayPCM_RestorePage
     2x          Equ   0006 prev_anim
     6x          Equ   0003 priority
     0x          Label 7EA5 PSGCancelLoop
     4x          Label 81FC PSGChan0Volume
     4x          Label 81FD PSGChan1Volume
     3x          Label 8202 PSGChan2HighTone
     3x          Label 8200 PSGChan2LowTone
     5x          Label 81FE PSGChan2Volume
     5x          Label 8201 PSGChan3LowTone
     5x          Label 81FF PSGChan3Volume
     6x          Equ   0000 PSGChannel0
     5x          Equ   0020 PSGChannel1
     9x          Equ   0040 PSGChannel2
    12x          Label 8204 PSGChannel2SFX
    10x          Equ   0060 PSGChannel3
    13x          Label 8205 PSGChannel3SFX
     2x          Equ   0040 PSGData
    35x          Equ   E7B0 PSGDataPort
     2x          Equ   0000 PSGEnd
     1x          Label 805F PSGFrame
     1x          Label 806B PSGFrame_continue
     0x          Label 7EA9 PSGGetStatus
     0x          Label 7DF1 PSGInit
    32x          Equ   0080 PSGLatch
     2x          Equ   0001 PSGLoop
     3x          Label 81F7 PSGLoopFlag
     3x          Label 81F8 PSGMusicLastLatch
     3x          Label 81F4 PSGMusicLoopPoint
     2x          Label 81EF PSGMusicPage
     3x          Label 81F2 PSGMusicPointer
     4x          Label 81F6 PSGMusicSkipFrames
     2x          Label 81F0 PSGMusicStart
    13x          Label 81EE PSGMusicStatus
     4x          Label 81F9 PSGMusicSubstringLen
     2x          Label 81FA PSGMusicSubstringRetAddr
    13x          Label 8203 PSGMusicVolumeAttenuation
     0x          Label 7E07 PSGPlay
     1x          Label 7E09 PSGPlay1
     0x          Label 7E03 PSGPlayNoRepeat
     0x          Label 7F21 PSGRestoreVolumes
     1x          Label 7F34 PSGRestoreVolumes1
     1x          Label 7F47 PSGRestoreVolumes2
     2x          Label 7F6B PSGRestoreVolumes3
     2x          Label 7F8F PSGRestoreVolumes4
     0x          Label 7E5A PSGResume
     1x          Label 7E8A PSGResume1
     1x          Label 7E9F PSGResume2
     1x          Label 7EA4 PSGResume_end
     0x          Label 7EAD PSGSetMusicVolumeAttenuation
     1x          Label 7EC3 PSGSetMusicVolumeAttenuation1
     1x          Label 7ED6 PSGSetMusicVolumeAttenuation2
     1x          Label 7EEE PSGSetMusicVolumeAttenuation3
     1x          Label 7F06 PSGSetMusicVolumeAttenuation4
     2x          Label 7F0B PSGSetMusicVolumeAttenuation_end
     0x          Label 8057 PSGSFXCancelLoop
     2x          Label 8206 PSGSFXChan2Volume
     2x          Label 8207 PSGSFXChan3Volume
     0x          Label 816C PSGSFXFrame
     1x          Label 81AC PSGSFXFrame_end
     0x          Label 805B PSGSFXGetStatus
     3x          Label 8211 PSGSFXLoopFlag
     3x          Label 820E PSGSFXLoopPoint
     2x          Label 8209 PSGSFXPage
     0x          Label 7F99 PSGSFXPlay
     1x          Label 7F9B PSGSFXPlay1
     1x          Label 7FC1 PSGSFXPlay2
     1x          Label 7FCA PSGSFXPlay3
     0x          Label 7F95 PSGSFXPlayLoop
     1x          Label 7FE0 PSGSFXPlayLoop_end
     4x          Label 820C PSGSFXPointer
     4x          Label 8210 PSGSFXSkipFrames
     2x          Label 820A PSGSFXStart
     7x          Label 8208 PSGSFXStatus
     2x          Label 7FE1 PSGSFXStop
     1x          Label 7FF0 PSGSFXStop1
     1x          Label 7FFA PSGSFXStop2
     1x          Label 8024 PSGSFXStop3
     1x          Label 8046 PSGSFXStop4
     1x          Label 8056 PSGSFXStop_end
     4x          Label 8212 PSGSFXSubstringLen
     2x          Label 8213 PSGSFXSubstringRetAddr
     0x          Label 7F0C PSGSilenceChannels
     2x          Label 7E31 PSGStop
     1x          Label 7E4A PSGStop2
     1x          Label 7E54 PSGStop3
     1x          Label 7E59 PSGStop_end
     4x          Equ   0008 PSGSubString
    27x          Equ   0010 PSGVolumeData
     2x          Equ   0038 PSGWait
     5x          Equ   0001 PSG_PLAYING
     3x          Equ   0000 PSG_STOPPED
     0x          Label 89FE Psg_TitleScreen
     1x          Label 71AD ReadJoypads
     3x          Label 7D0F Refresh_palette
    24x          Equ   0002 render_flags
     4x          Equ   0020 render_hide_mask
     2x          Equ   0008 render_motionless_mask
     5x          Equ   0004 render_overlay_mask
     1x          Equ   0010 render_playfieldcoord_mask
     5x          Equ   0040 render_todelete_mask
     1x          Equ   0080 render_xloop_mask
     2x          Equ   0001 render_xmirror_mask
     2x          Equ   0002 render_ymirror_mask
     1x          Label 662D Reserved_Object_RAM
     1x          Label 66E1 Reserved_Object_RAM_End
     0x          Equ   00FF resetAnim
     0x          Equ   00FB resetAnimAndSubRoutine
     2x          Equ   0018 routine
     3x          Equ   0019 routine_secondary
     3x          Equ   003F rsv_bgdata_0
     3x          Equ   0051 rsv_bgdata_1
     2x          Equ   0036 rsv_buffer_0
     2x          Equ   0048 rsv_buffer_1
     6x          Equ   002C rsv_image_center_offset
     4x          Equ   002E rsv_image_subset
    11x          Equ   0030 rsv_mapping_frame
     0x          Equ   002A rsv_prev_anim
     4x          Equ   003D rsv_prev_mapping_frame_0
     4x          Equ   004F rsv_prev_mapping_frame_1
    11x          Equ   0047 rsv_prev_render_flags_0
     9x          Equ   0059 rsv_prev_render_flags_1
     4x          Equ   0080 rsv_prev_render_onscreen_mask
     6x          Equ   0001 rsv_prev_render_overlay_mask
     0x          Equ   0043 rsv_prev_x1_pixel_0
     0x          Equ   0055 rsv_prev_x1_pixel_1
     0x          Equ   0045 rsv_prev_x2_pixel_0
     0x          Equ   0057 rsv_prev_x2_pixel_1
     2x          Equ   0043 rsv_prev_xy1_pixel_0
     2x          Equ   0055 rsv_prev_xy1_pixel_1
     2x          Equ   0045 rsv_prev_xy2_pixel_0
     2x          Equ   0057 rsv_prev_xy2_pixel_1
     1x          Equ   0041 rsv_prev_xy_pixel_0
     1x          Equ   0053 rsv_prev_xy_pixel_1
     0x          Equ   0041 rsv_prev_x_pixel_0
     0x          Equ   0053 rsv_prev_x_pixel_1
     0x          Equ   0044 rsv_prev_y1_pixel_0
     0x          Equ   0056 rsv_prev_y1_pixel_1
     0x          Equ   0046 rsv_prev_y2_pixel_0
     0x          Equ   0058 rsv_prev_y2_pixel_1
     0x          Equ   0042 rsv_prev_y_pixel_0
     0x          Equ   0054 rsv_prev_y_pixel_1
     6x          Equ   0036 rsv_priority_0
     6x          Equ   0048 rsv_priority_1
    14x          Equ   0039 rsv_priority_next_obj_0
    14x          Equ   004B rsv_priority_next_obj_1
    12x          Equ   0037 rsv_priority_prev_obj_0
    12x          Equ   0049 rsv_priority_prev_obj_1
     4x          Equ   0001 rsv_render_checkrefresh_mask
     5x          Equ   0004 rsv_render_displaysprite_mask
     8x          Equ   0002 rsv_render_erasesprite_mask
    28x          Equ   0029 rsv_render_flags
     4x          Equ   0008 rsv_render_outofrange_mask
     6x          Equ   0032 rsv_x1_pixel
     5x          Equ   0034 rsv_x2_pixel
     3x          Equ   0032 rsv_xy1_pixel
     3x          Equ   0034 rsv_xy2_pixel
     5x          Equ   0033 rsv_y1_pixel
     4x          Equ   0035 rsv_y2_pixel
     1x          Label 71EF RunNextObject
     3x          Label 71D6 RunObject
     1x          Label 71CE RunObjects
     1x          Label 71F9 RunObjectsWhenPlayerIsDead
     0x          Label 71D1 RunObjects_01
     0x          Label 71F8 RunObjects_End
     1x          Label 7188 screen_border_color
     2x          Equ   00E3 screen_bottom
     2x          Equ   0030 screen_left
     2x          Equ   00CF screen_right
     2x          Equ   001C screen_top
     0x          Equ   00A0 screen_width
     2x          Equ   0001 SFX_CHANNEL2
     2x          Equ   0002 SFX_CHANNEL3
     2x          Equ   0003 SFX_CHANNELS2AND3
     0x          Label 7345 SingleObjLoad2
     1x          Label 734F SingleObjLoad2_01
     2x          Label 735B SingleObjLoad2_02
     1x          Equ   001A status
     0x          Equ   0004 status_bit2
     0x          Equ   0080 status_bit7
     0x          Equ   0002 status_inair
     0x          Equ   0010 status_jumpingafterrolling
     0x          Equ   0004 status_jumporroll
     0x          Equ   0020 status_mainchar_pushing
     0x          Equ   0008 status_mainchar_standing
     0x          Equ   0008 status_norgroundnorfall
     0x          Equ   0020 status_pushing
     0x          Equ   0040 status_sidekick_pushing
     0x          Equ   0010 status_sidekick_standing
     0x          Equ   0040 status_underwater
     1x          Equ   0001 status_x_orientation
     1x          Equ   0002 status_y_orientation
     0x          Equ   0001 subtype
     0x          Label 7183 SwapVideoPage
     2x          Label 64E1 Tbl_Priority_First_Entry_0
     2x          Label 6547 Tbl_Priority_First_Entry_1
     3x          Label 64F3 Tbl_Priority_Last_Entry_0
     2x          Label 6559 Tbl_Priority_Last_Entry_1
     2x          Label 65ED Tbl_Sub_Object_Draw
     3x          Label 65AD Tbl_Sub_Object_Erase
     0x          Label 791B UDP_B0
     1x          Label 7988 UDP_B1
     1x          Label 7962 UDP_ChainNextB0
     1x          Label 79CF UDP_ChainNextB1
     1x          Label 7942 UDP_ChainPrevB0
     1x          Label 79AF UDP_ChainPrevB1
     1x          Label 796C UDP_CheckDeleteB0
     1x          Label 79D9 UDP_CheckDeleteB1
     2x          Label 791E UDP_CheckEndB0
     2x          Label 798B UDP_CheckEndB1
     1x          Label 794C UDP_CheckPrioNextB0
     1x          Label 79B9 UDP_CheckPrioNextB1
     1x          Label 792A UDP_CheckPrioPrevB0
     1x          Label 7997 UDP_CheckPrioPrevB1
     0x          Label 7923 UDP_InitListB0
     0x          Label 7990 UDP_InitListB1
     3x          Label 7981 UDP_SetNewPrioB0
     3x          Label 79EE UDP_SetNewPrioB1
     0x          Label 7916 UDP_Start
     1x          Label 7916 UnsetDisplayPriority
     1x          Label 7D72 UpdatePalette
     1x          Label 7D99 UPP_return
     1x          Label 7D80 UPP_SetColor
     2x          Label 71A5 Vint_runcount
     3x          Label 7170 WaitVBL
     1x          Label 7175 WaitVBL_01
     0x          Label 7D52 White_palette
     7x          Equ   0012 xy_pixel
     3x          Equ   0012 x_pixel
     4x          Equ   000C x_pos
     0x          Equ   000E x_sub
     2x          Equ   0014 x_vel
     1x          Equ   0013 y_pixel
     4x          Equ   000F y_pos
     0x          Equ   0011 y_sub
     2x          Equ   0016 y_vel
     1x          Label 7F4C _chkchn2
     1x          Label 7F70 _chkchn3
     1x          Label 80E0 _chn2
     1x          Label 80FD _command
     2x          Label 8083 _continue
     1x          Label 8108 _done
     0x          Equ   00FE _goBackNFrames
     0x          Equ   00FD _goToAnimation
     1x          Label 8161 _high_part_Tone
     1x          Label 80CD _ifchn0
     1x          Label 80B6 _ifchn2
    11x          Label 8073 _intLoop
     4x          Label 817F _intSFXLoop
     1x          Label 6129 _IRQ
     1x          Label 6132 _IRQ_end
     1x          Label 80C0 _latch_Volume
     1x          Label 80D2 _latch_Volume_23
     1x          Label 8142 _musicLoop
     0x          Equ   00FC _nextRoutine
     3x          Equ   00FA _nextSubRoutine
     1x          Label 80F4 _noLatch
     1x          Label 810C _otherCommands
     1x          Label 8136 _output_NoLatch
     4x          Equ   00FF _resetAnim
     0x          Equ   00FB _resetAnimAndSubRoutine
     1x          Label 7F66 _restoreSFX2
     1x          Label 7F94 _restoreSFX2_end
     1x          Label 7F8A _restoreSFX3
     1x          Label 7EF3 _restore_channel3
     6x          Label 80EA _send2PSG
     4x          Label 8119 _sendVolume2PSG
     2x          Label 8127 _sendVolume2PSG1
     1x          Label 812E _sendVolume2PSG2
     1x          Label 813C _setLoopPoint
     1x          Label 81AD _SFXcommand
     2x          Label 818F _SFXcontinue
     1x          Label 81B8 _SFXdone
     1x          Label 81CE _sfxLoop
     1x          Label 81BC _SFXotherCommands
     2x          Label 81A3 _SFXoutbyte
     1x          Label 81C9 _SFXsetLoopPoint
     1x          Label 81DD _SFXsubstring
     1x          Label 81A0 _SFXvolumechn3
     1x          Label 80EF _skipFrame
     1x          Label 804D _skipRestore
     1x          Label 81A8 _skipSFXFrame
     1x          Label 8029 _skip_chn2
     1x          Label 804B _skip_chn3
     1x          Label 814F _substring

