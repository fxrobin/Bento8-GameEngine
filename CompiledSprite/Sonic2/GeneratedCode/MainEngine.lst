/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : .\Sonic2\GeneratedCode\MainEngine.asm
 * Fichier destination : .\Sonic2\GeneratedCode\TMP.BIN
 * Contenu :
 *     Main     0:MAIN.ASM     3614
 *     Include  0:CONSTANT.ASM 4400
 *     Include  0:WAITVBL.ASM  1923
 *     Include  0:UPDTPAL.ASM  629
 *     Include  0:READJPDS.ASM 1727
 *     Include  0:RUNOBJTS.ASM 1591
 *     Include  0:MRKOBJGN.ASM 481
 *     Include  0:DISPLSPR.ASM 2000
 *     Include  0:ANIMSPR.ASM  1972
 *     Include  0:OBJMOVE.ASM  752
 *     Include  0:OBJLOAD.ASM  1109
 *     Include  0:DELETOBJ.ASM 1178
 *     Include  0:CLEAROBJ.ASM 560
 *     Include  0:CHECKSPR.ASM 6159
 *     Include  0:ERASESPR.ASM 6826
 *     Include  0:UNSETDSP.ASM 2828
 *     Include  0:DRAWSPR.ASM  4677
 *     Include  0:BGBALLOC.ASM 958
 *     Include  0:BGBFREE.ASM  1735
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
    162                                   INCLUD CONSTANT
    163                           * --------------------------------------->>
    164                           * Constants
    165                           *
    166                           * Naming convention
    167                           * -----------------
    168                           * - lower case
    169                           * - underscore-separated names
    170                           *
    171                           * --------------------------------------->>
    172
    173                           * =======================================>>
    174                           * TO8 Registers
    175                           * =======================================>>
    176
    177                  6049     dk_lecteur                    equ $6049
    178                  604A     dk_piste                      equ $604A
    179                  604C     dk_secteur                    equ $604C
    180                  604F     dk_destination                equ $604F
    181
    182                           * =======================================>>
    183                           * Display Constants
    184                           * =======================================>>
    185
    186                  00A0     screen_width                  equ 160 ; s>>
    187                  00C8     screen_height                 equ 200 ; s>>
    188                  0008     nb_priority_levels            equ 8   ; n>>
    189
    190                           * =======================================>>
    191                           * Physics Constants
    192                           * =======================================>>
    193
    194                  0038     gravity                       equ $38 ; G>>
    195
    196                           * =======================================>>
    197                           * Images Constants
    198                           * =======================================>>
    199
    200                  0000     page_bckdraw_routine          equ 0
    201                  0001     bckdraw_routine               equ 1
    202                  0003     page_draw_routine             equ 3
    203                  0004     draw_routine                  equ 4
    204                  0006     page_erase_routine            equ 6
    205                  0007     erase_routine                 equ 7
    206                  0009     erase_nb_cell                 equ 9
    207                  000A     image_x_offset                equ 10
    208                  000C     image_y_offset                equ 12
    209                  000E     image_x_size                  equ 14
    210                  000F     image_y_size                  equ 15 ; mu>>
    211                  0010     image_meta_size               equ 16 ; nu>>
    212
    213                           * =======================================>>
    214                           * Object Constants
    215                           * =======================================>>
    216
    217                  0002     nb_reserved_objects           equ 2
    218                  002B     nb_dynamic_objects            equ 43
    219                  0003     nb_level_objects              equ 3
    220                  002D     nb_objects                    equ (nb_res>>
    221
    222                           * --------------------------------------->>
    223                           * Object Status Table offsets
    224                           * --------------------------------------->>
    225
    226                  0050     object_size                   equ 80 ; th>>
    227                  0050     next_object                   equ object_>>
    228
    229                  0000     id                            equ 0      >>
    230                  0001     subtype                       equ 1      >>
    231                  0002     render_flags                  equ 2
    232
    233                           * --- render_flags bitfield variables --->>
    234                  0001     render_xmirror_mask           equ $01 ; (>>
    235                  0002     render_ymirror_mask           equ $02 ; (>>
    236                  0004     render_playfieldcoord_mask    equ $04 ; (>>
    237                  0008     render_hide_mask              equ $08 ; (>>
    238                  0010     render_fixedoverlay_mask      equ $10 ; (>>
    239                  0020     render_todelete_mask          equ $20 ; (>>
    240                  0040     render_free2_mask             equ $40 ; (>>
    241                  0080     render_free3_mask             equ $80 ; (>>
    242                            
    243                  0003     priority                      equ 3      >>
    244                  0004     anim                          equ 4  ; an>>
    245                  0006     prev_anim                     equ 6  ; an>>
    246                  0008     anim_frame                    equ 8      >>
    247                  0009     anim_frame_duration           equ 9      >>
    248                  000A     mapping_frame                 equ 10 ; an>>
    249                  000C     x_pos                         equ 12 ; an>>
    250                  000E     x_sub                         equ 14     >>
    251                  000F     y_pos                         equ 15 ; an>>
    252                  0011     y_sub                         equ 17     >>
    253                  0012     x_pixel                       equ 18     >>
    254                  0013     y_pixel                       equ 19     >>
    255                  0014     x_vel                         equ 20 ; an>>
    256                  0016     y_vel                         equ 22 ; an>>
    257                  0018     routine                       equ 24     >>
    258                  0019     routine_secondary             equ 25     >>
    259                  001A     status                        equ 26
    260
    261                           * --- status bitfield variables for objec>>
    262                  0001     status_x_orientation          equ   $01 ;>>
    263                  0002     status_y_orientation          equ   $02 ;>>
    264                  0004     status_bit2                   equ   $04 ;>>
    265                  0008     status_mainchar_standing      equ   $08 ;>>
    266                  0010     status_sidekick_standing      equ   $10 ;>>
    267                  0020     status_mainchar_pushing       equ   $20 ;>>
    268                  0040     status_sidekick_pushing       equ   $40 ;>>
    269                  0080     status_bit7                   equ   $80 ;>>
    270
    271                           * --- status bitfield variables for Main >>
    272                  0002     status_inair                  equ   $02 ;>>
    273                  0004     status_jumporroll             equ   $04 ;>>
    274                  0008     status_norgroundnorfall       equ   $08 ;>>
    275                  0010     status_jumpingafterrolling    equ   $10 ;>>
    276                  0020     status_pushing                equ   $20 ;>>
    277                  0040     status_underwater             equ   $40 ;>>
    278
    279                  001B     ext_variables                 equ 27 ; to>>
    280
    281                           * --------------------------------------->>
    282                           * reserved variables (engine)
    283
    284                  0029     rsv_render_flags              equ 41
    285
    286                           * --- rsv_render_flags bitfield variables>>
    287                  0001     rsv_render_checkrefresh_mask  equ $01 ; (>>
    288                  0002     rsv_render_erasesprite_mask   equ $02 ; (>>
    289                  0004     rsv_render_displaysprite_mask equ $04 ; (>>
    290                  0008     rsv_render_outofrange_mask    equ $08 ; (>>
    291
    292                  002A     rsv_prev_anim                 equ 42 ; an>>
    293                  002C     rsv_curr_mapping_frame        equ 44 ; an>>
    294                  002E     rsv_ptr_sub_object_erase      equ 46 ; an>>
    295                  0030     rsv_ptr_sub_object_draw       equ 48 ; an>>
    296                  0032     rsv_x2_pixel                  equ 50     >>
    297                  0033     rsv_y2_pixel                  equ 51     >>
    298
    299                           * --------------------------------------->>
    300                           * reserved variables (engine) - buffer sp>>
    301
    302                  0034     rsv_buffer_0                  equ 52 ; St>>
    303                  0034     rsv_priority_0                equ 52 ; in>>
    304                  0035     rsv_priority_prev_obj_0       equ 53 ; an>>
    305                  0037     rsv_priority_next_obj_0       equ 55 ; an>>
    306                  0039     rsv_prev_mapping_frame_0      equ 57 ; an>>
    307                  003B     rsv_bgdata_0                  equ 59 ; an>>
    308                  003D     rsv_prev_x_pixel_0            equ 61 ; pr>>
    309                  003E     rsv_prev_y_pixel_0            equ 62 ; pr>>
    310                  003F     rsv_prev_x2_pixel_0           equ 63 ; pr>>
    311                  0040     rsv_prev_y2_pixel_0           equ 64 ; pr>>
    312                  0041     rsv_onscreen_0                equ 65 ; ha>>
    313
    314                  0042     rsv_buffer_1                  equ 66 ; St>>
    315                  0042     rsv_priority_1                equ 66 ; in>>
    316                  0043     rsv_priority_prev_obj_1       equ 67 ; an>>
    317                  0045     rsv_priority_next_obj_1       equ 69 ; an>>
    318                  0047     rsv_prev_mapping_frame_1      equ 71 ; an>>
    319                  0049     rsv_bgdata_1                  equ 73 ; an>>
    320                  004B     rsv_prev_x_pixel_1            equ 75 ; pr>>
    321                  004C     rsv_prev_y_pixel_1            equ 76 ; pr>>
    322                  004D     rsv_prev_x2_pixel_1           equ 77 ; pr>>
    323                  004E     rsv_prev_y2_pixel_1           equ 78 ; pr>>
    324                  004F     rsv_onscreen_1                equ 79 ; ha>>
    325
    326                  0000     buf_priority                  equ 0  ; of>>
    327                  0001     buf_priority_prev_obj         equ 1  ;
    328                  0003     buf_priority_next_obj         equ 3  ;
    329                  0005     buf_prev_mapping_frame        equ 5  ;
    330                  0007     buf_bgdata                    equ 7  ;
    331                  0009     buf_prev_x_pixel              equ 9  ;
    332                  000A     buf_prev_y_pixel              equ 10 ;
    333                  000B     buf_prev_x2_pixel             equ 11 ;
    334                  000C     buf_prev_y2_pixel             equ 12 ;
    335                  000D     buf_onscreen                  equ 13 ;
    336
     10        6000                       org   $6000
     11
     12                           *****************************************>>
     13                           * Main Loop
     14                           *****************************************>>
     15        6000               LevelMainLoop
     16  8     6000 BD   9169             jsr   WaitVBL
     17  8     6003 BD   9210             jsr   UpdatePalette
     18  8     6006 BD   923B             jsr   ReadJoypads
     19  8     6009 BD   9253             jsr   RunObjects
     20  8     600C BD   9443             jsr   CheckSpritesRefresh
     21  8     600F BD   9641             jsr   EraseSprites
     22  8     6012 BD   9834             jsr   UnsetDisplayPriority
     23  8     6015 BD   9917             jsr   DrawSprites
     24  3     6018 20   E6               bra   LevelMainLoop
     25
     26                           * =======================================>>
     27                           * Global Data
     28                           *
     29                           * Naming convention
     30                           * -----------------
     31                           * - underscore-separated names
     32                           * - first letter of each word in upper ca>>
     33                           *
     34                           * Templates
     35                           * ---------
     36                           * - Glb_*        : global variable
     37                           * - Tbl_*        : data table
     38                           * - Lst_*        : list is a data table w>>
     39                           * - Obj_*        : address of an object i>>
     40                           *
     41                           * - *_Object_RAM : sub group of objects
     42                           * - *_end        : data end label
     43                           *
     44                           * =======================================>>
     45
     46                           * --------------------------------------->>
     47                           * Display
     48                           * --------------------------------------->>
     49                            
     50        601A 00            Glb_Cur_Wrk_Screen_Id         fcb   $00  >>
     51        601B 00            Glb_Cur_Wrk_Screen_Id_x2      fcb   $00  >>
     52        601C 0000          Glb_Camera_X_Pos              fdb   $0000>>
     53        601E 0000          Glb_Camera_Y_Pos              fdb   $0000>>
     54        6020 0000          Glb_Sprite_Screen_Pos_PartA   fdb   $0000>>
     55        6022 0000          Glb_Sprite_Screen_Pos_PartB   fdb   $0000>>
     56
     57                           * --------------------------------------->>
     58                           * Background Backup Cells - BBC
     59                           * --------------------------------------->>
     60
     61                  0082     nb_free_cells                 equ   130
     62                  0040     cell_size                     equ   64   >>
     63                  6000     cell_start_adr                equ   $6000>>
     64
     65        6024 0000          Lst_FreeCellFirstEntry_0      fdb   $0000>>
     66        6026               Lst_FreeCell_0                rmb   cell_>>
     67
     68        7066 0000          Lst_FreeCellFirstEntry_1      fdb   $0000>>
     69        7068               Lst_FreeCell_1                rmb   cell_>>
     70
     71                           * ----- Cells variables
     72                  0000     nb_cells                      equ   0
     73                  0001     cell_start                    equ   1
     74                  0003     cell_end                      equ   3
     75                  0005     next_entry                    equ   5
     76                  0007     entry_size                    equ   7
     77
     78                           * --------------------------------------->>
     79                           * Display Priority Structure - DPS
     80                           * --------------------------------------->>
     81
     82        80A8               DPS_buffer_0
     83        80A8               Tbl_Priority_First_Entry_0    rmb   2+(nb>>
     84        80BA               Tbl_Priority_Last_Entry_0     rmb   2+(nb>>
     85        80CC 80CE          Lst_Priority_Unset_0          fdb   Lst_P>>
     86        80CE                                             rmb   (nb_o>>
     87        8128               DPS_buffer_1
     88        8128               Tbl_Priority_First_Entry_1    rmb   2+(nb>>
     89        813A               Tbl_Priority_Last_Entry_1     rmb   2+(nb>>
     90        814C 814E          Lst_Priority_Unset_1          fdb   Lst_P>>
     91        814E                                             rmb   (nb_o>>
     92                            
     93                  0000     buf_Tbl_Priority_First_Entry  equ   0
     94                  0012     buf_Tbl_Priority_Last_Entry   equ   Tbl_P>>
     95                  0024     buf_Lst_Priority_Unset        equ   Lst_P>>
     96
     97                           * --------------------------------------->>
     98                           * Sub Objects List - SOL
     99                           * --------------------------------------->>
    100
    101        81A8               Tbl_Sub_Object_Erase          rmb   nb_ob>>
    102        8202               Tbl_Sub_Object_Draw           rmb   nb_ob>>
    103
    104                           * --------------------------------------->>
    105                           * Object Status Table - OST
    106                           * --------------------------------------->>
    107                            
    108        825C               Object_RAM *@globals
    109        825C               Reserved_Object_RAM
    110        825C               Obj_MainCharacter             rmb   objec>>
    111        82AC               Obj_Sidekick                  rmb   objec>>
    112        82FC               Reserved_Object_RAM_End
    113        82FC               Dynamic_Object_RAM            rmb   nb_dy>>
    114        906C               Dynamic_Object_RAM_End
    115        906C               LevelOnly_Object_RAM
    116        906C               Obj_TailsTails                rmb   objec>>
    117        90BC               Obj_SonicDust                 rmb   objec>>
    118        910C               Obj_TailsDust                 rmb   objec>>
    119        915C               LevelOnly_Object_RAM_End
    120        915C               Object_RAM_End
    121
    122                           * --------------------------------------->>
    123                           * Lifecycle
    124                           * --------------------------------------->>
    125
    126        915C               Glb_MainCharacter_Is_Dead     rmb   $1,0
    127
    128                           * --------------------------------------->>
    129                           * Get Orientation To Player
    130                           * --------------------------------------->>
    131
    132        915D               Glb_Closest_Player            rmb   $2,0 >>
    133        915F               Glb_Player_Is_Left            rmb   $1,0 >>
    134        9160               Glb_Player_Is_Above           rmb   $1,0 >>
    135        9161               Glb_Player_H_Distance         rmb   $2,0 >>
    136        9163               Glb_Player_V_Distance         rmb   $2,0 >>
    137        9165               Glb_Abs_H_Distance_Mainc      rmb   $2,0 >>
    138        9167               Glb_H_Distance_Sidek          rmb   $2,0 >>
    139
    140                           * =======================================>>
    141                           * Routines
    142                           * =======================================>>
    337                                   INCLUD WAITVBL
    338                           *****************************************>>
    339                           * Attente VBL
    340                           * Alternance de la page 2 et 3 entre affi>>
    341                           * Alternance de la RAMA et RAM B dans l'e>>
    342                           * --------------------------------------->>
    343                           *
    344                           * Page Affichee par l'automate Video
    345                           * ----------------------------------
    346                           *   $E7DD determine la page affichee a l'>>
    347                           *   bit7=0 bit6=0 bit5=0 bit4=0 (#$0_) : >>
    348                           *   bit7=0 bit6=1 bit5=0 bit4=0 (#$4_) : >>
    349                           *   bit7=1 bit6=0 bit5=0 bit4=0 (#$8_) : >>
    350                           *   bit7=1 bit6=1 bit5=0 bit4=0 (#$C_) : >>
    351                           *   bit3 bit2 bit1 bit0  (#$_0 a #$_F) : >>
    352                           *   Remarque : bit5 et bit4 utilisable un>>
    353                           *
    354                           * Page en espace cartouche (ecriture dans>>
    355                           * --------------------------------------->>
    356                           *   $E7E6 determine la page visible dans >>
    357                           *   bit7 toujours a 0
    358                           *   bit6=1 : ecriture autorisee
    359                           *   bit5=1 : espace cartouche recouvert p>>
    360                           *   bit4=0 : CAS1N valide : banques 0-15 >>
    361                           *   bit5=1 bit4=0 bit3=0 bit2=0 bit1=0 bi>>
    362                           *   ...
    363                           *   bit5=1 bit4=0 bit3=1 bit2=1 bit1=1 bi>>
    364                           *   bit5=1 bit4=1 bit3=0 bit2=0 bit1=0 bi>>
    365                           *   ...
    366                           *   bit5=1 bit4=1 bit3=1 bit2=1 bit1=1 bi>>
    367                           *
    368                           * Demi-Page 0 en espace ecran (4000 a 5FF>>
    369                           * --------------------------------------->>
    370                           *   $E7C3 determine la demi-page de la pa>>
    371                           *   bit0=0 : 8Ko RAMA
    372                           *   bit0=1 : 8ko RAMB
    373                           *
    374                           *****************************************>>
    375        9169               WaitVBL
    376  7     9169 7D   E7E7             tst   $E7E7              * le fai>>
    377  3     916C 2A   FB               bpl   WaitVBL            * tant q>>
    378        916E               WaitVBL_01
    379  7     916E 7D   E7E7             tst   $E7E7              * le fai>>
    380  3     9171 2B   FB               bmi   WaitVBL_01         * tant q>>
    381                            
    382  6     9173 FC   91AD             ldd   Vint_runcount
    383  4     9176 C3   0001             addd  #1
    384  6     9179 FD   91AD             std   Vint_runcount
    385                            
    386  5     917C B6   601A             lda   Glb_Cur_Wrk_Screen_Id
    387  4     917F 9A   01               ora   1
    388  5     9181 B7   601A             sta   Glb_Cur_Wrk_Screen_Id
    389  2     9184 48                    lsla
    390  5     9185 B7   601B             sta   Glb_Cur_Wrk_Screen_Id_x2
    391                            
    392        9188               SwapVideoPage
    393  5     9188 F6   9196             ldb   am_SwapVideoPage+1 * charge>>
    394  2     918B C4   40               andb  #$40               * altern>>
    395  2     918D CA   80               orb   #$80               * bit7=1>>
    396  5     918F F7   E7DD             stb   $E7DD              * change>>
    397  7     9192 73   9196             com   am_SwapVideoPage+1 * altern>>
    398        9195               am_SwapVideoPage
    399  2     9195 C6   00               ldb   #$00
    400  2     9197 C4   01               andb  #$01               * altern>>
    401  2     9199 CA   62               orb   #$62               * bit6=1>>
    402  5     919B F7   E7E6             stb   $E7E6              * change>>
    403  5     919E F6   E7C3             ldb   $E7C3              * charge>>
    404  2     91A1 C4   01               andb  #$01
    405  3     91A3 26   04               bne   SwapVideoPage_01   * si bit>>
    406  7     91A5 7C   E7C3             inc   $E7C3              * bit0=1>>
    407  5     91A8 39                    rts
    408        91A9               SwapVideoPage_01
    409  7     91A9 7A   E7C3             dec   $E7C3              * bit0=0>>
    410  5     91AC 39                    rts
    411                            
    412        91AD               Vint_runcount rmb   $2,0 *@globals
    413
    414                                   INCLUD UPDTPAL
    415                           *****************************************>>
    416                           * Mise a jour de la palette
    417                           *****************************************>>
    418                           * TODO ajout systeme de refresh pour ne p>>
    419                           * ou integrer le refresh palette en debut>>
    420                           * palette doit etre refresh avant le trac>>
    421
    422        91AF 00            cpt            fcb   $00
    423                  91B0     Ptr_palette    equ   Normal_palette
    424        91B0               Normal_palette rmb   $20,0   *@globals
    425        91D0               Black_palette  rmb   $20,0   *@globals
    426        91F0               White_palette  rmb   $20,$FF *@globals
    427
    428        9210               UpdatePalette
    429  6+3   9210 10AE 9F 0000         ldy   [Ptr_palette]
    430  5+3   9215 AE   9F 0000         ldx   [Ptr_palette]
    431  4+1   9219 30   88 20           leax  $20,x
    432  7     921C 7F   91AF            clr   cpt                      * r>>
    433        921F               SetColor
    434  5     921F B6   91AF             lda   cpt                        >>
    435  2     9222 48                   asla                              >>
    436  5     9223 B7   E7DB            sta   $E7DB                       >>
    437  5+3   9226 EC   A1              ldd   ,y++                        >>
    438  5     9228 F7   E7DA            stb   $E7DA                       >>
    439  5     922B B7   E7DA            sta   $E7DA                    * s>>
    440  7     922E 7C   91AF            inc   cpt                         >>
    441  7+0   9231 10AC 84              cmpy  ,x                       * t>>
    442  3     9234 26   E9              bne   SetColor                 * o>>
    443  5     9236 39                    rts
    444
    445
    446                                   INCLUD READJPDS
    447                           * --------------------------------------->>
    448                           * Controller Buttons
    449                           *
    450                  0001     c1_button_up_mask            equ   $01 *@>>
    451                  0002     c1_button_down_mask          equ   $02 *@>>
    452                  0004     c1_button_left_mask          equ   $04 *@>>
    453                  0008     c1_button_right_mask         equ   $08 *@>>
    454                  0010     c2_button_up_mask            equ   $10 *@>>
    455                  0020     c2_button_down_mask          equ   $20 *@>>
    456                  0040     c2_button_left_mask          equ   $40 *@>>
    457                  0080     c2_button_right_mask         equ   $80 *@>>
    458                  0040     c1_button_A_mask             equ   $40 *@>>
    459                  0080     c2_button_A_mask             equ   $80 *@>>
    460
    461        9237               Joypads
    462        9237               Joypads_Held
    463        9237 00            Dpad_Held                    fcb   $00
    464        9238 00            Fire_Held                    fcb   $00
    465        9239               Joypads_Press
    466        9239 00            Dpad_Press                   fcb   $00
    467        923A 00            Fire_Press                   fcb   $00
    468
    469                           *****************************************>>
    470                           * Get joystick parameters
    471                           *
    472                           * Direction des Joypads
    473                           * ---------------------
    474                           * Registre: $E7CC (8bits)
    475                           *
    476                           * Joypad2     Joypad1
    477                           * 1111        1111 (0: appuye | 1: relach>>
    478                           * ||||_Haut   ||||_Haut
    479                           * |||__Bas    |||__Bas
    480                           * ||___Gauche ||___Gauche
    481                           * |____Droite |____Droite
    482                           *
    483                           * Boutons des Joypads
    484                           * -------------------
    485                           * Registre: $E7CD (8bits)
    486                           *
    487                           * 11 000000 (0: appuye | 1: relache)
    488                           * ||[------] 6 bits convertisseur numeriq>>
    489                           * ||_Fire Joypad1
    490                           * |__Fire Joypad2
    491                           *
    492                           * Variables globales: Joypads_Held, Joypa>>
    493                           * --------------------------------------->>
    494                           * (16 bits)
    495                           * Joypad2     Joypad1
    496                           * 0000        0000 (0: relache | 1: appuy>>
    497                           * ||||_Haut   ||||_Haut                  >>
    498                           * |||__Bas    |||__Bas                   >>
    499                           * ||___Gauche ||___Gauche                >>
    500                           * |____Droite |____Droite
    501                           *
    502                           *****************************************>>
    503                            
    504                                                                  *;>>
    505                                                                  *;>>
    506                                                                  *;>>
    507                                                                  *;>>
    508                                                                  *
    509                                                                  *;>>
    510        923B               ReadJoypads                            *R>>
    511                                                                  * >>
    512                                                                  * >>
    513                                                                  * >>
    514                                                                  * >>
    515                                                                  *
    516                                                                  *;>>
    517                                                                  *J>>
    518                                                                  * >>
    519                                                                  * >>
    520                                                                  * >>
    521                                                                  * >>
    522                                                                  * >>
    523                                                                  * >>
    524                                                                  * >>
    525                                                                  * >>
    526                                                                  * >>
    527                                                                  * >>
    528                                                                  * >>
    529  3     923B CC   E7CC             ldd   #$E7CC                   * >>
    530  2     923E 43                    coma                           * >>
    531  2     923F 53                    comb
    532                                                                  * >>
    533                                                                  * >>
    534                                                                  * >>
    535  6     9240 FD   9237             std   Joypads_Held
    536  5     9243 B8   9237             eora  Dpad_Held
    537  5     9246 F8   9238             eorb  Fire_Held
    538  5     9249 B4   9237             anda  Dpad_Held                * >>
    539  5     924C F4   9238             andb  Fire_Held
    540  6     924F FD   9239             std   Joypads_Press            * >>
    541  5     9252 39                    rts                            * >>
    542                                                                  *;>>
    543
    544
    545                                   INCLUD RUNOBJTS
    546                           * --------------------------------------->>
    547                           * This runs the code of all the objects t>>
    548                           *
    549                           * ecart par rapport au code d'origine :
    550                           * Il n'y a pas de tableau de pointeur Obj>>
    551                           * du code de l'objet
    552                           * --------------------------------------->>
    553
    554                                                                  *;>>
    555                                                                  *;>>
    556                                                                  *;>>
    557                                                                  *
    558                                                                  *;>>
    559                                                                  *
    560                                                                  *;>>
    561        9253               RunObjects                             *R>>
    562                                                                  * >>
    563                                                                  * >>
    564  4     9253 108E 825C             ldy   #Object_RAM              * >>
    565                                                                  *
    566                                                                  * >>
    567                                                                  * >>
    568                                                                  * >>
    569                                                                  * >>
    570                                                                  * >>
    571                                                                  * >>
    572        9257               RunObjects_01                          *+>>
    573                                                                  * >>
    574                                                                  * >>
    575                                                                  * >>
    576                                                                  *
    577                                                                  * >>
    578  7     9257 7D   915C             tst   Glb_MainCharacter_Is_Dead
    579  3     925A 27   10               beq   RunObjectsWhenPlayerIsDead
    580                                                                  * >>
    581                                                                  * >>
    582                                                                  *;>>
    583                                                                  *
    584                                                                  *;>>
    585                                                                  *;>>
    586                                                                  *;>>
    587                                                                  *
    588                                                                  *;>>
    589                                                                  *
    590                                                                  *;>>
    591        925C               RunObject                              *R>>
    592  5+0   925C EE   A4               ldu   ,y                       * >>
    593  3     925E 27   02               beq   RunNextObject            * >>
    594                                                                  *
    595                                                                  * >>
    596                                                                  * >>
    597                                                                  * >>
    598  7+0   9260 AD   C4               jsr   ,u                       * >>
    599                                                                  * >>
    600                                                                  *
    601                                                                  *;>>
    602        9262               RunNextObject                          *R>>
    603  4+1   9262 31   A8 50            leay  next_object,y            * >>
    604        9265               am_RunNextObject
    605  5     9265 108C 915C             cmpy  #Object_RAM_End          * >>
    606  3     9269 26   F1               bne   RunObject                *;>>
    607        926B               RunObjects_End                         *R>>
    608  5     926B 39                    rts                            * >>
    609                                                                  *
    610                                                                  *;>>
    611                                                                  *;>>
    612                                                                  *;>>
    613        926C               RunObjectsWhenPlayerIsDead             *R>>
    614                                                                  * >>
    615                                                                  * >>
    616  4     926C 108E 825C             ldy   #Reserved_Object_RAM
    617  3     9270 8E   82FC             ldx   #Reserved_Object_RAM_End
    618  6     9273 BF   9267             stx   am_RunNextObject+2
    619  7     9276 8D   E4               bsr   RunObject
    620                                                                  * >>
    621                                                                  * >>
    622  4     9278 108E 82FC             ldy   #Dynamic_Object_RAM
    623  7     927C 8D   12               bsr   RunObjectDisplayOnly
    624                                                                  * >>
    625                                                                  * >>
    626  4     927E 108E 906C             ldy   #LevelOnly_Object_RAM
    627  3     9282 8E   915C             ldx   #LevelOnly_Object_RAM_End
    628  6     9285 BF   9267             stx   am_RunNextObject+2
    629  3     9288 20   D2               bra   RunObject
    630                                                                  *
    631  3     928A 8E   915C             ldx   #Object_RAM_End          * >>
    632  6     928D BF   9267             stx   am_RunNextObject+2
    633                                                                  *;>>
    634                                                                  *
    635                                                                  *;>>
    636        9290               RunObjectDisplayOnly                   *R>>
    637                                                                  * >>
    638  5+0   9290 EE   A4               ldu   ,y                       * >>
    639  3     9292 27   06               beq   RunNextObjectDisplayOnly * >>
    640  6+1   9294 6D   22               tst   render_flags,y           * >>
    641  3     9296 2A   02               bpl   RunNextObjectDisplayOnly * >>
    642  7     9298 8D   12               bsr   DisplaySprite            * >>
    643        929A               RunNextObjectDisplayOnly               *+>>
    644  4+1   929A 31   A8 50            leay  next_object,y            * >>
    645  5     929D 108C 906C             cmpy  #Dynamic_Object_RAM_End  * >>
    646  3     92A1 26   ED               bne   RunObjectDisplayOnly
    647  5     92A3 39                    rts                            * >>
    648                                                                  *;>>
    649                                                                  *
    650                                                                  *;>>
    651
    652                                   INCLUD MRKOBJGN
    653                           * --------------------------------------->>
    654                           * MarkObjGone
    655                           * -----------
    656                           * Subroutine to destroy an object that is>>
    657                           * -- TODO --
    658                           * waiting for camera implementation
    659                           *
    660                           * input REG : none
    661                           * clear REG : none
    662                           * --------------------------------------->>
    663
    664                                                                  *;>>
    665                                                                  *;>>
    666                                                                  *;>>
    667                                                                  *
    668                                                                  *;>>
    669                                                                  *;>>
    670                                                                  *;>>
    671        92A4               MarkObjGone *@globals                  *M>>
    672                                                                  * >>
    673                                                                  * >>
    674  3     92A4 20   06               bra   DisplaySprite            * >>
    675                                                                  *+>>
    676                                                                  * >>
    677                                                                  * >>
    678                                                                  * >>
    679                                                                  * >>
    680                                                                  * >>
    681                                                                  * >>
    682                                                                  *
    683                                                                  *+>>
    684                                                                  * >>
    685                                                                  * >>
    686                                                                  * >>
    687                                                                  * >>
    688                                                                  *+>>
    689                                                                  * >>
    690
    691                                   INCLUD DISPLSPR
    692                           * --------------------------------------->>
    693                           * DisplaySprite
    694                           * -------------
    695                           * Subroutine to manage sprite priority.
    696                           * Object's priority is read and object is>>
    697                           * priority: 0 - unregistred
    698                           * priority: 1 - register non moving overl>>
    699                           * priority; 2-8 - register moving sprite >>
    700                           *
    701                           * Unlike original S2 code, sprite priorit>>
    702                           * it allows to keep an exact sprite order>>
    703                           *
    704                           * DisplaySprite
    705                           * input REG : [u] object pointer (OST)
    706                           *
    707                           * DisplaySprite_x
    708                           * input REG : [x] object pointer (OST)
    709                           * --------------------------------------->>
    710                            
    711        92A6               DisplaySprite_x *@globals
    712  5+6   92A6 34   56               pshs  d,x,u
    713  6     92A8 1F   13               tfr   x,u
    714  3     92AA 20   02               bra   DSP_Start
    715                            
    716        92AC               DisplaySprite *@globals
    717  5+6   92AC 34   56               pshs  d,x,u
    718                            
    719        92AE               DSP_Start
    720  5     92AE B6   601A             lda   Glb_Cur_Wrk_Screen_Id      >>
    721  3     92B1 26   09               bne   DSP_SetBuffer1
    722                            
    723        92B3               DSP_SetBuffer0
    724  4+1   92B3 30   C8 34            leax  rsv_buffer_0,u             >>
    725  7     92B6 10BE 80A8             ldy   DPS_buffer_0               >>
    726  3     92BA 20   07               bra   DSP_BufferPositionned
    727                            
    728        92BC               DSP_SetBuffer1
    729  4+1   92BC 30   C8 42            leax  rsv_buffer_1,u             >>
    730  7     92BF 10BE 8128             ldy   DPS_buffer_1               >>
    731                            
    732        92C3               DSP_BufferPositionned
    733  4+1   92C3 A6   43               lda   priority,u                 >>
    734  4+1   92C5 A1   00               cmpa  buf_priority,x
    735  3     92C7 27   46               beq   DSP_rts                    >>
    736  4+1   92C9 E6   00               ldb   buf_priority,x
    737  3     92CB 26   31               bne   DSP_ChangePriority
    738                            
    739        92CD               DSP_InitPriority
    740  4+1   92CD A7   00               sta   buf_priority,x             >>
    741                            
    742        92CF               DSP_CheckLastEntry
    743  4+1   92CF 31   A8 12            leay  buf_Tbl_Priority_Last_Entry>>
    744  6+1   92D2 6D   A6               tst   a,y                        >>
    745  3     92D4 26   0F               bne   DSP_addToExistingNode      >>
    746                            
    747        92D6               DSP_addFirstNode
    748  5+1   92D6 EF   A6               stu   a,y                        >>
    749  4+1   92D8 31   A8 EE            leay  buf_Tbl_Priority_First_Entr>>
    750  5+1   92DB EF   A6               stu   a,y                        >>
    751  5     92DD DC   00               ldd   0
    752  5+1   92DF ED   01               std   buf_priority_prev_obj,x    >>
    753  5+1   92E1 ED   03               std   buf_priority_next_obj,x
    754  3     92E3 20   2A               bra   DSP_rts
    755                            
    756        92E5               DSP_addToExistingNode
    757  5+4   92E5 AE   B6               ldx   [a,y]                      >>
    758  5     92E7 F6   601A             ldb   Glb_Cur_Wrk_Screen_Id
    759  3     92EA 26   05               bne   DSP_LinkBuffer1
    760  5+1   92EC EF   88 37            stu   rsv_priority_next_obj_0,x  >>
    761  3     92EF 20   03               bra   DSP_LinkCurWithPrev
    762        92F1               DSP_LinkBuffer1
    763  5+1   92F1 EF   88 45            stu   rsv_priority_next_obj_1,x  >>
    764                            
    765        92F4               DSP_LinkCurWithPrev
    766  5+1   92F4 AF   41               stx   buf_priority_prev_obj,u    >>
    767  5+1   92F6 EF   A6               stu   a,y                        >>
    768  5     92F8 DC   00               ldd   0
    769  5+1   92FA ED   03               std   buf_priority_next_obj,x    >>
    770  3     92FC 20   11               bra   DSP_rts
    771                            
    772        92FE               DSP_ChangePriority
    773  4+1   92FE 31   A8 24            leay  buf_Lst_Priority_Unset,y
    774  5+3   9301 EF   B4               stu   [,y]                       >>
    775  4+1   9303 31   22               leay  2,y
    776  6+0   9305 10AF A4               sty   ,y                         >>
    777  4+1   9308 31   A8 DA            leay  -buf_Lst_Priority_Unset-2,y>>
    778  4     930B 91   00               cmpa  0
    779  3     930D 26   C0               bne   DSP_CheckLastEntry         >>
    780
    781        930F               DSP_rts
    782  5+8   930F 35   D6               puls  d,x,u,pc
    783                            
    784                                                                  *;>>
    785                                                                  *;>>
    786                                                                  *;>>
    787                                                                  *
    788                                                                  *;>>
    789                                                                  *
    790                                                                  *;>>
    791                                                                  *D>>
    792                                                                  * >>
    793                                                                  * >>
    794                                                                  * >>
    795                                                                  * >>
    796                                                                  * >>
    797                            
    798                                                                  * >>
    799                                                                  * >>
    800                                                                  * >>
    801                            
    802                                                                  * >>
    803                                                                  * >>
    804                                                                  *
    805                                                                  *r>>
    806                            
    807                                                                  * >>
    808                                                                  *;>>
    809
    810                                   INCLUD ANIMSPR
    811                           * --------------------------------------->>
    812                           * Subroutine to animate a sprite using an>>
    813                           *
    814                           *   this function also change render flag>>
    815                           *   the status byte;
    816                           *
    817                           * input REG : [u] pointeur sur l'objet
    818                           *
    819                           * --------------------------------------->>
    820
    821                  00FF     resetAnim              equ $FF
    822                  00FE     goBackNFrames          equ $FE ; followed>>
    823                  00FD     goToAnimation          equ $FD ; followed>>
    824                  00FC     nextRoutine            equ $FC
    825                  00FB     resetAnimAndSubRoutine equ $FB
    826                  00FA     nextSubRoutine         equ $FA
    827
    828                                                                    >>
    829                                                                    >>
    830                                                                    >>
    831                                                                    >>
    832                                                                    >>
    833                                                                    >>
    834                                                                    >>
    835        9311               AnimateSprite                            >>
    836                                                                    >>
    837  5+1   9311 AE   44               ldx   anim,u                     >>
    838  6+1   9313 AC   46               cmpx  prev_anim,u                >>
    839  3     9315 27   08               beq   Anim_Run                   >>
    840  5+1   9317 AF   46               stx   prev_anim,u                >>
    841  2     9319 C6   00                     ldb   #0
    842  4+1   931B E7   48               stb   anim_frame,u               >>
    843  4+1   931D E7   49               stb   anim_frame_duration,u      >>
    844                                                                    >>
    845        931F               Anim_Run                                 >>
    846  6+1   931F 6A   49               dec   anim_frame_duration,u      >>
    847  3     9321 2A   24               bpl   Anim_Wait                  >>
    848                                   * no offset table                >>
    849                                   * anim is the address of anim    >>
    850  4+0   9323 E6   84               ldb   ,x
    851  4+1   9325 E7   49                     stb   anim_frame_duration,u>>
    852                                                                    >>
    853  4+1   9327 E6   48               ldb   anim_frame,u               >>
    854  2     9329 5C                    incb
    855  2     932A 58                    aslb
    856  4+1   932B 31   85               leay  b,x
    857  5+0   932D EC   A4               ldd   ,y                         >>
    858                                   * bmi   Anim_End_FF              >>
    859  2     932F 81   FA                     cmpa  #$FA                 >>
    860  3     9331 24   15                     bhs   Anim_End_FF          >>
    861                                                                    >>
    862        9333               Anim_Next                                >>
    863                                      * ne pas utiliser             >>
    864  5+1   9333 ED   4A               std   mapping_frame,u            >>
    865  4+1   9335 E6   C8 1A            ldb   status,u                   >>
    866  2     9338 C4   03               andb  #status_x_orientation+statu>>
    867  5     933A F7   9342             stb   Anim_dyn+1
    868                                                                    >>
    869  4+1   933D A6   42               lda   render_flags,u             >>
    870  2     933F 84   FC               anda  #:(render_xmirror_mask+rend>>
    871        9341               Anim_dyn
    872  2     9341 8A   00               ora   #$00                       >>
    873                                                                    >>
    874  4+1   9343 A7   42               sta   render_flags,u
    875  6+1   9345 6C   48               inc   anim_frame,u               >>
    876                                                                    >>
    877        9347               Anim_Wait                                >>
    878  5     9347 39                    rts                              >>
    879                                                                    >>
    880                                                                    >>
    881        9348               Anim_End_FF                              >>
    882  2     9348 4C                    inca                             >>
    883  3     9349 26   08               bne   Anim_End_FE                >>
    884  2     934B C6   00                     ldb   #0
    885  4+1   934D E7   48               stb   anim_frame,u               >>
    886  5+1   934F EC   01               ldd   1,x                        >>
    887  3     9351 20   E0               bra   Anim_Next                  >>
    888                                                                    >>
    889                                                                    >>
    890        9353               Anim_End_FE                              >>
    891  2     9353 4C                    inca                             >>
    892  3     9354 26   0E               bne   Anim_End_FD                >>
    893  4+1   9356 A6   48               lda   anim_frame,u
    894  5     9358 F7   935C             stb   Anim_End_FE_dyn+1          >>
    895        935B               Anim_End_FE_dyn
    896  2     935B 80   00               suba  #$00                       >>
    897  4+1   935D A7   48               sta   anim_frame,u               >>
    898                                                                    >>
    899  2     935F 48                    asla
    900  5+1   9360 EC   86               ldd   a,x                        >>
    901  3     9362 20   CF               bra   Anim_Next                  >>
    902                                                                    >>
    903                                                                    >>
    904        9364               Anim_End_FD                              >>
    905  2     9364 4C                    inca                             >>
    906  3     9365 26   05               bne   Anim_End_FC                >>
    907  5+1   9367 EC   21               ldd   1,y                        >>
    908  5+1   9369 ED   44               std   anim,u                     >>
    909  5     936B 39                    rts                              >>
    910                                                                    >>
    911                                                                    >>
    912        936C               Anim_End_FC                              >>
    913  2     936C 4C                    inca                             >>
    914  3     936D 26   0D               bne   Anim_End_FB                >>
    915  6+1   936F 6C   C8 18            inc   routine,u
    916  6+1   9372 6C   C8 18            inc   routine,u                  >>
    917  2     9375 86   00               lda   #0
    918  4+1   9377 A7   49               sta   anim_frame_duration,u      >>
    919  6+1   9379 6C   48               inc   anim_frame,u               >>
    920  5     937B 39                    rts                              >>
    921                                                                    >>
    922                                                                    >>
    923        937C               Anim_End_FB                              >>
    924  2     937C 4C                    inca                             >>
    925  3     937D 26   08               bne   Anim_End_FA                >>
    926  2     937F 86   00               lda   #0
    927  4+1   9381 A7   48               sta   anim_frame,u               >>
    928  4+1   9383 A7   C8 19            sta   routine_secondary,u        >>
    929  5     9386 39                    rts                              >>
    930                                                                    >>
    931                                                                    >>
    932        9387               Anim_End_FA                              >>
    933  2     9387 4C                    inca                             >>
    934  3     9388 26   06               bne   Anim_End                   >>
    935  6+1   938A 6C   C8 19            inc   routine_secondary,u        >>
    936  6+1   938D 6C   C8 19            inc   routine_secondary,u
    937        9390               Anim_End
    938  5     9390 39                    rts                              >>
    939                                                                    >>
    940                                                                    >>
    941                                                                    >>
    942                                                                    >>
    943                                                                    >>
    944                                                                    >>
    945                                                                    >>
    946                                                                    >>
    947                                                                    >>
    948                                                                    >>
    949
    950                                   INCLUD OBJMOVE
    951                           * --------------------------------------->>
    952                           * Subroutine translating object speed to >>
    953                           * This moves the object horizontally and >>
    954                           * but does not apply gravity to it
    955                           * --------------------------------------->>
    956
    957                                                                  *;>>
    958                                                                  *;>>
    959                                                                  *;>>
    960                                                                  *;>>
    961                                                                  *;>>
    962                                                                  *
    963                                                                  *;>>
    964                                                                  *
    965                                                                  *;>>
    966        9391               ObjectMove                             *O>>
    967                                                                  * >>
    968                                                                  * >>
    969                                                                  * >>
    970                                                                  * >>
    971                                                                  * >>
    972                                                                  * >>
    973  4+1   9391 E6   C8 14            ldb   x_vel,u
    974  2     9394 1D                    sex                            ; >>
    975  5     9395 B7   93A2             sta   am_ObjectMove_01+1
    976  5+1   9398 EC   C8 14            ldd   x_vel,u
    977  6+1   939B E3   4D               addd  x_pos+1,u                ; >>
    978  5+1   939D ED   4D               std   x_pos+1,u                ; >>
    979  4+1   939F A6   4C               lda   x_pos,u
    980        93A1               am_ObjectMove_01
    981  2     93A1 89   00               adca  #$00                     ; >>
    982  4+1   93A3 A7   4C               sta   x_pos,u                  ; >>
    983                            
    984                                                                  * >>
    985                                                                  * >>
    986                                                                  * >>
    987                                                                  * >>
    988                                                                  * >>
    989                                                                  * >>
    990  4+1   93A5 E6   C8 16            ldb   y_vel,u
    991  2     93A8 1D                    sex                            ; >>
    992  5     93A9 B7   93B8             sta   am_ObjectMove_02+1
    993  5+1   93AC EC   C8 16            ldd   y_vel,u
    994  6+1   93AF E3   C8 10            addd  y_pos+1,u                ; >>
    995  5+1   93B2 ED   C8 10            std   y_pos+1,u                ; >>
    996  4+1   93B5 A6   4F               lda   y_pos,u
    997        93B7               am_ObjectMove_02
    998  2     93B7 89   00               adca  #$00                     ; >>
    999  4+1   93B9 A7   4F               sta   y_pos,u                  ; >>
   1000  5     93BB 39                    rts                            * >>
   1001                                                                  *;>>
   1002                                                                  *;>>
   1003
   1004                                   INCLUD OBJLOAD
   1005                           * --------------------------------------->>
   1006                           * Single object loading subroutine
   1007                           * Find an empty object array
   1008                           *
   1009                           * input  REG : [u] pointeur sur l'objet c>>
   1010                           * output REG : [x] pointeur sur l'objet l>>
   1011                           * --------------------------------------->>
   1012
   1013                                                                  *;>>
   1014                                                                  *;>>
   1015                                                                  *;>>
   1016                                                                  *;>>
   1017                                                                  *;>>
   1018                                                                  *
   1019                                                                  *;>>
   1020                                                                  *S>>
   1021                                                                  * >>
   1022                                                                  * >>
   1023                                                                  * >>
   1024                                                                  * >>
   1025                                                                  * >>
   1026                                                                  *
   1027                                                                  */>>
   1028                                                                  * >>
   1029                                                                  * >>
   1030                                                                  * >>
   1031                                                                  * >>
   1032                                                                  *
   1033                                                                  *r>>
   1034                                                                  * >>
   1035                                                                  *;>>
   1036                                                                  *;>>
   1037                                                                  *;>>
   1038                                                                  *;>>
   1039                                                                  *;>>
   1040                                                                  *
   1041                                                                  *;>>
   1042                                                                  *
   1043                                                                  *;>>
   1044        93BC               SingleObjLoad2                         *S>>
   1045  6     93BC 1F   31               tfr   u,x                      * >>
   1046  4+1   93BE 30   88 50            leax  next_object,x            * >>
   1047  4     93C1 8C   906C             cmpx  #Dynamic_Object_RAM_End  * >>
   1048  3     93C4 27   0C               beq   SingleObjLoad2_02        * >>
   1049                                                                  * >>
   1050                                                                  * >>
   1051                                                                  * >>
   1052                                                                  * >>
   1053                                                                  * >>
   1054                                                                  * >>
   1055                                                                  * >>
   1056                                                                  * >>
   1057                                                                  *
   1058        93C6               SingleObjLoad2_01                      *->>
   1059  6+0   93C6 6D   84               tst   ,x                       * >>
   1060  3     93C8 27   08               beq   SingleObjLoad2_02        * >>
   1061  4+1   93CA 30   88 50            leax  next_object,x            * >>
   1062  4     93CD 8C   906C             cmpx  #Dynamic_Object_RAM_End
   1063  3     93D0 26   F4               bne   SingleObjLoad2_01        * >>
   1064                                                                  *
   1065        93D2               SingleObjLoad2_02                      *r>>
   1066  5     93D2 39                    rts                            * >>
   1067                                                                  *
   1068                                                                  * >>
   1069                                                                  *+>>
   1070                                                                  *.>>
   1071                                                                  *.>>
   1072                                                                  *
   1073                                                                  * >>
   1074                                                                  * >>
   1075                                                                  * >>
   1076                                                                  * >>
   1077                                                                  * >>
   1078                                                                  * >>
   1079                                                                  *
   1080                                                                  *.>>
   1081                                                                  *.>>
   1082                                                                  * >>
   1083                                                                  * >>
   1084                                                                  * >>
   1085                                                                  *;>>
   1086                                                                  *;>>
   1087                                                                  *;>>
   1088                                                                  *;>>
   1089                                                                  *;>>
   1090                                                                  *
   1091                                                                  *;>>
   1092                                                                  *
   1093                                                                  *;>>
   1094                                                                  *S>>
   1095                                                                  * >>
   1096                                                                  * >>
   1097                                                                  *
   1098                                                                  *->>
   1099                                                                  * >>
   1100                                                                  * >>
   1101                                                                  * >>
   1102                                                                  * >>
   1103                                                                  *
   1104                                                                  *r>>
   1105                                                                  * >>
   1106                                                                  *;>>
   1107
   1108
   1109                                   INCLUD DELETOBJ
   1110                           * --------------------------------------->>
   1111                           * DeleteObject
   1112                           * ------------
   1113                           * Subroutine to delete an object.
   1114                           * If the object is rendered as a sprite i>>
   1115                           * routine
   1116                           *
   1117                           * DeleteObject
   1118                           * input REG : [u] object pointer (OST)
   1119                           *
   1120                           * DeleteObject_x
   1121                           * input REG : [x] object pointer (OST)
   1122                           * --------------------------------------->>
   1123
   1124                                                                  *;>>
   1125                                                                  *;>>
   1126                                                                  *;>>
   1127                                                                  *
   1128                                                                  *;>>
   1129                                                                  *
   1130                                                                  *;>>
   1131        93D3               DeleteObject_x *@globals               *D>>
   1132  5+6   93D3 34   56               pshs  d,x,u                    * >>
   1133  6     93D5 1F   13               tfr   x,u                      *;>>
   1134  3     93D7 20   02               bra   DOB_Start
   1135        93D9               DeleteObject *@globals                 *D>>
   1136  5+6   93D9 34   56               pshs  d,x,u
   1137        93DB               DOB_Start
   1138  4+1   93DB A6   C8 41            lda   rsv_onscreen_0,u
   1139  3     93DE 27   1B               beq   DOB_TestOnscreen1Delete  ; >>
   1140                            
   1141        93E0               DOB_Unset0
   1142  6     93E0 BE   80CC             ldx   Lst_Priority_Unset_0     ; >>
   1143  5+0   93E3 EF   84               stu   ,x
   1144  4+1   93E5 30   02               leax  2,x
   1145  6     93E7 BF   80CC             stx   Lst_Priority_Unset_0
   1146                            
   1147        93EA               DOB_TestOnscreen1
   1148  4+1   93EA A6   C8 4F            lda   rsv_onscreen_1,u
   1149  3     93ED 27   16               beq   DOB_ToDeleteFlag         ; >>
   1150                            
   1151        93EF               DOB_Unset1
   1152  6     93EF BE   814C             ldx   Lst_Priority_Unset_1     ; >>
   1153  5+0   93F2 EF   84               stu   ,x
   1154  4+1   93F4 30   02               leax  2,x
   1155  6     93F6 BF   814C             stx   Lst_Priority_Unset_1
   1156  3     93F9 20   0A               bra  DOB_ToDeleteFlag
   1157                            
   1158        93FB               DOB_TestOnscreen1Delete
   1159  4+1   93FB A6   C8 4F            lda   rsv_onscreen_1,u
   1160  3     93FE 26   EF               bne   DOB_Unset1               ; >>
   1161
   1162  8     9400 BD   940D             jsr   ClearObj                 ; >>
   1163  3     9403 20   06               bra   DOB_rts
   1164                                                                  * >>
   1165                                                                  *
   1166                                                                  * >>
   1167                                                                  * >>
   1168                                                                  *->>
   1169                                                                  * >>
   1170                                                                  * >>
   1171                                                                  * >>
   1172                                                                  * >>
   1173                                                                  *
   1174        9405               DOB_ToDeleteFlag
   1175  4+1   9405 A6   42               lda   render_flags,u
   1176  4     9407 9A   20               ora   render_todelete_mask
   1177  4+1   9409 A7   42               sta   render_flags,u           ; >>
   1178                            
   1179        940B               DOB_rts
   1180  5+8   940B 35   D6               puls  d,x,u,pc                 * >>
   1181                                                                  *;>>
   1182
   1183                                   INCLUD CLEAROBJ
   1184                           * --------------------------------------->>
   1185                           * ClearObj
   1186                           * --------
   1187                           * Subroutine to clear an object data in O>>
   1188                           *
   1189                           * input REG : [u] pointer on objet (OST)
   1190                           * clear REG : [d,y]
   1191                           * --------------------------------------->>
   1192
   1193        940D               ClearObj *@globals
   1194  7     940D 10FF 9437             sts   CLO_1+2
   1195  6     9411 BF   943B             stx   CLO_2+2
   1196  3     9414 CC   0000             ldd   #$0000
   1197  3     9417 8E   0000             ldx   #$0000
   1198  4+0   941A 31   84               leay  ,x
   1199  4+0   941C 32   84               leas  ,x
   1200  4+1   941E 33   C8 50            leau  object_size,u
   1201  5+8   9421 36   76               pshu  d,x,y,s
   1202  5+8   9423 36   76               pshu  d,x,y,s
   1203  5+8   9425 36   76               pshu  d,x,y,s
   1204  5+8   9427 36   76               pshu  d,x,y,s
   1205  5+8   9429 36   76               pshu  d,x,y,s
   1206  5+8   942B 36   76               pshu  d,x,y,s
   1207  5+8   942D 36   76               pshu  d,x,y,s
   1208  5+8   942F 36   76               pshu  d,x,y,s
   1209  5+8   9431 36   76               pshu  d,x,y,s
   1210  5+8   9433 36   76               pshu  d,x,y,s
   1211        9435               CLO_1
   1212  4     9435 10CE 0000             lds   #$0000
   1213        9439               CLO_2
   1214  3     9439 8E   0000             ldx   #$0000
   1215  5     943C 39                    rts
   1216
   1217                                   INCLUD CHECKSPR
   1218                           * --------------------------------------->>
   1219                           * CheckSpritesRefresh
   1220                           * -------------------
   1221                           * Subroutine to determine if sprites are >>
   1222                           * Read Display Priority Structure (back t>>
   1223                           * priority: 0 - unregistred
   1224                           * priority: 1 - register non moving overl>>
   1225                           * priority; 2-8 - register moving sprite >>
   1226                           *
   1227                           * input REG : none
   1228                           * --------------------------------------->>
   1229
   1230        943D 0000          cur_priority            fdb   $00
   1231        943F 0000          cur_ptr_sub_obj_erase   fdb   $0000
   1232        9441 0000          cur_ptr_sub_obj_draw    fdb   $0000
   1233                            
   1234        9443               CheckSpritesRefresh
   1235
   1236        9443               CSR_Start
   1237  3     9443 CC   81A8             ldd   #Tbl_Sub_Object_Erase
   1238  6     9446 FD   943F             std   cur_ptr_sub_obj_erase
   1239  3     9449 CC   8202             ldd   #Tbl_Sub_Object_Draw
   1240  6     944C FD   9441             std   cur_ptr_sub_obj_draw
   1241  5     944F B6   601A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1242  3     9452 26   60               bne   CSR_SetBuffer1
   1243                            
   1244        9454               CSR_SetBuffer0
   1245  4     9454 96   34               lda   rsv_buffer_0               >>
   1246  5     9456 B7   9516             sta   CSR_ProcessEachPriorityLeve>>
   1247        9459               CSR_P8B0
   1248  6     9459 FE   80B6             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1249  3     945C 27   08               beq   CSR_P7B0
   1250  2     945E 86   08               lda   #$08
   1251  5     9460 B7   943D             sta   cur_priority
   1252  8     9463 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1253        9466               CSR_P7B0
   1254  6     9466 FE   80B4             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1255  3     9469 27   06               beq   CSR_P6B0
   1256  7     946B 7A   943D             dec   cur_priority
   1257  8     946E BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1258        9471               CSR_P6B0
   1259  6     9471 FE   80B2             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1260  3     9474 27   06               beq   CSR_P5B0
   1261  7     9476 7A   943D             dec   cur_priority
   1262  8     9479 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1263        947C               CSR_P5B0
   1264  6     947C FE   80B0             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1265  3     947F 27   06               beq   CSR_P4B0
   1266  7     9481 7A   943D             dec   cur_priority
   1267  8     9484 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1268        9487               CSR_P4B0
   1269  6     9487 FE   80AE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1270  3     948A 27   06               beq   CSR_P3B0
   1271  7     948C 7A   943D             dec   cur_priority
   1272  8     948F BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1273        9492               CSR_P3B0
   1274  6     9492 FE   80AC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1275  3     9495 27   06               beq   CSR_P2B0
   1276  7     9497 7A   943D             dec   cur_priority
   1277  8     949A BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1278        949D               CSR_P2B0
   1279  6     949D FE   80AA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1280  3     94A0 27   06               beq   CSR_P1B0
   1281  7     94A2 7A   943D             dec   cur_priority
   1282  8     94A5 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1283        94A8               CSR_P1B0
   1284  6     94A8 FE   80A8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1285  3     94AB 27   06               beq   CSR_rtsB0
   1286  7     94AD 7A   943D             dec   cur_priority
   1287  8     94B0 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1288        94B3               CSR_rtsB0
   1289  5     94B3 39                    rts
   1290                            
   1291        94B4               CSR_SetBuffer1
   1292  4     94B4 96   42               lda   rsv_buffer_1               >>
   1293  5     94B6 B7   9516             sta   CSR_ProcessEachPriorityLeve>>
   1294        94B9               CSR_P8B1
   1295  6     94B9 FE   8136             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1296  3     94BC 27   08               beq   CSR_P7B1
   1297  2     94BE 86   08               lda   #$08
   1298  5     94C0 B7   943D             sta   cur_priority
   1299  8     94C3 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1300        94C6               CSR_P7B1
   1301  6     94C6 FE   8134             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1302  3     94C9 27   06               beq   CSR_P6B1
   1303  7     94CB 7A   943D             dec   cur_priority
   1304  8     94CE BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1305        94D1               CSR_P6B1
   1306  6     94D1 FE   8132             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1307  3     94D4 27   06               beq   CSR_P5B1
   1308  7     94D6 7A   943D             dec   cur_priority
   1309  8     94D9 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1310        94DC               CSR_P5B1
   1311  6     94DC FE   8130             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1312  3     94DF 27   06               beq   CSR_P4B1
   1313  7     94E1 7A   943D             dec   cur_priority
   1314  8     94E4 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1315        94E7               CSR_P4B1
   1316  6     94E7 FE   812E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1317  3     94EA 27   06               beq   CSR_P3B1
   1318  7     94EC 7A   943D             dec   cur_priority
   1319  8     94EF BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1320        94F2               CSR_P3B1
   1321  6     94F2 FE   812C             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1322  3     94F5 27   06               beq   CSR_P2B1
   1323  7     94F7 7A   943D             dec   cur_priority
   1324  8     94FA BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1325        94FD               CSR_P2B1
   1326  6     94FD FE   812A             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1327  3     9500 27   06               beq   CSR_P1B1
   1328  7     9502 7A   943D             dec   cur_priority
   1329  8     9505 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1330        9508               CSR_P1B1
   1331  6     9508 FE   8128             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1332  3     950B 27   06               beq   CSR_rtsB1
   1333  7     950D 7A   943D             dec   cur_priority
   1334  8     9510 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1335        9513               CSR_rtsB1
   1336  5     9513 39                    rts
   1337
   1338        9514               CSR_ProcessEachPriorityLevel
   1339  4+1   9514 30   C8 10            leax  16,u                       >>
   1340  4+1   9517 A6   C8 29            lda   rsv_render_flags,u
   1341  2     951A 84   01               anda  #rsv_render_checkrefresh_ma>>
   1342  6     951C 1026 00A5             lbne  CSR_CheckErase
   1343                            
   1344        9520               CSR_CheckDelHide
   1345  4+1   9520 A6   42               lda   render_flags,u
   1346  2     9522 84   28               anda  #render_hide_mask!render_to>>
   1347  3     9524 26   5A               bne   CSR_DoNotDisplaySprite
   1348
   1349        9526               CSR_UpdSpriteImageBasedOnMirror
   1350  4+1   9526 A6   C8 29            lda   rsv_render_flags,u
   1351  2     9529 8A   01               ora   #rsv_render_checkrefresh_ma>>
   1352  4+1   952B A7   C8 29            sta   rsv_render_flags,u         >>
   1353  4+1   952E A6   42               lda   render_flags,u             >>
   1354  2     9530 84   03               anda  #render_xmirror_mask!render>>
   1355  2     9532 C6   10               ldb   #image_meta_size
   1356  11    9534 3D                    mul
   1357  6+1   9535 E3   4A               addd  mapping_frame,u
   1358  5+1   9537 ED   C8 2C            std   rsv_curr_mapping_frame,u
   1359                            
   1360        953A               CSR_CheckPlayFieldCoord
   1361  4+1   953A A6   42               lda   render_flags,u
   1362  2     953C 84   04               anda  #render_playfieldcoord_mask>>
   1363  3     953E 27   66               beq   CSR_CheckVerticalPosition  >>
   1364                            
   1365  5+1   9540 EC   4C               ldd   x_pos,u
   1366  7     9542 B3   601C             subd  Glb_Camera_X_Pos
   1367  6+1   9545 10AE C8 2C            ldy   rsv_curr_mapping_frame,u
   1368  6+1   9549 E3   2A               addd  image_x_offset,y
   1369  3     954B 29   70               bvs   CSR_SetOutOfRange          >>
   1370  3     954D 2B   6E               bmi   CSR_SetOutOfRange          >>
   1371  4+1   954F E7   C8 12            stb   x_pixel,u
   1372  4+1   9552 EB   2E               addb  image_x_size,y
   1373  3     9554 29   67               bvs   CSR_SetOutOfRange          >>
   1374  4+1   9556 E7   C8 32            stb   rsv_x2_pixel,u
   1375  2     9559 C1   A0               cmpb  #screen_width
   1376  3     955B 2E   60               bgt   CSR_SetOutOfRange          >>
   1377
   1378  5+1   955D EC   4F               ldd   y_pos,u
   1379  7     955F B3   601E             subd  Glb_Camera_Y_Pos
   1380  6+1   9562 E3   2C               addd  image_y_offset,y
   1381  3     9564 29   57               bvs   CSR_SetOutOfRange          >>
   1382  3     9566 2B   55               bmi   CSR_SetOutOfRange          >>
   1383  4+1   9568 E7   C8 13            stb   y_pixel,u
   1384  4+1   956B EB   2F               addb  image_y_size,y
   1385  3     956D 29   4E               bvs   CSR_SetOutOfRange          >>
   1386  4+1   956F E7   C8 33            stb   rsv_y2_pixel,u
   1387  2     9572 C1   C8               cmpb  #screen_height
   1388  3     9574 2E   47               bgt   CSR_SetOutOfRange          >>
   1389  4+1   9576 A6   C8 29            lda   rsv_render_flags,u
   1390  2     9579 84   F7               anda  #:rsv_render_outofrange_mas>>
   1391  4+1   957B A7   C8 29            sta   rsv_render_flags,u
   1392  3     957E 20   45               bra   CSR_CheckErase
   1393                            
   1394        9580               CSR_DoNotDisplaySprite
   1395  4+1   9580 A6   C8 29            lda   rsv_render_flags,u
   1396  2     9583 84   F9               anda  #:rsv_render_erasesprite_ma>>
   1397  4+1   9585 A7   C8 29            sta   rsv_render_flags,u
   1398  4+1   9588 E6   0D               ldb   buf_onscreen,x
   1399  3     958A 27   13               beq   CSR_NextObject             >>
   1400  2     958C 8A   02               ora   #rsv_render_erasesprite_mas>>
   1401  4+1   958E A7   C8 29            sta   rsv_render_flags,u
   1402                            
   1403  7     9591 10BE 943F             ldy   cur_ptr_sub_obj_erase
   1404  6+1   9595 10AF C8 2E            sty   rsv_ptr_sub_object_erase,u
   1405  5+3   9599 EF   A1               stu   ,y++
   1406  7     959B 10BF 943F             sty   cur_ptr_sub_obj_erase
   1407                            
   1408        959F               CSR_NextObject
   1409  5+1   959F EE   03               ldu   buf_priority_next_obj,x
   1410  6     95A1 1026 FF6F             lbne  CSR_ProcessEachPriorityLeve>>
   1411  5     95A5 39                    rts
   1412
   1413        95A6               CSR_CheckVerticalPosition
   1414  4+1   95A6 E6   C8 13            ldb   y_pixel,u                  >>
   1415  6+1   95A9 E3   2F               addd  image_y_size,y
   1416  3     95AB 29   10               bvs   CSR_SetOutOfRange          >>
   1417  5     95AD 1083 00C8             cmpd  #screen_height
   1418  3     95B1 2E   0A               bgt   CSR_SetOutOfRange          >>
   1419  4+1   95B3 A6   C8 29            lda   rsv_render_flags,u
   1420  2     95B6 84   F7               anda  #:rsv_render_outofrange_mas>>
   1421  4+1   95B8 A7   C8 29            sta   rsv_render_flags,u
   1422  3     95BB 20   08               bra   CSR_CheckErase
   1423                            
   1424        95BD               CSR_SetOutOfRange
   1425  4+1   95BD A6   C8 29            lda   rsv_render_flags,u
   1426  2     95C0 8A   08               ora   #rsv_render_outofrange_mask>>
   1427  4+1   95C2 A7   C8 29            sta   rsv_render_flags,u
   1428
   1429        95C5               CSR_CheckErase
   1430  4+1   95C5 A6   00               lda   buf_priority,x
   1431  5     95C7 B1   943D             cmpa  cur_priority
   1432  3     95CA 26   36               bne   CSR_CheckDraw
   1433                            
   1434  7     95CC 10BE 943F             ldy   cur_ptr_sub_obj_erase
   1435  6+1   95D0 10AF C8 2E            sty   rsv_ptr_sub_object_erase,u
   1436                            
   1437  4+1   95D4 A6   0D               lda   buf_onscreen,x
   1438  3     95D6 27   25               beq   CSR_SetEraseFalse          >>
   1439  5+1   95D8 EC   C8 12            ldd   x_pixel,u                  >>
   1440  7+1   95DB 10A3 09               cmpd  buf_prev_x_pixel,x
   1441  3     95DE 26   10               bne   CSR_SetEraseTrue           >>
   1442  5+1   95E0 EC   C8 2C            ldd   rsv_curr_mapping_frame,u
   1443  7+1   95E3 10A3 05               cmpd  buf_prev_mapping_frame,x
   1444  3     95E6 26   08               bne   CSR_SetEraseTrue           >>
   1445  4+1   95E8 A6   43               lda   priority,u
   1446  4+1   95EA A1   00               cmpa  buf_priority,x
   1447  3     95EC 26   02               bne   CSR_SetEraseTrue           >>
   1448  3     95EE 20   0D               bra   CSR_SetEraseFalse          >>
   1449                            
   1450        95F0               CSR_SetEraseTrue
   1451  4+1   95F0 A6   C8 29            lda   rsv_render_flags,u
   1452  2     95F3 8A   02               ora   #rsv_render_erasesprite_mas>>
   1453                            
   1454  5+3   95F5 EF   A1               stu   ,y++
   1455  7     95F7 10BF 943F             sty   cur_ptr_sub_obj_erase
   1456                            
   1457  3     95FB 20   05               bra   CSR_CheckDraw
   1458                            
   1459        95FD               CSR_SetEraseFalse
   1460  4+1   95FD A6   C8 29            lda   rsv_render_flags,u
   1461  2     9600 84   FD               anda  #:rsv_render_erasesprite_ma>>
   1462                            
   1463        9602               CSR_CheckDraw
   1464  4+1   9602 A6   43               lda   priority,u
   1465  5     9604 B1   943D             cmpa  cur_priority
   1466  3     9607 26   96               bne   CSR_NextObject
   1467                            
   1468  7     9609 10BE 9441             ldy   cur_ptr_sub_obj_draw
   1469  6+1   960D 10AF C8 30            sty   rsv_ptr_sub_object_draw,u
   1470                            
   1471  4+1   9611 A6   C8 29            lda   rsv_render_flags,u
   1472  2     9614 84   08               anda  #rsv_render_outofrange_mask>>
   1473  3     9616 26   1D               bne   CSR_SetDrawFalse           >>
   1474  5+1   9618 EC   C8 2C            ldd   rsv_curr_mapping_frame,u
   1475  3     961B 27   18               beq   CSR_SetDrawFalse           >>
   1476  4     961D 96   02               lda   render_flags
   1477  2     961F 84   08               anda  #render_hide_mask
   1478  3     9621 26   12               bne   CSR_SetDrawFalse           >>
   1479                            
   1480        9623               CSR_SetDrawTrue
   1481  4+1   9623 A6   C8 29            lda   rsv_render_flags,u
   1482  2     9626 8A   04               ora   #rsv_render_displaysprite_m>>
   1483                            
   1484  5+3   9628 EF   A1               stu   ,y++
   1485  7     962A 10BF 9441             sty   cur_ptr_sub_obj_draw
   1486                            
   1487  5+1   962E EE   03               ldu   buf_priority_next_obj,x
   1488  6     9630 1026 FEE0             lbne   CSR_ProcessEachPriorityLev>>
   1489  5     9634 39                    rts
   1490
   1491        9635               CSR_SetDrawFalse
   1492  4+1   9635 A6   C8 29            lda   rsv_render_flags,u
   1493  2     9638 84   FB               anda  #:rsv_render_displaysprite_>>
   1494                            
   1495  5+1   963A EE   03               ldu   buf_priority_next_obj,x
   1496  6     963C 1026 FED4             lbne   CSR_ProcessEachPriorityLev>>
   1497  5     9640 39                    rts
   1498
   1499
   1500                                   INCLUD ERASESPR
   1501                           * --------------------------------------->>
   1502                           * EraseSprites
   1503                           * ------------
   1504                           * Subroutine to erase sprites on screen
   1505                           * Read Display Priority Structure (front >>
   1506                           * priority: 0 - unregistred
   1507                           * priority: 1 - register non moving overl>>
   1508                           * priority; 2-8 - register moving sprite >>
   1509                           *
   1510                           * input REG : none
   1511                           * --------------------------------------->>
   1512                            
   1513        9641               EraseSprites
   1514
   1515        9641               ESP_Start
   1516  5     9641 B6   601A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1517  3     9644 26   5B               bne   ESP_P1B1
   1518                            
   1519        9646               ESP_P1B0
   1520  6     9646 FE   80BA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1521  3     9649 27   08               beq   ESP_P2B0
   1522  2     964B 86   01               lda   #$01
   1523  5     964D B7   970E             sta   ESP_CheckPriorityB0+1
   1524  8     9650 BD   970A             jsr   ESP_ProcessEachPriorityLeve>>
   1525        9653               ESP_P2B0
   1526  6     9653 FE   80BC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1527  3     9656 27   06               beq   ESP_P3B0
   1528  7     9658 7C   970E             inc   ESP_CheckPriorityB0+1
   1529  8     965B BD   970A             jsr   ESP_ProcessEachPriorityLeve>>
   1530        965E               ESP_P3B0
   1531  6     965E FE   80BE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1532  3     9661 27   06               beq   ESP_P4B0
   1533  7     9663 7C   970E             inc   ESP_CheckPriorityB0+1
   1534  8     9666 BD   970A             jsr   ESP_ProcessEachPriorityLeve>>
   1535        9669               ESP_P4B0
   1536  6     9669 FE   80C0             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1537  3     966C 27   06               beq   ESP_P5B0
   1538  7     966E 7C   970E             inc   ESP_CheckPriorityB0+1
   1539  8     9671 BD   970A             jsr   ESP_ProcessEachPriorityLeve>>
   1540        9674               ESP_P5B0
   1541  6     9674 FE   80C2             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1542  3     9677 27   06               beq   ESP_P6B0
   1543  7     9679 7C   970E             inc   ESP_CheckPriorityB0+1
   1544  8     967C BD   970A             jsr   ESP_ProcessEachPriorityLeve>>
   1545        967F               ESP_P6B0
   1546  6     967F FE   80C4             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1547  3     9682 27   06               beq   ESP_P7B0
   1548  7     9684 7C   970E             inc   ESP_CheckPriorityB0+1
   1549  8     9687 BD   970A             jsr   ESP_ProcessEachPriorityLeve>>
   1550        968A               ESP_P7B0
   1551  6     968A FE   80C6             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1552  3     968D 27   06               beq   ESP_P8B0
   1553  7     968F 7C   970E             inc   ESP_CheckPriorityB0+1
   1554  8     9692 BD   970A             jsr   ESP_ProcessEachPriorityLeve>>
   1555        9695               ESP_P8B0
   1556  6     9695 FE   80C8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1557  3     9698 27   06               beq   ESP_rtsB0
   1558  7     969A 7C   970E             inc   ESP_CheckPriorityB0+1
   1559  8     969D BD   970A             jsr   ESP_ProcessEachPriorityLeve>>
   1560        96A0               ESP_rtsB0
   1561  5     96A0 39                    rts
   1562                            
   1563        96A1               ESP_P1B1
   1564  6     96A1 FE   813A             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1565  3     96A4 27   08               beq   ESP_P2B1
   1566  2     96A6 86   08               lda   #$08
   1567  5     96A8 B7   97A3             sta   ESP_CheckPriorityB1+1
   1568  8     96AB BD   979F             jsr   ESP_ProcessEachPriorityLeve>>
   1569        96AE               ESP_P2B1
   1570  6     96AE FE   813C             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1571  3     96B1 27   08               beq   ESP_P3B1
   1572  2     96B3 86   07               lda   #$07
   1573  5     96B5 B7   97A3             sta   ESP_CheckPriorityB1+1
   1574  8     96B8 BD   979F             jsr   ESP_ProcessEachPriorityLeve>>
   1575        96BB               ESP_P3B1
   1576  6     96BB FE   813E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1577  3     96BE 27   08               beq   ESP_P4B1
   1578  2     96C0 86   06               lda   #$06
   1579  5     96C2 B7   97A3             sta   ESP_CheckPriorityB1+1
   1580  8     96C5 BD   979F             jsr   ESP_ProcessEachPriorityLeve>>
   1581        96C8               ESP_P4B1
   1582  6     96C8 FE   8140             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1583  3     96CB 27   08               beq   ESP_P5B1
   1584  2     96CD 86   05               lda   #$05
   1585  5     96CF B7   97A3             sta   ESP_CheckPriorityB1+1
   1586  8     96D2 BD   979F             jsr   ESP_ProcessEachPriorityLeve>>
   1587        96D5               ESP_P5B1
   1588  6     96D5 FE   8142             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1589  3     96D8 27   08               beq   ESP_P6B1
   1590  2     96DA 86   04               lda   #$04
   1591  5     96DC B7   97A3             sta   ESP_CheckPriorityB1+1
   1592  8     96DF BD   979F             jsr   ESP_ProcessEachPriorityLeve>>
   1593        96E2               ESP_P6B1
   1594  6     96E2 FE   8144             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1595  3     96E5 27   08               beq   ESP_P7B1
   1596  2     96E7 86   03               lda   #$03
   1597  5     96E9 B7   97A3             sta   ESP_CheckPriorityB1+1
   1598  8     96EC BD   979F             jsr   ESP_ProcessEachPriorityLeve>>
   1599        96EF               ESP_P7B1
   1600  6     96EF FE   8146             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1601  3     96F2 27   08               beq   ESP_P8B1
   1602  2     96F4 86   02               lda   #$02
   1603  5     96F6 B7   97A3             sta   ESP_CheckPriorityB1+1
   1604  8     96F9 BD   979F             jsr   ESP_ProcessEachPriorityLeve>>
   1605        96FC               ESP_P8B1
   1606  6     96FC FE   8148             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1607  3     96FF 27   08               beq   ESP_rtsB1
   1608  2     9701 86   01               lda   #$01
   1609  5     9703 B7   97A3             sta   ESP_CheckPriorityB1+1
   1610  8     9706 BD   979F             jsr   ESP_ProcessEachPriorityLeve>>
   1611        9709               ESP_rtsB1
   1612  5     9709 39                    rts
   1613
   1614                           * *******
   1615                           * BUFFER0
   1616                           * *******
   1617
   1618        970A               ESP_ProcessEachPriorityLevelB0
   1619  4+1   970A A6   C8 34            lda   rsv_priority_0,u
   1620                            
   1621        970D               ESP_CheckPriorityB0
   1622  2     970D 81   00               cmpa  #0                         >>
   1623  3     970F 26   38               bne   ESP_NextObjectB0           >>
   1624                            
   1625        9711               ESP_UnsetCheckRefreshB0
   1626  4+1   9711 A6   C8 29            lda   rsv_render_flags,u
   1627  2     9714 84   FE               anda  #:rsv_render_checkrefresh_m>>
   1628  4+1   9716 A7   C8 29            sta   rsv_render_flags,u
   1629                            
   1630        9719               ESP_CheckEraseB0
   1631  2     9719 84   02               anda  #rsv_render_erasesprite_mas>>
   1632  3     971B 26   5D               bne   ESP_CallEraseRoutineB0     >>
   1633                            
   1634                                   * if not supposed to be refreshed>>
   1635                            
   1636  4+1   971D A6   C8 41            lda   rsv_onscreen_0,u
   1637  3     9720 27   27               beq   ESP_NextObjectB0
   1638                            
   1639                                   * search a collision with a sprit>>
   1640                                   * the sprite under should have to>>
   1641                                   * in this case it forces the refr>>
   1642                                   * as a sub loop, this should be o>>
   1643                            
   1644        9722               ESP_SubEraseSpriteSearchInitB0
   1645  5+1   9722 AE   C8 2E            ldx   rsv_ptr_sub_object_erase,u
   1646                            
   1647        9725               ESP_SubEraseSearchB0
   1648  7     9725 BC   943F             cmpx  cur_ptr_sub_obj_erase
   1649  3     9728 27   25               beq   ESP_SubDrawSpriteSearchInit>>
   1650  6+3   972A 10AE 83               ldy   ,--x
   1651                            
   1652        972D               ESP_SubEraseCheckCollisionB0
   1653  5+1   972D EC   A8 3D            ldd   rsv_prev_x_pixel_0,y       >>
   1654  4+1   9730 A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1655  3     9733 24   F0               bhs   ESP_SubEraseSearchB0
   1656  4+1   9735 E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1657  3     9738 24   EB               bhs   ESP_SubEraseSearchB0
   1658  5+1   973A EC   A8 3F            ldd   rsv_prev_x2_pixel_0,y      >>
   1659  4+1   973D A1   C8 12            cmpa  x_pixel,u                  >>
   1660  3     9740 23   E3               bls   ESP_SubEraseSearchB0
   1661  4+1   9742 E1   C8 13            cmpb  y_pixel,u                  >>
   1662  3     9745 23   DE               bls   ESP_SubEraseSearchB0
   1663  3     9747 20   2B               bra   ESP_SubCheckOverlayB0
   1664
   1665        9749               ESP_NextObjectB0
   1666  5+1   9749 EE   C8 35            ldu   rsv_priority_prev_obj_0,u
   1667  3     974C 26   BC               bne   ESP_ProcessEachPriorityLeve>>
   1668  5     974E 39                    rts
   1669
   1670        974F               ESP_SubDrawSpriteSearchInitB0
   1671  5+1   974F AE   C8 30            ldx   rsv_ptr_sub_object_draw,u
   1672                            
   1673        9752               ESP_SubDrawSearchB0
   1674  7     9752 BC   9441             cmpx  cur_ptr_sub_obj_draw
   1675  3     9755 27   1D               beq   ESP_SubCheckOverlayB0      >>
   1676  6+3   9757 10AE 83               ldy   ,--x
   1677
   1678        975A               ESP_SubDrawCheckCollisionB0
   1679  5+1   975A EC   A8 12            ldd   x_pixel,y                  >>
   1680  4+1   975D A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1681  3     9760 24   F0               bhs   ESP_SubDrawSearchB0
   1682  4+1   9762 E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1683  3     9765 24   EB               bhs   ESP_SubDrawSearchB0
   1684  5+1   9767 EC   A8 32            ldd   rsv_x2_pixel,y             >>
   1685  4+1   976A A1   C8 12            cmpa  x_pixel,u                  >>
   1686  3     976D 23   E3               bls   ESP_SubDrawSearchB0
   1687  4+1   976F E1   C8 13            cmpb  y_pixel,u                  >>
   1688  3     9772 23   DE               bls   ESP_SubDrawSearchB0
   1689                            
   1690        9774               ESP_SubCheckOverlayB0
   1691  4+1   9774 A6   42               lda   render_flags,u
   1692  2     9776 84   10               anda  #render_fixedoverlay_mask
   1693  3     9778 26   20               bne   ESP_UnsetOnScreenFlagB0
   1694                            
   1695        977A               ESP_CallEraseRoutineB0
   1696  6     977A FF   978E             stu   ESP_CallEraseRoutineB0_00+1>>
   1697  5+1   977D AE   C8 39            ldx   rsv_prev_mapping_frame_0,u >>
   1698  4+1   9780 A6   06               lda   page_erase_routine,x
   1699  5     9782 B7   E7E5             sta   $E7E5                      >>
   1700  5+1   9785 EE   C8 3B            ldu   rsv_bgdata_0,u             >>
   1701  7+4   9788 AD   98 07            jsr   [erase_routine,x]          >>
   1702  4+0   978B 31   C4               leay  ,u                         >>
   1703        978D               ESP_CallEraseRoutineB0_00
   1704  3     978D CE   0000             ldu   #$0000                     >>
   1705  5+1   9790 EC   C8 3B            ldd   rsv_bgdata_0,u             >>
   1706  2     9793 C4   40               andb  #cell_size                 >>
   1707  6     9795 1F   01               tfr   d,x                        >>
   1708                            
   1709        9797               ESP_FreeEraseBufferB0
   1710  8     9797 BD   9AF4             jsr   BgBufferFree               >>
   1711                            
   1712        979A               ESP_UnsetOnScreenFlagB0
   1713  6+1   979A 6F   C8 41            clr   rsv_onscreen_0,u           >>
   1714  3     979D 20   AA               bra   ESP_NextObjectB0
   1715
   1716                           * *******
   1717                           * BUFFER1
   1718                           * *******
   1719                            
   1720        979F               ESP_ProcessEachPriorityLevelB1
   1721  4+1   979F A6   C8 42            lda   rsv_priority_1,u
   1722                            
   1723        97A2               ESP_CheckPriorityB1
   1724  2     97A2 81   00               cmpa  #0                         >>
   1725  3     97A4 26   38               bne   ESP_NextObjectB1           >>
   1726                            
   1727        97A6               ESP_UnsetCheckRefreshB1
   1728  4+1   97A6 A6   C8 29            lda   rsv_render_flags,u
   1729  2     97A9 84   FE               anda  #:rsv_render_checkrefresh_m>>
   1730  4+1   97AB A7   C8 29            sta   rsv_render_flags,u
   1731                            
   1732        97AE               ESP_CheckEraseB1
   1733  2     97AE 84   02               anda  #rsv_render_erasesprite_mas>>
   1734  3     97B0 26   5D               bne   ESP_CallEraseRoutineB1     >>
   1735                            
   1736                                   * if not supposed to be refreshed>>
   1737                            
   1738  4+1   97B2 A6   C8 4F            lda   rsv_onscreen_1,u
   1739  3     97B5 27   27               beq   ESP_NextObjectB1
   1740                            
   1741                                   * search a collision with a sprit>>
   1742                                   * the sprite under should have to>>
   1743                                   * in this case it forces the refr>>
   1744                                   * as a sub loop, this should be o>>
   1745                            
   1746        97B7               ESP_SubEraseSpriteSearchInitB1
   1747  5+1   97B7 AE   C8 2E            ldx   rsv_ptr_sub_object_erase,u
   1748                            
   1749        97BA               ESP_SubEraseSearchB1
   1750  7     97BA BC   943F             cmpx  cur_ptr_sub_obj_erase
   1751  3     97BD 27   25               beq   ESP_SubDrawSpriteSearchInit>>
   1752  6+3   97BF 10AE 83               ldy   ,--x
   1753                            
   1754        97C2               ESP_SubEraseCheckCollisionB1
   1755  5+1   97C2 EC   A8 4B            ldd   rsv_prev_x_pixel_1,y       >>
   1756  4+1   97C5 A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1757  3     97C8 24   F0               bhs   ESP_SubEraseSearchB1
   1758  4+1   97CA E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1759  3     97CD 24   EB               bhs   ESP_SubEraseSearchB1
   1760  5+1   97CF EC   A8 4D            ldd   rsv_prev_x2_pixel_1,y      >>
   1761  4+1   97D2 A1   C8 12            cmpa  x_pixel,u                  >>
   1762  3     97D5 23   E3               bls   ESP_SubEraseSearchB1
   1763  4+1   97D7 E1   C8 13            cmpb  y_pixel,u                  >>
   1764  3     97DA 23   DE               bls   ESP_SubEraseSearchB1
   1765  3     97DC 20   2B               bra   ESP_SubCheckOverlayB1
   1766
   1767        97DE               ESP_NextObjectB1
   1768  5+1   97DE EE   C8 43            ldu   rsv_priority_prev_obj_1,u
   1769  3     97E1 26   BC               bne   ESP_ProcessEachPriorityLeve>>
   1770  5     97E3 39                    rts
   1771
   1772        97E4               ESP_SubDrawSpriteSearchInitB1
   1773  5+1   97E4 AE   C8 30            ldx   rsv_ptr_sub_object_draw,u
   1774                            
   1775        97E7               ESP_SubDrawSearchB1
   1776  7     97E7 BC   9441             cmpx  cur_ptr_sub_obj_draw
   1777  3     97EA 27   1D               beq   ESP_SubCheckOverlayB1      >>
   1778  6+3   97EC 10AE 83               ldy   ,--x
   1779
   1780        97EF               ESP_SubDrawCheckCollisionB1
   1781  5+1   97EF EC   A8 12            ldd   x_pixel,y                  >>
   1782  4+1   97F2 A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1783  3     97F5 24   F0               bhs   ESP_SubDrawSearchB1
   1784  4+1   97F7 E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1785  3     97FA 24   EB               bhs   ESP_SubDrawSearchB1
   1786  5+1   97FC EC   A8 32            ldd   rsv_x2_pixel,y             >>
   1787  4+1   97FF A1   C8 12            cmpa  x_pixel,u                  >>
   1788  3     9802 23   E3               bls   ESP_SubDrawSearchB1
   1789  4+1   9804 E1   C8 13            cmpb  y_pixel,u                  >>
   1790  3     9807 23   DE               bls   ESP_SubDrawSearchB1
   1791                            
   1792        9809               ESP_SubCheckOverlayB1
   1793  4+1   9809 A6   42               lda   render_flags,u
   1794  2     980B 84   10               anda  #render_fixedoverlay_mask
   1795  3     980D 26   20               bne   ESP_UnsetOnScreenFlagB1
   1796                            
   1797        980F               ESP_CallEraseRoutineB1
   1798  6     980F FF   9823             stu   ESP_CallEraseRoutineB1_00+1>>
   1799  5+1   9812 AE   C8 47            ldx   rsv_prev_mapping_frame_1,u >>
   1800  4+1   9815 A6   06               lda   page_erase_routine,x
   1801  5     9817 B7   E7E5             sta   $E7E5                      >>
   1802  5+1   981A EE   C8 49            ldu   rsv_bgdata_1,u             >>
   1803  7+4   981D AD   98 07            jsr   [erase_routine,x]          >>
   1804  4+0   9820 31   C4               leay  ,u                         >>
   1805        9822               ESP_CallEraseRoutineB1_00
   1806  3     9822 CE   0000             ldu   #$0000                     >>
   1807  5+1   9825 EC   C8 49            ldd   rsv_bgdata_1,u             >>
   1808  2     9828 C4   40               andb  #cell_size                 >>
   1809  6     982A 1F   01               tfr   d,x                        >>
   1810                            
   1811        982C               ESP_FreeEraseBufferB1
   1812  8     982C BD   9AF4             jsr   BgBufferFree               >>
   1813                            
   1814        982F               ESP_UnsetOnScreenFlagB1
   1815  6+1   982F 6F   C8 4F            clr   rsv_onscreen_1,u           >>
   1816  3     9832 20   AA               bra   ESP_NextObjectB1
   1817
   1818                                   INCLUD UNSETDSP
   1819                           * --------------------------------------->>
   1820                           * UnsetDisplayPriority
   1821                           * --------------------
   1822                           * Subroutine to unset sprites in Display >>
   1823                           * Read Lst_Priority_Unset_0/1
   1824                           *
   1825                           * input REG : none
   1826                           * --------------------------------------->>
   1827                            
   1828        9834               UnsetDisplayPriority
   1829
   1830        9834               UDP_Start
   1831  5     9834 B6   601A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1832  3     9837 26   6F               bne   UDP_B1
   1833                            
   1834        9839               UDP_B0
   1835  3     9839 8E   80CE             ldx   #Lst_Priority_Unset_0+2
   1836                            
   1837        983C               UDP_CheckEndB0
   1838  7     983C BC   80CC             cmpx  Lst_Priority_Unset_0       >>
   1839  3     983F 26   07               bne   UDP_CheckPrioPrevB0
   1840                            
   1841        9841               UDP_InitListB0
   1842  3     9841 8E   80CE             ldx   #Lst_Priority_Unset_0+2
   1843  6     9844 BF   80CC             stx   Lst_Priority_Unset_0       >>
   1844  5     9847 39                    rts
   1845                            
   1846        9848               UDP_CheckPrioPrevB0
   1847  5+3   9848 EE   81               ldu   ,x++
   1848  5+1   984A EC   C8 35            ldd   rsv_priority_prev_obj_0,u
   1849  3     984D 26   12               bne   UDP_ChainPrevB0
   1850                            
   1851  4+1   984F A6   C8 34            lda   rsv_priority_0,u
   1852  2     9852 4A                    deca
   1853  2     9853 48                    lsla
   1854  4     9854 108E 80A8             ldy   #Tbl_Priority_First_Entry_0>>
   1855  4+1   9858 31   A6               leay  a,y
   1856  5+1   985A EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1857  5+0   985D ED   A4               std   ,y
   1858  3     985F 20   0A               bra   UDP_CheckPrioNextB0
   1859                            
   1860        9861               UDP_ChainPrevB0
   1861  5+1   9861 EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1862  6+1   9864 10AE C8 35            ldy   rsv_priority_prev_obj_0,u
   1863  5+1   9868 ED   A8 37            std   rsv_priority_next_obj_0,y
   1864
   1865        986B               UDP_CheckPrioNextB0
   1866  5+1   986B EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1867  3     986E 26   12               bne   UDP_ChainNextB0
   1868
   1869  4+1   9870 A6   C8 34            lda   rsv_priority_0,u
   1870  2     9873 4A                    deca
   1871  2     9874 48                    lsla
   1872  4     9875 108E 80BA             ldy   #Tbl_Priority_Last_Entry_0
   1873  4+1   9879 31   A6               leay  a,y
   1874  5+1   987B EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1875  5+0   987E ED   A4               std   ,y
   1876  3     9880 20   0A               bra   UDP_CheckDeleteB0
   1877                            
   1878        9882               UDP_ChainNextB0
   1879  5+1   9882 EC   C8 35            ldd   rsv_priority_prev_obj_0,u
   1880  6+1   9885 10AE C8 37            ldy   rsv_priority_next_obj_0,u
   1881  5+1   9889 ED   A8 35            std   rsv_priority_prev_obj_0,y
   1882                            
   1883        988C               UDP_CheckDeleteB0
   1884  4+1   988C A6   42               lda   render_flags,u
   1885  2     988E 84   20               anda  #render_todelete_mask
   1886  3     9890 27   0F               beq   UDP_SetNewPrioB0
   1887  4+1   9892 A6   C8 41            lda   rsv_onscreen_0,u
   1888  3     9895 26   0A               bne   UDP_SetNewPrioB0
   1889  4+1   9897 A6   C8 4F            lda   rsv_onscreen_1,u
   1890  3     989A 26   05               bne   UDP_SetNewPrioB0
   1891  8     989C BD   940D             jsr   ClearObj
   1892  3     989F 20   9B               bra   UDP_CheckEndB0
   1893                            
   1894        98A1               UDP_SetNewPrioB0
   1895  4+1   98A1 A6   43               lda   priority,u
   1896  4+1   98A3 A7   C8 34            sta   rsv_priority_0,u
   1897  3     98A6 20   94               bra   UDP_CheckEndB0
   1898
   1899        98A8               UDP_B1
   1900  3     98A8 8E   814E             ldx   #Lst_Priority_Unset_1+2
   1901                            
   1902        98AB               UDP_CheckEndB1
   1903  7     98AB BC   814C             cmpx  Lst_Priority_Unset_1       >>
   1904  3     98AE 26   07               bne   UDP_CheckPrioPrevB1
   1905                            
   1906        98B0               UDP_InitListB1
   1907  3     98B0 8E   814E             ldx   #Lst_Priority_Unset_1+2
   1908  6     98B3 BF   814C             stx   Lst_Priority_Unset_1       >>
   1909  5     98B6 39                    rts
   1910                            
   1911        98B7               UDP_CheckPrioPrevB1
   1912  5+3   98B7 EE   81               ldu   ,x++
   1913  5+1   98B9 EC   C8 43            ldd   rsv_priority_prev_obj_1,u
   1914  3     98BC 26   12               bne   UDP_ChainPrevB1
   1915                            
   1916  4+1   98BE A6   C8 42            lda   rsv_priority_1,u
   1917  2     98C1 4A                    deca
   1918  2     98C2 48                    lsla
   1919  4     98C3 108E 8128             ldy   #Tbl_Priority_First_Entry_1>>
   1920  4+1   98C7 31   A6               leay  a,y
   1921  5+1   98C9 EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1922  5+0   98CC ED   A4               std   ,y
   1923  3     98CE 20   0A               bra   UDP_CheckPrioNextB1
   1924                            
   1925        98D0               UDP_ChainPrevB1
   1926  5+1   98D0 EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1927  6+1   98D3 10AE C8 43            ldy   rsv_priority_prev_obj_1,u
   1928  5+1   98D7 ED   A8 45            std   rsv_priority_next_obj_1,y
   1929
   1930        98DA               UDP_CheckPrioNextB1
   1931  5+1   98DA EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1932  3     98DD 26   12               bne   UDP_ChainNextB1
   1933
   1934  4+1   98DF A6   C8 42            lda   rsv_priority_1,u
   1935  2     98E2 4A                    deca
   1936  2     98E3 48                    lsla
   1937  4     98E4 108E 813A             ldy   #Tbl_Priority_Last_Entry_1
   1938  4+1   98E8 31   A6               leay  a,y
   1939  5+1   98EA EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1940  5+0   98ED ED   A4               std   ,y
   1941  3     98EF 20   0A               bra   UDP_CheckDeleteB1
   1942                            
   1943        98F1               UDP_ChainNextB1
   1944  5+1   98F1 EC   C8 43            ldd   rsv_priority_prev_obj_1,u
   1945  6+1   98F4 10AE C8 45            ldy   rsv_priority_next_obj_1,u
   1946  5+1   98F8 ED   A8 43            std   rsv_priority_prev_obj_1,y
   1947                            
   1948        98FB               UDP_CheckDeleteB1
   1949  4+1   98FB A6   42               lda   render_flags,u
   1950  2     98FD 84   20               anda  #render_todelete_mask
   1951  3     98FF 27   0F               beq   UDP_SetNewPrioB1
   1952  4+1   9901 A6   C8 4F            lda   rsv_onscreen_1,u
   1953  3     9904 26   0A               bne   UDP_SetNewPrioB1
   1954  4+1   9906 A6   C8 4F            lda   rsv_onscreen_1,u
   1955  3     9909 26   05               bne   UDP_SetNewPrioB1
   1956  8     990B BD   940D             jsr   ClearObj
   1957  3     990E 20   9B               bra   UDP_CheckEndB1
   1958                            
   1959        9910               UDP_SetNewPrioB1
   1960  4+1   9910 A6   43               lda   priority,u
   1961  4+1   9912 A7   C8 42            sta   rsv_priority_1,u
   1962  3     9915 20   94               bra   UDP_CheckEndB1
   1963
   1964                                   INCLUD DRAWSPR
   1965                           * --------------------------------------->>
   1966                           * DrawSprites
   1967                           * ------------
   1968                           * Subroutine to draw sprites on screen
   1969                           * Read Display Priority Structure (back t>>
   1970                           * priority: 0 - unregistred
   1971                           * priority: 1 - register non moving overl>>
   1972                           * priority; 2-8 - register moving sprite >>
   1973                           *
   1974                           * input REG : none
   1975                           * --------------------------------------->>
   1976                            
   1977        9917               DrawSprites
   1978
   1979        9917               DRS_Start
   1980  5     9917 B6   601A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1981  3     991A 26   41               bne   DRS_P8B1
   1982                            
   1983        991C               DRS_P8B0
   1984  6     991C BE   80B6             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1985  3     991F 27   03               beq   DRS_P7B0
   1986  8     9921 BD   999E             jsr   DRS_ProcessEachPriorityLeve>>
   1987        9924               DRS_P7B0
   1988  6     9924 BE   80B4             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1989  3     9927 27   03               beq   DRS_P6B0
   1990  8     9929 BD   999E             jsr   DRS_ProcessEachPriorityLeve>>
   1991        992C               DRS_P6B0
   1992  6     992C BE   80B2             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1993  3     992F 27   03               beq   DRS_P5B0
   1994  8     9931 BD   999E             jsr   DRS_ProcessEachPriorityLeve>>
   1995        9934               DRS_P5B0
   1996  6     9934 BE   80B0             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1997  3     9937 27   03               beq   DRS_P4B0
   1998  8     9939 BD   999E             jsr   DRS_ProcessEachPriorityLeve>>
   1999        993C               DRS_P4B0
   2000  6     993C BE   80AE             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2001  3     993F 27   03               beq   DRS_P3B0
   2002  8     9941 BD   999E             jsr   DRS_ProcessEachPriorityLeve>>
   2003        9944               DRS_P3B0
   2004  6     9944 BE   80AC             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2005  3     9947 27   03               beq   DRS_P2B0
   2006  8     9949 BD   999E             jsr   DRS_ProcessEachPriorityLeve>>
   2007        994C               DRS_P2B0
   2008  6     994C BE   80AA             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2009  3     994F 27   03               beq   DRS_P1B0
   2010  8     9951 BD   999E             jsr   DRS_ProcessEachPriorityLeve>>
   2011        9954               DRS_P1B0
   2012  6     9954 BE   80A8             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2013  3     9957 27   03               beq   DRS_rtsB0
   2014  8     9959 BD   999E             jsr   DRS_ProcessEachPriorityLeve>>
   2015        995C               DRS_rtsB0
   2016  5     995C 39                    rts
   2017                            
   2018        995D               DRS_P8B1
   2019  6     995D BE   8136             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2020  3     9960 27   03               beq   DRS_P7B1
   2021  8     9962 BD   9A3B             jsr   DRS_ProcessEachPriorityLeve>>
   2022        9965               DRS_P7B1
   2023  6     9965 BE   8134             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2024  3     9968 27   03               beq   DRS_P6B1
   2025  8     996A BD   9A3B             jsr   DRS_ProcessEachPriorityLeve>>
   2026        996D               DRS_P6B1
   2027  6     996D BE   8132             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2028  3     9970 27   03               beq   DRS_P5B1
   2029  8     9972 BD   9A3B             jsr   DRS_ProcessEachPriorityLeve>>
   2030        9975               DRS_P5B1
   2031  6     9975 BE   8130             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2032  3     9978 27   03               beq   DRS_P4B1
   2033  8     997A BD   9A3B             jsr   DRS_ProcessEachPriorityLeve>>
   2034        997D               DRS_P4B1
   2035  6     997D BE   812E             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2036  3     9980 27   03               beq   DRS_P3B1
   2037  8     9982 BD   9A3B             jsr   DRS_ProcessEachPriorityLeve>>
   2038        9985               DRS_P3B1
   2039  6     9985 BE   812C             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2040  3     9988 27   03               beq   DRS_P2B1
   2041  8     998A BD   9A3B             jsr   DRS_ProcessEachPriorityLeve>>
   2042        998D               DRS_P2B1
   2043  6     998D BE   812A             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2044  3     9990 27   03               beq   DRS_P1B1
   2045  8     9992 BD   9A3B             jsr   DRS_ProcessEachPriorityLeve>>
   2046        9995               DRS_P1B1
   2047  6     9995 BE   8128             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2048  3     9998 27   03               beq   DRS_rtsB1
   2049  8     999A BD   9A3B             jsr   DRS_ProcessEachPriorityLeve>>
   2050        999D               DRS_rtsB1
   2051  5     999D 39                    rts
   2052
   2053        999E               DRS_ProcessEachPriorityLevelB0
   2054  4+1   999E A6   88 29            lda   rsv_render_flags,x
   2055  2     99A1 84   04               anda  #rsv_render_displaysprite_m>>
   2056  3     99A3 27   46               beq   DRS_NextObjectB0
   2057  4+1   99A5 A6   88 41            lda   rsv_onscreen_0,x
   2058  3     99A8 26   41               bne   DRS_NextObjectB0
   2059  4+1   99AA A6   02               lda   render_flags,x
   2060  2     99AC 84   10               anda  #render_fixedoverlay_mask
   2061  3     99AE 26   41               bne   DRS_DrawWithoutBackupB0
   2062  5+1   99B0 EE   88 2C            ldu   rsv_curr_mapping_frame,x
   2063  4+1   99B3 A6   49               lda   erase_nb_cell,u
   2064  8     99B5 BD   9AAB             jsr   BgBufferAlloc              >>
   2065  5     99B8 108C 0000             cmpy  #$0000                     >>
   2066  3     99BC 27   2D               beq   DRS_NextObjectB0           >>
   2067  5+1   99BE EC   88 12            ldd   x_pixel,x                  >>
   2068  5+1   99C1 ED   88 3D            std   rsv_prev_x_pixel_0,x       >>
   2069  8     99C4 BD   9A0E             jsr   DRS_XYToAddress
   2070  5+1   99C7 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2071  5+1   99CA EF   88 39            stu   rsv_prev_mapping_frame_0,x >>
   2072  4+1   99CD A6   40               lda   page_bckdraw_routine,u
   2073  5     99CF B7   E7E5             sta   $E7E5                      >>
   2074  4+0   99D2 33   A4               leau  ,y                         >>
   2075  6     99D4 BF   99DB             stx   DRS_dyn3B0+1               >>
   2076  7+4   99D7 AD   98 01            jsr   [bckdraw_routine,x]        >>
   2077        99DA               DRS_dyn3B0
   2078  3     99DA 8E   0000             ldx   #$0000                     >>
   2079  5+1   99DD EF   88 3B            stu   rsv_bgdata_0,x             >>
   2080  5+1   99E0 EC   88 32            ldd   rsv_x2_pixel,x             >>
   2081  5+1   99E3 ED   88 3F            std   rsv_prev_x2_pixel_0,x      >>
   2082  2     99E6 86   01               lda   #$01
   2083  4+1   99E8 A7   88 41            sta   rsv_onscreen_0,x           >>
   2084        99EB               DRS_NextObjectB0
   2085  5+1   99EB AE   88 37            ldx   rsv_priority_next_obj_0,x
   2086  3     99EE 26   AE               bne   DRS_ProcessEachPriorityLeve>>
   2087  5     99F0 39                    rts
   2088                            
   2089        99F1               DRS_DrawWithoutBackupB0
   2090  5+1   99F1 EC   88 12            ldd   x_pixel,x                  >>
   2091  8     99F4 BD   9A0E             jsr   DRS_XYToAddress
   2092  5+1   99F7 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2093  4+1   99FA A6   43               lda   page_draw_routine,u
   2094  5     99FC B7   E7E5             sta   $E7E5                      >>
   2095  6     99FF BF   9A06             stx   DRS_dyn4B0+1               >>
   2096  7+4   9A02 AD   98 04            jsr   [draw_routine,x]           >>
   2097        9A05               DRS_dyn4B0
   2098  3     9A05 8E   0000             ldx   #$0000                     >>
   2099  5+1   9A08 AE   88 37            ldx   rsv_priority_next_obj_0,x
   2100  3     9A0B 26   91               bne   DRS_ProcessEachPriorityLeve>>
   2101  5     9A0D 39                    rts
   2102
   2103        9A0E               DRS_XYToAddress
   2104  2     9A0E 44                    lsra                             >>
   2105  3     9A0F 25   14               bcs   DRS_XYToAddressRAMBFirst   >>
   2106        9A11               DRS_XYToAddressRAMAFirst
   2107  5     9A11 B7   9A1C             sta   DRS_dyn1+2
   2108  2     9A14 86   28               lda   #$28                       >>
   2109  4+1   9A16 E6   88 13            ldb   y_pixel,x                  >>
   2110  11    9A19 3D                    mul
   2111        9A1A               DRS_dyn1
   2112  6     9A1A D3   00               addd  $0000                      >>
   2113  6     9A1C FD   6020             std   Glb_Sprite_Screen_Pos_PartA>>
   2114  2     9A1F 8A   20               ora   #$20                       >>
   2115  6     9A21 FD   6022             std   Glb_Sprite_Screen_Pos_PartB>>
   2116  5     9A24 39                    rts
   2117        9A25               DRS_XYToAddressRAMBFirst
   2118  5     9A25 B7   9A30             sta   DRS_dyn2+2
   2119  2     9A28 86   28               lda   #$28                       >>
   2120  4+1   9A2A E6   88 13            ldb   y_pixel,x                  >>
   2121  11    9A2D 3D                    mul
   2122        9A2E               DRS_dyn2
   2123  7     9A2E F3   2000             addd  $2000                      >>
   2124  6     9A31 FD   6020             std   Glb_Sprite_Screen_Pos_PartA>>
   2125  7     9A34 B3   1FFF             subd  $1FFF
   2126  6     9A37 FD   6022             std   Glb_Sprite_Screen_Pos_PartB>>
   2127  5     9A3A 39                    rts
   2128                            
   2129        9A3B               DRS_ProcessEachPriorityLevelB1
   2130  4+1   9A3B A6   88 29            lda   rsv_render_flags,x
   2131  2     9A3E 84   04               anda  #rsv_render_displaysprite_m>>
   2132  3     9A40 27   46               beq   DRS_NextObjectB1
   2133  4+1   9A42 A6   88 4F            lda   rsv_onscreen_1,x
   2134  3     9A45 26   41               bne   DRS_NextObjectB1
   2135  4+1   9A47 A6   02               lda   render_flags,x
   2136  2     9A49 84   10               anda  #render_fixedoverlay_mask
   2137  3     9A4B 26   41               bne   DRS_DrawWithoutBackupB1
   2138  5+1   9A4D EE   88 2C            ldu   rsv_curr_mapping_frame,x
   2139  4+1   9A50 A6   49               lda   erase_nb_cell,u
   2140  8     9A52 BD   9AAB             jsr   BgBufferAlloc              >>
   2141  5     9A55 108C 0000             cmpy  #$0000                     >>
   2142  3     9A59 27   2D               beq   DRS_NextObjectB1           >>
   2143  5+1   9A5B EC   88 12            ldd   x_pixel,x                  >>
   2144  5+1   9A5E ED   88 4B            std   rsv_prev_x_pixel_1,x       >>
   2145  8     9A61 BD   9A0E             jsr   DRS_XYToAddress
   2146  5+1   9A64 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2147  5+1   9A67 EF   88 47            stu   rsv_prev_mapping_frame_1,x >>
   2148  4+1   9A6A A6   40               lda   page_bckdraw_routine,u
   2149  5     9A6C B7   E7E5             sta   $E7E5                      >>
   2150  4+0   9A6F 33   A4               leau  ,y                         >>
   2151  6     9A71 BF   9A78             stx   DRS_dyn3B1+1               >>
   2152  7+4   9A74 AD   98 01            jsr   [bckdraw_routine,x]        >>
   2153        9A77               DRS_dyn3B1
   2154  3     9A77 8E   0000             ldx   #$0000                     >>
   2155  5+1   9A7A EF   88 49            stu   rsv_bgdata_1,x             >>
   2156  5+1   9A7D EC   88 32            ldd   rsv_x2_pixel,x             >>
   2157  5+1   9A80 ED   88 4D            std   rsv_prev_x2_pixel_1,x      >>
   2158  2     9A83 86   01               lda   #$01
   2159  4+1   9A85 A7   88 4F            sta   rsv_onscreen_1,x           >>
   2160        9A88               DRS_NextObjectB1
   2161  5+1   9A88 AE   88 45            ldx   rsv_priority_next_obj_1,x
   2162  3     9A8B 26   AE               bne   DRS_ProcessEachPriorityLeve>>
   2163  5     9A8D 39                    rts
   2164                            
   2165        9A8E               DRS_DrawWithoutBackupB1
   2166  5+1   9A8E EC   88 12            ldd   x_pixel,x                  >>
   2167  8     9A91 BD   9A0E             jsr   DRS_XYToAddress
   2168  5+1   9A94 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2169  4+1   9A97 A6   43               lda   page_draw_routine,u
   2170  5     9A99 B7   E7E5             sta   $E7E5                      >>
   2171  6     9A9C BF   9AA3             stx   DRS_dyn4B1+1               >>
   2172  7+4   9A9F AD   98 04            jsr   [draw_routine,x]           >>
   2173        9AA2               DRS_dyn4B1
   2174  3     9AA2 8E   0000             ldx   #$0000                     >>
   2175  5+1   9AA5 AE   88 45            ldx   rsv_priority_next_obj_1,x
   2176  3     9AA8 26   91               bne   DRS_ProcessEachPriorityLeve>>
   2177  5     9AAA 39                    rts
   2178
   2179                                   INCLUD BGBALLOC
   2180                           * --------------------------------------->>
   2181                           * BgBufferAlloc
   2182                           * -------------
   2183                           * Subroutine to allocate memory into back>>
   2184                           *
   2185                           * input  REG : [a] number of requested ce>>
   2186                           * output REG : [y] cell_end or 0000 if no>>
   2187                           * --------------------------------------->>
   2188
   2189        9AAB               BgBufferAlloc
   2190  5+3   9AAB 34   14               pshs  b,x
   2191  5     9AAD F6   601A             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2192  3     9AB0 26   09               bne   BBA1                       >>
   2193                            
   2194        9AB2               BBA0
   2195  3     9AB2 8E   6024             ldx   #Lst_FreeCellFirstEntry_0  >>
   2196  7     9AB5 10BE 6024             ldy   Lst_FreeCellFirstEntry_0   >>
   2197  3     9AB9 20   07               bra   BBA_Next
   2198                            
   2199        9ABB               BBA1
   2200  3     9ABB 8E   7066             ldx   #Lst_FreeCellFirstEntry_1  >>
   2201  7     9ABE 10BE 7066             ldy   Lst_FreeCellFirstEntry_1   >>
   2202                            
   2203        9AC2               BBA_Next
   2204  3     9AC2 27   2E               beq   BBA_rts                    >>
   2205  4+1   9AC4 A1   20               cmpa  nb_cells,y                 >>
   2206  3     9AC6 27   09               beq   BBA_FitCell                >>
   2207  3     9AC8 23   12               bls   BBA_DivideCell             >>
   2208  4+1   9ACA 30   25               leax  next_entry,y               >>
   2209  6+1   9ACC 10AE 25               ldy   next_entry,y               >>
   2210  3     9ACF 20   F1               bra   BBA_Next
   2211                            
   2212        9AD1               BBA_FitCell
   2213  5+1   9AD1 EC   25               ldd   next_entry,y
   2214  5+0   9AD3 ED   84               std   ,x                         >>
   2215  6+1   9AD5 6F   20               clr   nb_cells,y                 >>
   2216  6+1   9AD7 10AE 23               ldy   cell_end,y                 >>
   2217  3     9ADA 20   16               bra   BBA_rts
   2218                            
   2219        9ADC               BBA_DivideCell
   2220  5     9ADC B7   9AE2             sta   BBA_dyn+1
   2221  4+1   9ADF E6   20               ldb   nb_cells,y
   2222        9AE1               BBA_dyn
   2223  2     9AE1 C0   00               subb  #$00                       >>
   2224  4+1   9AE3 E7   20               stb   nb_cells,y                 >>
   2225                            
   2226  2     9AE5 C6   40               ldb   #cell_size
   2227  11    9AE7 3D                    mul
   2228  2     9AE8 8A   50               ora   #80                        >>
   2229  5+1   9AEA AE   23               ldx   cell_end,y
   2230  4+4   9AEC 30   8B               leax  d,x                        >>
   2231  5+1   9AEE AF   23               stx   cell_end,y                 >>
   2232  4+0   9AF0 31   84               leay  ,x                         >>
   2233                            
   2234        9AF2               BBA_rts
   2235  5+5   9AF2 35   94               puls  b,x,pc
   2236
   2237                                   INCLUD BGBFREE
   2238                           * --------------------------------------->>
   2239                           * BgBufferFree
   2240                           * ------------
   2241                           * Subroutine to free memory from backgrou>>
   2242                           *
   2243                           * input  REG : [x] cell_start
   2244                           *              [y] cell_end
   2245                           * output REG : none
   2246                           * --------------------------------------->>
   2247
   2248        9AF4               BgBufferFree
   2249  5+4   9AF4 34   46               pshs  d,u
   2250  3     9AF6 CC   0000             ldd   #$0000
   2251  6     9AF9 FD   9B47             std   BBF_SetNewEntryNextentry+1 >>
   2252  5     9AFC F6   601A             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2253  3     9AFF 26   10               bne   BBF1                       >>
   2254                            
   2255        9B01               BBF0
   2256  5+1   9B01 EE   C8 39            ldu   rsv_prev_mapping_frame_0,u >>
   2257  4+1   9B04 A6   49               lda   erase_nb_cell,u            >>
   2258  6     9B06 FE   6026             ldu   Lst_FreeCell_0             >>
   2259  6     9B09 FF   9B35             stu   BBF_AddNewEntryAtEnd+4     >>
   2260  6     9B0C FE   6024             ldu   Lst_FreeCellFirstEntry_0   >>
   2261  3     9B0F 20   0E               bra   BBF_Next
   2262                            
   2263        9B11               BBF1
   2264  5+1   9B11 EE   C8 47            ldu   rsv_prev_mapping_frame_1,u
   2265  4+1   9B14 A6   49               lda   erase_nb_cell,u
   2266  6     9B16 FE   7068             ldu   Lst_FreeCell_1
   2267  6     9B19 FF   9B35             stu   BBF_AddNewEntryAtEnd+4
   2268  6     9B1C FE   7066             ldu   Lst_FreeCellFirstEntry_1
   2269                            
   2270        9B1F               BBF_Next
   2271  3     9B1F 27   10               beq   BBF_AddNewEntryAtEnd       >>
   2272  7+1   9B21 10AC 41               cmpy  cell_start,u               >>
   2273  3     9B24 27   29               beq   BBF_ExpandAtStart          >>
   2274  3     9B26 22   48               bhi   BBF_ExpandAtEnd            >>
   2275  5+1   9B28 EE   45               ldu   next_entry,u               >>
   2276  3     9B2A 20   F3               bra   BBF_Next
   2277                            
   2278        9B2C               BBF_AddNewEntry
   2279  6     9B2C FF   9B47             stu   BBF_SetNewEntryNextentry+1
   2280  4+1   9B2F 33   45               leau  next_entry,u               >>
   2281        9B31               BBF_AddNewEntryAtEnd
   2282  6     9B31 FF   9B4C             stu   BBF_SetNewEntryPrevLink+1  >>
   2283  3     9B34 CE   0000             ldu   #$0000                     >>
   2284        9B37               BBF_FindFreeSlot
   2285  4+1   9B37 E6   40               ldb   nb_cells,u                 >>
   2286  3     9B39 27   04               beq   BBF_SetNewEntry            >>
   2287  4+1   9B3B 33   47               leau  entry_size,u               >>
   2288  3     9B3D 20   F8               bra   BBF_FindFreeSlot           >>
   2289        9B3F               BBF_SetNewEntry
   2290  4+1   9B3F A7   40               sta   nb_cells,u                 >>
   2291  5+1   9B41 AF   41               stx   cell_start,u               >>
   2292  6+1   9B43 10AF 43               sty   cell_end,u                 >>
   2293        9B46               BBF_SetNewEntryNextentry
   2294  3     9B46 8E   0000             ldx   #$0000                     >>
   2295  5+1   9B49 AF   45               stx   next_entry,u               >>
   2296        9B4B               BBF_SetNewEntryPrevLink
   2297  5     9B4B DF   00               stu   $0000                      >>
   2298  3     9B4D 20   2C               bra   BBF_rts
   2299
   2300        9B4F               BBF_ExpandAtStart
   2301  5+1   9B4F AF   41               stx   cell_start,u
   2302  4+1   9B51 AB   40               adda  nb_cells,u
   2303  4+1   9B53 A7   40               sta   nb_cells,u
   2304  6+1   9B55 10AE 45               ldy   next_entry,u
   2305  3     9B58 27   21               beq   BBF_rts
   2306        9B5A               BBF_Join
   2307  6+1   9B5A AC   23               cmpx  cell_end,y
   2308  3     9B5C 26   1D               bne   BBF_rts
   2309  5+1   9B5E EC   21               ldd   cell_start,y
   2310  5+1   9B60 ED   41               std   cell_start,u
   2311  4+1   9B62 A6   20               lda   nb_cells,y
   2312  4+1   9B64 AB   40               adda  nb_cells,u
   2313  4+1   9B66 A7   40               sta   nb_cells,u
   2314  6+1   9B68 6F   20               clr   nb_cells,y                 >>
   2315  5+1   9B6A EC   25               ldd   next_entry,y
   2316  5+1   9B6C ED   45               std   next_entry,u               >>
   2317  3     9B6E 20   0B               bra   BBF_rts
   2318
   2319        9B70               BBF_ExpandAtEnd
   2320  6+1   9B70 AC   43               cmpx  cell_end,u
   2321  3     9B72 26   B8               bne   BBF_AddNewEntry
   2322  6+1   9B74 10AF 43               sty   cell_end,u
   2323  4+1   9B77 AB   40               adda  nb_cells,u
   2324  4+1   9B79 A7   40               sta   nb_cells,u
   2325                            
   2326        9B7B               BBF_rts
   2327  5+6   9B7B 35   C6               puls  d,u,pc
----------------
5134 cycle(s)
15229 byte(s)
----------------
    161

000000 Total Errors

000425 Total Symbols
     1x          Label 93A1 am_ObjectMove_01
     1x          Label 93B7 am_ObjectMove_02
     3x          Label 9265 am_RunNextObject
     2x          Label 9195 am_SwapVideoPage
     2x          Equ   0004 anim
     0x          Label 9311 AnimateSprite
     1x          Label 9341 Anim_dyn
     1x          Label 9390 Anim_End
     1x          Label 9387 Anim_End_FA
     1x          Label 937C Anim_End_FB
     1x          Label 936C Anim_End_FC
     1x          Label 9364 Anim_End_FD
     1x          Label 9353 Anim_End_FE
     1x          Label 935B Anim_End_FE_dyn
     1x          Label 9348 Anim_End_FF
     8x          Equ   0008 anim_frame
     4x          Equ   0009 anim_frame_duration
     2x          Label 9333 Anim_Next
     1x          Label 931F Anim_Run
     1x          Label 9347 Anim_Wait
     0x          Label 9AB2 BBA0
     1x          Label 9ABB BBA1
     1x          Label 9ADC BBA_DivideCell
     1x          Label 9AE1 BBA_dyn
     1x          Label 9AD1 BBA_FitCell
     2x          Label 9AC2 BBA_Next
     2x          Label 9AF2 BBA_rts
     0x          Label 9B01 BBF0
     1x          Label 9B11 BBF1
     1x          Label 9B2C BBF_AddNewEntry
     3x          Label 9B31 BBF_AddNewEntryAtEnd
     1x          Label 9B70 BBF_ExpandAtEnd
     1x          Label 9B4F BBF_ExpandAtStart
     1x          Label 9B37 BBF_FindFreeSlot
     0x          Label 9B5A BBF_Join
     2x          Label 9B1F BBF_Next
     4x          Label 9B7B BBF_rts
     1x          Label 9B3F BBF_SetNewEntry
     2x          Label 9B46 BBF_SetNewEntryNextentry
     1x          Label 9B4B BBF_SetNewEntryPrevLink
     2x          Equ   0001 bckdraw_routine
     2x          Label 9AAB BgBufferAlloc
     2x          Label 9AF4 BgBufferFree
     0x          Label 91D0 Black_palette
     0x          Equ   0007 buf_bgdata
     2x          Equ   0024 buf_Lst_Priority_Unset
     2x          Equ   000D buf_onscreen
     1x          Equ   0005 buf_prev_mapping_frame
     0x          Equ   000B buf_prev_x2_pixel
     1x          Equ   0009 buf_prev_x_pixel
     0x          Equ   000C buf_prev_y2_pixel
     0x          Equ   000A buf_prev_y_pixel
     5x          Equ   0000 buf_priority
     5x          Equ   0003 buf_priority_next_obj
     2x          Equ   0001 buf_priority_prev_obj
    33x          Equ   0000 buf_Tbl_Priority_First_Entry
    18x          Equ   0012 buf_Tbl_Priority_Last_Entry
     0x          Equ   0040 c1_button_A_mask
     0x          Equ   0002 c1_button_down_mask
     0x          Equ   0004 c1_button_left_mask
     0x          Equ   0008 c1_button_right_mask
     0x          Equ   0001 c1_button_up_mask
     0x          Equ   0080 c2_button_A_mask
     0x          Equ   0020 c2_button_down_mask
     0x          Equ   0040 c2_button_left_mask
     0x          Equ   0080 c2_button_right_mask
     0x          Equ   0010 c2_button_up_mask
     7x          Equ   0003 cell_end
     5x          Equ   0040 cell_size
     5x          Equ   0001 cell_start
     0x          Equ   6000 cell_start_adr
     1x          Label 9443 CheckSpritesRefresh
     3x          Label 940D ClearObj
     1x          Label 9435 CLO_1
     1x          Label 9439 CLO_2
     3x          Label 91AF cpt
     0x          Label 9520 CSR_CheckDelHide
     2x          Label 9602 CSR_CheckDraw
     3x          Label 95C5 CSR_CheckErase
     0x          Label 953A CSR_CheckPlayFieldCoord
     1x          Label 95A6 CSR_CheckVerticalPosition
     1x          Label 9580 CSR_DoNotDisplaySprite
     2x          Label 959F CSR_NextObject
     1x          Label 94A8 CSR_P1B0
     1x          Label 9508 CSR_P1B1
     1x          Label 949D CSR_P2B0
     1x          Label 94FD CSR_P2B1
     1x          Label 9492 CSR_P3B0
     1x          Label 94F2 CSR_P3B1
     1x          Label 9487 CSR_P4B0
     1x          Label 94E7 CSR_P4B1
     1x          Label 947C CSR_P5B0
     1x          Label 94DC CSR_P5B1
     1x          Label 9471 CSR_P6B0
     1x          Label 94D1 CSR_P6B1
     1x          Label 9466 CSR_P7B0
     1x          Label 94C6 CSR_P7B1
     0x          Label 9459 CSR_P8B0
     0x          Label 94B9 CSR_P8B1
    21x          Label 9514 CSR_ProcessEachPriorityLevel
     1x          Label 94B3 CSR_rtsB0
     1x          Label 9513 CSR_rtsB1
     0x          Label 9454 CSR_SetBuffer0
     1x          Label 94B4 CSR_SetBuffer1
     3x          Label 9635 CSR_SetDrawFalse
     0x          Label 9623 CSR_SetDrawTrue
     2x          Label 95FD CSR_SetEraseFalse
     3x          Label 95F0 CSR_SetEraseTrue
    10x          Label 95BD CSR_SetOutOfRange
     0x          Label 9443 CSR_Start
     0x          Label 9526 CSR_UpdSpriteImageBasedOnMirror
    18x          Label 943D cur_priority
     5x          Label 9441 cur_ptr_sub_obj_draw
     7x          Label 943F cur_ptr_sub_obj_erase
     0x          Label 93D9 DeleteObject
     0x          Label 93D3 DeleteObject_x
     2x          Label 92AC DisplaySprite
     0x          Label 92A6 DisplaySprite_x
     0x          Equ   604F dk_destination
     0x          Equ   6049 dk_lecteur
     0x          Equ   604A dk_piste
     0x          Equ   604C dk_secteur
     1x          Label 940B DOB_rts
     1x          Label 93DB DOB_Start
     0x          Label 93EA DOB_TestOnscreen1
     1x          Label 93FB DOB_TestOnscreen1Delete
     2x          Label 9405 DOB_ToDeleteFlag
     0x          Label 93E0 DOB_Unset0
     1x          Label 93EF DOB_Unset1
     2x          Label 9237 Dpad_Held
     0x          Label 9239 Dpad_Press
    27x          Label 80A8 DPS_buffer_0
    25x          Label 8128 DPS_buffer_1
     1x          Label 9917 DrawSprites
     2x          Equ   0004 draw_routine
     1x          Label 99F1 DRS_DrawWithoutBackupB0
     1x          Label 9A8E DRS_DrawWithoutBackupB1
     1x          Label 9A1A DRS_dyn1
     1x          Label 9A2E DRS_dyn2
     1x          Label 99DA DRS_dyn3B0
     1x          Label 9A77 DRS_dyn3B1
     1x          Label 9A05 DRS_dyn4B0
     1x          Label 9AA2 DRS_dyn4B1
     3x          Label 99EB DRS_NextObjectB0
     3x          Label 9A88 DRS_NextObjectB1
     1x          Label 9954 DRS_P1B0
     1x          Label 9995 DRS_P1B1
     1x          Label 994C DRS_P2B0
     1x          Label 998D DRS_P2B1
     1x          Label 9944 DRS_P3B0
     1x          Label 9985 DRS_P3B1
     1x          Label 993C DRS_P4B0
     1x          Label 997D DRS_P4B1
     1x          Label 9934 DRS_P5B0
     1x          Label 9975 DRS_P5B1
     1x          Label 992C DRS_P6B0
     1x          Label 996D DRS_P6B1
     1x          Label 9924 DRS_P7B0
     1x          Label 9965 DRS_P7B1
     0x          Label 991C DRS_P8B0
     1x          Label 995D DRS_P8B1
    10x          Label 999E DRS_ProcessEachPriorityLevelB0
    10x          Label 9A3B DRS_ProcessEachPriorityLevelB1
     1x          Label 995C DRS_rtsB0
     1x          Label 999D DRS_rtsB1
     0x          Label 9917 DRS_Start
     4x          Label 9A0E DRS_XYToAddress
     0x          Label 9A11 DRS_XYToAddressRAMAFirst
     1x          Label 9A25 DRS_XYToAddressRAMBFirst
     0x          Label 92D6 DSP_addFirstNode
     1x          Label 92E5 DSP_addToExistingNode
     1x          Label 92C3 DSP_BufferPositionned
     1x          Label 92FE DSP_ChangePriority
     1x          Label 92CF DSP_CheckLastEntry
     0x          Label 92CD DSP_InitPriority
     1x          Label 92F1 DSP_LinkBuffer1
     1x          Label 92F4 DSP_LinkCurWithPrev
     3x          Label 930F DSP_rts
     0x          Label 92B3 DSP_SetBuffer0
     1x          Label 92BC DSP_SetBuffer1
     1x          Label 92AE DSP_Start
     1x          Label 82FC Dynamic_Object_RAM
     3x          Label 906C Dynamic_Object_RAM_End
     1x          Equ   0007 entry_size
     1x          Label 9641 EraseSprites
     4x          Equ   0009 erase_nb_cell
     2x          Equ   0007 erase_routine
     1x          Label 977A ESP_CallEraseRoutineB0
     1x          Label 978D ESP_CallEraseRoutineB0_00
     1x          Label 980F ESP_CallEraseRoutineB1
     1x          Label 9822 ESP_CallEraseRoutineB1_00
     0x          Label 9719 ESP_CheckEraseB0
     0x          Label 97AE ESP_CheckEraseB1
     8x          Label 970D ESP_CheckPriorityB0
     8x          Label 97A2 ESP_CheckPriorityB1
     0x          Label 9797 ESP_FreeEraseBufferB0
     0x          Label 982C ESP_FreeEraseBufferB1
     3x          Label 9749 ESP_NextObjectB0
     3x          Label 97DE ESP_NextObjectB1
     0x          Label 9646 ESP_P1B0
     1x          Label 96A1 ESP_P1B1
     1x          Label 9653 ESP_P2B0
     1x          Label 96AE ESP_P2B1
     1x          Label 965E ESP_P3B0
     1x          Label 96BB ESP_P3B1
     1x          Label 9669 ESP_P4B0
     1x          Label 96C8 ESP_P4B1
     1x          Label 9674 ESP_P5B0
     1x          Label 96D5 ESP_P5B1
     1x          Label 967F ESP_P6B0
     1x          Label 96E2 ESP_P6B1
     1x          Label 968A ESP_P7B0
     1x          Label 96EF ESP_P7B1
     1x          Label 9695 ESP_P8B0
     1x          Label 96FC ESP_P8B1
     9x          Label 970A ESP_ProcessEachPriorityLevelB0
     9x          Label 979F ESP_ProcessEachPriorityLevelB1
     1x          Label 96A0 ESP_rtsB0
     1x          Label 9709 ESP_rtsB1
     0x          Label 9641 ESP_Start
     2x          Label 9774 ESP_SubCheckOverlayB0
     2x          Label 9809 ESP_SubCheckOverlayB1
     0x          Label 975A ESP_SubDrawCheckCollisionB0
     0x          Label 97EF ESP_SubDrawCheckCollisionB1
     4x          Label 9752 ESP_SubDrawSearchB0
     4x          Label 97E7 ESP_SubDrawSearchB1
     1x          Label 974F ESP_SubDrawSpriteSearchInitB0
     1x          Label 97E4 ESP_SubDrawSpriteSearchInitB1
     0x          Label 972D ESP_SubEraseCheckCollisionB0
     0x          Label 97C2 ESP_SubEraseCheckCollisionB1
     4x          Label 9725 ESP_SubEraseSearchB0
     4x          Label 97BA ESP_SubEraseSearchB1
     0x          Label 9722 ESP_SubEraseSpriteSearchInitB0
     0x          Label 97B7 ESP_SubEraseSpriteSearchInitB1
     0x          Label 9711 ESP_UnsetCheckRefreshB0
     0x          Label 97A6 ESP_UnsetCheckRefreshB1
     1x          Label 979A ESP_UnsetOnScreenFlagB0
     1x          Label 982F ESP_UnsetOnScreenFlagB1
     0x          Equ   001B ext_variables
     2x          Label 9238 Fire_Held
     0x          Label 923A Fire_Press
     0x          Label 9165 Glb_Abs_H_Distance_Mainc
     1x          Label 601C Glb_Camera_X_Pos
     1x          Label 601E Glb_Camera_Y_Pos
     0x          Label 915D Glb_Closest_Player
    10x          Label 601A Glb_Cur_Wrk_Screen_Id
     1x          Label 601B Glb_Cur_Wrk_Screen_Id_x2
     0x          Label 9167 Glb_H_Distance_Sidek
     1x          Label 915C Glb_MainCharacter_Is_Dead
     0x          Label 9161 Glb_Player_H_Distance
     0x          Label 9160 Glb_Player_Is_Above
     0x          Label 915F Glb_Player_Is_Left
     0x          Label 9163 Glb_Player_V_Distance
     2x          Label 6020 Glb_Sprite_Screen_Pos_PartA
     2x          Label 6022 Glb_Sprite_Screen_Pos_PartB
     0x          Equ   00FE goBackNFrames
     0x          Equ   00FD goToAnimation
     0x          Equ   0038 gravity
     0x          Equ   0000 id
     1x          Equ   0010 image_meta_size
     1x          Equ   000A image_x_offset
     1x          Equ   000E image_x_size
     1x          Equ   000C image_y_offset
     2x          Equ   000F image_y_size
     0x          Label 9237 Joypads
     1x          Label 9237 Joypads_Held
     1x          Label 9239 Joypads_Press
     1x          Label 6000 LevelMainLoop
     1x          Label 906C LevelOnly_Object_RAM
     1x          Label 915C LevelOnly_Object_RAM_End
     3x          Label 6024 Lst_FreeCellFirstEntry_0
     3x          Label 7066 Lst_FreeCellFirstEntry_1
     1x          Label 6026 Lst_FreeCell_0
     1x          Label 7068 Lst_FreeCell_1
     8x          Label 80CC Lst_Priority_Unset_0
     7x          Label 814C Lst_Priority_Unset_1
     2x          Equ   000A mapping_frame
     0x          Label 92A4 MarkObjGone
    14x          Equ   0000 nb_cells
     2x          Equ   002B nb_dynamic_objects
     2x          Equ   0082 nb_free_cells
     0x          Equ   0003 nb_level_objects
     4x          Equ   002D nb_objects
     4x          Equ   0008 nb_priority_levels
     1x          Equ   0002 nb_reserved_objects
     0x          Equ   00FC nextRoutine
     0x          Equ   00FA nextSubRoutine
     9x          Equ   0005 next_entry
     4x          Equ   0050 next_object
     1x          Label 91B0 Normal_palette
     0x          Label 9391 ObjectMove
     1x          Label 825C Object_RAM
     2x          Label 915C Object_RAM_End
     8x          Equ   0050 object_size
     0x          Label 825C Obj_MainCharacter
     0x          Label 82AC Obj_Sidekick
     0x          Label 90BC Obj_SonicDust
     0x          Label 910C Obj_TailsDust
     0x          Label 906C Obj_TailsTails
     2x          Equ   0000 page_bckdraw_routine
     2x          Equ   0003 page_draw_routine
     2x          Equ   0006 page_erase_routine
     2x          Equ   0006 prev_anim
     5x          Equ   0003 priority
     2x          Equ   0000 Ptr_palette
     1x          Label 923B ReadJoypads
     4x          Equ   0010 render_fixedoverlay_mask
    15x          Equ   0002 render_flags
     0x          Equ   0040 render_free2_mask
     0x          Equ   0080 render_free3_mask
     2x          Equ   0008 render_hide_mask
     1x          Equ   0004 render_playfieldcoord_mask
     4x          Equ   0020 render_todelete_mask
     2x          Equ   0001 render_xmirror_mask
     2x          Equ   0002 render_ymirror_mask
     1x          Label 825C Reserved_Object_RAM
     1x          Label 82FC Reserved_Object_RAM_End
     0x          Equ   00FF resetAnim
     0x          Equ   00FB resetAnimAndSubRoutine
     2x          Equ   0018 routine
     3x          Equ   0019 routine_secondary
     3x          Equ   003B rsv_bgdata_0
     3x          Equ   0049 rsv_bgdata_1
     2x          Equ   0034 rsv_buffer_0
     2x          Equ   0042 rsv_buffer_1
    10x          Equ   002C rsv_curr_mapping_frame
     6x          Equ   0041 rsv_onscreen_0
     9x          Equ   004F rsv_onscreen_1
     0x          Equ   002A rsv_prev_anim
     3x          Equ   0039 rsv_prev_mapping_frame_0
     3x          Equ   0047 rsv_prev_mapping_frame_1
     2x          Equ   003F rsv_prev_x2_pixel_0
     2x          Equ   004D rsv_prev_x2_pixel_1
     2x          Equ   003D rsv_prev_x_pixel_0
     2x          Equ   004B rsv_prev_x_pixel_1
     0x          Equ   0040 rsv_prev_y2_pixel_0
     0x          Equ   004E rsv_prev_y2_pixel_1
     0x          Equ   003E rsv_prev_y_pixel_0
     0x          Equ   004C rsv_prev_y_pixel_1
     4x          Equ   0034 rsv_priority_0
     4x          Equ   0042 rsv_priority_1
     9x          Equ   0037 rsv_priority_next_obj_0
     9x          Equ   0045 rsv_priority_next_obj_1
     5x          Equ   0035 rsv_priority_prev_obj_0
     5x          Equ   0043 rsv_priority_prev_obj_1
     3x          Equ   0030 rsv_ptr_sub_object_draw
     4x          Equ   002E rsv_ptr_sub_object_erase
     4x          Equ   0001 rsv_render_checkrefresh_mask
     5x          Equ   0004 rsv_render_displaysprite_mask
     6x          Equ   0002 rsv_render_erasesprite_mask
    23x          Equ   0029 rsv_render_flags
     4x          Equ   0008 rsv_render_outofrange_mask
     9x          Equ   0032 rsv_x2_pixel
     5x          Equ   0033 rsv_y2_pixel
     1x          Label 9262 RunNextObject
     2x          Label 929A RunNextObjectDisplayOnly
     3x          Label 925C RunObject
     2x          Label 9290 RunObjectDisplayOnly
     1x          Label 9253 RunObjects
     1x          Label 926C RunObjectsWhenPlayerIsDead
     0x          Label 9257 RunObjects_01
     0x          Label 926B RunObjects_End
     2x          Equ   00C8 screen_height
     1x          Equ   00A0 screen_width
     1x          Label 921F SetColor
     0x          Label 93BC SingleObjLoad2
     1x          Label 93C6 SingleObjLoad2_01
     2x          Label 93D2 SingleObjLoad2_02
     1x          Equ   001A status
     0x          Equ   0004 status_bit2
     0x          Equ   0080 status_bit7
     0x          Equ   0002 status_inair
     0x          Equ   0010 status_jumpingafterrolling
     0x          Equ   0004 status_jumporroll
     0x          Equ   0020 status_mainchar_pushing
     0x          Equ   0008 status_mainchar_standing
     0x          Equ   0008 status_norgroundnorfall
     0x          Equ   0020 status_pushing
     0x          Equ   0040 status_sidekick_pushing
     0x          Equ   0010 status_sidekick_standing
     0x          Equ   0040 status_underwater
     1x          Equ   0001 status_x_orientation
     1x          Equ   0002 status_y_orientation
     0x          Equ   0001 subtype
     0x          Label 9188 SwapVideoPage
     1x          Label 91A9 SwapVideoPage_01
     1x          Label 80A8 Tbl_Priority_First_Entry_0
     1x          Label 8128 Tbl_Priority_First_Entry_1
     2x          Label 80BA Tbl_Priority_Last_Entry_0
     1x          Label 813A Tbl_Priority_Last_Entry_1
     1x          Label 8202 Tbl_Sub_Object_Draw
     1x          Label 81A8 Tbl_Sub_Object_Erase
     0x          Label 9839 UDP_B0
     1x          Label 98A8 UDP_B1
     1x          Label 9882 UDP_ChainNextB0
     1x          Label 98F1 UDP_ChainNextB1
     1x          Label 9861 UDP_ChainPrevB0
     1x          Label 98D0 UDP_ChainPrevB1
     1x          Label 988C UDP_CheckDeleteB0
     1x          Label 98FB UDP_CheckDeleteB1
     2x          Label 983C UDP_CheckEndB0
     2x          Label 98AB UDP_CheckEndB1
     1x          Label 986B UDP_CheckPrioNextB0
     1x          Label 98DA UDP_CheckPrioNextB1
     1x          Label 9848 UDP_CheckPrioPrevB0
     1x          Label 98B7 UDP_CheckPrioPrevB1
     0x          Label 9841 UDP_InitListB0
     0x          Label 98B0 UDP_InitListB1
     3x          Label 98A1 UDP_SetNewPrioB0
     3x          Label 9910 UDP_SetNewPrioB1
     0x          Label 9834 UDP_Start
     1x          Label 9834 UnsetDisplayPriority
     1x          Label 9210 UpdatePalette
     2x          Label 91AD Vint_runcount
     2x          Label 9169 WaitVBL
     1x          Label 916E WaitVBL_01
     0x          Label 91F0 White_palette
    12x          Equ   0012 x_pixel
     5x          Equ   000C x_pos
     0x          Equ   000E x_sub
     2x          Equ   0014 x_vel
     8x          Equ   0013 y_pixel
     5x          Equ   000F y_pos
     0x          Equ   0011 y_sub
     2x          Equ   0016 y_vel

