/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : .\Sonic2\GeneratedCode\MainEngine.asm
 * Fichier destination : .\Sonic2\GeneratedCode\TMP.BIN
 * Contenu :
 *     Main     0:MAIN.ASM     3549
 *     Include  0:CONSTANT.ASM 4697
 *     Include  0:WAITVBL.ASM  1923
 *     Include  0:UPDTPAL.ASM  629
 *     Include  0:READJPDS.ASM 1735
 *     Include  0:RUNOBJTS.ASM 1245
 *     Include  0:MRKOBJGN.ASM 481
 *     Include  0:DISPLSPR.ASM 2000
 *     Include  0:ANIMSPR.ASM  1983
 *     Include  0:OBJMOVE.ASM  752
 *     Include  0:OBJLOAD.ASM  1109
 *     Include  0:DELETOBJ.ASM 1178
 *     Include  0:CLEAROBJ.ASM 560
 *     Include  0:CHECKSPR.ASM 6159
 *     Include  0:ERASESPR.ASM 6826
 *     Include  0:UNSETDSP.ASM 2828
 *     Include  0:DRAWSPR.ASM  4745
 *     Include  0:BGBALLOC.ASM 958
 *     Include  0:BGBFREE.ASM  1735
 *     Include  0:PALETTE.ASM  19
 *     Include  0:IMAGEIDX.ASM 19
 *     Include  0:ANIMSCPT.ASM 19
 *     Include  0:OBJINDEX.ASM 34
 *     Include  0:LOADACT.ASM  32
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
    165                                   INCLUD CONSTANT
    166                           * --------------------------------------->>
    167                           * Constants
    168                           *
    169                           * Naming convention
    170                           * -----------------
    171                           * - lower case
    172                           * - underscore-separated names
    173                           *
    174                           * --------------------------------------->>
    175
    176                           * =======================================>>
    177                           * TO8 Registers
    178                           * =======================================>>
    179
    180                  6049     dk_lecteur                    equ $6049
    181                  604A     dk_piste                      equ $604A
    182                  604B     dk_pisteL                     equ $604B
    183                  604C     dk_secteur                    equ $604C
    184                  604F     dk_destination                equ $604F
    185
    186                           * =======================================>>
    187                           * Display Constants
    188                           * =======================================>>
    189
    190                  00A0     screen_width                  equ 160 ; s>>
    191                  00C8     screen_height                 equ 200 ; s>>
    192                  0008     nb_priority_levels            equ 8   ; n>>
    193
    194                           * =======================================>>
    195                           * Physics Constants
    196                           * =======================================>>
    197
    198                  0038     gravity                       equ $38 ; G>>
    199
    200                           * =======================================>>
    201                           * Animation Constants
    202                           * =======================================>>
    203
    204                  00FF     _resetAnim                    equ $FF
    205                  00FE     _goBackNFrames                equ $FE
    206                  00FD     _goToAnimation                equ $FD
    207                  00FC     _nextRoutine                  equ $FC
    208                  00FB     _resetAnimAndSubRoutine       equ $FB
    209                  00FA     _nextSubRoutine               equ $FA
    210
    211                           * =======================================>>
    212                           * Images Constants
    213                           * =======================================>>
    214
    215                  0000     page_bckdraw_routine          equ 0
    216                  0001     bckdraw_routine               equ 1
    217                  0003     page_draw_routine             equ 3
    218                  0004     draw_routine                  equ 4
    219                  0006     page_erase_routine            equ 6
    220                  0007     erase_routine                 equ 7
    221                  0009     erase_nb_cell                 equ 9
    222                  000A     image_x_offset                equ 10
    223                  000C     image_y_offset                equ 12
    224                  000E     image_x_size                  equ 14
    225                  000F     image_y_size                  equ 15 ; mu>>
    226                  0010     image_meta_size               equ 16 ; nu>>
    227
    228                           * =======================================>>
    229                           * Object Constants
    230                           * =======================================>>
    231
    232                  0002     nb_reserved_objects           equ 2
    233                  003B     nb_dynamic_objects            equ 59
    234                  0003     nb_level_objects              equ 3
    235                  003D     nb_objects                    equ (nb_res>>
    236
    237                           * --------------------------------------->>
    238                           * Object Status Table offsets
    239                           * --------------------------------------->>
    240
    241                  0050     object_size                   equ 80 ; th>>
    242                  0050     next_object                   equ object_>>
    243
    244                  0000     id                            equ 0      >>
    245                  0001     subtype                       equ 1      >>
    246                  0002     render_flags                  equ 2
    247
    248                           * --- render_flags bitfield variables --->>
    249                  0001     render_xmirror_mask           equ $01 ; (>>
    250                  0002     render_ymirror_mask           equ $02 ; (>>
    251                  0004     render_playfieldcoord_mask    equ $04 ; (>>
    252                  0008     render_hide_mask              equ $08 ; (>>
    253                  0010     render_fixedoverlay_mask      equ $10 ; (>>
    254                  0020     render_todelete_mask          equ $20 ; (>>
    255                  0040     render_free2_mask             equ $40 ; (>>
    256                  0080     render_free3_mask             equ $80 ; (>>
    257                            
    258                  0003     priority                      equ 3      >>
    259                  0004     anim                          equ 4  ; an>>
    260                  0006     prev_anim                     equ 6  ; an>>
    261                  0008     anim_frame                    equ 8      >>
    262                  0009     anim_frame_duration           equ 9      >>
    263                  000A     mapping_frame                 equ 10 ; an>>
    264                  000C     x_pos                         equ 12 ; an>>
    265                  000E     x_sub                         equ 14     >>
    266                  000F     y_pos                         equ 15 ; an>>
    267                  0011     y_sub                         equ 17     >>
    268                  0012     x_pixel                       equ 18     >>
    269                  0013     y_pixel                       equ 19     >>
    270                  0014     x_vel                         equ 20 ; an>>
    271                  0016     y_vel                         equ 22 ; an>>
    272                  0018     routine                       equ 24     >>
    273                  0019     routine_secondary             equ 25     >>
    274                  001A     status                        equ 26
    275
    276                           * --- status bitfield variables for objec>>
    277                  0001     status_x_orientation          equ   $01 ;>>
    278                  0002     status_y_orientation          equ   $02 ;>>
    279                  0004     status_bit2                   equ   $04 ;>>
    280                  0008     status_mainchar_standing      equ   $08 ;>>
    281                  0010     status_sidekick_standing      equ   $10 ;>>
    282                  0020     status_mainchar_pushing       equ   $20 ;>>
    283                  0040     status_sidekick_pushing       equ   $40 ;>>
    284                  0080     status_bit7                   equ   $80 ;>>
    285
    286                           * --- status bitfield variables for Main >>
    287                  0002     status_inair                  equ   $02 ;>>
    288                  0004     status_jumporroll             equ   $04 ;>>
    289                  0008     status_norgroundnorfall       equ   $08 ;>>
    290                  0010     status_jumpingafterrolling    equ   $10 ;>>
    291                  0020     status_pushing                equ   $20 ;>>
    292                  0040     status_underwater             equ   $40 ;>>
    293
    294                  001B     ext_variables                 equ 27 ; to>>
    295
    296                           * --------------------------------------->>
    297                           * reserved variables (engine)
    298
    299                  0029     rsv_render_flags              equ 41
    300
    301                           * --- rsv_render_flags bitfield variables>>
    302                  0001     rsv_render_checkrefresh_mask  equ $01 ; (>>
    303                  0002     rsv_render_erasesprite_mask   equ $02 ; (>>
    304                  0004     rsv_render_displaysprite_mask equ $04 ; (>>
    305                  0008     rsv_render_outofrange_mask    equ $08 ; (>>
    306
    307                  002A     rsv_prev_anim                 equ 42 ; an>>
    308                  002C     rsv_curr_mapping_frame        equ 44 ; an>>
    309                  002E     rsv_ptr_sub_object_erase      equ 46 ; an>>
    310                  0030     rsv_ptr_sub_object_draw       equ 48 ; an>>
    311                  0032     rsv_x2_pixel                  equ 50     >>
    312                  0033     rsv_y2_pixel                  equ 51     >>
    313
    314                           * --------------------------------------->>
    315                           * reserved variables (engine) - buffer sp>>
    316
    317                  0034     rsv_buffer_0                  equ 52 ; St>>
    318                  0034     rsv_priority_0                equ 52 ; in>>
    319                  0035     rsv_priority_prev_obj_0       equ 53 ; an>>
    320                  0037     rsv_priority_next_obj_0       equ 55 ; an>>
    321                  0039     rsv_prev_mapping_frame_0      equ 57 ; an>>
    322                  003B     rsv_bgdata_0                  equ 59 ; an>>
    323                  003D     rsv_prev_x_pixel_0            equ 61 ; pr>>
    324                  003E     rsv_prev_y_pixel_0            equ 62 ; pr>>
    325                  003F     rsv_prev_x2_pixel_0           equ 63 ; pr>>
    326                  0040     rsv_prev_y2_pixel_0           equ 64 ; pr>>
    327                  0041     rsv_onscreen_0                equ 65 ; ha>>
    328
    329                  0042     rsv_buffer_1                  equ 66 ; St>>
    330                  0042     rsv_priority_1                equ 66 ; in>>
    331                  0043     rsv_priority_prev_obj_1       equ 67 ; an>>
    332                  0045     rsv_priority_next_obj_1       equ 69 ; an>>
    333                  0047     rsv_prev_mapping_frame_1      equ 71 ; an>>
    334                  0049     rsv_bgdata_1                  equ 73 ; an>>
    335                  004B     rsv_prev_x_pixel_1            equ 75 ; pr>>
    336                  004C     rsv_prev_y_pixel_1            equ 76 ; pr>>
    337                  004D     rsv_prev_x2_pixel_1           equ 77 ; pr>>
    338                  004E     rsv_prev_y2_pixel_1           equ 78 ; pr>>
    339                  004F     rsv_onscreen_1                equ 79 ; ha>>
    340
    341                  0000     buf_priority                  equ 0  ; of>>
    342                  0001     buf_priority_prev_obj         equ 1  ;
    343                  0003     buf_priority_next_obj         equ 3  ;
    344                  0005     buf_prev_mapping_frame        equ 5  ;
    345                  0007     buf_bgdata                    equ 7  ;
    346                  0009     buf_prev_x_pixel              equ 9  ;
    347                  000A     buf_prev_y_pixel              equ 10 ;
    348                  000B     buf_prev_x2_pixel             equ 11 ;
    349                  000C     buf_prev_y2_pixel             equ 12 ;
    350                  000D     buf_onscreen                  equ 13 ;
    351
     10        6100                       org   $6100
     11                  00               setdp $00
     12
     13  8     6100 BD   84F9             jsr   LoadAct
     14
     15                           * =======================================>>
     16                           * Main Loop
     17                           * =======================================>>
     18        6103               LevelMainLoop
     19  8     6103 BD   7AEE             jsr   WaitVBL
     20  8     6106 BD   7B97             jsr   UpdatePalette
     21  8     6109 BD   7BC2             jsr   ReadJoypads
     22  8     610C BD   7BDA             jsr   RunObjects
     23  8     610F BD   7DB8             jsr   CheckSpritesRefresh
     24  8     6112 BD   7FB6             jsr   EraseSprites
     25  8     6115 BD   81A9             jsr   UnsetDisplayPriority
     26  8     6118 BD   828C             jsr   DrawSprites
     27  3     611B 20   E6               bra   LevelMainLoop
     28
     29                           * =======================================>>
     30                           * Global Data
     31                           *
     32                           * Naming convention
     33                           * -----------------
     34                           * - underscore-separated names
     35                           * - first letter of each word in upper ca>>
     36                           *
     37                           * Templates
     38                           * ---------
     39                           * - Glb_*        : global variable
     40                           * - Tbl_*        : data table
     41                           * - Lst_*        : list is a data table w>>
     42                           * - Obj_*        : address of an object i>>
     43                           *
     44                           * - *_Object_RAM : sub group of objects
     45                           * - *_end        : data end label
     46                           *
     47                           * =======================================>>
     48
     49                           * --------------------------------------->>
     50                           * Display
     51                           * --------------------------------------->>
     52                            
     53        611D 00            Glb_Cur_Wrk_Screen_Id         fcb   $00  >>
     54        611E 00            Glb_Cur_Wrk_Screen_Id_x2      fcb   $00  >>
     55        611F 0000          Glb_Camera_X_Pos              fdb   $0000>>
     56        6121 0000          Glb_Camera_Y_Pos              fdb   $0000>>
     57        6123 0000          Glb_Sprite_Screen_Pos_PartA   fdb   $0000>>
     58        6125 0000          Glb_Sprite_Screen_Pos_PartB   fdb   $0000>>
     59
     60                           * --------------------------------------->>
     61                           * Background Backup Cells - BBC
     62                           * --------------------------------------->>
     63
     64                           * ----- Cell variables
     65                  0000     nb_cells                      equ   0
     66                  0001     cell_start                    equ   1
     67                  0003     cell_end                      equ   3
     68                  0005     next_entry                    equ   5
     69                  0007     entry_size                    equ   7
     70
     71                           * ----- Cells List
     72                  0082     nb_free_cells                 equ   130
     73                  0040     cell_size                     equ   64   >>
     74                  6000     cell_start_adr                equ   $6000>>
     75
     76        6127 0000          Lst_FreeCellFirstEntry_0      fdb   $0000>>
     77        6129               Lst_FreeCell_0                rmb   entry>>
     78
     79        62F0 0000          Lst_FreeCellFirstEntry_1      fdb   $0000>>
     80        62F2               Lst_FreeCell_1                rmb   entry>>
     81
     82                           * --------------------------------------->>
     83                           * Display Priority Structure - DPS
     84                           * --------------------------------------->>
     85
     86        64B9               DPS_buffer_0
     87        64B9               Tbl_Priority_First_Entry_0    rmb   2+(nb>>
     88        64CB               Tbl_Priority_Last_Entry_0     rmb   2+(nb>>
     89        64DD 64DF          Lst_Priority_Unset_0          fdb   Lst_P>>
     90        64DF                                             rmb   (nb_o>>
     91        6559               DPS_buffer_1
     92        6559               Tbl_Priority_First_Entry_1    rmb   2+(nb>>
     93        656B               Tbl_Priority_Last_Entry_1     rmb   2+(nb>>
     94        657D 657F          Lst_Priority_Unset_1          fdb   Lst_P>>
     95        657F                                             rmb   (nb_o>>
     96                            
     97                  0000     buf_Tbl_Priority_First_Entry  equ   0
     98                  0012     buf_Tbl_Priority_Last_Entry   equ   Tbl_P>>
     99                  0024     buf_Lst_Priority_Unset        equ   Lst_P>>
    100
    101                           * --------------------------------------->>
    102                           * Sub Priority Objects List - SOL
    103                           * --------------------------------------->>
    104
    105        65F9               Tbl_Sub_Object_Erase          rmb   nb_ob>>
    106        6673               Tbl_Sub_Object_Draw           rmb   nb_ob>>
    107
    108                           * --------------------------------------->>
    109                           * Object Status Table - OST
    110                           * --------------------------------------->>
    111                            
    112        66ED               Object_RAM *@globals
    113        66ED               Reserved_Object_RAM
    114        66ED               Obj_MainCharacter             rmb   objec>>
    115        673D               Obj_Sidekick                  rmb   objec>>
    116        678D               Reserved_Object_RAM_End
    117
    118        678D               Dynamic_Object_RAM            rmb   nb_dy>>
    119        79FD               Dynamic_Object_RAM_End
    120
    121        79FD               LevelOnly_Object_RAM                     >>
    122        79FD               Obj_TailsTails                rmb   objec>>
    123        7A4D               Obj_SonicDust                 rmb   objec>>
    124        7A9D               Obj_TailsDust                 rmb   objec>>
    125        7AED               LevelOnly_Object_RAM_End
    126        7AED               Object_RAM_End
    127
    128                           * --------------------------------------->>
    129                           * Lifecycle
    130                           * --------------------------------------->>
    131
    132        7AED               Glb_MainCharacter_Is_Dead     rmb   $1,0
    133
    134                           * =======================================>>
    135                           * Routines
    136                           * =======================================>>
    352                                   INCLUD WAITVBL
    353                           *****************************************>>
    354                           * Attente VBL
    355                           * Alternance de la page 2 et 3 entre affi>>
    356                           * Alternance de la RAMA et RAM B dans l'e>>
    357                           * --------------------------------------->>
    358                           *
    359                           * Page Affichee par l'automate Video
    360                           * ----------------------------------
    361                           *   $E7DD determine la page affichee a l'>>
    362                           *   bit7=0 bit6=0 bit5=0 bit4=0 (#$0_) : >>
    363                           *   bit7=0 bit6=1 bit5=0 bit4=0 (#$4_) : >>
    364                           *   bit7=1 bit6=0 bit5=0 bit4=0 (#$8_) : >>
    365                           *   bit7=1 bit6=1 bit5=0 bit4=0 (#$C_) : >>
    366                           *   bit3 bit2 bit1 bit0  (#$_0 a #$_F) : >>
    367                           *   Remarque : bit5 et bit4 utilisable un>>
    368                           *
    369                           * Page en espace cartouche (ecriture dans>>
    370                           * --------------------------------------->>
    371                           *   $E7E6 determine la page visible dans >>
    372                           *   bit7 toujours a 0
    373                           *   bit6=1 : ecriture autorisee
    374                           *   bit5=1 : espace cartouche recouvert p>>
    375                           *   bit4=0 : CAS1N valide : banques 0-15 >>
    376                           *   bit5=1 bit4=0 bit3=0 bit2=0 bit1=0 bi>>
    377                           *   ...
    378                           *   bit5=1 bit4=0 bit3=1 bit2=1 bit1=1 bi>>
    379                           *   bit5=1 bit4=1 bit3=0 bit2=0 bit1=0 bi>>
    380                           *   ...
    381                           *   bit5=1 bit4=1 bit3=1 bit2=1 bit1=1 bi>>
    382                           *
    383                           * Demi-Page 0 en espace ecran (4000 a 5FF>>
    384                           * --------------------------------------->>
    385                           *   $E7C3 determine la demi-page de la pa>>
    386                           *   bit0=0 : 8Ko RAMA
    387                           *   bit0=1 : 8ko RAMB
    388                           *
    389                           *****************************************>>
    390        7AEE               WaitVBL
    391  7     7AEE 7D   E7E7             tst   $E7E7              * le fai>>
    392  3     7AF1 2A   FB               bpl   WaitVBL            * tant q>>
    393        7AF3               WaitVBL_01
    394  7     7AF3 7D   E7E7             tst   $E7E7              * le fai>>
    395  3     7AF6 2B   FB               bmi   WaitVBL_01         * tant q>>
    396                            
    397  6     7AF8 FC   7B32             ldd   Vint_runcount
    398  4     7AFB C3   0001             addd  #1
    399  6     7AFE FD   7B32             std   Vint_runcount
    400                            
    401  5     7B01 B6   611D             lda   Glb_Cur_Wrk_Screen_Id
    402  4     7B04 9A   01               ora   1
    403  5     7B06 B7   611D             sta   Glb_Cur_Wrk_Screen_Id
    404  2     7B09 48                    lsla
    405  5     7B0A B7   611E             sta   Glb_Cur_Wrk_Screen_Id_x2
    406                            
    407        7B0D               SwapVideoPage
    408  5     7B0D F6   7B1B             ldb   am_SwapVideoPage+1 * charge>>
    409  2     7B10 C4   40               andb  #$40               * altern>>
    410  2     7B12 CA   80               orb   #$80               * bit7=1>>
    411  5     7B14 F7   E7DD             stb   $E7DD              * change>>
    412  7     7B17 73   7B1B             com   am_SwapVideoPage+1 * altern>>
    413        7B1A               am_SwapVideoPage
    414  2     7B1A C6   00               ldb   #$00
    415  2     7B1C C4   01               andb  #$01               * altern>>
    416  2     7B1E CA   62               orb   #$62               * bit6=1>>
    417  5     7B20 F7   E7E6             stb   $E7E6              * change>>
    418  5     7B23 F6   E7C3             ldb   $E7C3              * charge>>
    419  2     7B26 C4   01               andb  #$01
    420  3     7B28 26   04               bne   SwapVideoPage_01   * si bit>>
    421  7     7B2A 7C   E7C3             inc   $E7C3              * bit0=1>>
    422  5     7B2D 39                    rts
    423        7B2E               SwapVideoPage_01
    424  7     7B2E 7A   E7C3             dec   $E7C3              * bit0=0>>
    425  5     7B31 39                    rts
    426                            
    427        7B32               Vint_runcount rmb   $2,0 *@globals
    428
    429                                   INCLUD UPDTPAL
    430                           *****************************************>>
    431                           * Mise a jour de la palette
    432                           *****************************************>>
    433                           * TODO ajout systeme de refresh pour ne p>>
    434                           * ou integrer le refresh palette en debut>>
    435                           * palette doit etre refresh avant le trac>>
    436
    437        7B34 00            cpt            fcb   $00
    438        7B35 7B37          Ptr_palette    fdb   Normal_palette
    439        7B37               Normal_palette rmb   $20,0   *@globals
    440        7B57               Black_palette  rmb   $20,0   *@globals
    441        7B77               White_palette  rmb   $20,$FF *@globals
    442
    443        7B97               UpdatePalette
    444  6+3   7B97 10AE 9F 7B35         ldy   [Ptr_palette]
    445  5+3   7B9C AE   9F 7B35         ldx   [Ptr_palette]
    446  4+1   7BA0 30   88 20           leax  $20,x
    447  7     7BA3 7F   7B34            clr   cpt                      * r>>
    448        7BA6               SetColor
    449  5     7BA6 B6   7B34             lda   cpt                        >>
    450  2     7BA9 48                   asla                              >>
    451  5     7BAA B7   E7DB            sta   $E7DB                       >>
    452  5+3   7BAD EC   A1              ldd   ,y++                        >>
    453  5     7BAF F7   E7DA            stb   $E7DA                       >>
    454  5     7BB2 B7   E7DA            sta   $E7DA                    * s>>
    455  7     7BB5 7C   7B34            inc   cpt                         >>
    456  7+0   7BB8 10AC 84              cmpy  ,x                       * t>>
    457  3     7BBB 26   E9              bne   SetColor                 * o>>
    458  5     7BBD 39                    rts
    459
    460
    461                                   INCLUD READJPDS
    462                           * --------------------------------------->>
    463                           * Controller Buttons
    464                           *
    465                  0001     c1_button_up_mask            equ   $01 *@>>
    466                  0002     c1_button_down_mask          equ   $02 *@>>
    467                  0004     c1_button_left_mask          equ   $04 *@>>
    468                  0008     c1_button_right_mask         equ   $08 *@>>
    469                  0010     c2_button_up_mask            equ   $10 *@>>
    470                  0020     c2_button_down_mask          equ   $20 *@>>
    471                  0040     c2_button_left_mask          equ   $40 *@>>
    472                  0080     c2_button_right_mask         equ   $80 *@>>
    473                  0040     c1_button_A_mask             equ   $40 *@>>
    474                  0080     c2_button_A_mask             equ   $80 *@>>
    475
    476        7BBE               Joypads
    477        7BBE               Joypads_Held
    478        7BBE 00            Dpad_Held                    fcb   $00 *@>>
    479        7BBF 00            Fire_Held                    fcb   $00 *@>>
    480        7BC0               Joypads_Press
    481        7BC0 00            Dpad_Press                   fcb   $00 *@>>
    482        7BC1 00            Fire_Press                   fcb   $00 *@>>
    483
    484                           *****************************************>>
    485                           * Get joystick parameters
    486                           *
    487                           * Direction des Joypads
    488                           * ---------------------
    489                           * Registre: $E7CC (8bits)
    490                           *
    491                           * Joypad2     Joypad1
    492                           * 1111        1111 (0: appuye | 1: relach>>
    493                           * ||||_Haut   ||||_Haut
    494                           * |||__Bas    |||__Bas
    495                           * ||___Gauche ||___Gauche
    496                           * |____Droite |____Droite
    497                           *
    498                           * Boutons des Joypads
    499                           * -------------------
    500                           * Registre: $E7CD (8bits)
    501                           *
    502                           * 11 000000 (0: appuye | 1: relache)
    503                           * ||[------] 6 bits convertisseur numeriq>>
    504                           * ||_Fire Joypad1
    505                           * |__Fire Joypad2
    506                           *
    507                           * Variables globales: Joypads_Held, Joypa>>
    508                           * --------------------------------------->>
    509                           * (16 bits)
    510                           * Joypad2     Joypad1
    511                           * 0000        0000 (0: relache | 1: appuy>>
    512                           * ||||_Haut   ||||_Haut                  >>
    513                           * |||__Bas    |||__Bas                   >>
    514                           * ||___Gauche ||___Gauche                >>
    515                           * |____Droite |____Droite
    516                           *
    517                           *****************************************>>
    518                            
    519                                                                  *;>>
    520                                                                  *;>>
    521                                                                  *;>>
    522                                                                  *;>>
    523                                                                  *
    524                                                                  *;>>
    525        7BC2               ReadJoypads                            *R>>
    526                                                                  * >>
    527                                                                  * >>
    528                                                                  * >>
    529                                                                  * >>
    530                                                                  *
    531                                                                  *;>>
    532                                                                  *J>>
    533                                                                  * >>
    534                                                                  * >>
    535                                                                  * >>
    536                                                                  * >>
    537                                                                  * >>
    538                                                                  * >>
    539                                                                  * >>
    540                                                                  * >>
    541                                                                  * >>
    542                                                                  * >>
    543                                                                  * >>
    544  3     7BC2 CC   E7CC             ldd   #$E7CC                   * >>
    545  2     7BC5 43                    coma                           * >>
    546  2     7BC6 53                    comb
    547                                                                  * >>
    548                                                                  * >>
    549                                                                  * >>
    550  6     7BC7 FD   7BBE             std   Joypads_Held
    551  5     7BCA B8   7BBE             eora  Dpad_Held
    552  5     7BCD F8   7BBF             eorb  Fire_Held
    553  5     7BD0 B4   7BBE             anda  Dpad_Held                * >>
    554  5     7BD3 F4   7BBF             andb  Fire_Held
    555  6     7BD6 FD   7BC0             std   Joypads_Press            * >>
    556  5     7BD9 39                    rts                            * >>
    557                                                                  *;>>
    558
    559
    560                                   INCLUD RUNOBJTS
    561                           * --------------------------------------->>
    562                           * RunObjects
    563                           * ------------
    564                           * Subroutine to run objects code
    565                           *
    566                           * input REG : none
    567                           * --------------------------------------->>
    568                                                                    >>
    569                                                                    >>
    570                                                                    >>
    571                                                                    >>
    572                                                                    >>
    573                                                                    >>
    574                                                                    >>
    575        7BDA               RunObjects                               >>
    576                                                                    >>
    577                                                                    >>
    578  4     7BDA 108E 66ED             ldy   #Object_RAM                >>
    579                                                                    >>
    580                                                                    >>
    581                                                                    >>
    582                                                                    >>
    583                                                                    >>
    584                                                                    >>
    585                                                                    >>
    586        7BDE               RunObjects_01                            >>
    587                                                                    >>
    588                                                                    >>
    589                                                                    >>
    590                                                                    >>
    591  7     7BDE 7D   7AED             tst   Glb_MainCharacter_Is_Dead  >>
    592  3     7BE1 27   17               beq   RunObjectsWhenPlayerIsDead >>
    593                                                                    >>
    594                                                                    >>
    595                                                                    >>
    596                                                                    >>
    597                                                                    >>
    598                                                                    >>
    599                                                                    >>
    600                                                                    >>
    601                                                                    >>
    602                                                                    >>
    603        7BE3               RunObject                                >>
    604  2     7BE3 86   00               lda   #$00
    605  4+0   7BE5 E6   A4               ldb   ,y                         >>
    606  3     7BE7 27   07               beq   RunNextObject              >>
    607                                                                    >>
    608  2     7BE9 58                    aslb                             >>
    609  2     7BEA 49                    rola                             >>
    610  3     7BEB CE   84F9             ldu   #Obj_Index                 >>
    611  7+7   7BEE AD   DB               jsr   [d,u]                      >>
    612                                                                    >>
    613                                                                    >>
    614                                                                    >>
    615        7BF0               RunNextObject                            >>
    616  4+1   7BF0 31   A8 50            leay  next_object,y              >>
    617        7BF3               am_RunNextObject
    618  5     7BF3 108C 7AED             cmpy  #Object_RAM_End            >>
    619  3     7BF7 26   EA               bne   RunObject                  >>
    620        7BF9               RunObjects_End                           >>
    621  5     7BF9 39                    rts                              >>
    622                                                                    >>
    623                                                                    >>
    624                                                                    >>
    625                                                                    >>
    626        7BFA               RunObjectsWhenPlayerIsDead               >>
    627  4     7BFA 108E 66ED             ldy   #Reserved_Object_RAM
    628  3     7BFE 8E   678D             ldx   #Reserved_Object_RAM_End
    629  6     7C01 BF   7BF5             stx   am_RunNextObject+2         >>
    630  7     7C04 8D   DD               bsr   RunObject                  >>
    631                                                                    >>
    632                                                                    >>
    633  4     7C06 108E 79FD             ldy   #LevelOnly_Object_RAM
    634  3     7C0A 8E   7AED             ldx   #LevelOnly_Object_RAM_End
    635  6     7C0D BF   7BF5             stx   am_RunNextObject+2         >>
    636  7     7C10 8D   D1               bsr   RunObject                  >>
    637                                                                    >>
    638  3     7C12 8E   7AED             ldx   #Object_RAM_End            >>
    639  6     7C15 BF   7BF5             stx   am_RunNextObject+2
    640  5     7C18 39                    rts
    641                                                                    >>
    642                                                                    >>
    643                                                                    >>
    644                                                                    >>
    645                                                                    >>
    646                                                                    >>
    647                                                                    >>
    648                                                                    >>
    649                                                                    >>
    650                                                                    >>
    651                                                                    >>
    652                                                                    >>
    653                                                                    >>
    654                            
    655                                                                    >>
    656                                                                    >>
    657                                                                    >>
    658                                                                    >>
    659
    660                                   INCLUD MRKOBJGN
    661                           * --------------------------------------->>
    662                           * MarkObjGone
    663                           * -----------
    664                           * Subroutine to destroy an object that is>>
    665                           * -- TODO --
    666                           * waiting for camera implementation
    667                           *
    668                           * input REG : none
    669                           * clear REG : none
    670                           * --------------------------------------->>
    671
    672                                                                  *;>>
    673                                                                  *;>>
    674                                                                  *;>>
    675                                                                  *
    676                                                                  *;>>
    677                                                                  *;>>
    678                                                                  *;>>
    679        7C19               MarkObjGone *@globals                  *M>>
    680                                                                  * >>
    681                                                                  * >>
    682  3     7C19 20   06               bra   DisplaySprite            * >>
    683                                                                  *+>>
    684                                                                  * >>
    685                                                                  * >>
    686                                                                  * >>
    687                                                                  * >>
    688                                                                  * >>
    689                                                                  * >>
    690                                                                  *
    691                                                                  *+>>
    692                                                                  * >>
    693                                                                  * >>
    694                                                                  * >>
    695                                                                  * >>
    696                                                                  *+>>
    697                                                                  * >>
    698
    699                                   INCLUD DISPLSPR
    700                           * --------------------------------------->>
    701                           * DisplaySprite
    702                           * -------------
    703                           * Subroutine to manage sprite priority.
    704                           * Object's priority is read and object is>>
    705                           * priority: 0 - unregistred
    706                           * priority: 1 - register non moving overl>>
    707                           * priority; 2-8 - register moving sprite >>
    708                           *
    709                           * Unlike original S2 code, sprite priorit>>
    710                           * it allows to keep an exact sprite order>>
    711                           *
    712                           * DisplaySprite
    713                           * input REG : [u] object pointer (OST)
    714                           *
    715                           * DisplaySprite_x
    716                           * input REG : [x] object pointer (OST)
    717                           * --------------------------------------->>
    718                            
    719        7C1B               DisplaySprite_x *@globals
    720  5+6   7C1B 34   56               pshs  d,x,u
    721  6     7C1D 1F   13               tfr   x,u
    722  3     7C1F 20   02               bra   DSP_Start
    723                            
    724        7C21               DisplaySprite *@globals
    725  5+6   7C21 34   56               pshs  d,x,u
    726                            
    727        7C23               DSP_Start
    728  5     7C23 B6   611D             lda   Glb_Cur_Wrk_Screen_Id      >>
    729  3     7C26 26   09               bne   DSP_SetBuffer1
    730                            
    731        7C28               DSP_SetBuffer0
    732  4+1   7C28 30   C8 34            leax  rsv_buffer_0,u             >>
    733  7     7C2B 10BE 64B9             ldy   DPS_buffer_0               >>
    734  3     7C2F 20   07               bra   DSP_BufferPositionned
    735                            
    736        7C31               DSP_SetBuffer1
    737  4+1   7C31 30   C8 42            leax  rsv_buffer_1,u             >>
    738  7     7C34 10BE 6559             ldy   DPS_buffer_1               >>
    739                            
    740        7C38               DSP_BufferPositionned
    741  4+1   7C38 A6   43               lda   priority,u                 >>
    742  4+1   7C3A A1   00               cmpa  buf_priority,x
    743  3     7C3C 27   46               beq   DSP_rts                    >>
    744  4+1   7C3E E6   00               ldb   buf_priority,x
    745  3     7C40 26   31               bne   DSP_ChangePriority
    746                            
    747        7C42               DSP_InitPriority
    748  4+1   7C42 A7   00               sta   buf_priority,x             >>
    749                            
    750        7C44               DSP_CheckLastEntry
    751  4+1   7C44 31   A8 12            leay  buf_Tbl_Priority_Last_Entry>>
    752  6+1   7C47 6D   A6               tst   a,y                        >>
    753  3     7C49 26   0F               bne   DSP_addToExistingNode      >>
    754                            
    755        7C4B               DSP_addFirstNode
    756  5+1   7C4B EF   A6               stu   a,y                        >>
    757  4+1   7C4D 31   A8 EE            leay  buf_Tbl_Priority_First_Entr>>
    758  5+1   7C50 EF   A6               stu   a,y                        >>
    759  5     7C52 DC   00               ldd   0
    760  5+1   7C54 ED   01               std   buf_priority_prev_obj,x    >>
    761  5+1   7C56 ED   03               std   buf_priority_next_obj,x
    762  3     7C58 20   2A               bra   DSP_rts
    763                            
    764        7C5A               DSP_addToExistingNode
    765  5+4   7C5A AE   B6               ldx   [a,y]                      >>
    766  5     7C5C F6   611D             ldb   Glb_Cur_Wrk_Screen_Id
    767  3     7C5F 26   05               bne   DSP_LinkBuffer1
    768  5+1   7C61 EF   88 37            stu   rsv_priority_next_obj_0,x  >>
    769  3     7C64 20   03               bra   DSP_LinkCurWithPrev
    770        7C66               DSP_LinkBuffer1
    771  5+1   7C66 EF   88 45            stu   rsv_priority_next_obj_1,x  >>
    772                            
    773        7C69               DSP_LinkCurWithPrev
    774  5+1   7C69 AF   41               stx   buf_priority_prev_obj,u    >>
    775  5+1   7C6B EF   A6               stu   a,y                        >>
    776  5     7C6D DC   00               ldd   0
    777  5+1   7C6F ED   03               std   buf_priority_next_obj,x    >>
    778  3     7C71 20   11               bra   DSP_rts
    779                            
    780        7C73               DSP_ChangePriority
    781  4+1   7C73 31   A8 24            leay  buf_Lst_Priority_Unset,y
    782  5+3   7C76 EF   B4               stu   [,y]                       >>
    783  4+1   7C78 31   22               leay  2,y
    784  6+0   7C7A 10AF A4               sty   ,y                         >>
    785  4+1   7C7D 31   A8 DA            leay  -buf_Lst_Priority_Unset-2,y>>
    786  4     7C80 91   00               cmpa  0
    787  3     7C82 26   C0               bne   DSP_CheckLastEntry         >>
    788
    789        7C84               DSP_rts
    790  5+8   7C84 35   D6               puls  d,x,u,pc
    791                            
    792                                                                  *;>>
    793                                                                  *;>>
    794                                                                  *;>>
    795                                                                  *
    796                                                                  *;>>
    797                                                                  *
    798                                                                  *;>>
    799                                                                  *D>>
    800                                                                  * >>
    801                                                                  * >>
    802                                                                  * >>
    803                                                                  * >>
    804                                                                  * >>
    805                            
    806                                                                  * >>
    807                                                                  * >>
    808                                                                  * >>
    809                            
    810                                                                  * >>
    811                                                                  * >>
    812                                                                  *
    813                                                                  *r>>
    814                            
    815                                                                  * >>
    816                                                                  *;>>
    817
    818                                   INCLUD ANIMSPR
    819                           * --------------------------------------->>
    820                           * Subroutine to animate a sprite using an>>
    821                           *
    822                           *   this function also change render flag>>
    823                           *   the status byte;
    824                           *
    825                           * input REG : [u] pointeur sur l'objet
    826                           *
    827                           * --------------------------------------->>
    828
    829                  00FF     resetAnim              equ $FF
    830                  00FE     goBackNFrames          equ $FE ; followed>>
    831                  00FD     goToAnimation          equ $FD ; followed>>
    832                  00FC     nextRoutine            equ $FC
    833                  00FB     resetAnimAndSubRoutine equ $FB
    834                  00FA     nextSubRoutine         equ $FA
    835
    836                                                                    >>
    837                                                                    >>
    838                                                                    >>
    839                                                                    >>
    840                                                                    >>
    841                                                                    >>
    842                                                                    >>
    843        7C86               AnimateSprite * @globals                 >>
    844                                                                    >>
    845  5+1   7C86 AE   44               ldx   anim,u                     >>
    846  6+1   7C88 AC   46               cmpx  prev_anim,u                >>
    847  3     7C8A 27   08               beq   Anim_Run                   >>
    848  5+1   7C8C AF   46               stx   prev_anim,u                >>
    849  2     7C8E C6   00                     ldb   #0
    850  4+1   7C90 E7   48               stb   anim_frame,u               >>
    851  4+1   7C92 E7   49               stb   anim_frame_duration,u      >>
    852                                                                    >>
    853        7C94               Anim_Run                                 >>
    854  6+1   7C94 6A   49               dec   anim_frame_duration,u      >>
    855  3     7C96 2A   24               bpl   Anim_Wait                  >>
    856                                   * no offset table                >>
    857                                   * anim is the address of anim    >>
    858  4+0   7C98 E6   84               ldb   ,x
    859  4+1   7C9A E7   49                     stb   anim_frame_duration,u>>
    860                                                                    >>
    861  4+1   7C9C E6   48               ldb   anim_frame,u               >>
    862  2     7C9E 5C                    incb
    863  2     7C9F 58                    aslb
    864  4+1   7CA0 31   85               leay  b,x
    865  5+0   7CA2 EC   A4               ldd   ,y                         >>
    866                                   * bmi   Anim_End_FF              >>
    867  2     7CA4 81   FA                     cmpa  #$FA                 >>
    868  3     7CA6 24   15                     bhs   Anim_End_FF          >>
    869                                                                    >>
    870        7CA8               Anim_Next                                >>
    871                                      * ne pas utiliser             >>
    872  5+1   7CA8 ED   4A               std   mapping_frame,u            >>
    873  4+1   7CAA E6   C8 1A            ldb   status,u                   >>
    874  2     7CAD C4   03               andb  #status_x_orientation+statu>>
    875  5     7CAF F7   7CB7             stb   Anim_dyn+1
    876                                                                    >>
    877  4+1   7CB2 A6   42               lda   render_flags,u             >>
    878  2     7CB4 84   FC               anda  #:(render_xmirror_mask+rend>>
    879        7CB6               Anim_dyn
    880  2     7CB6 8A   00               ora   #$00                       >>
    881                                                                    >>
    882  4+1   7CB8 A7   42               sta   render_flags,u
    883  6+1   7CBA 6C   48               inc   anim_frame,u               >>
    884                                                                    >>
    885        7CBC               Anim_Wait                                >>
    886  5     7CBC 39                    rts                              >>
    887                                                                    >>
    888                                                                    >>
    889        7CBD               Anim_End_FF                              >>
    890  2     7CBD 4C                    inca                             >>
    891  3     7CBE 26   08               bne   Anim_End_FE                >>
    892  2     7CC0 C6   00                     ldb   #0
    893  4+1   7CC2 E7   48               stb   anim_frame,u               >>
    894  5+1   7CC4 EC   01               ldd   1,x                        >>
    895  3     7CC6 20   E0               bra   Anim_Next                  >>
    896                                                                    >>
    897                                                                    >>
    898        7CC8               Anim_End_FE                              >>
    899  2     7CC8 4C                    inca                             >>
    900  3     7CC9 26   0E               bne   Anim_End_FD                >>
    901  4+1   7CCB A6   48               lda   anim_frame,u
    902  5     7CCD F7   7CD1             stb   Anim_End_FE_dyn+1          >>
    903        7CD0               Anim_End_FE_dyn
    904  2     7CD0 80   00               suba  #$00                       >>
    905  4+1   7CD2 A7   48               sta   anim_frame,u               >>
    906                                                                    >>
    907  2     7CD4 48                    asla
    908  5+1   7CD5 EC   86               ldd   a,x                        >>
    909  3     7CD7 20   CF               bra   Anim_Next                  >>
    910                                                                    >>
    911                                                                    >>
    912        7CD9               Anim_End_FD                              >>
    913  2     7CD9 4C                    inca                             >>
    914  3     7CDA 26   05               bne   Anim_End_FC                >>
    915  5+1   7CDC EC   21               ldd   1,y                        >>
    916  5+1   7CDE ED   44               std   anim,u                     >>
    917  5     7CE0 39                    rts                              >>
    918                                                                    >>
    919                                                                    >>
    920        7CE1               Anim_End_FC                              >>
    921  2     7CE1 4C                    inca                             >>
    922  3     7CE2 26   0D               bne   Anim_End_FB                >>
    923  6+1   7CE4 6C   C8 18            inc   routine,u
    924  6+1   7CE7 6C   C8 18            inc   routine,u                  >>
    925  2     7CEA 86   00               lda   #0
    926  4+1   7CEC A7   49               sta   anim_frame_duration,u      >>
    927  6+1   7CEE 6C   48               inc   anim_frame,u               >>
    928  5     7CF0 39                    rts                              >>
    929                                                                    >>
    930                                                                    >>
    931        7CF1               Anim_End_FB                              >>
    932  2     7CF1 4C                    inca                             >>
    933  3     7CF2 26   08               bne   Anim_End_FA                >>
    934  2     7CF4 86   00               lda   #0
    935  4+1   7CF6 A7   48               sta   anim_frame,u               >>
    936  4+1   7CF8 A7   C8 19            sta   routine_secondary,u        >>
    937  5     7CFB 39                    rts                              >>
    938                                                                    >>
    939                                                                    >>
    940        7CFC               Anim_End_FA                              >>
    941  2     7CFC 4C                    inca                             >>
    942  3     7CFD 26   06               bne   Anim_End                   >>
    943  6+1   7CFF 6C   C8 19            inc   routine_secondary,u        >>
    944  6+1   7D02 6C   C8 19            inc   routine_secondary,u
    945        7D05               Anim_End
    946  5     7D05 39                    rts                              >>
    947                                                                    >>
    948                                                                    >>
    949                                                                    >>
    950                                                                    >>
    951                                                                    >>
    952                                                                    >>
    953                                                                    >>
    954                                                                    >>
    955                                                                    >>
    956                                                                    >>
    957
    958                                   INCLUD OBJMOVE
    959                           * --------------------------------------->>
    960                           * Subroutine translating object speed to >>
    961                           * This moves the object horizontally and >>
    962                           * but does not apply gravity to it
    963                           * --------------------------------------->>
    964
    965                                                                  *;>>
    966                                                                  *;>>
    967                                                                  *;>>
    968                                                                  *;>>
    969                                                                  *;>>
    970                                                                  *
    971                                                                  *;>>
    972                                                                  *
    973                                                                  *;>>
    974        7D06               ObjectMove                             *O>>
    975                                                                  * >>
    976                                                                  * >>
    977                                                                  * >>
    978                                                                  * >>
    979                                                                  * >>
    980                                                                  * >>
    981  4+1   7D06 E6   C8 14            ldb   x_vel,u
    982  2     7D09 1D                    sex                            ; >>
    983  5     7D0A B7   7D17             sta   am_ObjectMove_01+1
    984  5+1   7D0D EC   C8 14            ldd   x_vel,u
    985  6+1   7D10 E3   4D               addd  x_pos+1,u                ; >>
    986  5+1   7D12 ED   4D               std   x_pos+1,u                ; >>
    987  4+1   7D14 A6   4C               lda   x_pos,u
    988        7D16               am_ObjectMove_01
    989  2     7D16 89   00               adca  #$00                     ; >>
    990  4+1   7D18 A7   4C               sta   x_pos,u                  ; >>
    991                            
    992                                                                  * >>
    993                                                                  * >>
    994                                                                  * >>
    995                                                                  * >>
    996                                                                  * >>
    997                                                                  * >>
    998  4+1   7D1A E6   C8 16            ldb   y_vel,u
    999  2     7D1D 1D                    sex                            ; >>
   1000  5     7D1E B7   7D2D             sta   am_ObjectMove_02+1
   1001  5+1   7D21 EC   C8 16            ldd   y_vel,u
   1002  6+1   7D24 E3   C8 10            addd  y_pos+1,u                ; >>
   1003  5+1   7D27 ED   C8 10            std   y_pos+1,u                ; >>
   1004  4+1   7D2A A6   4F               lda   y_pos,u
   1005        7D2C               am_ObjectMove_02
   1006  2     7D2C 89   00               adca  #$00                     ; >>
   1007  4+1   7D2E A7   4F               sta   y_pos,u                  ; >>
   1008  5     7D30 39                    rts                            * >>
   1009                                                                  *;>>
   1010                                                                  *;>>
   1011
   1012                                   INCLUD OBJLOAD
   1013                           * --------------------------------------->>
   1014                           * Single object loading subroutine
   1015                           * Find an empty object array
   1016                           *
   1017                           * input  REG : [u] pointeur sur l'objet c>>
   1018                           * output REG : [x] pointeur sur l'objet l>>
   1019                           * --------------------------------------->>
   1020
   1021                                                                  *;>>
   1022                                                                  *;>>
   1023                                                                  *;>>
   1024                                                                  *;>>
   1025                                                                  *;>>
   1026                                                                  *
   1027                                                                  *;>>
   1028                                                                  *S>>
   1029                                                                  * >>
   1030                                                                  * >>
   1031                                                                  * >>
   1032                                                                  * >>
   1033                                                                  * >>
   1034                                                                  *
   1035                                                                  */>>
   1036                                                                  * >>
   1037                                                                  * >>
   1038                                                                  * >>
   1039                                                                  * >>
   1040                                                                  *
   1041                                                                  *r>>
   1042                                                                  * >>
   1043                                                                  *;>>
   1044                                                                  *;>>
   1045                                                                  *;>>
   1046                                                                  *;>>
   1047                                                                  *;>>
   1048                                                                  *
   1049                                                                  *;>>
   1050                                                                  *
   1051                                                                  *;>>
   1052        7D31               SingleObjLoad2                         *S>>
   1053  6     7D31 1F   31               tfr   u,x                      * >>
   1054  4+1   7D33 30   88 50            leax  next_object,x            * >>
   1055  4     7D36 8C   79FD             cmpx  #Dynamic_Object_RAM_End  * >>
   1056  3     7D39 27   0C               beq   SingleObjLoad2_02        * >>
   1057                                                                  * >>
   1058                                                                  * >>
   1059                                                                  * >>
   1060                                                                  * >>
   1061                                                                  * >>
   1062                                                                  * >>
   1063                                                                  * >>
   1064                                                                  * >>
   1065                                                                  *
   1066        7D3B               SingleObjLoad2_01                      *->>
   1067  6+0   7D3B 6D   84               tst   ,x                       * >>
   1068  3     7D3D 27   08               beq   SingleObjLoad2_02        * >>
   1069  4+1   7D3F 30   88 50            leax  next_object,x            * >>
   1070  4     7D42 8C   79FD             cmpx  #Dynamic_Object_RAM_End
   1071  3     7D45 26   F4               bne   SingleObjLoad2_01        * >>
   1072                                                                  *
   1073        7D47               SingleObjLoad2_02                      *r>>
   1074  5     7D47 39                    rts                            * >>
   1075                                                                  *
   1076                                                                  * >>
   1077                                                                  *+>>
   1078                                                                  *.>>
   1079                                                                  *.>>
   1080                                                                  *
   1081                                                                  * >>
   1082                                                                  * >>
   1083                                                                  * >>
   1084                                                                  * >>
   1085                                                                  * >>
   1086                                                                  * >>
   1087                                                                  *
   1088                                                                  *.>>
   1089                                                                  *.>>
   1090                                                                  * >>
   1091                                                                  * >>
   1092                                                                  * >>
   1093                                                                  *;>>
   1094                                                                  *;>>
   1095                                                                  *;>>
   1096                                                                  *;>>
   1097                                                                  *;>>
   1098                                                                  *
   1099                                                                  *;>>
   1100                                                                  *
   1101                                                                  *;>>
   1102                                                                  *S>>
   1103                                                                  * >>
   1104                                                                  * >>
   1105                                                                  *
   1106                                                                  *->>
   1107                                                                  * >>
   1108                                                                  * >>
   1109                                                                  * >>
   1110                                                                  * >>
   1111                                                                  *
   1112                                                                  *r>>
   1113                                                                  * >>
   1114                                                                  *;>>
   1115
   1116
   1117                                   INCLUD DELETOBJ
   1118                           * --------------------------------------->>
   1119                           * DeleteObject
   1120                           * ------------
   1121                           * Subroutine to delete an object.
   1122                           * If the object is rendered as a sprite i>>
   1123                           * routine
   1124                           *
   1125                           * DeleteObject
   1126                           * input REG : [u] object pointer (OST)
   1127                           *
   1128                           * DeleteObject_x
   1129                           * input REG : [x] object pointer (OST)
   1130                           * --------------------------------------->>
   1131
   1132                                                                  *;>>
   1133                                                                  *;>>
   1134                                                                  *;>>
   1135                                                                  *
   1136                                                                  *;>>
   1137                                                                  *
   1138                                                                  *;>>
   1139        7D48               DeleteObject_x *@globals               *D>>
   1140  5+6   7D48 34   56               pshs  d,x,u                    * >>
   1141  6     7D4A 1F   13               tfr   x,u                      *;>>
   1142  3     7D4C 20   02               bra   DOB_Start
   1143        7D4E               DeleteObject *@globals                 *D>>
   1144  5+6   7D4E 34   56               pshs  d,x,u
   1145        7D50               DOB_Start
   1146  4+1   7D50 A6   C8 41            lda   rsv_onscreen_0,u
   1147  3     7D53 27   1B               beq   DOB_TestOnscreen1Delete  ; >>
   1148                            
   1149        7D55               DOB_Unset0
   1150  6     7D55 BE   64DD             ldx   Lst_Priority_Unset_0     ; >>
   1151  5+0   7D58 EF   84               stu   ,x
   1152  4+1   7D5A 30   02               leax  2,x
   1153  6     7D5C BF   64DD             stx   Lst_Priority_Unset_0
   1154                            
   1155        7D5F               DOB_TestOnscreen1
   1156  4+1   7D5F A6   C8 4F            lda   rsv_onscreen_1,u
   1157  3     7D62 27   16               beq   DOB_ToDeleteFlag         ; >>
   1158                            
   1159        7D64               DOB_Unset1
   1160  6     7D64 BE   657D             ldx   Lst_Priority_Unset_1     ; >>
   1161  5+0   7D67 EF   84               stu   ,x
   1162  4+1   7D69 30   02               leax  2,x
   1163  6     7D6B BF   657D             stx   Lst_Priority_Unset_1
   1164  3     7D6E 20   0A               bra  DOB_ToDeleteFlag
   1165                            
   1166        7D70               DOB_TestOnscreen1Delete
   1167  4+1   7D70 A6   C8 4F            lda   rsv_onscreen_1,u
   1168  3     7D73 26   EF               bne   DOB_Unset1               ; >>
   1169
   1170  8     7D75 BD   7D82             jsr   ClearObj                 ; >>
   1171  3     7D78 20   06               bra   DOB_rts
   1172                                                                  * >>
   1173                                                                  *
   1174                                                                  * >>
   1175                                                                  * >>
   1176                                                                  *->>
   1177                                                                  * >>
   1178                                                                  * >>
   1179                                                                  * >>
   1180                                                                  * >>
   1181                                                                  *
   1182        7D7A               DOB_ToDeleteFlag
   1183  4+1   7D7A A6   42               lda   render_flags,u
   1184  4     7D7C 9A   20               ora   render_todelete_mask
   1185  4+1   7D7E A7   42               sta   render_flags,u           ; >>
   1186                            
   1187        7D80               DOB_rts
   1188  5+8   7D80 35   D6               puls  d,x,u,pc                 * >>
   1189                                                                  *;>>
   1190
   1191                                   INCLUD CLEAROBJ
   1192                           * --------------------------------------->>
   1193                           * ClearObj
   1194                           * --------
   1195                           * Subroutine to clear an object data in O>>
   1196                           *
   1197                           * input REG : [u] pointer on objet (OST)
   1198                           * clear REG : [d,y]
   1199                           * --------------------------------------->>
   1200
   1201        7D82               ClearObj *@globals
   1202  7     7D82 10FF 7DAC             sts   CLO_1+2
   1203  6     7D86 BF   7DB0             stx   CLO_2+2
   1204  3     7D89 CC   0000             ldd   #$0000
   1205  3     7D8C 8E   0000             ldx   #$0000
   1206  4+0   7D8F 31   84               leay  ,x
   1207  4+0   7D91 32   84               leas  ,x
   1208  4+1   7D93 33   C8 50            leau  object_size,u
   1209  5+8   7D96 36   76               pshu  d,x,y,s
   1210  5+8   7D98 36   76               pshu  d,x,y,s
   1211  5+8   7D9A 36   76               pshu  d,x,y,s
   1212  5+8   7D9C 36   76               pshu  d,x,y,s
   1213  5+8   7D9E 36   76               pshu  d,x,y,s
   1214  5+8   7DA0 36   76               pshu  d,x,y,s
   1215  5+8   7DA2 36   76               pshu  d,x,y,s
   1216  5+8   7DA4 36   76               pshu  d,x,y,s
   1217  5+8   7DA6 36   76               pshu  d,x,y,s
   1218  5+8   7DA8 36   76               pshu  d,x,y,s
   1219        7DAA               CLO_1
   1220  4     7DAA 10CE 0000             lds   #$0000
   1221        7DAE               CLO_2
   1222  3     7DAE 8E   0000             ldx   #$0000
   1223  5     7DB1 39                    rts
   1224
   1225                                   INCLUD CHECKSPR
   1226                           * --------------------------------------->>
   1227                           * CheckSpritesRefresh
   1228                           * -------------------
   1229                           * Subroutine to determine if sprites are >>
   1230                           * Read Display Priority Structure (back t>>
   1231                           * priority: 0 - unregistred
   1232                           * priority: 1 - register non moving overl>>
   1233                           * priority; 2-8 - register moving sprite >>
   1234                           *
   1235                           * input REG : none
   1236                           * --------------------------------------->>
   1237
   1238        7DB2 0000          cur_priority            fdb   $00
   1239        7DB4 0000          cur_ptr_sub_obj_erase   fdb   $0000
   1240        7DB6 0000          cur_ptr_sub_obj_draw    fdb   $0000
   1241                            
   1242        7DB8               CheckSpritesRefresh
   1243
   1244        7DB8               CSR_Start
   1245  3     7DB8 CC   65F9             ldd   #Tbl_Sub_Object_Erase
   1246  6     7DBB FD   7DB4             std   cur_ptr_sub_obj_erase
   1247  3     7DBE CC   6673             ldd   #Tbl_Sub_Object_Draw
   1248  6     7DC1 FD   7DB6             std   cur_ptr_sub_obj_draw
   1249  5     7DC4 B6   611D             lda   Glb_Cur_Wrk_Screen_Id      >>
   1250  3     7DC7 26   60               bne   CSR_SetBuffer1
   1251                            
   1252        7DC9               CSR_SetBuffer0
   1253  4     7DC9 96   34               lda   rsv_buffer_0               >>
   1254  5     7DCB B7   7E8B             sta   CSR_ProcessEachPriorityLeve>>
   1255        7DCE               CSR_P8B0
   1256  6     7DCE FE   64C7             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1257  3     7DD1 27   08               beq   CSR_P7B0
   1258  2     7DD3 86   08               lda   #$08
   1259  5     7DD5 B7   7DB2             sta   cur_priority
   1260  8     7DD8 BD   7E89             jsr   CSR_ProcessEachPriorityLeve>>
   1261        7DDB               CSR_P7B0
   1262  6     7DDB FE   64C5             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1263  3     7DDE 27   06               beq   CSR_P6B0
   1264  7     7DE0 7A   7DB2             dec   cur_priority
   1265  8     7DE3 BD   7E89             jsr   CSR_ProcessEachPriorityLeve>>
   1266        7DE6               CSR_P6B0
   1267  6     7DE6 FE   64C3             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1268  3     7DE9 27   06               beq   CSR_P5B0
   1269  7     7DEB 7A   7DB2             dec   cur_priority
   1270  8     7DEE BD   7E89             jsr   CSR_ProcessEachPriorityLeve>>
   1271        7DF1               CSR_P5B0
   1272  6     7DF1 FE   64C1             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1273  3     7DF4 27   06               beq   CSR_P4B0
   1274  7     7DF6 7A   7DB2             dec   cur_priority
   1275  8     7DF9 BD   7E89             jsr   CSR_ProcessEachPriorityLeve>>
   1276        7DFC               CSR_P4B0
   1277  6     7DFC FE   64BF             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1278  3     7DFF 27   06               beq   CSR_P3B0
   1279  7     7E01 7A   7DB2             dec   cur_priority
   1280  8     7E04 BD   7E89             jsr   CSR_ProcessEachPriorityLeve>>
   1281        7E07               CSR_P3B0
   1282  6     7E07 FE   64BD             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1283  3     7E0A 27   06               beq   CSR_P2B0
   1284  7     7E0C 7A   7DB2             dec   cur_priority
   1285  8     7E0F BD   7E89             jsr   CSR_ProcessEachPriorityLeve>>
   1286        7E12               CSR_P2B0
   1287  6     7E12 FE   64BB             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1288  3     7E15 27   06               beq   CSR_P1B0
   1289  7     7E17 7A   7DB2             dec   cur_priority
   1290  8     7E1A BD   7E89             jsr   CSR_ProcessEachPriorityLeve>>
   1291        7E1D               CSR_P1B0
   1292  6     7E1D FE   64B9             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1293  3     7E20 27   06               beq   CSR_rtsB0
   1294  7     7E22 7A   7DB2             dec   cur_priority
   1295  8     7E25 BD   7E89             jsr   CSR_ProcessEachPriorityLeve>>
   1296        7E28               CSR_rtsB0
   1297  5     7E28 39                    rts
   1298                            
   1299        7E29               CSR_SetBuffer1
   1300  4     7E29 96   42               lda   rsv_buffer_1               >>
   1301  5     7E2B B7   7E8B             sta   CSR_ProcessEachPriorityLeve>>
   1302        7E2E               CSR_P8B1
   1303  6     7E2E FE   6567             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1304  3     7E31 27   08               beq   CSR_P7B1
   1305  2     7E33 86   08               lda   #$08
   1306  5     7E35 B7   7DB2             sta   cur_priority
   1307  8     7E38 BD   7E89             jsr   CSR_ProcessEachPriorityLeve>>
   1308        7E3B               CSR_P7B1
   1309  6     7E3B FE   6565             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1310  3     7E3E 27   06               beq   CSR_P6B1
   1311  7     7E40 7A   7DB2             dec   cur_priority
   1312  8     7E43 BD   7E89             jsr   CSR_ProcessEachPriorityLeve>>
   1313        7E46               CSR_P6B1
   1314  6     7E46 FE   6563             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1315  3     7E49 27   06               beq   CSR_P5B1
   1316  7     7E4B 7A   7DB2             dec   cur_priority
   1317  8     7E4E BD   7E89             jsr   CSR_ProcessEachPriorityLeve>>
   1318        7E51               CSR_P5B1
   1319  6     7E51 FE   6561             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1320  3     7E54 27   06               beq   CSR_P4B1
   1321  7     7E56 7A   7DB2             dec   cur_priority
   1322  8     7E59 BD   7E89             jsr   CSR_ProcessEachPriorityLeve>>
   1323        7E5C               CSR_P4B1
   1324  6     7E5C FE   655F             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1325  3     7E5F 27   06               beq   CSR_P3B1
   1326  7     7E61 7A   7DB2             dec   cur_priority
   1327  8     7E64 BD   7E89             jsr   CSR_ProcessEachPriorityLeve>>
   1328        7E67               CSR_P3B1
   1329  6     7E67 FE   655D             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1330  3     7E6A 27   06               beq   CSR_P2B1
   1331  7     7E6C 7A   7DB2             dec   cur_priority
   1332  8     7E6F BD   7E89             jsr   CSR_ProcessEachPriorityLeve>>
   1333        7E72               CSR_P2B1
   1334  6     7E72 FE   655B             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1335  3     7E75 27   06               beq   CSR_P1B1
   1336  7     7E77 7A   7DB2             dec   cur_priority
   1337  8     7E7A BD   7E89             jsr   CSR_ProcessEachPriorityLeve>>
   1338        7E7D               CSR_P1B1
   1339  6     7E7D FE   6559             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1340  3     7E80 27   06               beq   CSR_rtsB1
   1341  7     7E82 7A   7DB2             dec   cur_priority
   1342  8     7E85 BD   7E89             jsr   CSR_ProcessEachPriorityLeve>>
   1343        7E88               CSR_rtsB1
   1344  5     7E88 39                    rts
   1345
   1346        7E89               CSR_ProcessEachPriorityLevel
   1347  4+1   7E89 30   C8 10            leax  16,u                       >>
   1348  4+1   7E8C A6   C8 29            lda   rsv_render_flags,u
   1349  2     7E8F 84   01               anda  #rsv_render_checkrefresh_ma>>
   1350  6     7E91 1026 00A5             lbne  CSR_CheckErase
   1351                            
   1352        7E95               CSR_CheckDelHide
   1353  4+1   7E95 A6   42               lda   render_flags,u
   1354  2     7E97 84   28               anda  #render_hide_mask!render_to>>
   1355  3     7E99 26   5A               bne   CSR_DoNotDisplaySprite
   1356
   1357        7E9B               CSR_UpdSpriteImageBasedOnMirror
   1358  4+1   7E9B A6   C8 29            lda   rsv_render_flags,u
   1359  2     7E9E 8A   01               ora   #rsv_render_checkrefresh_ma>>
   1360  4+1   7EA0 A7   C8 29            sta   rsv_render_flags,u         >>
   1361  4+1   7EA3 A6   42               lda   render_flags,u             >>
   1362  2     7EA5 84   03               anda  #render_xmirror_mask!render>>
   1363  2     7EA7 C6   10               ldb   #image_meta_size
   1364  11    7EA9 3D                    mul
   1365  6+1   7EAA E3   4A               addd  mapping_frame,u
   1366  5+1   7EAC ED   C8 2C            std   rsv_curr_mapping_frame,u
   1367                            
   1368        7EAF               CSR_CheckPlayFieldCoord
   1369  4+1   7EAF A6   42               lda   render_flags,u
   1370  2     7EB1 84   04               anda  #render_playfieldcoord_mask>>
   1371  3     7EB3 27   66               beq   CSR_CheckVerticalPosition  >>
   1372                            
   1373  5+1   7EB5 EC   4C               ldd   x_pos,u
   1374  7     7EB7 B3   611F             subd  Glb_Camera_X_Pos
   1375  6+1   7EBA 10AE C8 2C            ldy   rsv_curr_mapping_frame,u
   1376  6+1   7EBE E3   2A               addd  image_x_offset,y
   1377  3     7EC0 29   70               bvs   CSR_SetOutOfRange          >>
   1378  3     7EC2 2B   6E               bmi   CSR_SetOutOfRange          >>
   1379  4+1   7EC4 E7   C8 12            stb   x_pixel,u
   1380  4+1   7EC7 EB   2E               addb  image_x_size,y
   1381  3     7EC9 29   67               bvs   CSR_SetOutOfRange          >>
   1382  4+1   7ECB E7   C8 32            stb   rsv_x2_pixel,u
   1383  2     7ECE C1   A0               cmpb  #screen_width
   1384  3     7ED0 2E   60               bgt   CSR_SetOutOfRange          >>
   1385
   1386  5+1   7ED2 EC   4F               ldd   y_pos,u
   1387  7     7ED4 B3   6121             subd  Glb_Camera_Y_Pos
   1388  6+1   7ED7 E3   2C               addd  image_y_offset,y
   1389  3     7ED9 29   57               bvs   CSR_SetOutOfRange          >>
   1390  3     7EDB 2B   55               bmi   CSR_SetOutOfRange          >>
   1391  4+1   7EDD E7   C8 13            stb   y_pixel,u
   1392  4+1   7EE0 EB   2F               addb  image_y_size,y
   1393  3     7EE2 29   4E               bvs   CSR_SetOutOfRange          >>
   1394  4+1   7EE4 E7   C8 33            stb   rsv_y2_pixel,u
   1395  2     7EE7 C1   C8               cmpb  #screen_height
   1396  3     7EE9 2E   47               bgt   CSR_SetOutOfRange          >>
   1397  4+1   7EEB A6   C8 29            lda   rsv_render_flags,u
   1398  2     7EEE 84   F7               anda  #:rsv_render_outofrange_mas>>
   1399  4+1   7EF0 A7   C8 29            sta   rsv_render_flags,u
   1400  3     7EF3 20   45               bra   CSR_CheckErase
   1401                            
   1402        7EF5               CSR_DoNotDisplaySprite
   1403  4+1   7EF5 A6   C8 29            lda   rsv_render_flags,u
   1404  2     7EF8 84   F9               anda  #:rsv_render_erasesprite_ma>>
   1405  4+1   7EFA A7   C8 29            sta   rsv_render_flags,u
   1406  4+1   7EFD E6   0D               ldb   buf_onscreen,x
   1407  3     7EFF 27   13               beq   CSR_NextObject             >>
   1408  2     7F01 8A   02               ora   #rsv_render_erasesprite_mas>>
   1409  4+1   7F03 A7   C8 29            sta   rsv_render_flags,u
   1410                            
   1411  7     7F06 10BE 7DB4             ldy   cur_ptr_sub_obj_erase
   1412  6+1   7F0A 10AF C8 2E            sty   rsv_ptr_sub_object_erase,u
   1413  5+3   7F0E EF   A1               stu   ,y++
   1414  7     7F10 10BF 7DB4             sty   cur_ptr_sub_obj_erase
   1415                            
   1416        7F14               CSR_NextObject
   1417  5+1   7F14 EE   03               ldu   buf_priority_next_obj,x
   1418  6     7F16 1026 FF6F             lbne  CSR_ProcessEachPriorityLeve>>
   1419  5     7F1A 39                    rts
   1420
   1421        7F1B               CSR_CheckVerticalPosition
   1422  4+1   7F1B E6   C8 13            ldb   y_pixel,u                  >>
   1423  6+1   7F1E E3   2F               addd  image_y_size,y
   1424  3     7F20 29   10               bvs   CSR_SetOutOfRange          >>
   1425  5     7F22 1083 00C8             cmpd  #screen_height
   1426  3     7F26 2E   0A               bgt   CSR_SetOutOfRange          >>
   1427  4+1   7F28 A6   C8 29            lda   rsv_render_flags,u
   1428  2     7F2B 84   F7               anda  #:rsv_render_outofrange_mas>>
   1429  4+1   7F2D A7   C8 29            sta   rsv_render_flags,u
   1430  3     7F30 20   08               bra   CSR_CheckErase
   1431                            
   1432        7F32               CSR_SetOutOfRange
   1433  4+1   7F32 A6   C8 29            lda   rsv_render_flags,u
   1434  2     7F35 8A   08               ora   #rsv_render_outofrange_mask>>
   1435  4+1   7F37 A7   C8 29            sta   rsv_render_flags,u
   1436
   1437        7F3A               CSR_CheckErase
   1438  4+1   7F3A A6   00               lda   buf_priority,x
   1439  5     7F3C B1   7DB2             cmpa  cur_priority
   1440  3     7F3F 26   36               bne   CSR_CheckDraw
   1441                            
   1442  7     7F41 10BE 7DB4             ldy   cur_ptr_sub_obj_erase
   1443  6+1   7F45 10AF C8 2E            sty   rsv_ptr_sub_object_erase,u
   1444                            
   1445  4+1   7F49 A6   0D               lda   buf_onscreen,x
   1446  3     7F4B 27   25               beq   CSR_SetEraseFalse          >>
   1447  5+1   7F4D EC   C8 12            ldd   x_pixel,u                  >>
   1448  7+1   7F50 10A3 09               cmpd  buf_prev_x_pixel,x
   1449  3     7F53 26   10               bne   CSR_SetEraseTrue           >>
   1450  5+1   7F55 EC   C8 2C            ldd   rsv_curr_mapping_frame,u
   1451  7+1   7F58 10A3 05               cmpd  buf_prev_mapping_frame,x
   1452  3     7F5B 26   08               bne   CSR_SetEraseTrue           >>
   1453  4+1   7F5D A6   43               lda   priority,u
   1454  4+1   7F5F A1   00               cmpa  buf_priority,x
   1455  3     7F61 26   02               bne   CSR_SetEraseTrue           >>
   1456  3     7F63 20   0D               bra   CSR_SetEraseFalse          >>
   1457                            
   1458        7F65               CSR_SetEraseTrue
   1459  4+1   7F65 A6   C8 29            lda   rsv_render_flags,u
   1460  2     7F68 8A   02               ora   #rsv_render_erasesprite_mas>>
   1461                            
   1462  5+3   7F6A EF   A1               stu   ,y++
   1463  7     7F6C 10BF 7DB4             sty   cur_ptr_sub_obj_erase
   1464                            
   1465  3     7F70 20   05               bra   CSR_CheckDraw
   1466                            
   1467        7F72               CSR_SetEraseFalse
   1468  4+1   7F72 A6   C8 29            lda   rsv_render_flags,u
   1469  2     7F75 84   FD               anda  #:rsv_render_erasesprite_ma>>
   1470                            
   1471        7F77               CSR_CheckDraw
   1472  4+1   7F77 A6   43               lda   priority,u
   1473  5     7F79 B1   7DB2             cmpa  cur_priority
   1474  3     7F7C 26   96               bne   CSR_NextObject
   1475                            
   1476  7     7F7E 10BE 7DB6             ldy   cur_ptr_sub_obj_draw
   1477  6+1   7F82 10AF C8 30            sty   rsv_ptr_sub_object_draw,u
   1478                            
   1479  4+1   7F86 A6   C8 29            lda   rsv_render_flags,u
   1480  2     7F89 84   08               anda  #rsv_render_outofrange_mask>>
   1481  3     7F8B 26   1D               bne   CSR_SetDrawFalse           >>
   1482  5+1   7F8D EC   C8 2C            ldd   rsv_curr_mapping_frame,u
   1483  3     7F90 27   18               beq   CSR_SetDrawFalse           >>
   1484  4     7F92 96   02               lda   render_flags
   1485  2     7F94 84   08               anda  #render_hide_mask
   1486  3     7F96 26   12               bne   CSR_SetDrawFalse           >>
   1487                            
   1488        7F98               CSR_SetDrawTrue
   1489  4+1   7F98 A6   C8 29            lda   rsv_render_flags,u
   1490  2     7F9B 8A   04               ora   #rsv_render_displaysprite_m>>
   1491                            
   1492  5+3   7F9D EF   A1               stu   ,y++
   1493  7     7F9F 10BF 7DB6             sty   cur_ptr_sub_obj_draw
   1494                            
   1495  5+1   7FA3 EE   03               ldu   buf_priority_next_obj,x
   1496  6     7FA5 1026 FEE0             lbne   CSR_ProcessEachPriorityLev>>
   1497  5     7FA9 39                    rts
   1498
   1499        7FAA               CSR_SetDrawFalse
   1500  4+1   7FAA A6   C8 29            lda   rsv_render_flags,u
   1501  2     7FAD 84   FB               anda  #:rsv_render_displaysprite_>>
   1502                            
   1503  5+1   7FAF EE   03               ldu   buf_priority_next_obj,x
   1504  6     7FB1 1026 FED4             lbne   CSR_ProcessEachPriorityLev>>
   1505  5     7FB5 39                    rts
   1506
   1507
   1508                                   INCLUD ERASESPR
   1509                           * --------------------------------------->>
   1510                           * EraseSprites
   1511                           * ------------
   1512                           * Subroutine to erase sprites on screen
   1513                           * Read Display Priority Structure (front >>
   1514                           * priority: 0 - unregistred
   1515                           * priority: 1 - register non moving overl>>
   1516                           * priority; 2-8 - register moving sprite >>
   1517                           *
   1518                           * input REG : none
   1519                           * --------------------------------------->>
   1520                            
   1521        7FB6               EraseSprites
   1522
   1523        7FB6               ESP_Start
   1524  5     7FB6 B6   611D             lda   Glb_Cur_Wrk_Screen_Id      >>
   1525  3     7FB9 26   5B               bne   ESP_P1B1
   1526                            
   1527        7FBB               ESP_P1B0
   1528  6     7FBB FE   64CB             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1529  3     7FBE 27   08               beq   ESP_P2B0
   1530  2     7FC0 86   01               lda   #$01
   1531  5     7FC2 B7   8083             sta   ESP_CheckPriorityB0+1
   1532  8     7FC5 BD   807F             jsr   ESP_ProcessEachPriorityLeve>>
   1533        7FC8               ESP_P2B0
   1534  6     7FC8 FE   64CD             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1535  3     7FCB 27   06               beq   ESP_P3B0
   1536  7     7FCD 7C   8083             inc   ESP_CheckPriorityB0+1
   1537  8     7FD0 BD   807F             jsr   ESP_ProcessEachPriorityLeve>>
   1538        7FD3               ESP_P3B0
   1539  6     7FD3 FE   64CF             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1540  3     7FD6 27   06               beq   ESP_P4B0
   1541  7     7FD8 7C   8083             inc   ESP_CheckPriorityB0+1
   1542  8     7FDB BD   807F             jsr   ESP_ProcessEachPriorityLeve>>
   1543        7FDE               ESP_P4B0
   1544  6     7FDE FE   64D1             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1545  3     7FE1 27   06               beq   ESP_P5B0
   1546  7     7FE3 7C   8083             inc   ESP_CheckPriorityB0+1
   1547  8     7FE6 BD   807F             jsr   ESP_ProcessEachPriorityLeve>>
   1548        7FE9               ESP_P5B0
   1549  6     7FE9 FE   64D3             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1550  3     7FEC 27   06               beq   ESP_P6B0
   1551  7     7FEE 7C   8083             inc   ESP_CheckPriorityB0+1
   1552  8     7FF1 BD   807F             jsr   ESP_ProcessEachPriorityLeve>>
   1553        7FF4               ESP_P6B0
   1554  6     7FF4 FE   64D5             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1555  3     7FF7 27   06               beq   ESP_P7B0
   1556  7     7FF9 7C   8083             inc   ESP_CheckPriorityB0+1
   1557  8     7FFC BD   807F             jsr   ESP_ProcessEachPriorityLeve>>
   1558        7FFF               ESP_P7B0
   1559  6     7FFF FE   64D7             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1560  3     8002 27   06               beq   ESP_P8B0
   1561  7     8004 7C   8083             inc   ESP_CheckPriorityB0+1
   1562  8     8007 BD   807F             jsr   ESP_ProcessEachPriorityLeve>>
   1563        800A               ESP_P8B0
   1564  6     800A FE   64D9             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1565  3     800D 27   06               beq   ESP_rtsB0
   1566  7     800F 7C   8083             inc   ESP_CheckPriorityB0+1
   1567  8     8012 BD   807F             jsr   ESP_ProcessEachPriorityLeve>>
   1568        8015               ESP_rtsB0
   1569  5     8015 39                    rts
   1570                            
   1571        8016               ESP_P1B1
   1572  6     8016 FE   656B             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1573  3     8019 27   08               beq   ESP_P2B1
   1574  2     801B 86   08               lda   #$08
   1575  5     801D B7   8118             sta   ESP_CheckPriorityB1+1
   1576  8     8020 BD   8114             jsr   ESP_ProcessEachPriorityLeve>>
   1577        8023               ESP_P2B1
   1578  6     8023 FE   656D             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1579  3     8026 27   08               beq   ESP_P3B1
   1580  2     8028 86   07               lda   #$07
   1581  5     802A B7   8118             sta   ESP_CheckPriorityB1+1
   1582  8     802D BD   8114             jsr   ESP_ProcessEachPriorityLeve>>
   1583        8030               ESP_P3B1
   1584  6     8030 FE   656F             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1585  3     8033 27   08               beq   ESP_P4B1
   1586  2     8035 86   06               lda   #$06
   1587  5     8037 B7   8118             sta   ESP_CheckPriorityB1+1
   1588  8     803A BD   8114             jsr   ESP_ProcessEachPriorityLeve>>
   1589        803D               ESP_P4B1
   1590  6     803D FE   6571             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1591  3     8040 27   08               beq   ESP_P5B1
   1592  2     8042 86   05               lda   #$05
   1593  5     8044 B7   8118             sta   ESP_CheckPriorityB1+1
   1594  8     8047 BD   8114             jsr   ESP_ProcessEachPriorityLeve>>
   1595        804A               ESP_P5B1
   1596  6     804A FE   6573             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1597  3     804D 27   08               beq   ESP_P6B1
   1598  2     804F 86   04               lda   #$04
   1599  5     8051 B7   8118             sta   ESP_CheckPriorityB1+1
   1600  8     8054 BD   8114             jsr   ESP_ProcessEachPriorityLeve>>
   1601        8057               ESP_P6B1
   1602  6     8057 FE   6575             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1603  3     805A 27   08               beq   ESP_P7B1
   1604  2     805C 86   03               lda   #$03
   1605  5     805E B7   8118             sta   ESP_CheckPriorityB1+1
   1606  8     8061 BD   8114             jsr   ESP_ProcessEachPriorityLeve>>
   1607        8064               ESP_P7B1
   1608  6     8064 FE   6577             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1609  3     8067 27   08               beq   ESP_P8B1
   1610  2     8069 86   02               lda   #$02
   1611  5     806B B7   8118             sta   ESP_CheckPriorityB1+1
   1612  8     806E BD   8114             jsr   ESP_ProcessEachPriorityLeve>>
   1613        8071               ESP_P8B1
   1614  6     8071 FE   6579             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1615  3     8074 27   08               beq   ESP_rtsB1
   1616  2     8076 86   01               lda   #$01
   1617  5     8078 B7   8118             sta   ESP_CheckPriorityB1+1
   1618  8     807B BD   8114             jsr   ESP_ProcessEachPriorityLeve>>
   1619        807E               ESP_rtsB1
   1620  5     807E 39                    rts
   1621
   1622                           * *******
   1623                           * BUFFER0
   1624                           * *******
   1625
   1626        807F               ESP_ProcessEachPriorityLevelB0
   1627  4+1   807F A6   C8 34            lda   rsv_priority_0,u
   1628                            
   1629        8082               ESP_CheckPriorityB0
   1630  2     8082 81   00               cmpa  #0                         >>
   1631  3     8084 26   38               bne   ESP_NextObjectB0           >>
   1632                            
   1633        8086               ESP_UnsetCheckRefreshB0
   1634  4+1   8086 A6   C8 29            lda   rsv_render_flags,u
   1635  2     8089 84   FE               anda  #:rsv_render_checkrefresh_m>>
   1636  4+1   808B A7   C8 29            sta   rsv_render_flags,u
   1637                            
   1638        808E               ESP_CheckEraseB0
   1639  2     808E 84   02               anda  #rsv_render_erasesprite_mas>>
   1640  3     8090 26   5D               bne   ESP_CallEraseRoutineB0     >>
   1641                            
   1642                                   * if not supposed to be refreshed>>
   1643                            
   1644  4+1   8092 A6   C8 41            lda   rsv_onscreen_0,u
   1645  3     8095 27   27               beq   ESP_NextObjectB0
   1646                            
   1647                                   * search a collision with a sprit>>
   1648                                   * the sprite under should have to>>
   1649                                   * in this case it forces the refr>>
   1650                                   * as a sub loop, this should be o>>
   1651                            
   1652        8097               ESP_SubEraseSpriteSearchInitB0
   1653  5+1   8097 AE   C8 2E            ldx   rsv_ptr_sub_object_erase,u
   1654                            
   1655        809A               ESP_SubEraseSearchB0
   1656  7     809A BC   7DB4             cmpx  cur_ptr_sub_obj_erase
   1657  3     809D 27   25               beq   ESP_SubDrawSpriteSearchInit>>
   1658  6+3   809F 10AE 83               ldy   ,--x
   1659                            
   1660        80A2               ESP_SubEraseCheckCollisionB0
   1661  5+1   80A2 EC   A8 3D            ldd   rsv_prev_x_pixel_0,y       >>
   1662  4+1   80A5 A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1663  3     80A8 24   F0               bhs   ESP_SubEraseSearchB0
   1664  4+1   80AA E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1665  3     80AD 24   EB               bhs   ESP_SubEraseSearchB0
   1666  5+1   80AF EC   A8 3F            ldd   rsv_prev_x2_pixel_0,y      >>
   1667  4+1   80B2 A1   C8 12            cmpa  x_pixel,u                  >>
   1668  3     80B5 23   E3               bls   ESP_SubEraseSearchB0
   1669  4+1   80B7 E1   C8 13            cmpb  y_pixel,u                  >>
   1670  3     80BA 23   DE               bls   ESP_SubEraseSearchB0
   1671  3     80BC 20   2B               bra   ESP_SubCheckOverlayB0
   1672
   1673        80BE               ESP_NextObjectB0
   1674  5+1   80BE EE   C8 35            ldu   rsv_priority_prev_obj_0,u
   1675  3     80C1 26   BC               bne   ESP_ProcessEachPriorityLeve>>
   1676  5     80C3 39                    rts
   1677
   1678        80C4               ESP_SubDrawSpriteSearchInitB0
   1679  5+1   80C4 AE   C8 30            ldx   rsv_ptr_sub_object_draw,u
   1680                            
   1681        80C7               ESP_SubDrawSearchB0
   1682  7     80C7 BC   7DB6             cmpx  cur_ptr_sub_obj_draw
   1683  3     80CA 27   1D               beq   ESP_SubCheckOverlayB0      >>
   1684  6+3   80CC 10AE 83               ldy   ,--x
   1685
   1686        80CF               ESP_SubDrawCheckCollisionB0
   1687  5+1   80CF EC   A8 12            ldd   x_pixel,y                  >>
   1688  4+1   80D2 A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1689  3     80D5 24   F0               bhs   ESP_SubDrawSearchB0
   1690  4+1   80D7 E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1691  3     80DA 24   EB               bhs   ESP_SubDrawSearchB0
   1692  5+1   80DC EC   A8 32            ldd   rsv_x2_pixel,y             >>
   1693  4+1   80DF A1   C8 12            cmpa  x_pixel,u                  >>
   1694  3     80E2 23   E3               bls   ESP_SubDrawSearchB0
   1695  4+1   80E4 E1   C8 13            cmpb  y_pixel,u                  >>
   1696  3     80E7 23   DE               bls   ESP_SubDrawSearchB0
   1697                            
   1698        80E9               ESP_SubCheckOverlayB0
   1699  4+1   80E9 A6   42               lda   render_flags,u
   1700  2     80EB 84   10               anda  #render_fixedoverlay_mask
   1701  3     80ED 26   20               bne   ESP_UnsetOnScreenFlagB0
   1702                            
   1703        80EF               ESP_CallEraseRoutineB0
   1704  6     80EF FF   8103             stu   ESP_CallEraseRoutineB0_00+1>>
   1705  5+1   80F2 AE   C8 39            ldx   rsv_prev_mapping_frame_0,u >>
   1706  4+1   80F5 A6   06               lda   page_erase_routine,x
   1707  5     80F7 B7   E7E5             sta   $E7E5                      >>
   1708  5+1   80FA EE   C8 3B            ldu   rsv_bgdata_0,u             >>
   1709  7+4   80FD AD   98 07            jsr   [erase_routine,x]          >>
   1710  4+0   8100 31   C4               leay  ,u                         >>
   1711        8102               ESP_CallEraseRoutineB0_00
   1712  3     8102 CE   0000             ldu   #$0000                     >>
   1713  5+1   8105 EC   C8 3B            ldd   rsv_bgdata_0,u             >>
   1714  2     8108 C4   40               andb  #cell_size                 >>
   1715  6     810A 1F   01               tfr   d,x                        >>
   1716                            
   1717        810C               ESP_FreeEraseBufferB0
   1718  8     810C BD   8470             jsr   BgBufferFree               >>
   1719                            
   1720        810F               ESP_UnsetOnScreenFlagB0
   1721  6+1   810F 6F   C8 41            clr   rsv_onscreen_0,u           >>
   1722  3     8112 20   AA               bra   ESP_NextObjectB0
   1723
   1724                           * *******
   1725                           * BUFFER1
   1726                           * *******
   1727                            
   1728        8114               ESP_ProcessEachPriorityLevelB1
   1729  4+1   8114 A6   C8 42            lda   rsv_priority_1,u
   1730                            
   1731        8117               ESP_CheckPriorityB1
   1732  2     8117 81   00               cmpa  #0                         >>
   1733  3     8119 26   38               bne   ESP_NextObjectB1           >>
   1734                            
   1735        811B               ESP_UnsetCheckRefreshB1
   1736  4+1   811B A6   C8 29            lda   rsv_render_flags,u
   1737  2     811E 84   FE               anda  #:rsv_render_checkrefresh_m>>
   1738  4+1   8120 A7   C8 29            sta   rsv_render_flags,u
   1739                            
   1740        8123               ESP_CheckEraseB1
   1741  2     8123 84   02               anda  #rsv_render_erasesprite_mas>>
   1742  3     8125 26   5D               bne   ESP_CallEraseRoutineB1     >>
   1743                            
   1744                                   * if not supposed to be refreshed>>
   1745                            
   1746  4+1   8127 A6   C8 4F            lda   rsv_onscreen_1,u
   1747  3     812A 27   27               beq   ESP_NextObjectB1
   1748                            
   1749                                   * search a collision with a sprit>>
   1750                                   * the sprite under should have to>>
   1751                                   * in this case it forces the refr>>
   1752                                   * as a sub loop, this should be o>>
   1753                            
   1754        812C               ESP_SubEraseSpriteSearchInitB1
   1755  5+1   812C AE   C8 2E            ldx   rsv_ptr_sub_object_erase,u
   1756                            
   1757        812F               ESP_SubEraseSearchB1
   1758  7     812F BC   7DB4             cmpx  cur_ptr_sub_obj_erase
   1759  3     8132 27   25               beq   ESP_SubDrawSpriteSearchInit>>
   1760  6+3   8134 10AE 83               ldy   ,--x
   1761                            
   1762        8137               ESP_SubEraseCheckCollisionB1
   1763  5+1   8137 EC   A8 4B            ldd   rsv_prev_x_pixel_1,y       >>
   1764  4+1   813A A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1765  3     813D 24   F0               bhs   ESP_SubEraseSearchB1
   1766  4+1   813F E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1767  3     8142 24   EB               bhs   ESP_SubEraseSearchB1
   1768  5+1   8144 EC   A8 4D            ldd   rsv_prev_x2_pixel_1,y      >>
   1769  4+1   8147 A1   C8 12            cmpa  x_pixel,u                  >>
   1770  3     814A 23   E3               bls   ESP_SubEraseSearchB1
   1771  4+1   814C E1   C8 13            cmpb  y_pixel,u                  >>
   1772  3     814F 23   DE               bls   ESP_SubEraseSearchB1
   1773  3     8151 20   2B               bra   ESP_SubCheckOverlayB1
   1774
   1775        8153               ESP_NextObjectB1
   1776  5+1   8153 EE   C8 43            ldu   rsv_priority_prev_obj_1,u
   1777  3     8156 26   BC               bne   ESP_ProcessEachPriorityLeve>>
   1778  5     8158 39                    rts
   1779
   1780        8159               ESP_SubDrawSpriteSearchInitB1
   1781  5+1   8159 AE   C8 30            ldx   rsv_ptr_sub_object_draw,u
   1782                            
   1783        815C               ESP_SubDrawSearchB1
   1784  7     815C BC   7DB6             cmpx  cur_ptr_sub_obj_draw
   1785  3     815F 27   1D               beq   ESP_SubCheckOverlayB1      >>
   1786  6+3   8161 10AE 83               ldy   ,--x
   1787
   1788        8164               ESP_SubDrawCheckCollisionB1
   1789  5+1   8164 EC   A8 12            ldd   x_pixel,y                  >>
   1790  4+1   8167 A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1791  3     816A 24   F0               bhs   ESP_SubDrawSearchB1
   1792  4+1   816C E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1793  3     816F 24   EB               bhs   ESP_SubDrawSearchB1
   1794  5+1   8171 EC   A8 32            ldd   rsv_x2_pixel,y             >>
   1795  4+1   8174 A1   C8 12            cmpa  x_pixel,u                  >>
   1796  3     8177 23   E3               bls   ESP_SubDrawSearchB1
   1797  4+1   8179 E1   C8 13            cmpb  y_pixel,u                  >>
   1798  3     817C 23   DE               bls   ESP_SubDrawSearchB1
   1799                            
   1800        817E               ESP_SubCheckOverlayB1
   1801  4+1   817E A6   42               lda   render_flags,u
   1802  2     8180 84   10               anda  #render_fixedoverlay_mask
   1803  3     8182 26   20               bne   ESP_UnsetOnScreenFlagB1
   1804                            
   1805        8184               ESP_CallEraseRoutineB1
   1806  6     8184 FF   8198             stu   ESP_CallEraseRoutineB1_00+1>>
   1807  5+1   8187 AE   C8 47            ldx   rsv_prev_mapping_frame_1,u >>
   1808  4+1   818A A6   06               lda   page_erase_routine,x
   1809  5     818C B7   E7E5             sta   $E7E5                      >>
   1810  5+1   818F EE   C8 49            ldu   rsv_bgdata_1,u             >>
   1811  7+4   8192 AD   98 07            jsr   [erase_routine,x]          >>
   1812  4+0   8195 31   C4               leay  ,u                         >>
   1813        8197               ESP_CallEraseRoutineB1_00
   1814  3     8197 CE   0000             ldu   #$0000                     >>
   1815  5+1   819A EC   C8 49            ldd   rsv_bgdata_1,u             >>
   1816  2     819D C4   40               andb  #cell_size                 >>
   1817  6     819F 1F   01               tfr   d,x                        >>
   1818                            
   1819        81A1               ESP_FreeEraseBufferB1
   1820  8     81A1 BD   8470             jsr   BgBufferFree               >>
   1821                            
   1822        81A4               ESP_UnsetOnScreenFlagB1
   1823  6+1   81A4 6F   C8 4F            clr   rsv_onscreen_1,u           >>
   1824  3     81A7 20   AA               bra   ESP_NextObjectB1
   1825
   1826                                   INCLUD UNSETDSP
   1827                           * --------------------------------------->>
   1828                           * UnsetDisplayPriority
   1829                           * --------------------
   1830                           * Subroutine to unset sprites in Display >>
   1831                           * Read Lst_Priority_Unset_0/1
   1832                           *
   1833                           * input REG : none
   1834                           * --------------------------------------->>
   1835                            
   1836        81A9               UnsetDisplayPriority
   1837
   1838        81A9               UDP_Start
   1839  5     81A9 B6   611D             lda   Glb_Cur_Wrk_Screen_Id      >>
   1840  3     81AC 26   6F               bne   UDP_B1
   1841                            
   1842        81AE               UDP_B0
   1843  3     81AE 8E   64DF             ldx   #Lst_Priority_Unset_0+2
   1844                            
   1845        81B1               UDP_CheckEndB0
   1846  7     81B1 BC   64DD             cmpx  Lst_Priority_Unset_0       >>
   1847  3     81B4 26   07               bne   UDP_CheckPrioPrevB0
   1848                            
   1849        81B6               UDP_InitListB0
   1850  3     81B6 8E   64DF             ldx   #Lst_Priority_Unset_0+2
   1851  6     81B9 BF   64DD             stx   Lst_Priority_Unset_0       >>
   1852  5     81BC 39                    rts
   1853                            
   1854        81BD               UDP_CheckPrioPrevB0
   1855  5+3   81BD EE   81               ldu   ,x++
   1856  5+1   81BF EC   C8 35            ldd   rsv_priority_prev_obj_0,u
   1857  3     81C2 26   12               bne   UDP_ChainPrevB0
   1858                            
   1859  4+1   81C4 A6   C8 34            lda   rsv_priority_0,u
   1860  2     81C7 4A                    deca
   1861  2     81C8 48                    lsla
   1862  4     81C9 108E 64B9             ldy   #Tbl_Priority_First_Entry_0>>
   1863  4+1   81CD 31   A6               leay  a,y
   1864  5+1   81CF EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1865  5+0   81D2 ED   A4               std   ,y
   1866  3     81D4 20   0A               bra   UDP_CheckPrioNextB0
   1867                            
   1868        81D6               UDP_ChainPrevB0
   1869  5+1   81D6 EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1870  6+1   81D9 10AE C8 35            ldy   rsv_priority_prev_obj_0,u
   1871  5+1   81DD ED   A8 37            std   rsv_priority_next_obj_0,y
   1872
   1873        81E0               UDP_CheckPrioNextB0
   1874  5+1   81E0 EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1875  3     81E3 26   12               bne   UDP_ChainNextB0
   1876
   1877  4+1   81E5 A6   C8 34            lda   rsv_priority_0,u
   1878  2     81E8 4A                    deca
   1879  2     81E9 48                    lsla
   1880  4     81EA 108E 64CB             ldy   #Tbl_Priority_Last_Entry_0
   1881  4+1   81EE 31   A6               leay  a,y
   1882  5+1   81F0 EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1883  5+0   81F3 ED   A4               std   ,y
   1884  3     81F5 20   0A               bra   UDP_CheckDeleteB0
   1885                            
   1886        81F7               UDP_ChainNextB0
   1887  5+1   81F7 EC   C8 35            ldd   rsv_priority_prev_obj_0,u
   1888  6+1   81FA 10AE C8 37            ldy   rsv_priority_next_obj_0,u
   1889  5+1   81FE ED   A8 35            std   rsv_priority_prev_obj_0,y
   1890                            
   1891        8201               UDP_CheckDeleteB0
   1892  4+1   8201 A6   42               lda   render_flags,u
   1893  2     8203 84   20               anda  #render_todelete_mask
   1894  3     8205 27   0F               beq   UDP_SetNewPrioB0
   1895  4+1   8207 A6   C8 41            lda   rsv_onscreen_0,u
   1896  3     820A 26   0A               bne   UDP_SetNewPrioB0
   1897  4+1   820C A6   C8 4F            lda   rsv_onscreen_1,u
   1898  3     820F 26   05               bne   UDP_SetNewPrioB0
   1899  8     8211 BD   7D82             jsr   ClearObj
   1900  3     8214 20   9B               bra   UDP_CheckEndB0
   1901                            
   1902        8216               UDP_SetNewPrioB0
   1903  4+1   8216 A6   43               lda   priority,u
   1904  4+1   8218 A7   C8 34            sta   rsv_priority_0,u
   1905  3     821B 20   94               bra   UDP_CheckEndB0
   1906
   1907        821D               UDP_B1
   1908  3     821D 8E   657F             ldx   #Lst_Priority_Unset_1+2
   1909                            
   1910        8220               UDP_CheckEndB1
   1911  7     8220 BC   657D             cmpx  Lst_Priority_Unset_1       >>
   1912  3     8223 26   07               bne   UDP_CheckPrioPrevB1
   1913                            
   1914        8225               UDP_InitListB1
   1915  3     8225 8E   657F             ldx   #Lst_Priority_Unset_1+2
   1916  6     8228 BF   657D             stx   Lst_Priority_Unset_1       >>
   1917  5     822B 39                    rts
   1918                            
   1919        822C               UDP_CheckPrioPrevB1
   1920  5+3   822C EE   81               ldu   ,x++
   1921  5+1   822E EC   C8 43            ldd   rsv_priority_prev_obj_1,u
   1922  3     8231 26   12               bne   UDP_ChainPrevB1
   1923                            
   1924  4+1   8233 A6   C8 42            lda   rsv_priority_1,u
   1925  2     8236 4A                    deca
   1926  2     8237 48                    lsla
   1927  4     8238 108E 6559             ldy   #Tbl_Priority_First_Entry_1>>
   1928  4+1   823C 31   A6               leay  a,y
   1929  5+1   823E EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1930  5+0   8241 ED   A4               std   ,y
   1931  3     8243 20   0A               bra   UDP_CheckPrioNextB1
   1932                            
   1933        8245               UDP_ChainPrevB1
   1934  5+1   8245 EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1935  6+1   8248 10AE C8 43            ldy   rsv_priority_prev_obj_1,u
   1936  5+1   824C ED   A8 45            std   rsv_priority_next_obj_1,y
   1937
   1938        824F               UDP_CheckPrioNextB1
   1939  5+1   824F EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1940  3     8252 26   12               bne   UDP_ChainNextB1
   1941
   1942  4+1   8254 A6   C8 42            lda   rsv_priority_1,u
   1943  2     8257 4A                    deca
   1944  2     8258 48                    lsla
   1945  4     8259 108E 656B             ldy   #Tbl_Priority_Last_Entry_1
   1946  4+1   825D 31   A6               leay  a,y
   1947  5+1   825F EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1948  5+0   8262 ED   A4               std   ,y
   1949  3     8264 20   0A               bra   UDP_CheckDeleteB1
   1950                            
   1951        8266               UDP_ChainNextB1
   1952  5+1   8266 EC   C8 43            ldd   rsv_priority_prev_obj_1,u
   1953  6+1   8269 10AE C8 45            ldy   rsv_priority_next_obj_1,u
   1954  5+1   826D ED   A8 43            std   rsv_priority_prev_obj_1,y
   1955                            
   1956        8270               UDP_CheckDeleteB1
   1957  4+1   8270 A6   42               lda   render_flags,u
   1958  2     8272 84   20               anda  #render_todelete_mask
   1959  3     8274 27   0F               beq   UDP_SetNewPrioB1
   1960  4+1   8276 A6   C8 4F            lda   rsv_onscreen_1,u
   1961  3     8279 26   0A               bne   UDP_SetNewPrioB1
   1962  4+1   827B A6   C8 4F            lda   rsv_onscreen_1,u
   1963  3     827E 26   05               bne   UDP_SetNewPrioB1
   1964  8     8280 BD   7D82             jsr   ClearObj
   1965  3     8283 20   9B               bra   UDP_CheckEndB1
   1966                            
   1967        8285               UDP_SetNewPrioB1
   1968  4+1   8285 A6   43               lda   priority,u
   1969  4+1   8287 A7   C8 42            sta   rsv_priority_1,u
   1970  3     828A 20   94               bra   UDP_CheckEndB1
   1971
   1972                                   INCLUD DRAWSPR
   1973                           * --------------------------------------->>
   1974                           * DrawSprites
   1975                           * ------------
   1976                           * Subroutine to draw sprites on screen
   1977                           * Read Display Priority Structure (back t>>
   1978                           * priority: 0 - unregistred
   1979                           * priority: 1 - register non moving overl>>
   1980                           * priority; 2-8 - register moving sprite >>
   1981                           *
   1982                           * input REG : none
   1983                           * --------------------------------------->>
   1984                            
   1985        828C               DrawSprites
   1986
   1987        828C               DRS_Start
   1988  5     828C B6   611D             lda   Glb_Cur_Wrk_Screen_Id      >>
   1989  3     828F 26   41               bne   DRS_P8B1
   1990                            
   1991        8291               DRS_P8B0
   1992  6     8291 BE   64C7             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1993  3     8294 27   03               beq   DRS_P7B0
   1994  8     8296 BD   8313             jsr   DRS_ProcessEachPriorityLeve>>
   1995        8299               DRS_P7B0
   1996  6     8299 BE   64C5             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1997  3     829C 27   03               beq   DRS_P6B0
   1998  8     829E BD   8313             jsr   DRS_ProcessEachPriorityLeve>>
   1999        82A1               DRS_P6B0
   2000  6     82A1 BE   64C3             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2001  3     82A4 27   03               beq   DRS_P5B0
   2002  8     82A6 BD   8313             jsr   DRS_ProcessEachPriorityLeve>>
   2003        82A9               DRS_P5B0
   2004  6     82A9 BE   64C1             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2005  3     82AC 27   03               beq   DRS_P4B0
   2006  8     82AE BD   8313             jsr   DRS_ProcessEachPriorityLeve>>
   2007        82B1               DRS_P4B0
   2008  6     82B1 BE   64BF             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2009  3     82B4 27   03               beq   DRS_P3B0
   2010  8     82B6 BD   8313             jsr   DRS_ProcessEachPriorityLeve>>
   2011        82B9               DRS_P3B0
   2012  6     82B9 BE   64BD             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2013  3     82BC 27   03               beq   DRS_P2B0
   2014  8     82BE BD   8313             jsr   DRS_ProcessEachPriorityLeve>>
   2015        82C1               DRS_P2B0
   2016  6     82C1 BE   64BB             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2017  3     82C4 27   03               beq   DRS_P1B0
   2018  8     82C6 BD   8313             jsr   DRS_ProcessEachPriorityLeve>>
   2019        82C9               DRS_P1B0
   2020  6     82C9 BE   64B9             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2021  3     82CC 27   03               beq   DRS_rtsB0
   2022  8     82CE BD   8313             jsr   DRS_ProcessEachPriorityLeve>>
   2023        82D1               DRS_rtsB0
   2024  5     82D1 39                    rts
   2025                            
   2026        82D2               DRS_P8B1
   2027  6     82D2 BE   6567             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2028  3     82D5 27   03               beq   DRS_P7B1
   2029  8     82D7 BD   83B0             jsr   DRS_ProcessEachPriorityLeve>>
   2030        82DA               DRS_P7B1
   2031  6     82DA BE   6565             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2032  3     82DD 27   03               beq   DRS_P6B1
   2033  8     82DF BD   83B0             jsr   DRS_ProcessEachPriorityLeve>>
   2034        82E2               DRS_P6B1
   2035  6     82E2 BE   6563             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2036  3     82E5 27   03               beq   DRS_P5B1
   2037  8     82E7 BD   83B0             jsr   DRS_ProcessEachPriorityLeve>>
   2038        82EA               DRS_P5B1
   2039  6     82EA BE   6561             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2040  3     82ED 27   03               beq   DRS_P4B1
   2041  8     82EF BD   83B0             jsr   DRS_ProcessEachPriorityLeve>>
   2042        82F2               DRS_P4B1
   2043  6     82F2 BE   655F             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2044  3     82F5 27   03               beq   DRS_P3B1
   2045  8     82F7 BD   83B0             jsr   DRS_ProcessEachPriorityLeve>>
   2046        82FA               DRS_P3B1
   2047  6     82FA BE   655D             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2048  3     82FD 27   03               beq   DRS_P2B1
   2049  8     82FF BD   83B0             jsr   DRS_ProcessEachPriorityLeve>>
   2050        8302               DRS_P2B1
   2051  6     8302 BE   655B             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2052  3     8305 27   03               beq   DRS_P1B1
   2053  8     8307 BD   83B0             jsr   DRS_ProcessEachPriorityLeve>>
   2054        830A               DRS_P1B1
   2055  6     830A BE   6559             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2056  3     830D 27   03               beq   DRS_rtsB1
   2057  8     830F BD   83B0             jsr   DRS_ProcessEachPriorityLeve>>
   2058        8312               DRS_rtsB1
   2059  5     8312 39                    rts
   2060
   2061        8313               DRS_ProcessEachPriorityLevelB0
   2062  4+1   8313 A6   88 29            lda   rsv_render_flags,x
   2063  2     8316 84   04               anda  #rsv_render_displaysprite_m>>
   2064  3     8318 27   46               beq   DRS_NextObjectB0
   2065  4+1   831A A6   88 41            lda   rsv_onscreen_0,x
   2066  3     831D 26   41               bne   DRS_NextObjectB0
   2067  4+1   831F A6   02               lda   render_flags,x
   2068  2     8321 84   10               anda  #render_fixedoverlay_mask
   2069  3     8323 26   41               bne   DRS_DrawWithoutBackupB0
   2070  5+1   8325 EE   88 2C            ldu   rsv_curr_mapping_frame,x
   2071  4+1   8328 A6   49               lda   erase_nb_cell,u
   2072  8     832A BD   8427             jsr   BgBufferAlloc              >>
   2073  5     832D 108C 0000             cmpy  #$0000                     >>
   2074  3     8331 27   2D               beq   DRS_NextObjectB0           >>
   2075  5+1   8333 EC   88 12            ldd   x_pixel,x                  >>
   2076  5+1   8336 ED   88 3D            std   rsv_prev_x_pixel_0,x       >>
   2077  8     8339 BD   8383             jsr   DRS_XYToAddress
   2078  5+1   833C EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2079  5+1   833F EF   88 39            stu   rsv_prev_mapping_frame_0,x >>
   2080  4+1   8342 A6   40               lda   page_bckdraw_routine,u
   2081  5     8344 B7   E7E5             sta   $E7E5                      >>
   2082  4+0   8347 33   A4               leau  ,y                         >>
   2083  6     8349 BF   8350             stx   DRS_dyn3B0+1               >>
   2084  7+4   834C AD   98 01            jsr   [bckdraw_routine,x]        >>
   2085        834F               DRS_dyn3B0
   2086  3     834F 8E   0000             ldx   #$0000                     >>
   2087  5+1   8352 EF   88 3B            stu   rsv_bgdata_0,x             >>
   2088  5+1   8355 EC   88 32            ldd   rsv_x2_pixel,x             >>
   2089  5+1   8358 ED   88 3F            std   rsv_prev_x2_pixel_0,x      >>
   2090  2     835B 86   01               lda   #$01
   2091  4+1   835D A7   88 41            sta   rsv_onscreen_0,x           >>
   2092        8360               DRS_NextObjectB0
   2093  5+1   8360 AE   88 37            ldx   rsv_priority_next_obj_0,x
   2094  3     8363 26   AE               bne   DRS_ProcessEachPriorityLeve>>
   2095  5     8365 39                    rts
   2096                            
   2097        8366               DRS_DrawWithoutBackupB0
   2098  5+1   8366 EC   88 12            ldd   x_pixel,x                  >>
   2099  8     8369 BD   8383             jsr   DRS_XYToAddress
   2100  5+1   836C EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2101  4+1   836F A6   43               lda   page_draw_routine,u
   2102  5     8371 B7   E7E5             sta   $E7E5                      >>
   2103  6     8374 BF   837B             stx   DRS_dyn4B0+1               >>
   2104  7+4   8377 AD   98 04            jsr   [draw_routine,x]           >>
   2105        837A               DRS_dyn4B0
   2106  3     837A 8E   0000             ldx   #$0000                     >>
   2107  5+1   837D AE   88 37            ldx   rsv_priority_next_obj_0,x
   2108  3     8380 26   91               bne   DRS_ProcessEachPriorityLeve>>
   2109  5     8382 39                    rts
   2110
   2111        8383               DRS_XYToAddress
   2112  2     8383 44                    lsra                             >>
   2113  3     8384 25   14               bcs   DRS_XYToAddressRAMBFirst   >>
   2114        8386               DRS_XYToAddressRAMAFirst
   2115  5     8386 B7   8391             sta   DRS_dyn1+2
   2116  2     8389 86   28               lda   #$28                       >>
   2117  4+1   838B E6   88 13            ldb   y_pixel,x                  >>
   2118  11    838E 3D                    mul
   2119        838F               DRS_dyn1
   2120  6     838F D3   00               addd  $0000                      >>
   2121  6     8391 FD   6123             std   Glb_Sprite_Screen_Pos_PartA>>
   2122  2     8394 8A   20               ora   #$20                       >>
   2123  6     8396 FD   6125             std   Glb_Sprite_Screen_Pos_PartB>>
   2124  5     8399 39                    rts
   2125        839A               DRS_XYToAddressRAMBFirst
   2126  5     839A B7   83A5             sta   DRS_dyn2+2
   2127  2     839D 86   28               lda   #$28                       >>
   2128  4+1   839F E6   88 13            ldb   y_pixel,x                  >>
   2129  11    83A2 3D                    mul
   2130        83A3               DRS_dyn2
   2131  7     83A3 F3   2000             addd  $2000                      >>
   2132  6     83A6 FD   6123             std   Glb_Sprite_Screen_Pos_PartA>>
   2133  7     83A9 B3   1FFF             subd  $1FFF
   2134  6     83AC FD   6125             std   Glb_Sprite_Screen_Pos_PartB>>
   2135  5     83AF 39                    rts
   2136                            
   2137        83B0               DRS_ProcessEachPriorityLevelB1
   2138  4+1   83B0 A6   88 29            lda   rsv_render_flags,x
   2139  2     83B3 84   04               anda  #rsv_render_displaysprite_m>>
   2140  3     83B5 27   4D               beq   DRS_NextObjectB1
   2141  4+1   83B7 A6   88 4F            lda   rsv_onscreen_1,x
   2142  3     83BA 26   48               bne   DRS_NextObjectB1
   2143  4+1   83BC A6   02               lda   render_flags,x
   2144  2     83BE 84   10               anda  #render_fixedoverlay_mask
   2145  3     83C0 26   48               bne   DRS_DrawWithoutBackupB1
   2146  5+1   83C2 EE   88 2C            ldu   rsv_curr_mapping_frame,x
   2147  4+1   83C5 A6   49               lda   erase_nb_cell,u
   2148  8     83C7 BD   8427             jsr   BgBufferAlloc              >>
   2149  5     83CA 108C 0000             cmpy  #$0000                     >>
   2150  3     83CE 27   34               beq   DRS_NextObjectB1           >>
   2151  5+1   83D0 EC   88 12            ldd   x_pixel,x                  >>
   2152  5+1   83D3 ED   88 4B            std   rsv_prev_x_pixel_1,x       >>
   2153  8     83D6 BD   8383             jsr   DRS_XYToAddress
   2154  5+1   83D9 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2155  5+1   83DC EF   88 47            stu   rsv_prev_mapping_frame_1,x >>
   2156  4+1   83DF A6   40               lda   page_bckdraw_routine,u
   2157  5     83E1 B7   E7E5             sta   $E7E5                      >>
   2158  4+0   83E4 33   A4               leau  ,y                         >>
   2159  6     83E6 BF   83F4             stx   DRS_dyn3B1+1               >>
   2160  4     83E9 108E 6123             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2161  6     83ED FC   6125             ldd   Glb_Sprite_Screen_Pos_PartB>>
   2162  7+4   83F0 AD   98 01            jsr   [bckdraw_routine,x]        >>
   2163        83F3               DRS_dyn3B1
   2164  3     83F3 8E   0000             ldx   #$0000                     >>
   2165  5+1   83F6 EF   88 49            stu   rsv_bgdata_1,x             >>
   2166  5+1   83F9 EC   88 32            ldd   rsv_x2_pixel,x             >>
   2167  5+1   83FC ED   88 4D            std   rsv_prev_x2_pixel_1,x      >>
   2168  2     83FF 86   01               lda   #$01
   2169  4+1   8401 A7   88 4F            sta   rsv_onscreen_1,x           >>
   2170        8404               DRS_NextObjectB1
   2171  5+1   8404 AE   88 45            ldx   rsv_priority_next_obj_1,x
   2172  3     8407 26   A7               bne   DRS_ProcessEachPriorityLeve>>
   2173  5     8409 39                    rts
   2174                            
   2175        840A               DRS_DrawWithoutBackupB1
   2176  5+1   840A EC   88 12            ldd   x_pixel,x                  >>
   2177  8     840D BD   8383             jsr   DRS_XYToAddress
   2178  5+1   8410 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2179  4+1   8413 A6   43               lda   page_draw_routine,u
   2180  5     8415 B7   E7E5             sta   $E7E5                      >>
   2181  6     8418 BF   841F             stx   DRS_dyn4B1+1               >>
   2182  7+4   841B AD   98 04            jsr   [draw_routine,x]           >>
   2183        841E               DRS_dyn4B1
   2184  3     841E 8E   0000             ldx   #$0000                     >>
   2185  5+1   8421 AE   88 45            ldx   rsv_priority_next_obj_1,x
   2186  3     8424 26   8A               bne   DRS_ProcessEachPriorityLeve>>
   2187  5     8426 39                    rts
   2188
   2189                                   INCLUD BGBALLOC
   2190                           * --------------------------------------->>
   2191                           * BgBufferAlloc
   2192                           * -------------
   2193                           * Subroutine to allocate memory into back>>
   2194                           *
   2195                           * input  REG : [a] number of requested ce>>
   2196                           * output REG : [y] cell_end or 0000 if no>>
   2197                           * --------------------------------------->>
   2198
   2199        8427               BgBufferAlloc
   2200  5+3   8427 34   14               pshs  b,x
   2201  5     8429 F6   611D             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2202  3     842C 26   09               bne   BBA1                       >>
   2203                            
   2204        842E               BBA0
   2205  3     842E 8E   6127             ldx   #Lst_FreeCellFirstEntry_0  >>
   2206  7     8431 10BE 6127             ldy   Lst_FreeCellFirstEntry_0   >>
   2207  3     8435 20   07               bra   BBA_Next
   2208                            
   2209        8437               BBA1
   2210  3     8437 8E   62F0             ldx   #Lst_FreeCellFirstEntry_1  >>
   2211  7     843A 10BE 62F0             ldy   Lst_FreeCellFirstEntry_1   >>
   2212                            
   2213        843E               BBA_Next
   2214  3     843E 27   2E               beq   BBA_rts                    >>
   2215  4+1   8440 A1   20               cmpa  nb_cells,y                 >>
   2216  3     8442 27   09               beq   BBA_FitCell                >>
   2217  3     8444 23   12               bls   BBA_DivideCell             >>
   2218  4+1   8446 30   25               leax  next_entry,y               >>
   2219  6+1   8448 10AE 25               ldy   next_entry,y               >>
   2220  3     844B 20   F1               bra   BBA_Next
   2221                            
   2222        844D               BBA_FitCell
   2223  5+1   844D EC   25               ldd   next_entry,y
   2224  5+0   844F ED   84               std   ,x                         >>
   2225  6+1   8451 6F   20               clr   nb_cells,y                 >>
   2226  6+1   8453 10AE 23               ldy   cell_end,y                 >>
   2227  3     8456 20   16               bra   BBA_rts
   2228                            
   2229        8458               BBA_DivideCell
   2230  5     8458 B7   845E             sta   BBA_dyn+1
   2231  4+1   845B E6   20               ldb   nb_cells,y
   2232        845D               BBA_dyn
   2233  2     845D C0   00               subb  #$00                       >>
   2234  4+1   845F E7   20               stb   nb_cells,y                 >>
   2235                            
   2236  2     8461 C6   40               ldb   #cell_size
   2237  11    8463 3D                    mul
   2238  2     8464 8A   50               ora   #80                        >>
   2239  5+1   8466 AE   23               ldx   cell_end,y
   2240  4+4   8468 30   8B               leax  d,x                        >>
   2241  5+1   846A AF   23               stx   cell_end,y                 >>
   2242  4+0   846C 31   84               leay  ,x                         >>
   2243                            
   2244        846E               BBA_rts
   2245  5+5   846E 35   94               puls  b,x,pc
   2246
   2247                                   INCLUD BGBFREE
   2248                           * --------------------------------------->>
   2249                           * BgBufferFree
   2250                           * ------------
   2251                           * Subroutine to free memory from backgrou>>
   2252                           *
   2253                           * input  REG : [x] cell_start
   2254                           *              [y] cell_end
   2255                           * output REG : none
   2256                           * --------------------------------------->>
   2257
   2258        8470               BgBufferFree
   2259  5+4   8470 34   46               pshs  d,u
   2260  3     8472 CC   0000             ldd   #$0000
   2261  6     8475 FD   84C3             std   BBF_SetNewEntryNextentry+1 >>
   2262  5     8478 F6   611D             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2263  3     847B 26   10               bne   BBF1                       >>
   2264                            
   2265        847D               BBF0
   2266  5+1   847D EE   C8 39            ldu   rsv_prev_mapping_frame_0,u >>
   2267  4+1   8480 A6   49               lda   erase_nb_cell,u            >>
   2268  6     8482 FE   6129             ldu   Lst_FreeCell_0             >>
   2269  6     8485 FF   84B1             stu   BBF_AddNewEntryAtEnd+4     >>
   2270  6     8488 FE   6127             ldu   Lst_FreeCellFirstEntry_0   >>
   2271  3     848B 20   0E               bra   BBF_Next
   2272                            
   2273        848D               BBF1
   2274  5+1   848D EE   C8 47            ldu   rsv_prev_mapping_frame_1,u
   2275  4+1   8490 A6   49               lda   erase_nb_cell,u
   2276  6     8492 FE   62F2             ldu   Lst_FreeCell_1
   2277  6     8495 FF   84B1             stu   BBF_AddNewEntryAtEnd+4
   2278  6     8498 FE   62F0             ldu   Lst_FreeCellFirstEntry_1
   2279                            
   2280        849B               BBF_Next
   2281  3     849B 27   10               beq   BBF_AddNewEntryAtEnd       >>
   2282  7+1   849D 10AC 41               cmpy  cell_start,u               >>
   2283  3     84A0 27   29               beq   BBF_ExpandAtStart          >>
   2284  3     84A2 22   48               bhi   BBF_ExpandAtEnd            >>
   2285  5+1   84A4 EE   45               ldu   next_entry,u               >>
   2286  3     84A6 20   F3               bra   BBF_Next
   2287                            
   2288        84A8               BBF_AddNewEntry
   2289  6     84A8 FF   84C3             stu   BBF_SetNewEntryNextentry+1
   2290  4+1   84AB 33   45               leau  next_entry,u               >>
   2291        84AD               BBF_AddNewEntryAtEnd
   2292  6     84AD FF   84C8             stu   BBF_SetNewEntryPrevLink+1  >>
   2293  3     84B0 CE   0000             ldu   #$0000                     >>
   2294        84B3               BBF_FindFreeSlot
   2295  4+1   84B3 E6   40               ldb   nb_cells,u                 >>
   2296  3     84B5 27   04               beq   BBF_SetNewEntry            >>
   2297  4+1   84B7 33   47               leau  entry_size,u               >>
   2298  3     84B9 20   F8               bra   BBF_FindFreeSlot           >>
   2299        84BB               BBF_SetNewEntry
   2300  4+1   84BB A7   40               sta   nb_cells,u                 >>
   2301  5+1   84BD AF   41               stx   cell_start,u               >>
   2302  6+1   84BF 10AF 43               sty   cell_end,u                 >>
   2303        84C2               BBF_SetNewEntryNextentry
   2304  3     84C2 8E   0000             ldx   #$0000                     >>
   2305  5+1   84C5 AF   45               stx   next_entry,u               >>
   2306        84C7               BBF_SetNewEntryPrevLink
   2307  5     84C7 DF   00               stu   $0000                      >>
   2308  3     84C9 20   2C               bra   BBF_rts
   2309
   2310        84CB               BBF_ExpandAtStart
   2311  5+1   84CB AF   41               stx   cell_start,u
   2312  4+1   84CD AB   40               adda  nb_cells,u
   2313  4+1   84CF A7   40               sta   nb_cells,u
   2314  6+1   84D1 10AE 45               ldy   next_entry,u
   2315  3     84D4 27   21               beq   BBF_rts
   2316        84D6               BBF_Join
   2317  6+1   84D6 AC   23               cmpx  cell_end,y
   2318  3     84D8 26   1D               bne   BBF_rts
   2319  5+1   84DA EC   21               ldd   cell_start,y
   2320  5+1   84DC ED   41               std   cell_start,u
   2321  4+1   84DE A6   20               lda   nb_cells,y
   2322  4+1   84E0 AB   40               adda  nb_cells,u
   2323  4+1   84E2 A7   40               sta   nb_cells,u
   2324  6+1   84E4 6F   20               clr   nb_cells,y                 >>
   2325  5+1   84E6 EC   25               ldd   next_entry,y
   2326  5+1   84E8 ED   45               std   next_entry,u               >>
   2327  3     84EA 20   0B               bra   BBF_rts
   2328
   2329        84EC               BBF_ExpandAtEnd
   2330  6+1   84EC AC   43               cmpx  cell_end,u
   2331  3     84EE 26   B8               bne   BBF_AddNewEntry
   2332  6+1   84F0 10AF 43               sty   cell_end,u
   2333  4+1   84F3 AB   40               adda  nb_cells,u
   2334  4+1   84F5 A7   40               sta   nb_cells,u
   2335                            
   2336        84F7               BBF_rts
   2337  5+6   84F7 35   C6               puls  d,u,pc
   2338
    154                            
    155                           * =======================================>>
    156                           * Level Specific Generated Data
    157                           * =======================================>>
   2339                                   INCLUD PALETTE
   2340                           * Generated Code
   2341
   2342
   2343                                   INCLUD IMAGEIDX
   2344                           * Generated Code
   2345
   2346
   2347                                   INCLUD ANIMSCPT
   2348                           * Generated Code
   2349
   2350
   2351                                   INCLUD OBJINDEX
   2352                           * Generated Code
   2353
   2354        84F9               Obj_Index
   2355
   2356                                   INCLUD LOADACT
   2357                           * Generated Code
   2358
   2359        84F9               LoadAct
----------------
5122 cycle(s)
9209 byte(s)
----------------
    164

000000 Total Errors

000425 Total Symbols
     1x          Label 7D16 am_ObjectMove_01
     1x          Label 7D2C am_ObjectMove_02
     3x          Label 7BF3 am_RunNextObject
     2x          Label 7B1A am_SwapVideoPage
     2x          Equ   0004 anim
     0x          Label 7C86 AnimateSprite
     1x          Label 7CB6 Anim_dyn
     1x          Label 7D05 Anim_End
     1x          Label 7CFC Anim_End_FA
     1x          Label 7CF1 Anim_End_FB
     1x          Label 7CE1 Anim_End_FC
     1x          Label 7CD9 Anim_End_FD
     1x          Label 7CC8 Anim_End_FE
     1x          Label 7CD0 Anim_End_FE_dyn
     1x          Label 7CBD Anim_End_FF
     8x          Equ   0008 anim_frame
     4x          Equ   0009 anim_frame_duration
     2x          Label 7CA8 Anim_Next
     1x          Label 7C94 Anim_Run
     1x          Label 7CBC Anim_Wait
     0x          Label 842E BBA0
     1x          Label 8437 BBA1
     1x          Label 8458 BBA_DivideCell
     1x          Label 845D BBA_dyn
     1x          Label 844D BBA_FitCell
     2x          Label 843E BBA_Next
     2x          Label 846E BBA_rts
     0x          Label 847D BBF0
     1x          Label 848D BBF1
     1x          Label 84A8 BBF_AddNewEntry
     3x          Label 84AD BBF_AddNewEntryAtEnd
     1x          Label 84EC BBF_ExpandAtEnd
     1x          Label 84CB BBF_ExpandAtStart
     1x          Label 84B3 BBF_FindFreeSlot
     0x          Label 84D6 BBF_Join
     2x          Label 849B BBF_Next
     4x          Label 84F7 BBF_rts
     1x          Label 84BB BBF_SetNewEntry
     2x          Label 84C2 BBF_SetNewEntryNextentry
     1x          Label 84C7 BBF_SetNewEntryPrevLink
     2x          Equ   0001 bckdraw_routine
     2x          Label 8427 BgBufferAlloc
     2x          Label 8470 BgBufferFree
     0x          Label 7B57 Black_palette
     0x          Equ   0007 buf_bgdata
     2x          Equ   0024 buf_Lst_Priority_Unset
     2x          Equ   000D buf_onscreen
     1x          Equ   0005 buf_prev_mapping_frame
     0x          Equ   000B buf_prev_x2_pixel
     1x          Equ   0009 buf_prev_x_pixel
     0x          Equ   000C buf_prev_y2_pixel
     0x          Equ   000A buf_prev_y_pixel
     5x          Equ   0000 buf_priority
     5x          Equ   0003 buf_priority_next_obj
     2x          Equ   0001 buf_priority_prev_obj
    33x          Equ   0000 buf_Tbl_Priority_First_Entry
    18x          Equ   0012 buf_Tbl_Priority_Last_Entry
     0x          Equ   0040 c1_button_A_mask
     0x          Equ   0002 c1_button_down_mask
     0x          Equ   0004 c1_button_left_mask
     0x          Equ   0008 c1_button_right_mask
     0x          Equ   0001 c1_button_up_mask
     0x          Equ   0080 c2_button_A_mask
     0x          Equ   0020 c2_button_down_mask
     0x          Equ   0040 c2_button_left_mask
     0x          Equ   0080 c2_button_right_mask
     0x          Equ   0010 c2_button_up_mask
     7x          Equ   0003 cell_end
     3x          Equ   0040 cell_size
     5x          Equ   0001 cell_start
     0x          Equ   6000 cell_start_adr
     1x          Label 7DB8 CheckSpritesRefresh
     3x          Label 7D82 ClearObj
     1x          Label 7DAA CLO_1
     1x          Label 7DAE CLO_2
     3x          Label 7B34 cpt
     0x          Label 7E95 CSR_CheckDelHide
     2x          Label 7F77 CSR_CheckDraw
     3x          Label 7F3A CSR_CheckErase
     0x          Label 7EAF CSR_CheckPlayFieldCoord
     1x          Label 7F1B CSR_CheckVerticalPosition
     1x          Label 7EF5 CSR_DoNotDisplaySprite
     2x          Label 7F14 CSR_NextObject
     1x          Label 7E1D CSR_P1B0
     1x          Label 7E7D CSR_P1B1
     1x          Label 7E12 CSR_P2B0
     1x          Label 7E72 CSR_P2B1
     1x          Label 7E07 CSR_P3B0
     1x          Label 7E67 CSR_P3B1
     1x          Label 7DFC CSR_P4B0
     1x          Label 7E5C CSR_P4B1
     1x          Label 7DF1 CSR_P5B0
     1x          Label 7E51 CSR_P5B1
     1x          Label 7DE6 CSR_P6B0
     1x          Label 7E46 CSR_P6B1
     1x          Label 7DDB CSR_P7B0
     1x          Label 7E3B CSR_P7B1
     0x          Label 7DCE CSR_P8B0
     0x          Label 7E2E CSR_P8B1
    21x          Label 7E89 CSR_ProcessEachPriorityLevel
     1x          Label 7E28 CSR_rtsB0
     1x          Label 7E88 CSR_rtsB1
     0x          Label 7DC9 CSR_SetBuffer0
     1x          Label 7E29 CSR_SetBuffer1
     3x          Label 7FAA CSR_SetDrawFalse
     0x          Label 7F98 CSR_SetDrawTrue
     2x          Label 7F72 CSR_SetEraseFalse
     3x          Label 7F65 CSR_SetEraseTrue
    10x          Label 7F32 CSR_SetOutOfRange
     0x          Label 7DB8 CSR_Start
     0x          Label 7E9B CSR_UpdSpriteImageBasedOnMirror
    18x          Label 7DB2 cur_priority
     5x          Label 7DB6 cur_ptr_sub_obj_draw
     7x          Label 7DB4 cur_ptr_sub_obj_erase
     0x          Label 7D4E DeleteObject
     0x          Label 7D48 DeleteObject_x
     1x          Label 7C21 DisplaySprite
     0x          Label 7C1B DisplaySprite_x
     0x          Equ   604F dk_destination
     0x          Equ   6049 dk_lecteur
     0x          Equ   604A dk_piste
     0x          Equ   604B dk_pisteL
     0x          Equ   604C dk_secteur
     1x          Label 7D80 DOB_rts
     1x          Label 7D50 DOB_Start
     0x          Label 7D5F DOB_TestOnscreen1
     1x          Label 7D70 DOB_TestOnscreen1Delete
     2x          Label 7D7A DOB_ToDeleteFlag
     0x          Label 7D55 DOB_Unset0
     1x          Label 7D64 DOB_Unset1
     2x          Label 7BBE Dpad_Held
     0x          Label 7BC0 Dpad_Press
    27x          Label 64B9 DPS_buffer_0
    25x          Label 6559 DPS_buffer_1
     1x          Label 828C DrawSprites
     2x          Equ   0004 draw_routine
     1x          Label 8366 DRS_DrawWithoutBackupB0
     1x          Label 840A DRS_DrawWithoutBackupB1
     1x          Label 838F DRS_dyn1
     1x          Label 83A3 DRS_dyn2
     1x          Label 834F DRS_dyn3B0
     1x          Label 83F3 DRS_dyn3B1
     1x          Label 837A DRS_dyn4B0
     1x          Label 841E DRS_dyn4B1
     3x          Label 8360 DRS_NextObjectB0
     3x          Label 8404 DRS_NextObjectB1
     1x          Label 82C9 DRS_P1B0
     1x          Label 830A DRS_P1B1
     1x          Label 82C1 DRS_P2B0
     1x          Label 8302 DRS_P2B1
     1x          Label 82B9 DRS_P3B0
     1x          Label 82FA DRS_P3B1
     1x          Label 82B1 DRS_P4B0
     1x          Label 82F2 DRS_P4B1
     1x          Label 82A9 DRS_P5B0
     1x          Label 82EA DRS_P5B1
     1x          Label 82A1 DRS_P6B0
     1x          Label 82E2 DRS_P6B1
     1x          Label 8299 DRS_P7B0
     1x          Label 82DA DRS_P7B1
     0x          Label 8291 DRS_P8B0
     1x          Label 82D2 DRS_P8B1
    10x          Label 8313 DRS_ProcessEachPriorityLevelB0
    10x          Label 83B0 DRS_ProcessEachPriorityLevelB1
     1x          Label 82D1 DRS_rtsB0
     1x          Label 8312 DRS_rtsB1
     0x          Label 828C DRS_Start
     4x          Label 8383 DRS_XYToAddress
     0x          Label 8386 DRS_XYToAddressRAMAFirst
     1x          Label 839A DRS_XYToAddressRAMBFirst
     0x          Label 7C4B DSP_addFirstNode
     1x          Label 7C5A DSP_addToExistingNode
     1x          Label 7C38 DSP_BufferPositionned
     1x          Label 7C73 DSP_ChangePriority
     1x          Label 7C44 DSP_CheckLastEntry
     0x          Label 7C42 DSP_InitPriority
     1x          Label 7C66 DSP_LinkBuffer1
     1x          Label 7C69 DSP_LinkCurWithPrev
     3x          Label 7C84 DSP_rts
     0x          Label 7C28 DSP_SetBuffer0
     1x          Label 7C31 DSP_SetBuffer1
     1x          Label 7C23 DSP_Start
     0x          Label 678D Dynamic_Object_RAM
     2x          Label 79FD Dynamic_Object_RAM_End
     3x          Equ   0007 entry_size
     1x          Label 7FB6 EraseSprites
     4x          Equ   0009 erase_nb_cell
     2x          Equ   0007 erase_routine
     1x          Label 80EF ESP_CallEraseRoutineB0
     1x          Label 8102 ESP_CallEraseRoutineB0_00
     1x          Label 8184 ESP_CallEraseRoutineB1
     1x          Label 8197 ESP_CallEraseRoutineB1_00
     0x          Label 808E ESP_CheckEraseB0
     0x          Label 8123 ESP_CheckEraseB1
     8x          Label 8082 ESP_CheckPriorityB0
     8x          Label 8117 ESP_CheckPriorityB1
     0x          Label 810C ESP_FreeEraseBufferB0
     0x          Label 81A1 ESP_FreeEraseBufferB1
     3x          Label 80BE ESP_NextObjectB0
     3x          Label 8153 ESP_NextObjectB1
     0x          Label 7FBB ESP_P1B0
     1x          Label 8016 ESP_P1B1
     1x          Label 7FC8 ESP_P2B0
     1x          Label 8023 ESP_P2B1
     1x          Label 7FD3 ESP_P3B0
     1x          Label 8030 ESP_P3B1
     1x          Label 7FDE ESP_P4B0
     1x          Label 803D ESP_P4B1
     1x          Label 7FE9 ESP_P5B0
     1x          Label 804A ESP_P5B1
     1x          Label 7FF4 ESP_P6B0
     1x          Label 8057 ESP_P6B1
     1x          Label 7FFF ESP_P7B0
     1x          Label 8064 ESP_P7B1
     1x          Label 800A ESP_P8B0
     1x          Label 8071 ESP_P8B1
     9x          Label 807F ESP_ProcessEachPriorityLevelB0
     9x          Label 8114 ESP_ProcessEachPriorityLevelB1
     1x          Label 8015 ESP_rtsB0
     1x          Label 807E ESP_rtsB1
     0x          Label 7FB6 ESP_Start
     2x          Label 80E9 ESP_SubCheckOverlayB0
     2x          Label 817E ESP_SubCheckOverlayB1
     0x          Label 80CF ESP_SubDrawCheckCollisionB0
     0x          Label 8164 ESP_SubDrawCheckCollisionB1
     4x          Label 80C7 ESP_SubDrawSearchB0
     4x          Label 815C ESP_SubDrawSearchB1
     1x          Label 80C4 ESP_SubDrawSpriteSearchInitB0
     1x          Label 8159 ESP_SubDrawSpriteSearchInitB1
     0x          Label 80A2 ESP_SubEraseCheckCollisionB0
     0x          Label 8137 ESP_SubEraseCheckCollisionB1
     4x          Label 809A ESP_SubEraseSearchB0
     4x          Label 812F ESP_SubEraseSearchB1
     0x          Label 8097 ESP_SubEraseSpriteSearchInitB0
     0x          Label 812C ESP_SubEraseSpriteSearchInitB1
     0x          Label 8086 ESP_UnsetCheckRefreshB0
     0x          Label 811B ESP_UnsetCheckRefreshB1
     1x          Label 810F ESP_UnsetOnScreenFlagB0
     1x          Label 81A4 ESP_UnsetOnScreenFlagB1
     0x          Equ   001B ext_variables
     2x          Label 7BBF Fire_Held
     0x          Label 7BC1 Fire_Press
     1x          Label 611F Glb_Camera_X_Pos
     1x          Label 6121 Glb_Camera_Y_Pos
    10x          Label 611D Glb_Cur_Wrk_Screen_Id
     1x          Label 611E Glb_Cur_Wrk_Screen_Id_x2
     1x          Label 7AED Glb_MainCharacter_Is_Dead
     3x          Label 6123 Glb_Sprite_Screen_Pos_PartA
     3x          Label 6125 Glb_Sprite_Screen_Pos_PartB
     0x          Equ   00FE goBackNFrames
     0x          Equ   00FD goToAnimation
     0x          Equ   0038 gravity
     0x          Equ   0000 id
     1x          Equ   0010 image_meta_size
     1x          Equ   000A image_x_offset
     1x          Equ   000E image_x_size
     1x          Equ   000C image_y_offset
     2x          Equ   000F image_y_size
     0x          Label 7BBE Joypads
     1x          Label 7BBE Joypads_Held
     1x          Label 7BC0 Joypads_Press
     1x          Label 6103 LevelMainLoop
     1x          Label 79FD LevelOnly_Object_RAM
     1x          Label 7AED LevelOnly_Object_RAM_End
     1x          Label 84F9 LoadAct
     3x          Label 6127 Lst_FreeCellFirstEntry_0
     3x          Label 62F0 Lst_FreeCellFirstEntry_1
     1x          Label 6129 Lst_FreeCell_0
     1x          Label 62F2 Lst_FreeCell_1
     8x          Label 64DD Lst_Priority_Unset_0
     7x          Label 657D Lst_Priority_Unset_1
     2x          Equ   000A mapping_frame
     0x          Label 7C19 MarkObjGone
    14x          Equ   0000 nb_cells
     2x          Equ   003B nb_dynamic_objects
     2x          Equ   0082 nb_free_cells
     0x          Equ   0003 nb_level_objects
     4x          Equ   003D nb_objects
     4x          Equ   0008 nb_priority_levels
     1x          Equ   0002 nb_reserved_objects
     0x          Equ   00FC nextRoutine
     0x          Equ   00FA nextSubRoutine
     9x          Equ   0005 next_entry
     3x          Equ   0050 next_object
     1x          Label 7B37 Normal_palette
     0x          Label 7D06 ObjectMove
     1x          Label 66ED Object_RAM
     2x          Label 7AED Object_RAM_End
     8x          Equ   0050 object_size
     1x          Label 84F9 Obj_Index
     0x          Label 66ED Obj_MainCharacter
     0x          Label 673D Obj_Sidekick
     0x          Label 7A4D Obj_SonicDust
     0x          Label 7A9D Obj_TailsDust
     0x          Label 79FD Obj_TailsTails
     2x          Equ   0000 page_bckdraw_routine
     2x          Equ   0003 page_draw_routine
     2x          Equ   0006 page_erase_routine
     2x          Equ   0006 prev_anim
     5x          Equ   0003 priority
     2x          Label 7B35 Ptr_palette
     1x          Label 7BC2 ReadJoypads
     4x          Equ   0010 render_fixedoverlay_mask
    14x          Equ   0002 render_flags
     0x          Equ   0040 render_free2_mask
     0x          Equ   0080 render_free3_mask
     2x          Equ   0008 render_hide_mask
     1x          Equ   0004 render_playfieldcoord_mask
     4x          Equ   0020 render_todelete_mask
     2x          Equ   0001 render_xmirror_mask
     2x          Equ   0002 render_ymirror_mask
     1x          Label 66ED Reserved_Object_RAM
     1x          Label 678D Reserved_Object_RAM_End
     0x          Equ   00FF resetAnim
     0x          Equ   00FB resetAnimAndSubRoutine
     2x          Equ   0018 routine
     3x          Equ   0019 routine_secondary
     3x          Equ   003B rsv_bgdata_0
     3x          Equ   0049 rsv_bgdata_1
     2x          Equ   0034 rsv_buffer_0
     2x          Equ   0042 rsv_buffer_1
    10x          Equ   002C rsv_curr_mapping_frame
     6x          Equ   0041 rsv_onscreen_0
     9x          Equ   004F rsv_onscreen_1
     0x          Equ   002A rsv_prev_anim
     3x          Equ   0039 rsv_prev_mapping_frame_0
     3x          Equ   0047 rsv_prev_mapping_frame_1
     2x          Equ   003F rsv_prev_x2_pixel_0
     2x          Equ   004D rsv_prev_x2_pixel_1
     2x          Equ   003D rsv_prev_x_pixel_0
     2x          Equ   004B rsv_prev_x_pixel_1
     0x          Equ   0040 rsv_prev_y2_pixel_0
     0x          Equ   004E rsv_prev_y2_pixel_1
     0x          Equ   003E rsv_prev_y_pixel_0
     0x          Equ   004C rsv_prev_y_pixel_1
     4x          Equ   0034 rsv_priority_0
     4x          Equ   0042 rsv_priority_1
     9x          Equ   0037 rsv_priority_next_obj_0
     9x          Equ   0045 rsv_priority_next_obj_1
     5x          Equ   0035 rsv_priority_prev_obj_0
     5x          Equ   0043 rsv_priority_prev_obj_1
     3x          Equ   0030 rsv_ptr_sub_object_draw
     4x          Equ   002E rsv_ptr_sub_object_erase
     4x          Equ   0001 rsv_render_checkrefresh_mask
     5x          Equ   0004 rsv_render_displaysprite_mask
     6x          Equ   0002 rsv_render_erasesprite_mask
    23x          Equ   0029 rsv_render_flags
     4x          Equ   0008 rsv_render_outofrange_mask
     9x          Equ   0032 rsv_x2_pixel
     5x          Equ   0033 rsv_y2_pixel
     1x          Label 7BF0 RunNextObject
     3x          Label 7BE3 RunObject
     1x          Label 7BDA RunObjects
     1x          Label 7BFA RunObjectsWhenPlayerIsDead
     0x          Label 7BDE RunObjects_01
     0x          Label 7BF9 RunObjects_End
     2x          Equ   00C8 screen_height
     1x          Equ   00A0 screen_width
     1x          Label 7BA6 SetColor
     0x          Label 7D31 SingleObjLoad2
     1x          Label 7D3B SingleObjLoad2_01
     2x          Label 7D47 SingleObjLoad2_02
     1x          Equ   001A status
     0x          Equ   0004 status_bit2
     0x          Equ   0080 status_bit7
     0x          Equ   0002 status_inair
     0x          Equ   0010 status_jumpingafterrolling
     0x          Equ   0004 status_jumporroll
     0x          Equ   0020 status_mainchar_pushing
     0x          Equ   0008 status_mainchar_standing
     0x          Equ   0008 status_norgroundnorfall
     0x          Equ   0020 status_pushing
     0x          Equ   0040 status_sidekick_pushing
     0x          Equ   0010 status_sidekick_standing
     0x          Equ   0040 status_underwater
     1x          Equ   0001 status_x_orientation
     1x          Equ   0002 status_y_orientation
     0x          Equ   0001 subtype
     0x          Label 7B0D SwapVideoPage
     1x          Label 7B2E SwapVideoPage_01
     1x          Label 64B9 Tbl_Priority_First_Entry_0
     1x          Label 6559 Tbl_Priority_First_Entry_1
     2x          Label 64CB Tbl_Priority_Last_Entry_0
     1x          Label 656B Tbl_Priority_Last_Entry_1
     1x          Label 6673 Tbl_Sub_Object_Draw
     1x          Label 65F9 Tbl_Sub_Object_Erase
     0x          Label 81AE UDP_B0
     1x          Label 821D UDP_B1
     1x          Label 81F7 UDP_ChainNextB0
     1x          Label 8266 UDP_ChainNextB1
     1x          Label 81D6 UDP_ChainPrevB0
     1x          Label 8245 UDP_ChainPrevB1
     1x          Label 8201 UDP_CheckDeleteB0
     1x          Label 8270 UDP_CheckDeleteB1
     2x          Label 81B1 UDP_CheckEndB0
     2x          Label 8220 UDP_CheckEndB1
     1x          Label 81E0 UDP_CheckPrioNextB0
     1x          Label 824F UDP_CheckPrioNextB1
     1x          Label 81BD UDP_CheckPrioPrevB0
     1x          Label 822C UDP_CheckPrioPrevB1
     0x          Label 81B6 UDP_InitListB0
     0x          Label 8225 UDP_InitListB1
     3x          Label 8216 UDP_SetNewPrioB0
     3x          Label 8285 UDP_SetNewPrioB1
     0x          Label 81A9 UDP_Start
     1x          Label 81A9 UnsetDisplayPriority
     1x          Label 7B97 UpdatePalette
     2x          Label 7B32 Vint_runcount
     2x          Label 7AEE WaitVBL
     1x          Label 7AF3 WaitVBL_01
     0x          Label 7B77 White_palette
    12x          Equ   0012 x_pixel
     5x          Equ   000C x_pos
     0x          Equ   000E x_sub
     2x          Equ   0014 x_vel
     8x          Equ   0013 y_pixel
     5x          Equ   000F y_pos
     0x          Equ   0011 y_sub
     2x          Equ   0016 y_vel
     0x          Equ   00FE _goBackNFrames
     0x          Equ   00FD _goToAnimation
     0x          Equ   00FC _nextRoutine
     0x          Equ   00FA _nextSubRoutine
     0x          Equ   00FF _resetAnim
     0x          Equ   00FB _resetAnimAndSubRoutine

