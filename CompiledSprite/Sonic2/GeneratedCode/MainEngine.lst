/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : .\Sonic2\GeneratedCode\MainEngine.asm
 * Fichier destination : .\Sonic2\GeneratedCode\TMP.BIN
 * Contenu :
 *     Main     0:MAIN.ASM     3309
 *     Include  0:CONSTANT.ASM 4400
 *     Include  0:WAITVBL.ASM  1923
 *     Include  0:UPDTPAL.ASM  629
 *     Include  0:READJPDS.ASM 1727
 *     Include  0:RUNOBJTS.ASM 1591
 *     Include  0:MRKOBJGN.ASM 481
 *     Include  0:DISPLSPR.ASM 2000
 *     Include  0:ANIMSPR.ASM  1972
 *     Include  0:OBJMOVE.ASM  752
 *     Include  0:OBJLOAD.ASM  1109
 *     Include  0:DELETOBJ.ASM 1178
 *     Include  0:CLEAROBJ.ASM 560
 *     Include  0:CHECKSPR.ASM 6159
 *     Include  0:ERASESPR.ASM 6826
 *     Include  0:UNSETDSP.ASM 2828
 *     Include  0:DRAWSPR.ASM  4677
 *     Include  0:BGBALLOC.ASM 958
 *     Include  0:BGBFREE.ASM  1735
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
    152                                   INCLUD CONSTANT
    153                           * --------------------------------------->>
    154                           * Constants
    155                           *
    156                           * Naming convention
    157                           * -----------------
    158                           * - lower case
    159                           * - underscore-separated names
    160                           *
    161                           * --------------------------------------->>
    162
    163                           * =======================================>>
    164                           * TO8 Registers
    165                           * =======================================>>
    166
    167                  6049     dk_lecteur                    equ $6049
    168                  604A     dk_piste                      equ $604A
    169                  604C     dk_secteur                    equ $604C
    170                  604F     dk_destination                equ $604F
    171
    172                           * =======================================>>
    173                           * Display Constants
    174                           * =======================================>>
    175
    176                  00A0     screen_width                  equ 160 ; s>>
    177                  00C8     screen_height                 equ 200 ; s>>
    178                  0008     nb_priority_levels            equ 8   ; n>>
    179
    180                           * =======================================>>
    181                           * Physics Constants
    182                           * =======================================>>
    183
    184                  0038     gravity                       equ $38 ; G>>
    185
    186                           * =======================================>>
    187                           * Images Constants
    188                           * =======================================>>
    189
    190                  0000     page_bckdraw_routine          equ 0
    191                  0001     bckdraw_routine               equ 1
    192                  0003     page_draw_routine             equ 3
    193                  0004     draw_routine                  equ 4
    194                  0006     page_erase_routine            equ 6
    195                  0007     erase_routine                 equ 7
    196                  0009     erase_nb_cell                 equ 9
    197                  000A     image_x_offset                equ 10
    198                  000C     image_y_offset                equ 12
    199                  000E     image_x_size                  equ 14
    200                  000F     image_y_size                  equ 15 ; mu>>
    201                  0010     image_meta_size               equ 16 ; nu>>
    202
    203                           * =======================================>>
    204                           * Object Constants
    205                           * =======================================>>
    206
    207                  0002     nb_reserved_objects           equ 2
    208                  003B     nb_dynamic_objects            equ 59
    209                  0003     nb_level_objects              equ 3
    210                  003D     nb_objects                    equ (nb_res>>
    211
    212                           * --------------------------------------->>
    213                           * Object Status Table offsets
    214                           * --------------------------------------->>
    215
    216                  0050     object_size                   equ 80 ; th>>
    217                  0050     next_object                   equ object_>>
    218
    219                  0000     id                            equ 0      >>
    220                  0001     subtype                       equ 1      >>
    221                  0002     render_flags                  equ 2
    222
    223                           * --- render_flags bitfield variables --->>
    224                  0001     render_xmirror_mask           equ $01 ; (>>
    225                  0002     render_ymirror_mask           equ $02 ; (>>
    226                  0004     render_playfieldcoord_mask    equ $04 ; (>>
    227                  0008     render_hide_mask              equ $08 ; (>>
    228                  0010     render_fixedoverlay_mask      equ $10 ; (>>
    229                  0020     render_todelete_mask          equ $20 ; (>>
    230                  0040     render_free2_mask             equ $40 ; (>>
    231                  0080     render_free3_mask             equ $80 ; (>>
    232                            
    233                  0003     priority                      equ 3      >>
    234                  0004     anim                          equ 4  ; an>>
    235                  0006     prev_anim                     equ 6  ; an>>
    236                  0008     anim_frame                    equ 8      >>
    237                  0009     anim_frame_duration           equ 9      >>
    238                  000A     mapping_frame                 equ 10 ; an>>
    239                  000C     x_pos                         equ 12 ; an>>
    240                  000E     x_sub                         equ 14     >>
    241                  000F     y_pos                         equ 15 ; an>>
    242                  0011     y_sub                         equ 17     >>
    243                  0012     x_pixel                       equ 18     >>
    244                  0013     y_pixel                       equ 19     >>
    245                  0014     x_vel                         equ 20 ; an>>
    246                  0016     y_vel                         equ 22 ; an>>
    247                  0018     routine                       equ 24     >>
    248                  0019     routine_secondary             equ 25     >>
    249                  001A     status                        equ 26
    250
    251                           * --- status bitfield variables for objec>>
    252                  0001     status_x_orientation          equ   $01 ;>>
    253                  0002     status_y_orientation          equ   $02 ;>>
    254                  0004     status_bit2                   equ   $04 ;>>
    255                  0008     status_mainchar_standing      equ   $08 ;>>
    256                  0010     status_sidekick_standing      equ   $10 ;>>
    257                  0020     status_mainchar_pushing       equ   $20 ;>>
    258                  0040     status_sidekick_pushing       equ   $40 ;>>
    259                  0080     status_bit7                   equ   $80 ;>>
    260
    261                           * --- status bitfield variables for Main >>
    262                  0002     status_inair                  equ   $02 ;>>
    263                  0004     status_jumporroll             equ   $04 ;>>
    264                  0008     status_norgroundnorfall       equ   $08 ;>>
    265                  0010     status_jumpingafterrolling    equ   $10 ;>>
    266                  0020     status_pushing                equ   $20 ;>>
    267                  0040     status_underwater             equ   $40 ;>>
    268
    269                  001B     ext_variables                 equ 27 ; to>>
    270
    271                           * --------------------------------------->>
    272                           * reserved variables (engine)
    273
    274                  0029     rsv_render_flags              equ 41
    275
    276                           * --- rsv_render_flags bitfield variables>>
    277                  0001     rsv_render_checkrefresh_mask  equ $01 ; (>>
    278                  0002     rsv_render_erasesprite_mask   equ $02 ; (>>
    279                  0004     rsv_render_displaysprite_mask equ $04 ; (>>
    280                  0008     rsv_render_outofrange_mask    equ $08 ; (>>
    281
    282                  002A     rsv_prev_anim                 equ 42 ; an>>
    283                  002C     rsv_curr_mapping_frame        equ 44 ; an>>
    284                  002E     rsv_ptr_sub_object_erase      equ 46 ; an>>
    285                  0030     rsv_ptr_sub_object_draw       equ 48 ; an>>
    286                  0032     rsv_x2_pixel                  equ 50     >>
    287                  0033     rsv_y2_pixel                  equ 51     >>
    288
    289                           * --------------------------------------->>
    290                           * reserved variables (engine) - buffer sp>>
    291
    292                  0034     rsv_buffer_0                  equ 52 ; St>>
    293                  0034     rsv_priority_0                equ 52 ; in>>
    294                  0035     rsv_priority_prev_obj_0       equ 53 ; an>>
    295                  0037     rsv_priority_next_obj_0       equ 55 ; an>>
    296                  0039     rsv_prev_mapping_frame_0      equ 57 ; an>>
    297                  003B     rsv_bgdata_0                  equ 59 ; an>>
    298                  003D     rsv_prev_x_pixel_0            equ 61 ; pr>>
    299                  003E     rsv_prev_y_pixel_0            equ 62 ; pr>>
    300                  003F     rsv_prev_x2_pixel_0           equ 63 ; pr>>
    301                  0040     rsv_prev_y2_pixel_0           equ 64 ; pr>>
    302                  0041     rsv_onscreen_0                equ 65 ; ha>>
    303
    304                  0042     rsv_buffer_1                  equ 66 ; St>>
    305                  0042     rsv_priority_1                equ 66 ; in>>
    306                  0043     rsv_priority_prev_obj_1       equ 67 ; an>>
    307                  0045     rsv_priority_next_obj_1       equ 69 ; an>>
    308                  0047     rsv_prev_mapping_frame_1      equ 71 ; an>>
    309                  0049     rsv_bgdata_1                  equ 73 ; an>>
    310                  004B     rsv_prev_x_pixel_1            equ 75 ; pr>>
    311                  004C     rsv_prev_y_pixel_1            equ 76 ; pr>>
    312                  004D     rsv_prev_x2_pixel_1           equ 77 ; pr>>
    313                  004E     rsv_prev_y2_pixel_1           equ 78 ; pr>>
    314                  004F     rsv_onscreen_1                equ 79 ; ha>>
    315
    316                  0000     buf_priority                  equ 0  ; of>>
    317                  0001     buf_priority_prev_obj         equ 1  ;
    318                  0003     buf_priority_next_obj         equ 3  ;
    319                  0005     buf_prev_mapping_frame        equ 5  ;
    320                  0007     buf_bgdata                    equ 7  ;
    321                  0009     buf_prev_x_pixel              equ 9  ;
    322                  000A     buf_prev_y_pixel              equ 10 ;
    323                  000B     buf_prev_x2_pixel             equ 11 ;
    324                  000C     buf_prev_y2_pixel             equ 12 ;
    325                  000D     buf_onscreen                  equ 13 ;
    326
     10        6100                       org   $6100
     11                  00               setdp $00
     12
     13                           * =======================================>>
     14                           * Main Loop
     15                           * =======================================>>
     16        6100               LevelMainLoop
     17  8     6100 BD   7AEB             jsr   WaitVBL
     18  8     6103 BD   7B92             jsr   UpdatePalette
     19  8     6106 BD   7BBD             jsr   ReadJoypads
     20  8     6109 BD   7BD5             jsr   RunObjects
     21  8     610C BD   7DC5             jsr   CheckSpritesRefresh
     22  8     610F BD   7FC3             jsr   EraseSprites
     23  8     6112 BD   81B6             jsr   UnsetDisplayPriority
     24  8     6115 BD   8299             jsr   DrawSprites
     25  3     6118 20   E6               bra   LevelMainLoop
     26
     27                           * =======================================>>
     28                           * Global Data
     29                           *
     30                           * Naming convention
     31                           * -----------------
     32                           * - underscore-separated names
     33                           * - first letter of each word in upper ca>>
     34                           *
     35                           * Templates
     36                           * ---------
     37                           * - Glb_*        : global variable
     38                           * - Tbl_*        : data table
     39                           * - Lst_*        : list is a data table w>>
     40                           * - Obj_*        : address of an object i>>
     41                           *
     42                           * - *_Object_RAM : sub group of objects
     43                           * - *_end        : data end label
     44                           *
     45                           * =======================================>>
     46
     47                           * --------------------------------------->>
     48                           * Display
     49                           * --------------------------------------->>
     50                            
     51        611A 00            Glb_Cur_Wrk_Screen_Id         fcb   $00  >>
     52        611B 00            Glb_Cur_Wrk_Screen_Id_x2      fcb   $00  >>
     53        611C 0000          Glb_Camera_X_Pos              fdb   $0000>>
     54        611E 0000          Glb_Camera_Y_Pos              fdb   $0000>>
     55        6120 0000          Glb_Sprite_Screen_Pos_PartA   fdb   $0000>>
     56        6122 0000          Glb_Sprite_Screen_Pos_PartB   fdb   $0000>>
     57
     58                           * --------------------------------------->>
     59                           * Background Backup Cells - BBC
     60                           * --------------------------------------->>
     61
     62                           * ----- Cell variables
     63                  0000     nb_cells                      equ   0
     64                  0001     cell_start                    equ   1
     65                  0003     cell_end                      equ   3
     66                  0005     next_entry                    equ   5
     67                  0007     entry_size                    equ   7
     68
     69                           * ----- Cells List
     70                  0082     nb_free_cells                 equ   130
     71                  0040     cell_size                     equ   64   >>
     72                  6000     cell_start_adr                equ   $6000>>
     73
     74        6124 0000          Lst_FreeCellFirstEntry_0      fdb   $0000>>
     75        6126               Lst_FreeCell_0                rmb   entry>>
     76
     77        62ED 0000          Lst_FreeCellFirstEntry_1      fdb   $0000>>
     78        62EF               Lst_FreeCell_1                rmb   entry>>
     79
     80                           * --------------------------------------->>
     81                           * Display Priority Structure - DPS
     82                           * --------------------------------------->>
     83
     84        64B6               DPS_buffer_0
     85        64B6               Tbl_Priority_First_Entry_0    rmb   2+(nb>>
     86        64C8               Tbl_Priority_Last_Entry_0     rmb   2+(nb>>
     87        64DA 64DC          Lst_Priority_Unset_0          fdb   Lst_P>>
     88        64DC                                             rmb   (nb_o>>
     89        6556               DPS_buffer_1
     90        6556               Tbl_Priority_First_Entry_1    rmb   2+(nb>>
     91        6568               Tbl_Priority_Last_Entry_1     rmb   2+(nb>>
     92        657A 657C          Lst_Priority_Unset_1          fdb   Lst_P>>
     93        657C                                             rmb   (nb_o>>
     94                            
     95                  0000     buf_Tbl_Priority_First_Entry  equ   0
     96                  0012     buf_Tbl_Priority_Last_Entry   equ   Tbl_P>>
     97                  0024     buf_Lst_Priority_Unset        equ   Lst_P>>
     98
     99                           * --------------------------------------->>
    100                           * Sub Priority Objects List - SOL
    101                           * --------------------------------------->>
    102
    103        65F6               Tbl_Sub_Object_Erase          rmb   nb_ob>>
    104        6670               Tbl_Sub_Object_Draw           rmb   nb_ob>>
    105
    106                           * --------------------------------------->>
    107                           * Object Status Table - OST
    108                           * --------------------------------------->>
    109                            
    110        66EA               Object_RAM *@globals
    111        66EA               Reserved_Object_RAM
    112        66EA               Obj_MainCharacter             rmb   objec>>
    113        673A               Obj_Sidekick                  rmb   objec>>
    114        678A               Reserved_Object_RAM_End
    115        678A               Dynamic_Object_RAM            rmb   nb_dy>>
    116        79FA               Dynamic_Object_RAM_End
    117        79FA               LevelOnly_Object_RAM
    118        79FA               Obj_TailsTails                rmb   objec>>
    119        7A4A               Obj_SonicDust                 rmb   objec>>
    120        7A9A               Obj_TailsDust                 rmb   objec>>
    121        7AEA               LevelOnly_Object_RAM_End
    122        7AEA               Object_RAM_End
    123
    124                           * --------------------------------------->>
    125                           * Lifecycle
    126                           * --------------------------------------->>
    127
    128        7AEA               Glb_MainCharacter_Is_Dead     rmb   $1,0
    129
    130                           * =======================================>>
    131                           * Routines
    132                           * =======================================>>
    327                                   INCLUD WAITVBL
    328                           *****************************************>>
    329                           * Attente VBL
    330                           * Alternance de la page 2 et 3 entre affi>>
    331                           * Alternance de la RAMA et RAM B dans l'e>>
    332                           * --------------------------------------->>
    333                           *
    334                           * Page Affichee par l'automate Video
    335                           * ----------------------------------
    336                           *   $E7DD determine la page affichee a l'>>
    337                           *   bit7=0 bit6=0 bit5=0 bit4=0 (#$0_) : >>
    338                           *   bit7=0 bit6=1 bit5=0 bit4=0 (#$4_) : >>
    339                           *   bit7=1 bit6=0 bit5=0 bit4=0 (#$8_) : >>
    340                           *   bit7=1 bit6=1 bit5=0 bit4=0 (#$C_) : >>
    341                           *   bit3 bit2 bit1 bit0  (#$_0 a #$_F) : >>
    342                           *   Remarque : bit5 et bit4 utilisable un>>
    343                           *
    344                           * Page en espace cartouche (ecriture dans>>
    345                           * --------------------------------------->>
    346                           *   $E7E6 determine la page visible dans >>
    347                           *   bit7 toujours a 0
    348                           *   bit6=1 : ecriture autorisee
    349                           *   bit5=1 : espace cartouche recouvert p>>
    350                           *   bit4=0 : CAS1N valide : banques 0-15 >>
    351                           *   bit5=1 bit4=0 bit3=0 bit2=0 bit1=0 bi>>
    352                           *   ...
    353                           *   bit5=1 bit4=0 bit3=1 bit2=1 bit1=1 bi>>
    354                           *   bit5=1 bit4=1 bit3=0 bit2=0 bit1=0 bi>>
    355                           *   ...
    356                           *   bit5=1 bit4=1 bit3=1 bit2=1 bit1=1 bi>>
    357                           *
    358                           * Demi-Page 0 en espace ecran (4000 a 5FF>>
    359                           * --------------------------------------->>
    360                           *   $E7C3 determine la demi-page de la pa>>
    361                           *   bit0=0 : 8Ko RAMA
    362                           *   bit0=1 : 8ko RAMB
    363                           *
    364                           *****************************************>>
    365        7AEB               WaitVBL
    366  7     7AEB 7D   E7E7             tst   $E7E7              * le fai>>
    367  3     7AEE 2A   FB               bpl   WaitVBL            * tant q>>
    368        7AF0               WaitVBL_01
    369  7     7AF0 7D   E7E7             tst   $E7E7              * le fai>>
    370  3     7AF3 2B   FB               bmi   WaitVBL_01         * tant q>>
    371                            
    372  6     7AF5 FC   7B2F             ldd   Vint_runcount
    373  4     7AF8 C3   0001             addd  #1
    374  6     7AFB FD   7B2F             std   Vint_runcount
    375                            
    376  5     7AFE B6   611A             lda   Glb_Cur_Wrk_Screen_Id
    377  4     7B01 9A   01               ora   1
    378  5     7B03 B7   611A             sta   Glb_Cur_Wrk_Screen_Id
    379  2     7B06 48                    lsla
    380  5     7B07 B7   611B             sta   Glb_Cur_Wrk_Screen_Id_x2
    381                            
    382        7B0A               SwapVideoPage
    383  5     7B0A F6   7B18             ldb   am_SwapVideoPage+1 * charge>>
    384  2     7B0D C4   40               andb  #$40               * altern>>
    385  2     7B0F CA   80               orb   #$80               * bit7=1>>
    386  5     7B11 F7   E7DD             stb   $E7DD              * change>>
    387  7     7B14 73   7B18             com   am_SwapVideoPage+1 * altern>>
    388        7B17               am_SwapVideoPage
    389  2     7B17 C6   00               ldb   #$00
    390  2     7B19 C4   01               andb  #$01               * altern>>
    391  2     7B1B CA   62               orb   #$62               * bit6=1>>
    392  5     7B1D F7   E7E6             stb   $E7E6              * change>>
    393  5     7B20 F6   E7C3             ldb   $E7C3              * charge>>
    394  2     7B23 C4   01               andb  #$01
    395  3     7B25 26   04               bne   SwapVideoPage_01   * si bit>>
    396  7     7B27 7C   E7C3             inc   $E7C3              * bit0=1>>
    397  5     7B2A 39                    rts
    398        7B2B               SwapVideoPage_01
    399  7     7B2B 7A   E7C3             dec   $E7C3              * bit0=0>>
    400  5     7B2E 39                    rts
    401                            
    402        7B2F               Vint_runcount rmb   $2,0 *@globals
    403
    404                                   INCLUD UPDTPAL
    405                           *****************************************>>
    406                           * Mise a jour de la palette
    407                           *****************************************>>
    408                           * TODO ajout systeme de refresh pour ne p>>
    409                           * ou integrer le refresh palette en debut>>
    410                           * palette doit etre refresh avant le trac>>
    411
    412        7B31 00            cpt            fcb   $00
    413                  7B32     Ptr_palette    equ   Normal_palette
    414        7B32               Normal_palette rmb   $20,0   *@globals
    415        7B52               Black_palette  rmb   $20,0   *@globals
    416        7B72               White_palette  rmb   $20,$FF *@globals
    417
    418        7B92               UpdatePalette
    419  6+3   7B92 10AE 9F 0000         ldy   [Ptr_palette]
    420  5+3   7B97 AE   9F 0000         ldx   [Ptr_palette]
    421  4+1   7B9B 30   88 20           leax  $20,x
    422  7     7B9E 7F   7B31            clr   cpt                      * r>>
    423        7BA1               SetColor
    424  5     7BA1 B6   7B31             lda   cpt                        >>
    425  2     7BA4 48                   asla                              >>
    426  5     7BA5 B7   E7DB            sta   $E7DB                       >>
    427  5+3   7BA8 EC   A1              ldd   ,y++                        >>
    428  5     7BAA F7   E7DA            stb   $E7DA                       >>
    429  5     7BAD B7   E7DA            sta   $E7DA                    * s>>
    430  7     7BB0 7C   7B31            inc   cpt                         >>
    431  7+0   7BB3 10AC 84              cmpy  ,x                       * t>>
    432  3     7BB6 26   E9              bne   SetColor                 * o>>
    433  5     7BB8 39                    rts
    434
    435
    436                                   INCLUD READJPDS
    437                           * --------------------------------------->>
    438                           * Controller Buttons
    439                           *
    440                  0001     c1_button_up_mask            equ   $01 *@>>
    441                  0002     c1_button_down_mask          equ   $02 *@>>
    442                  0004     c1_button_left_mask          equ   $04 *@>>
    443                  0008     c1_button_right_mask         equ   $08 *@>>
    444                  0010     c2_button_up_mask            equ   $10 *@>>
    445                  0020     c2_button_down_mask          equ   $20 *@>>
    446                  0040     c2_button_left_mask          equ   $40 *@>>
    447                  0080     c2_button_right_mask         equ   $80 *@>>
    448                  0040     c1_button_A_mask             equ   $40 *@>>
    449                  0080     c2_button_A_mask             equ   $80 *@>>
    450
    451        7BB9               Joypads
    452        7BB9               Joypads_Held
    453        7BB9 00            Dpad_Held                    fcb   $00
    454        7BBA 00            Fire_Held                    fcb   $00
    455        7BBB               Joypads_Press
    456        7BBB 00            Dpad_Press                   fcb   $00
    457        7BBC 00            Fire_Press                   fcb   $00
    458
    459                           *****************************************>>
    460                           * Get joystick parameters
    461                           *
    462                           * Direction des Joypads
    463                           * ---------------------
    464                           * Registre: $E7CC (8bits)
    465                           *
    466                           * Joypad2     Joypad1
    467                           * 1111        1111 (0: appuye | 1: relach>>
    468                           * ||||_Haut   ||||_Haut
    469                           * |||__Bas    |||__Bas
    470                           * ||___Gauche ||___Gauche
    471                           * |____Droite |____Droite
    472                           *
    473                           * Boutons des Joypads
    474                           * -------------------
    475                           * Registre: $E7CD (8bits)
    476                           *
    477                           * 11 000000 (0: appuye | 1: relache)
    478                           * ||[------] 6 bits convertisseur numeriq>>
    479                           * ||_Fire Joypad1
    480                           * |__Fire Joypad2
    481                           *
    482                           * Variables globales: Joypads_Held, Joypa>>
    483                           * --------------------------------------->>
    484                           * (16 bits)
    485                           * Joypad2     Joypad1
    486                           * 0000        0000 (0: relache | 1: appuy>>
    487                           * ||||_Haut   ||||_Haut                  >>
    488                           * |||__Bas    |||__Bas                   >>
    489                           * ||___Gauche ||___Gauche                >>
    490                           * |____Droite |____Droite
    491                           *
    492                           *****************************************>>
    493                            
    494                                                                  *;>>
    495                                                                  *;>>
    496                                                                  *;>>
    497                                                                  *;>>
    498                                                                  *
    499                                                                  *;>>
    500        7BBD               ReadJoypads                            *R>>
    501                                                                  * >>
    502                                                                  * >>
    503                                                                  * >>
    504                                                                  * >>
    505                                                                  *
    506                                                                  *;>>
    507                                                                  *J>>
    508                                                                  * >>
    509                                                                  * >>
    510                                                                  * >>
    511                                                                  * >>
    512                                                                  * >>
    513                                                                  * >>
    514                                                                  * >>
    515                                                                  * >>
    516                                                                  * >>
    517                                                                  * >>
    518                                                                  * >>
    519  3     7BBD CC   E7CC             ldd   #$E7CC                   * >>
    520  2     7BC0 43                    coma                           * >>
    521  2     7BC1 53                    comb
    522                                                                  * >>
    523                                                                  * >>
    524                                                                  * >>
    525  6     7BC2 FD   7BB9             std   Joypads_Held
    526  5     7BC5 B8   7BB9             eora  Dpad_Held
    527  5     7BC8 F8   7BBA             eorb  Fire_Held
    528  5     7BCB B4   7BB9             anda  Dpad_Held                * >>
    529  5     7BCE F4   7BBA             andb  Fire_Held
    530  6     7BD1 FD   7BBB             std   Joypads_Press            * >>
    531  5     7BD4 39                    rts                            * >>
    532                                                                  *;>>
    533
    534
    535                                   INCLUD RUNOBJTS
    536                           * --------------------------------------->>
    537                           * This runs the code of all the objects t>>
    538                           *
    539                           * ecart par rapport au code d'origine :
    540                           * Il n'y a pas de tableau de pointeur Obj>>
    541                           * du code de l'objet
    542                           * --------------------------------------->>
    543
    544                                                                  *;>>
    545                                                                  *;>>
    546                                                                  *;>>
    547                                                                  *
    548                                                                  *;>>
    549                                                                  *
    550                                                                  *;>>
    551        7BD5               RunObjects                             *R>>
    552                                                                  * >>
    553                                                                  * >>
    554  4     7BD5 108E 66EA             ldy   #Object_RAM              * >>
    555                                                                  *
    556                                                                  * >>
    557                                                                  * >>
    558                                                                  * >>
    559                                                                  * >>
    560                                                                  * >>
    561                                                                  * >>
    562        7BD9               RunObjects_01                          *+>>
    563                                                                  * >>
    564                                                                  * >>
    565                                                                  * >>
    566                                                                  *
    567                                                                  * >>
    568  7     7BD9 7D   7AEA             tst   Glb_MainCharacter_Is_Dead
    569  3     7BDC 27   10               beq   RunObjectsWhenPlayerIsDead
    570                                                                  * >>
    571                                                                  * >>
    572                                                                  *;>>
    573                                                                  *
    574                                                                  *;>>
    575                                                                  *;>>
    576                                                                  *;>>
    577                                                                  *
    578                                                                  *;>>
    579                                                                  *
    580                                                                  *;>>
    581        7BDE               RunObject                              *R>>
    582  5+0   7BDE EE   A4               ldu   ,y                       * >>
    583  3     7BE0 27   02               beq   RunNextObject            * >>
    584                                                                  *
    585                                                                  * >>
    586                                                                  * >>
    587                                                                  * >>
    588  7+0   7BE2 AD   C4               jsr   ,u                       * >>
    589                                                                  * >>
    590                                                                  *
    591                                                                  *;>>
    592        7BE4               RunNextObject                          *R>>
    593  4+1   7BE4 31   A8 50            leay  next_object,y            * >>
    594        7BE7               am_RunNextObject
    595  5     7BE7 108C 7AEA             cmpy  #Object_RAM_End          * >>
    596  3     7BEB 26   F1               bne   RunObject                *;>>
    597        7BED               RunObjects_End                         *R>>
    598  5     7BED 39                    rts                            * >>
    599                                                                  *
    600                                                                  *;>>
    601                                                                  *;>>
    602                                                                  *;>>
    603        7BEE               RunObjectsWhenPlayerIsDead             *R>>
    604                                                                  * >>
    605                                                                  * >>
    606  4     7BEE 108E 66EA             ldy   #Reserved_Object_RAM
    607  3     7BF2 8E   678A             ldx   #Reserved_Object_RAM_End
    608  6     7BF5 BF   7BE9             stx   am_RunNextObject+2
    609  7     7BF8 8D   E4               bsr   RunObject
    610                                                                  * >>
    611                                                                  * >>
    612  4     7BFA 108E 678A             ldy   #Dynamic_Object_RAM
    613  7     7BFE 8D   12               bsr   RunObjectDisplayOnly
    614                                                                  * >>
    615                                                                  * >>
    616  4     7C00 108E 79FA             ldy   #LevelOnly_Object_RAM
    617  3     7C04 8E   7AEA             ldx   #LevelOnly_Object_RAM_End
    618  6     7C07 BF   7BE9             stx   am_RunNextObject+2
    619  3     7C0A 20   D2               bra   RunObject
    620                                                                  *
    621  3     7C0C 8E   7AEA             ldx   #Object_RAM_End          * >>
    622  6     7C0F BF   7BE9             stx   am_RunNextObject+2
    623                                                                  *;>>
    624                                                                  *
    625                                                                  *;>>
    626        7C12               RunObjectDisplayOnly                   *R>>
    627                                                                  * >>
    628  5+0   7C12 EE   A4               ldu   ,y                       * >>
    629  3     7C14 27   06               beq   RunNextObjectDisplayOnly * >>
    630  6+1   7C16 6D   22               tst   render_flags,y           * >>
    631  3     7C18 2A   02               bpl   RunNextObjectDisplayOnly * >>
    632  7     7C1A 8D   12               bsr   DisplaySprite            * >>
    633        7C1C               RunNextObjectDisplayOnly               *+>>
    634  4+1   7C1C 31   A8 50            leay  next_object,y            * >>
    635  5     7C1F 108C 79FA             cmpy  #Dynamic_Object_RAM_End  * >>
    636  3     7C23 26   ED               bne   RunObjectDisplayOnly
    637  5     7C25 39                    rts                            * >>
    638                                                                  *;>>
    639                                                                  *
    640                                                                  *;>>
    641
    642                                   INCLUD MRKOBJGN
    643                           * --------------------------------------->>
    644                           * MarkObjGone
    645                           * -----------
    646                           * Subroutine to destroy an object that is>>
    647                           * -- TODO --
    648                           * waiting for camera implementation
    649                           *
    650                           * input REG : none
    651                           * clear REG : none
    652                           * --------------------------------------->>
    653
    654                                                                  *;>>
    655                                                                  *;>>
    656                                                                  *;>>
    657                                                                  *
    658                                                                  *;>>
    659                                                                  *;>>
    660                                                                  *;>>
    661        7C26               MarkObjGone *@globals                  *M>>
    662                                                                  * >>
    663                                                                  * >>
    664  3     7C26 20   06               bra   DisplaySprite            * >>
    665                                                                  *+>>
    666                                                                  * >>
    667                                                                  * >>
    668                                                                  * >>
    669                                                                  * >>
    670                                                                  * >>
    671                                                                  * >>
    672                                                                  *
    673                                                                  *+>>
    674                                                                  * >>
    675                                                                  * >>
    676                                                                  * >>
    677                                                                  * >>
    678                                                                  *+>>
    679                                                                  * >>
    680
    681                                   INCLUD DISPLSPR
    682                           * --------------------------------------->>
    683                           * DisplaySprite
    684                           * -------------
    685                           * Subroutine to manage sprite priority.
    686                           * Object's priority is read and object is>>
    687                           * priority: 0 - unregistred
    688                           * priority: 1 - register non moving overl>>
    689                           * priority; 2-8 - register moving sprite >>
    690                           *
    691                           * Unlike original S2 code, sprite priorit>>
    692                           * it allows to keep an exact sprite order>>
    693                           *
    694                           * DisplaySprite
    695                           * input REG : [u] object pointer (OST)
    696                           *
    697                           * DisplaySprite_x
    698                           * input REG : [x] object pointer (OST)
    699                           * --------------------------------------->>
    700                            
    701        7C28               DisplaySprite_x *@globals
    702  5+6   7C28 34   56               pshs  d,x,u
    703  6     7C2A 1F   13               tfr   x,u
    704  3     7C2C 20   02               bra   DSP_Start
    705                            
    706        7C2E               DisplaySprite *@globals
    707  5+6   7C2E 34   56               pshs  d,x,u
    708                            
    709        7C30               DSP_Start
    710  5     7C30 B6   611A             lda   Glb_Cur_Wrk_Screen_Id      >>
    711  3     7C33 26   09               bne   DSP_SetBuffer1
    712                            
    713        7C35               DSP_SetBuffer0
    714  4+1   7C35 30   C8 34            leax  rsv_buffer_0,u             >>
    715  7     7C38 10BE 64B6             ldy   DPS_buffer_0               >>
    716  3     7C3C 20   07               bra   DSP_BufferPositionned
    717                            
    718        7C3E               DSP_SetBuffer1
    719  4+1   7C3E 30   C8 42            leax  rsv_buffer_1,u             >>
    720  7     7C41 10BE 6556             ldy   DPS_buffer_1               >>
    721                            
    722        7C45               DSP_BufferPositionned
    723  4+1   7C45 A6   43               lda   priority,u                 >>
    724  4+1   7C47 A1   00               cmpa  buf_priority,x
    725  3     7C49 27   46               beq   DSP_rts                    >>
    726  4+1   7C4B E6   00               ldb   buf_priority,x
    727  3     7C4D 26   31               bne   DSP_ChangePriority
    728                            
    729        7C4F               DSP_InitPriority
    730  4+1   7C4F A7   00               sta   buf_priority,x             >>
    731                            
    732        7C51               DSP_CheckLastEntry
    733  4+1   7C51 31   A8 12            leay  buf_Tbl_Priority_Last_Entry>>
    734  6+1   7C54 6D   A6               tst   a,y                        >>
    735  3     7C56 26   0F               bne   DSP_addToExistingNode      >>
    736                            
    737        7C58               DSP_addFirstNode
    738  5+1   7C58 EF   A6               stu   a,y                        >>
    739  4+1   7C5A 31   A8 EE            leay  buf_Tbl_Priority_First_Entr>>
    740  5+1   7C5D EF   A6               stu   a,y                        >>
    741  5     7C5F DC   00               ldd   0
    742  5+1   7C61 ED   01               std   buf_priority_prev_obj,x    >>
    743  5+1   7C63 ED   03               std   buf_priority_next_obj,x
    744  3     7C65 20   2A               bra   DSP_rts
    745                            
    746        7C67               DSP_addToExistingNode
    747  5+4   7C67 AE   B6               ldx   [a,y]                      >>
    748  5     7C69 F6   611A             ldb   Glb_Cur_Wrk_Screen_Id
    749  3     7C6C 26   05               bne   DSP_LinkBuffer1
    750  5+1   7C6E EF   88 37            stu   rsv_priority_next_obj_0,x  >>
    751  3     7C71 20   03               bra   DSP_LinkCurWithPrev
    752        7C73               DSP_LinkBuffer1
    753  5+1   7C73 EF   88 45            stu   rsv_priority_next_obj_1,x  >>
    754                            
    755        7C76               DSP_LinkCurWithPrev
    756  5+1   7C76 AF   41               stx   buf_priority_prev_obj,u    >>
    757  5+1   7C78 EF   A6               stu   a,y                        >>
    758  5     7C7A DC   00               ldd   0
    759  5+1   7C7C ED   03               std   buf_priority_next_obj,x    >>
    760  3     7C7E 20   11               bra   DSP_rts
    761                            
    762        7C80               DSP_ChangePriority
    763  4+1   7C80 31   A8 24            leay  buf_Lst_Priority_Unset,y
    764  5+3   7C83 EF   B4               stu   [,y]                       >>
    765  4+1   7C85 31   22               leay  2,y
    766  6+0   7C87 10AF A4               sty   ,y                         >>
    767  4+1   7C8A 31   A8 DA            leay  -buf_Lst_Priority_Unset-2,y>>
    768  4     7C8D 91   00               cmpa  0
    769  3     7C8F 26   C0               bne   DSP_CheckLastEntry         >>
    770
    771        7C91               DSP_rts
    772  5+8   7C91 35   D6               puls  d,x,u,pc
    773                            
    774                                                                  *;>>
    775                                                                  *;>>
    776                                                                  *;>>
    777                                                                  *
    778                                                                  *;>>
    779                                                                  *
    780                                                                  *;>>
    781                                                                  *D>>
    782                                                                  * >>
    783                                                                  * >>
    784                                                                  * >>
    785                                                                  * >>
    786                                                                  * >>
    787                            
    788                                                                  * >>
    789                                                                  * >>
    790                                                                  * >>
    791                            
    792                                                                  * >>
    793                                                                  * >>
    794                                                                  *
    795                                                                  *r>>
    796                            
    797                                                                  * >>
    798                                                                  *;>>
    799
    800                                   INCLUD ANIMSPR
    801                           * --------------------------------------->>
    802                           * Subroutine to animate a sprite using an>>
    803                           *
    804                           *   this function also change render flag>>
    805                           *   the status byte;
    806                           *
    807                           * input REG : [u] pointeur sur l'objet
    808                           *
    809                           * --------------------------------------->>
    810
    811                  00FF     resetAnim              equ $FF
    812                  00FE     goBackNFrames          equ $FE ; followed>>
    813                  00FD     goToAnimation          equ $FD ; followed>>
    814                  00FC     nextRoutine            equ $FC
    815                  00FB     resetAnimAndSubRoutine equ $FB
    816                  00FA     nextSubRoutine         equ $FA
    817
    818                                                                    >>
    819                                                                    >>
    820                                                                    >>
    821                                                                    >>
    822                                                                    >>
    823                                                                    >>
    824                                                                    >>
    825        7C93               AnimateSprite                            >>
    826                                                                    >>
    827  5+1   7C93 AE   44               ldx   anim,u                     >>
    828  6+1   7C95 AC   46               cmpx  prev_anim,u                >>
    829  3     7C97 27   08               beq   Anim_Run                   >>
    830  5+1   7C99 AF   46               stx   prev_anim,u                >>
    831  2     7C9B C6   00                     ldb   #0
    832  4+1   7C9D E7   48               stb   anim_frame,u               >>
    833  4+1   7C9F E7   49               stb   anim_frame_duration,u      >>
    834                                                                    >>
    835        7CA1               Anim_Run                                 >>
    836  6+1   7CA1 6A   49               dec   anim_frame_duration,u      >>
    837  3     7CA3 2A   24               bpl   Anim_Wait                  >>
    838                                   * no offset table                >>
    839                                   * anim is the address of anim    >>
    840  4+0   7CA5 E6   84               ldb   ,x
    841  4+1   7CA7 E7   49                     stb   anim_frame_duration,u>>
    842                                                                    >>
    843  4+1   7CA9 E6   48               ldb   anim_frame,u               >>
    844  2     7CAB 5C                    incb
    845  2     7CAC 58                    aslb
    846  4+1   7CAD 31   85               leay  b,x
    847  5+0   7CAF EC   A4               ldd   ,y                         >>
    848                                   * bmi   Anim_End_FF              >>
    849  2     7CB1 81   FA                     cmpa  #$FA                 >>
    850  3     7CB3 24   15                     bhs   Anim_End_FF          >>
    851                                                                    >>
    852        7CB5               Anim_Next                                >>
    853                                      * ne pas utiliser             >>
    854  5+1   7CB5 ED   4A               std   mapping_frame,u            >>
    855  4+1   7CB7 E6   C8 1A            ldb   status,u                   >>
    856  2     7CBA C4   03               andb  #status_x_orientation+statu>>
    857  5     7CBC F7   7CC4             stb   Anim_dyn+1
    858                                                                    >>
    859  4+1   7CBF A6   42               lda   render_flags,u             >>
    860  2     7CC1 84   FC               anda  #:(render_xmirror_mask+rend>>
    861        7CC3               Anim_dyn
    862  2     7CC3 8A   00               ora   #$00                       >>
    863                                                                    >>
    864  4+1   7CC5 A7   42               sta   render_flags,u
    865  6+1   7CC7 6C   48               inc   anim_frame,u               >>
    866                                                                    >>
    867        7CC9               Anim_Wait                                >>
    868  5     7CC9 39                    rts                              >>
    869                                                                    >>
    870                                                                    >>
    871        7CCA               Anim_End_FF                              >>
    872  2     7CCA 4C                    inca                             >>
    873  3     7CCB 26   08               bne   Anim_End_FE                >>
    874  2     7CCD C6   00                     ldb   #0
    875  4+1   7CCF E7   48               stb   anim_frame,u               >>
    876  5+1   7CD1 EC   01               ldd   1,x                        >>
    877  3     7CD3 20   E0               bra   Anim_Next                  >>
    878                                                                    >>
    879                                                                    >>
    880        7CD5               Anim_End_FE                              >>
    881  2     7CD5 4C                    inca                             >>
    882  3     7CD6 26   0E               bne   Anim_End_FD                >>
    883  4+1   7CD8 A6   48               lda   anim_frame,u
    884  5     7CDA F7   7CDE             stb   Anim_End_FE_dyn+1          >>
    885        7CDD               Anim_End_FE_dyn
    886  2     7CDD 80   00               suba  #$00                       >>
    887  4+1   7CDF A7   48               sta   anim_frame,u               >>
    888                                                                    >>
    889  2     7CE1 48                    asla
    890  5+1   7CE2 EC   86               ldd   a,x                        >>
    891  3     7CE4 20   CF               bra   Anim_Next                  >>
    892                                                                    >>
    893                                                                    >>
    894        7CE6               Anim_End_FD                              >>
    895  2     7CE6 4C                    inca                             >>
    896  3     7CE7 26   05               bne   Anim_End_FC                >>
    897  5+1   7CE9 EC   21               ldd   1,y                        >>
    898  5+1   7CEB ED   44               std   anim,u                     >>
    899  5     7CED 39                    rts                              >>
    900                                                                    >>
    901                                                                    >>
    902        7CEE               Anim_End_FC                              >>
    903  2     7CEE 4C                    inca                             >>
    904  3     7CEF 26   0D               bne   Anim_End_FB                >>
    905  6+1   7CF1 6C   C8 18            inc   routine,u
    906  6+1   7CF4 6C   C8 18            inc   routine,u                  >>
    907  2     7CF7 86   00               lda   #0
    908  4+1   7CF9 A7   49               sta   anim_frame_duration,u      >>
    909  6+1   7CFB 6C   48               inc   anim_frame,u               >>
    910  5     7CFD 39                    rts                              >>
    911                                                                    >>
    912                                                                    >>
    913        7CFE               Anim_End_FB                              >>
    914  2     7CFE 4C                    inca                             >>
    915  3     7CFF 26   08               bne   Anim_End_FA                >>
    916  2     7D01 86   00               lda   #0
    917  4+1   7D03 A7   48               sta   anim_frame,u               >>
    918  4+1   7D05 A7   C8 19            sta   routine_secondary,u        >>
    919  5     7D08 39                    rts                              >>
    920                                                                    >>
    921                                                                    >>
    922        7D09               Anim_End_FA                              >>
    923  2     7D09 4C                    inca                             >>
    924  3     7D0A 26   06               bne   Anim_End                   >>
    925  6+1   7D0C 6C   C8 19            inc   routine_secondary,u        >>
    926  6+1   7D0F 6C   C8 19            inc   routine_secondary,u
    927        7D12               Anim_End
    928  5     7D12 39                    rts                              >>
    929                                                                    >>
    930                                                                    >>
    931                                                                    >>
    932                                                                    >>
    933                                                                    >>
    934                                                                    >>
    935                                                                    >>
    936                                                                    >>
    937                                                                    >>
    938                                                                    >>
    939
    940                                   INCLUD OBJMOVE
    941                           * --------------------------------------->>
    942                           * Subroutine translating object speed to >>
    943                           * This moves the object horizontally and >>
    944                           * but does not apply gravity to it
    945                           * --------------------------------------->>
    946
    947                                                                  *;>>
    948                                                                  *;>>
    949                                                                  *;>>
    950                                                                  *;>>
    951                                                                  *;>>
    952                                                                  *
    953                                                                  *;>>
    954                                                                  *
    955                                                                  *;>>
    956        7D13               ObjectMove                             *O>>
    957                                                                  * >>
    958                                                                  * >>
    959                                                                  * >>
    960                                                                  * >>
    961                                                                  * >>
    962                                                                  * >>
    963  4+1   7D13 E6   C8 14            ldb   x_vel,u
    964  2     7D16 1D                    sex                            ; >>
    965  5     7D17 B7   7D24             sta   am_ObjectMove_01+1
    966  5+1   7D1A EC   C8 14            ldd   x_vel,u
    967  6+1   7D1D E3   4D               addd  x_pos+1,u                ; >>
    968  5+1   7D1F ED   4D               std   x_pos+1,u                ; >>
    969  4+1   7D21 A6   4C               lda   x_pos,u
    970        7D23               am_ObjectMove_01
    971  2     7D23 89   00               adca  #$00                     ; >>
    972  4+1   7D25 A7   4C               sta   x_pos,u                  ; >>
    973                            
    974                                                                  * >>
    975                                                                  * >>
    976                                                                  * >>
    977                                                                  * >>
    978                                                                  * >>
    979                                                                  * >>
    980  4+1   7D27 E6   C8 16            ldb   y_vel,u
    981  2     7D2A 1D                    sex                            ; >>
    982  5     7D2B B7   7D3A             sta   am_ObjectMove_02+1
    983  5+1   7D2E EC   C8 16            ldd   y_vel,u
    984  6+1   7D31 E3   C8 10            addd  y_pos+1,u                ; >>
    985  5+1   7D34 ED   C8 10            std   y_pos+1,u                ; >>
    986  4+1   7D37 A6   4F               lda   y_pos,u
    987        7D39               am_ObjectMove_02
    988  2     7D39 89   00               adca  #$00                     ; >>
    989  4+1   7D3B A7   4F               sta   y_pos,u                  ; >>
    990  5     7D3D 39                    rts                            * >>
    991                                                                  *;>>
    992                                                                  *;>>
    993
    994                                   INCLUD OBJLOAD
    995                           * --------------------------------------->>
    996                           * Single object loading subroutine
    997                           * Find an empty object array
    998                           *
    999                           * input  REG : [u] pointeur sur l'objet c>>
   1000                           * output REG : [x] pointeur sur l'objet l>>
   1001                           * --------------------------------------->>
   1002
   1003                                                                  *;>>
   1004                                                                  *;>>
   1005                                                                  *;>>
   1006                                                                  *;>>
   1007                                                                  *;>>
   1008                                                                  *
   1009                                                                  *;>>
   1010                                                                  *S>>
   1011                                                                  * >>
   1012                                                                  * >>
   1013                                                                  * >>
   1014                                                                  * >>
   1015                                                                  * >>
   1016                                                                  *
   1017                                                                  */>>
   1018                                                                  * >>
   1019                                                                  * >>
   1020                                                                  * >>
   1021                                                                  * >>
   1022                                                                  *
   1023                                                                  *r>>
   1024                                                                  * >>
   1025                                                                  *;>>
   1026                                                                  *;>>
   1027                                                                  *;>>
   1028                                                                  *;>>
   1029                                                                  *;>>
   1030                                                                  *
   1031                                                                  *;>>
   1032                                                                  *
   1033                                                                  *;>>
   1034        7D3E               SingleObjLoad2                         *S>>
   1035  6     7D3E 1F   31               tfr   u,x                      * >>
   1036  4+1   7D40 30   88 50            leax  next_object,x            * >>
   1037  4     7D43 8C   79FA             cmpx  #Dynamic_Object_RAM_End  * >>
   1038  3     7D46 27   0C               beq   SingleObjLoad2_02        * >>
   1039                                                                  * >>
   1040                                                                  * >>
   1041                                                                  * >>
   1042                                                                  * >>
   1043                                                                  * >>
   1044                                                                  * >>
   1045                                                                  * >>
   1046                                                                  * >>
   1047                                                                  *
   1048        7D48               SingleObjLoad2_01                      *->>
   1049  6+0   7D48 6D   84               tst   ,x                       * >>
   1050  3     7D4A 27   08               beq   SingleObjLoad2_02        * >>
   1051  4+1   7D4C 30   88 50            leax  next_object,x            * >>
   1052  4     7D4F 8C   79FA             cmpx  #Dynamic_Object_RAM_End
   1053  3     7D52 26   F4               bne   SingleObjLoad2_01        * >>
   1054                                                                  *
   1055        7D54               SingleObjLoad2_02                      *r>>
   1056  5     7D54 39                    rts                            * >>
   1057                                                                  *
   1058                                                                  * >>
   1059                                                                  *+>>
   1060                                                                  *.>>
   1061                                                                  *.>>
   1062                                                                  *
   1063                                                                  * >>
   1064                                                                  * >>
   1065                                                                  * >>
   1066                                                                  * >>
   1067                                                                  * >>
   1068                                                                  * >>
   1069                                                                  *
   1070                                                                  *.>>
   1071                                                                  *.>>
   1072                                                                  * >>
   1073                                                                  * >>
   1074                                                                  * >>
   1075                                                                  *;>>
   1076                                                                  *;>>
   1077                                                                  *;>>
   1078                                                                  *;>>
   1079                                                                  *;>>
   1080                                                                  *
   1081                                                                  *;>>
   1082                                                                  *
   1083                                                                  *;>>
   1084                                                                  *S>>
   1085                                                                  * >>
   1086                                                                  * >>
   1087                                                                  *
   1088                                                                  *->>
   1089                                                                  * >>
   1090                                                                  * >>
   1091                                                                  * >>
   1092                                                                  * >>
   1093                                                                  *
   1094                                                                  *r>>
   1095                                                                  * >>
   1096                                                                  *;>>
   1097
   1098
   1099                                   INCLUD DELETOBJ
   1100                           * --------------------------------------->>
   1101                           * DeleteObject
   1102                           * ------------
   1103                           * Subroutine to delete an object.
   1104                           * If the object is rendered as a sprite i>>
   1105                           * routine
   1106                           *
   1107                           * DeleteObject
   1108                           * input REG : [u] object pointer (OST)
   1109                           *
   1110                           * DeleteObject_x
   1111                           * input REG : [x] object pointer (OST)
   1112                           * --------------------------------------->>
   1113
   1114                                                                  *;>>
   1115                                                                  *;>>
   1116                                                                  *;>>
   1117                                                                  *
   1118                                                                  *;>>
   1119                                                                  *
   1120                                                                  *;>>
   1121        7D55               DeleteObject_x *@globals               *D>>
   1122  5+6   7D55 34   56               pshs  d,x,u                    * >>
   1123  6     7D57 1F   13               tfr   x,u                      *;>>
   1124  3     7D59 20   02               bra   DOB_Start
   1125        7D5B               DeleteObject *@globals                 *D>>
   1126  5+6   7D5B 34   56               pshs  d,x,u
   1127        7D5D               DOB_Start
   1128  4+1   7D5D A6   C8 41            lda   rsv_onscreen_0,u
   1129  3     7D60 27   1B               beq   DOB_TestOnscreen1Delete  ; >>
   1130                            
   1131        7D62               DOB_Unset0
   1132  6     7D62 BE   64DA             ldx   Lst_Priority_Unset_0     ; >>
   1133  5+0   7D65 EF   84               stu   ,x
   1134  4+1   7D67 30   02               leax  2,x
   1135  6     7D69 BF   64DA             stx   Lst_Priority_Unset_0
   1136                            
   1137        7D6C               DOB_TestOnscreen1
   1138  4+1   7D6C A6   C8 4F            lda   rsv_onscreen_1,u
   1139  3     7D6F 27   16               beq   DOB_ToDeleteFlag         ; >>
   1140                            
   1141        7D71               DOB_Unset1
   1142  6     7D71 BE   657A             ldx   Lst_Priority_Unset_1     ; >>
   1143  5+0   7D74 EF   84               stu   ,x
   1144  4+1   7D76 30   02               leax  2,x
   1145  6     7D78 BF   657A             stx   Lst_Priority_Unset_1
   1146  3     7D7B 20   0A               bra  DOB_ToDeleteFlag
   1147                            
   1148        7D7D               DOB_TestOnscreen1Delete
   1149  4+1   7D7D A6   C8 4F            lda   rsv_onscreen_1,u
   1150  3     7D80 26   EF               bne   DOB_Unset1               ; >>
   1151
   1152  8     7D82 BD   7D8F             jsr   ClearObj                 ; >>
   1153  3     7D85 20   06               bra   DOB_rts
   1154                                                                  * >>
   1155                                                                  *
   1156                                                                  * >>
   1157                                                                  * >>
   1158                                                                  *->>
   1159                                                                  * >>
   1160                                                                  * >>
   1161                                                                  * >>
   1162                                                                  * >>
   1163                                                                  *
   1164        7D87               DOB_ToDeleteFlag
   1165  4+1   7D87 A6   42               lda   render_flags,u
   1166  4     7D89 9A   20               ora   render_todelete_mask
   1167  4+1   7D8B A7   42               sta   render_flags,u           ; >>
   1168                            
   1169        7D8D               DOB_rts
   1170  5+8   7D8D 35   D6               puls  d,x,u,pc                 * >>
   1171                                                                  *;>>
   1172
   1173                                   INCLUD CLEAROBJ
   1174                           * --------------------------------------->>
   1175                           * ClearObj
   1176                           * --------
   1177                           * Subroutine to clear an object data in O>>
   1178                           *
   1179                           * input REG : [u] pointer on objet (OST)
   1180                           * clear REG : [d,y]
   1181                           * --------------------------------------->>
   1182
   1183        7D8F               ClearObj *@globals
   1184  7     7D8F 10FF 7DB9             sts   CLO_1+2
   1185  6     7D93 BF   7DBD             stx   CLO_2+2
   1186  3     7D96 CC   0000             ldd   #$0000
   1187  3     7D99 8E   0000             ldx   #$0000
   1188  4+0   7D9C 31   84               leay  ,x
   1189  4+0   7D9E 32   84               leas  ,x
   1190  4+1   7DA0 33   C8 50            leau  object_size,u
   1191  5+8   7DA3 36   76               pshu  d,x,y,s
   1192  5+8   7DA5 36   76               pshu  d,x,y,s
   1193  5+8   7DA7 36   76               pshu  d,x,y,s
   1194  5+8   7DA9 36   76               pshu  d,x,y,s
   1195  5+8   7DAB 36   76               pshu  d,x,y,s
   1196  5+8   7DAD 36   76               pshu  d,x,y,s
   1197  5+8   7DAF 36   76               pshu  d,x,y,s
   1198  5+8   7DB1 36   76               pshu  d,x,y,s
   1199  5+8   7DB3 36   76               pshu  d,x,y,s
   1200  5+8   7DB5 36   76               pshu  d,x,y,s
   1201        7DB7               CLO_1
   1202  4     7DB7 10CE 0000             lds   #$0000
   1203        7DBB               CLO_2
   1204  3     7DBB 8E   0000             ldx   #$0000
   1205  5     7DBE 39                    rts
   1206
   1207                                   INCLUD CHECKSPR
   1208                           * --------------------------------------->>
   1209                           * CheckSpritesRefresh
   1210                           * -------------------
   1211                           * Subroutine to determine if sprites are >>
   1212                           * Read Display Priority Structure (back t>>
   1213                           * priority: 0 - unregistred
   1214                           * priority: 1 - register non moving overl>>
   1215                           * priority; 2-8 - register moving sprite >>
   1216                           *
   1217                           * input REG : none
   1218                           * --------------------------------------->>
   1219
   1220        7DBF 0000          cur_priority            fdb   $00
   1221        7DC1 0000          cur_ptr_sub_obj_erase   fdb   $0000
   1222        7DC3 0000          cur_ptr_sub_obj_draw    fdb   $0000
   1223                            
   1224        7DC5               CheckSpritesRefresh
   1225
   1226        7DC5               CSR_Start
   1227  3     7DC5 CC   65F6             ldd   #Tbl_Sub_Object_Erase
   1228  6     7DC8 FD   7DC1             std   cur_ptr_sub_obj_erase
   1229  3     7DCB CC   6670             ldd   #Tbl_Sub_Object_Draw
   1230  6     7DCE FD   7DC3             std   cur_ptr_sub_obj_draw
   1231  5     7DD1 B6   611A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1232  3     7DD4 26   60               bne   CSR_SetBuffer1
   1233                            
   1234        7DD6               CSR_SetBuffer0
   1235  4     7DD6 96   34               lda   rsv_buffer_0               >>
   1236  5     7DD8 B7   7E98             sta   CSR_ProcessEachPriorityLeve>>
   1237        7DDB               CSR_P8B0
   1238  6     7DDB FE   64C4             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1239  3     7DDE 27   08               beq   CSR_P7B0
   1240  2     7DE0 86   08               lda   #$08
   1241  5     7DE2 B7   7DBF             sta   cur_priority
   1242  8     7DE5 BD   7E96             jsr   CSR_ProcessEachPriorityLeve>>
   1243        7DE8               CSR_P7B0
   1244  6     7DE8 FE   64C2             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1245  3     7DEB 27   06               beq   CSR_P6B0
   1246  7     7DED 7A   7DBF             dec   cur_priority
   1247  8     7DF0 BD   7E96             jsr   CSR_ProcessEachPriorityLeve>>
   1248        7DF3               CSR_P6B0
   1249  6     7DF3 FE   64C0             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1250  3     7DF6 27   06               beq   CSR_P5B0
   1251  7     7DF8 7A   7DBF             dec   cur_priority
   1252  8     7DFB BD   7E96             jsr   CSR_ProcessEachPriorityLeve>>
   1253        7DFE               CSR_P5B0
   1254  6     7DFE FE   64BE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1255  3     7E01 27   06               beq   CSR_P4B0
   1256  7     7E03 7A   7DBF             dec   cur_priority
   1257  8     7E06 BD   7E96             jsr   CSR_ProcessEachPriorityLeve>>
   1258        7E09               CSR_P4B0
   1259  6     7E09 FE   64BC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1260  3     7E0C 27   06               beq   CSR_P3B0
   1261  7     7E0E 7A   7DBF             dec   cur_priority
   1262  8     7E11 BD   7E96             jsr   CSR_ProcessEachPriorityLeve>>
   1263        7E14               CSR_P3B0
   1264  6     7E14 FE   64BA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1265  3     7E17 27   06               beq   CSR_P2B0
   1266  7     7E19 7A   7DBF             dec   cur_priority
   1267  8     7E1C BD   7E96             jsr   CSR_ProcessEachPriorityLeve>>
   1268        7E1F               CSR_P2B0
   1269  6     7E1F FE   64B8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1270  3     7E22 27   06               beq   CSR_P1B0
   1271  7     7E24 7A   7DBF             dec   cur_priority
   1272  8     7E27 BD   7E96             jsr   CSR_ProcessEachPriorityLeve>>
   1273        7E2A               CSR_P1B0
   1274  6     7E2A FE   64B6             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1275  3     7E2D 27   06               beq   CSR_rtsB0
   1276  7     7E2F 7A   7DBF             dec   cur_priority
   1277  8     7E32 BD   7E96             jsr   CSR_ProcessEachPriorityLeve>>
   1278        7E35               CSR_rtsB0
   1279  5     7E35 39                    rts
   1280                            
   1281        7E36               CSR_SetBuffer1
   1282  4     7E36 96   42               lda   rsv_buffer_1               >>
   1283  5     7E38 B7   7E98             sta   CSR_ProcessEachPriorityLeve>>
   1284        7E3B               CSR_P8B1
   1285  6     7E3B FE   6564             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1286  3     7E3E 27   08               beq   CSR_P7B1
   1287  2     7E40 86   08               lda   #$08
   1288  5     7E42 B7   7DBF             sta   cur_priority
   1289  8     7E45 BD   7E96             jsr   CSR_ProcessEachPriorityLeve>>
   1290        7E48               CSR_P7B1
   1291  6     7E48 FE   6562             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1292  3     7E4B 27   06               beq   CSR_P6B1
   1293  7     7E4D 7A   7DBF             dec   cur_priority
   1294  8     7E50 BD   7E96             jsr   CSR_ProcessEachPriorityLeve>>
   1295        7E53               CSR_P6B1
   1296  6     7E53 FE   6560             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1297  3     7E56 27   06               beq   CSR_P5B1
   1298  7     7E58 7A   7DBF             dec   cur_priority
   1299  8     7E5B BD   7E96             jsr   CSR_ProcessEachPriorityLeve>>
   1300        7E5E               CSR_P5B1
   1301  6     7E5E FE   655E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1302  3     7E61 27   06               beq   CSR_P4B1
   1303  7     7E63 7A   7DBF             dec   cur_priority
   1304  8     7E66 BD   7E96             jsr   CSR_ProcessEachPriorityLeve>>
   1305        7E69               CSR_P4B1
   1306  6     7E69 FE   655C             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1307  3     7E6C 27   06               beq   CSR_P3B1
   1308  7     7E6E 7A   7DBF             dec   cur_priority
   1309  8     7E71 BD   7E96             jsr   CSR_ProcessEachPriorityLeve>>
   1310        7E74               CSR_P3B1
   1311  6     7E74 FE   655A             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1312  3     7E77 27   06               beq   CSR_P2B1
   1313  7     7E79 7A   7DBF             dec   cur_priority
   1314  8     7E7C BD   7E96             jsr   CSR_ProcessEachPriorityLeve>>
   1315        7E7F               CSR_P2B1
   1316  6     7E7F FE   6558             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1317  3     7E82 27   06               beq   CSR_P1B1
   1318  7     7E84 7A   7DBF             dec   cur_priority
   1319  8     7E87 BD   7E96             jsr   CSR_ProcessEachPriorityLeve>>
   1320        7E8A               CSR_P1B1
   1321  6     7E8A FE   6556             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1322  3     7E8D 27   06               beq   CSR_rtsB1
   1323  7     7E8F 7A   7DBF             dec   cur_priority
   1324  8     7E92 BD   7E96             jsr   CSR_ProcessEachPriorityLeve>>
   1325        7E95               CSR_rtsB1
   1326  5     7E95 39                    rts
   1327
   1328        7E96               CSR_ProcessEachPriorityLevel
   1329  4+1   7E96 30   C8 10            leax  16,u                       >>
   1330  4+1   7E99 A6   C8 29            lda   rsv_render_flags,u
   1331  2     7E9C 84   01               anda  #rsv_render_checkrefresh_ma>>
   1332  6     7E9E 1026 00A5             lbne  CSR_CheckErase
   1333                            
   1334        7EA2               CSR_CheckDelHide
   1335  4+1   7EA2 A6   42               lda   render_flags,u
   1336  2     7EA4 84   28               anda  #render_hide_mask!render_to>>
   1337  3     7EA6 26   5A               bne   CSR_DoNotDisplaySprite
   1338
   1339        7EA8               CSR_UpdSpriteImageBasedOnMirror
   1340  4+1   7EA8 A6   C8 29            lda   rsv_render_flags,u
   1341  2     7EAB 8A   01               ora   #rsv_render_checkrefresh_ma>>
   1342  4+1   7EAD A7   C8 29            sta   rsv_render_flags,u         >>
   1343  4+1   7EB0 A6   42               lda   render_flags,u             >>
   1344  2     7EB2 84   03               anda  #render_xmirror_mask!render>>
   1345  2     7EB4 C6   10               ldb   #image_meta_size
   1346  11    7EB6 3D                    mul
   1347  6+1   7EB7 E3   4A               addd  mapping_frame,u
   1348  5+1   7EB9 ED   C8 2C            std   rsv_curr_mapping_frame,u
   1349                            
   1350        7EBC               CSR_CheckPlayFieldCoord
   1351  4+1   7EBC A6   42               lda   render_flags,u
   1352  2     7EBE 84   04               anda  #render_playfieldcoord_mask>>
   1353  3     7EC0 27   66               beq   CSR_CheckVerticalPosition  >>
   1354                            
   1355  5+1   7EC2 EC   4C               ldd   x_pos,u
   1356  7     7EC4 B3   611C             subd  Glb_Camera_X_Pos
   1357  6+1   7EC7 10AE C8 2C            ldy   rsv_curr_mapping_frame,u
   1358  6+1   7ECB E3   2A               addd  image_x_offset,y
   1359  3     7ECD 29   70               bvs   CSR_SetOutOfRange          >>
   1360  3     7ECF 2B   6E               bmi   CSR_SetOutOfRange          >>
   1361  4+1   7ED1 E7   C8 12            stb   x_pixel,u
   1362  4+1   7ED4 EB   2E               addb  image_x_size,y
   1363  3     7ED6 29   67               bvs   CSR_SetOutOfRange          >>
   1364  4+1   7ED8 E7   C8 32            stb   rsv_x2_pixel,u
   1365  2     7EDB C1   A0               cmpb  #screen_width
   1366  3     7EDD 2E   60               bgt   CSR_SetOutOfRange          >>
   1367
   1368  5+1   7EDF EC   4F               ldd   y_pos,u
   1369  7     7EE1 B3   611E             subd  Glb_Camera_Y_Pos
   1370  6+1   7EE4 E3   2C               addd  image_y_offset,y
   1371  3     7EE6 29   57               bvs   CSR_SetOutOfRange          >>
   1372  3     7EE8 2B   55               bmi   CSR_SetOutOfRange          >>
   1373  4+1   7EEA E7   C8 13            stb   y_pixel,u
   1374  4+1   7EED EB   2F               addb  image_y_size,y
   1375  3     7EEF 29   4E               bvs   CSR_SetOutOfRange          >>
   1376  4+1   7EF1 E7   C8 33            stb   rsv_y2_pixel,u
   1377  2     7EF4 C1   C8               cmpb  #screen_height
   1378  3     7EF6 2E   47               bgt   CSR_SetOutOfRange          >>
   1379  4+1   7EF8 A6   C8 29            lda   rsv_render_flags,u
   1380  2     7EFB 84   F7               anda  #:rsv_render_outofrange_mas>>
   1381  4+1   7EFD A7   C8 29            sta   rsv_render_flags,u
   1382  3     7F00 20   45               bra   CSR_CheckErase
   1383                            
   1384        7F02               CSR_DoNotDisplaySprite
   1385  4+1   7F02 A6   C8 29            lda   rsv_render_flags,u
   1386  2     7F05 84   F9               anda  #:rsv_render_erasesprite_ma>>
   1387  4+1   7F07 A7   C8 29            sta   rsv_render_flags,u
   1388  4+1   7F0A E6   0D               ldb   buf_onscreen,x
   1389  3     7F0C 27   13               beq   CSR_NextObject             >>
   1390  2     7F0E 8A   02               ora   #rsv_render_erasesprite_mas>>
   1391  4+1   7F10 A7   C8 29            sta   rsv_render_flags,u
   1392                            
   1393  7     7F13 10BE 7DC1             ldy   cur_ptr_sub_obj_erase
   1394  6+1   7F17 10AF C8 2E            sty   rsv_ptr_sub_object_erase,u
   1395  5+3   7F1B EF   A1               stu   ,y++
   1396  7     7F1D 10BF 7DC1             sty   cur_ptr_sub_obj_erase
   1397                            
   1398        7F21               CSR_NextObject
   1399  5+1   7F21 EE   03               ldu   buf_priority_next_obj,x
   1400  6     7F23 1026 FF6F             lbne  CSR_ProcessEachPriorityLeve>>
   1401  5     7F27 39                    rts
   1402
   1403        7F28               CSR_CheckVerticalPosition
   1404  4+1   7F28 E6   C8 13            ldb   y_pixel,u                  >>
   1405  6+1   7F2B E3   2F               addd  image_y_size,y
   1406  3     7F2D 29   10               bvs   CSR_SetOutOfRange          >>
   1407  5     7F2F 1083 00C8             cmpd  #screen_height
   1408  3     7F33 2E   0A               bgt   CSR_SetOutOfRange          >>
   1409  4+1   7F35 A6   C8 29            lda   rsv_render_flags,u
   1410  2     7F38 84   F7               anda  #:rsv_render_outofrange_mas>>
   1411  4+1   7F3A A7   C8 29            sta   rsv_render_flags,u
   1412  3     7F3D 20   08               bra   CSR_CheckErase
   1413                            
   1414        7F3F               CSR_SetOutOfRange
   1415  4+1   7F3F A6   C8 29            lda   rsv_render_flags,u
   1416  2     7F42 8A   08               ora   #rsv_render_outofrange_mask>>
   1417  4+1   7F44 A7   C8 29            sta   rsv_render_flags,u
   1418
   1419        7F47               CSR_CheckErase
   1420  4+1   7F47 A6   00               lda   buf_priority,x
   1421  5     7F49 B1   7DBF             cmpa  cur_priority
   1422  3     7F4C 26   36               bne   CSR_CheckDraw
   1423                            
   1424  7     7F4E 10BE 7DC1             ldy   cur_ptr_sub_obj_erase
   1425  6+1   7F52 10AF C8 2E            sty   rsv_ptr_sub_object_erase,u
   1426                            
   1427  4+1   7F56 A6   0D               lda   buf_onscreen,x
   1428  3     7F58 27   25               beq   CSR_SetEraseFalse          >>
   1429  5+1   7F5A EC   C8 12            ldd   x_pixel,u                  >>
   1430  7+1   7F5D 10A3 09               cmpd  buf_prev_x_pixel,x
   1431  3     7F60 26   10               bne   CSR_SetEraseTrue           >>
   1432  5+1   7F62 EC   C8 2C            ldd   rsv_curr_mapping_frame,u
   1433  7+1   7F65 10A3 05               cmpd  buf_prev_mapping_frame,x
   1434  3     7F68 26   08               bne   CSR_SetEraseTrue           >>
   1435  4+1   7F6A A6   43               lda   priority,u
   1436  4+1   7F6C A1   00               cmpa  buf_priority,x
   1437  3     7F6E 26   02               bne   CSR_SetEraseTrue           >>
   1438  3     7F70 20   0D               bra   CSR_SetEraseFalse          >>
   1439                            
   1440        7F72               CSR_SetEraseTrue
   1441  4+1   7F72 A6   C8 29            lda   rsv_render_flags,u
   1442  2     7F75 8A   02               ora   #rsv_render_erasesprite_mas>>
   1443                            
   1444  5+3   7F77 EF   A1               stu   ,y++
   1445  7     7F79 10BF 7DC1             sty   cur_ptr_sub_obj_erase
   1446                            
   1447  3     7F7D 20   05               bra   CSR_CheckDraw
   1448                            
   1449        7F7F               CSR_SetEraseFalse
   1450  4+1   7F7F A6   C8 29            lda   rsv_render_flags,u
   1451  2     7F82 84   FD               anda  #:rsv_render_erasesprite_ma>>
   1452                            
   1453        7F84               CSR_CheckDraw
   1454  4+1   7F84 A6   43               lda   priority,u
   1455  5     7F86 B1   7DBF             cmpa  cur_priority
   1456  3     7F89 26   96               bne   CSR_NextObject
   1457                            
   1458  7     7F8B 10BE 7DC3             ldy   cur_ptr_sub_obj_draw
   1459  6+1   7F8F 10AF C8 30            sty   rsv_ptr_sub_object_draw,u
   1460                            
   1461  4+1   7F93 A6   C8 29            lda   rsv_render_flags,u
   1462  2     7F96 84   08               anda  #rsv_render_outofrange_mask>>
   1463  3     7F98 26   1D               bne   CSR_SetDrawFalse           >>
   1464  5+1   7F9A EC   C8 2C            ldd   rsv_curr_mapping_frame,u
   1465  3     7F9D 27   18               beq   CSR_SetDrawFalse           >>
   1466  4     7F9F 96   02               lda   render_flags
   1467  2     7FA1 84   08               anda  #render_hide_mask
   1468  3     7FA3 26   12               bne   CSR_SetDrawFalse           >>
   1469                            
   1470        7FA5               CSR_SetDrawTrue
   1471  4+1   7FA5 A6   C8 29            lda   rsv_render_flags,u
   1472  2     7FA8 8A   04               ora   #rsv_render_displaysprite_m>>
   1473                            
   1474  5+3   7FAA EF   A1               stu   ,y++
   1475  7     7FAC 10BF 7DC3             sty   cur_ptr_sub_obj_draw
   1476                            
   1477  5+1   7FB0 EE   03               ldu   buf_priority_next_obj,x
   1478  6     7FB2 1026 FEE0             lbne   CSR_ProcessEachPriorityLev>>
   1479  5     7FB6 39                    rts
   1480
   1481        7FB7               CSR_SetDrawFalse
   1482  4+1   7FB7 A6   C8 29            lda   rsv_render_flags,u
   1483  2     7FBA 84   FB               anda  #:rsv_render_displaysprite_>>
   1484                            
   1485  5+1   7FBC EE   03               ldu   buf_priority_next_obj,x
   1486  6     7FBE 1026 FED4             lbne   CSR_ProcessEachPriorityLev>>
   1487  5     7FC2 39                    rts
   1488
   1489
   1490                                   INCLUD ERASESPR
   1491                           * --------------------------------------->>
   1492                           * EraseSprites
   1493                           * ------------
   1494                           * Subroutine to erase sprites on screen
   1495                           * Read Display Priority Structure (front >>
   1496                           * priority: 0 - unregistred
   1497                           * priority: 1 - register non moving overl>>
   1498                           * priority; 2-8 - register moving sprite >>
   1499                           *
   1500                           * input REG : none
   1501                           * --------------------------------------->>
   1502                            
   1503        7FC3               EraseSprites
   1504
   1505        7FC3               ESP_Start
   1506  5     7FC3 B6   611A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1507  3     7FC6 26   5B               bne   ESP_P1B1
   1508                            
   1509        7FC8               ESP_P1B0
   1510  6     7FC8 FE   64C8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1511  3     7FCB 27   08               beq   ESP_P2B0
   1512  2     7FCD 86   01               lda   #$01
   1513  5     7FCF B7   8090             sta   ESP_CheckPriorityB0+1
   1514  8     7FD2 BD   808C             jsr   ESP_ProcessEachPriorityLeve>>
   1515        7FD5               ESP_P2B0
   1516  6     7FD5 FE   64CA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1517  3     7FD8 27   06               beq   ESP_P3B0
   1518  7     7FDA 7C   8090             inc   ESP_CheckPriorityB0+1
   1519  8     7FDD BD   808C             jsr   ESP_ProcessEachPriorityLeve>>
   1520        7FE0               ESP_P3B0
   1521  6     7FE0 FE   64CC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1522  3     7FE3 27   06               beq   ESP_P4B0
   1523  7     7FE5 7C   8090             inc   ESP_CheckPriorityB0+1
   1524  8     7FE8 BD   808C             jsr   ESP_ProcessEachPriorityLeve>>
   1525        7FEB               ESP_P4B0
   1526  6     7FEB FE   64CE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1527  3     7FEE 27   06               beq   ESP_P5B0
   1528  7     7FF0 7C   8090             inc   ESP_CheckPriorityB0+1
   1529  8     7FF3 BD   808C             jsr   ESP_ProcessEachPriorityLeve>>
   1530        7FF6               ESP_P5B0
   1531  6     7FF6 FE   64D0             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1532  3     7FF9 27   06               beq   ESP_P6B0
   1533  7     7FFB 7C   8090             inc   ESP_CheckPriorityB0+1
   1534  8     7FFE BD   808C             jsr   ESP_ProcessEachPriorityLeve>>
   1535        8001               ESP_P6B0
   1536  6     8001 FE   64D2             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1537  3     8004 27   06               beq   ESP_P7B0
   1538  7     8006 7C   8090             inc   ESP_CheckPriorityB0+1
   1539  8     8009 BD   808C             jsr   ESP_ProcessEachPriorityLeve>>
   1540        800C               ESP_P7B0
   1541  6     800C FE   64D4             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1542  3     800F 27   06               beq   ESP_P8B0
   1543  7     8011 7C   8090             inc   ESP_CheckPriorityB0+1
   1544  8     8014 BD   808C             jsr   ESP_ProcessEachPriorityLeve>>
   1545        8017               ESP_P8B0
   1546  6     8017 FE   64D6             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1547  3     801A 27   06               beq   ESP_rtsB0
   1548  7     801C 7C   8090             inc   ESP_CheckPriorityB0+1
   1549  8     801F BD   808C             jsr   ESP_ProcessEachPriorityLeve>>
   1550        8022               ESP_rtsB0
   1551  5     8022 39                    rts
   1552                            
   1553        8023               ESP_P1B1
   1554  6     8023 FE   6568             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1555  3     8026 27   08               beq   ESP_P2B1
   1556  2     8028 86   08               lda   #$08
   1557  5     802A B7   8125             sta   ESP_CheckPriorityB1+1
   1558  8     802D BD   8121             jsr   ESP_ProcessEachPriorityLeve>>
   1559        8030               ESP_P2B1
   1560  6     8030 FE   656A             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1561  3     8033 27   08               beq   ESP_P3B1
   1562  2     8035 86   07               lda   #$07
   1563  5     8037 B7   8125             sta   ESP_CheckPriorityB1+1
   1564  8     803A BD   8121             jsr   ESP_ProcessEachPriorityLeve>>
   1565        803D               ESP_P3B1
   1566  6     803D FE   656C             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1567  3     8040 27   08               beq   ESP_P4B1
   1568  2     8042 86   06               lda   #$06
   1569  5     8044 B7   8125             sta   ESP_CheckPriorityB1+1
   1570  8     8047 BD   8121             jsr   ESP_ProcessEachPriorityLeve>>
   1571        804A               ESP_P4B1
   1572  6     804A FE   656E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1573  3     804D 27   08               beq   ESP_P5B1
   1574  2     804F 86   05               lda   #$05
   1575  5     8051 B7   8125             sta   ESP_CheckPriorityB1+1
   1576  8     8054 BD   8121             jsr   ESP_ProcessEachPriorityLeve>>
   1577        8057               ESP_P5B1
   1578  6     8057 FE   6570             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1579  3     805A 27   08               beq   ESP_P6B1
   1580  2     805C 86   04               lda   #$04
   1581  5     805E B7   8125             sta   ESP_CheckPriorityB1+1
   1582  8     8061 BD   8121             jsr   ESP_ProcessEachPriorityLeve>>
   1583        8064               ESP_P6B1
   1584  6     8064 FE   6572             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1585  3     8067 27   08               beq   ESP_P7B1
   1586  2     8069 86   03               lda   #$03
   1587  5     806B B7   8125             sta   ESP_CheckPriorityB1+1
   1588  8     806E BD   8121             jsr   ESP_ProcessEachPriorityLeve>>
   1589        8071               ESP_P7B1
   1590  6     8071 FE   6574             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1591  3     8074 27   08               beq   ESP_P8B1
   1592  2     8076 86   02               lda   #$02
   1593  5     8078 B7   8125             sta   ESP_CheckPriorityB1+1
   1594  8     807B BD   8121             jsr   ESP_ProcessEachPriorityLeve>>
   1595        807E               ESP_P8B1
   1596  6     807E FE   6576             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1597  3     8081 27   08               beq   ESP_rtsB1
   1598  2     8083 86   01               lda   #$01
   1599  5     8085 B7   8125             sta   ESP_CheckPriorityB1+1
   1600  8     8088 BD   8121             jsr   ESP_ProcessEachPriorityLeve>>
   1601        808B               ESP_rtsB1
   1602  5     808B 39                    rts
   1603
   1604                           * *******
   1605                           * BUFFER0
   1606                           * *******
   1607
   1608        808C               ESP_ProcessEachPriorityLevelB0
   1609  4+1   808C A6   C8 34            lda   rsv_priority_0,u
   1610                            
   1611        808F               ESP_CheckPriorityB0
   1612  2     808F 81   00               cmpa  #0                         >>
   1613  3     8091 26   38               bne   ESP_NextObjectB0           >>
   1614                            
   1615        8093               ESP_UnsetCheckRefreshB0
   1616  4+1   8093 A6   C8 29            lda   rsv_render_flags,u
   1617  2     8096 84   FE               anda  #:rsv_render_checkrefresh_m>>
   1618  4+1   8098 A7   C8 29            sta   rsv_render_flags,u
   1619                            
   1620        809B               ESP_CheckEraseB0
   1621  2     809B 84   02               anda  #rsv_render_erasesprite_mas>>
   1622  3     809D 26   5D               bne   ESP_CallEraseRoutineB0     >>
   1623                            
   1624                                   * if not supposed to be refreshed>>
   1625                            
   1626  4+1   809F A6   C8 41            lda   rsv_onscreen_0,u
   1627  3     80A2 27   27               beq   ESP_NextObjectB0
   1628                            
   1629                                   * search a collision with a sprit>>
   1630                                   * the sprite under should have to>>
   1631                                   * in this case it forces the refr>>
   1632                                   * as a sub loop, this should be o>>
   1633                            
   1634        80A4               ESP_SubEraseSpriteSearchInitB0
   1635  5+1   80A4 AE   C8 2E            ldx   rsv_ptr_sub_object_erase,u
   1636                            
   1637        80A7               ESP_SubEraseSearchB0
   1638  7     80A7 BC   7DC1             cmpx  cur_ptr_sub_obj_erase
   1639  3     80AA 27   25               beq   ESP_SubDrawSpriteSearchInit>>
   1640  6+3   80AC 10AE 83               ldy   ,--x
   1641                            
   1642        80AF               ESP_SubEraseCheckCollisionB0
   1643  5+1   80AF EC   A8 3D            ldd   rsv_prev_x_pixel_0,y       >>
   1644  4+1   80B2 A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1645  3     80B5 24   F0               bhs   ESP_SubEraseSearchB0
   1646  4+1   80B7 E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1647  3     80BA 24   EB               bhs   ESP_SubEraseSearchB0
   1648  5+1   80BC EC   A8 3F            ldd   rsv_prev_x2_pixel_0,y      >>
   1649  4+1   80BF A1   C8 12            cmpa  x_pixel,u                  >>
   1650  3     80C2 23   E3               bls   ESP_SubEraseSearchB0
   1651  4+1   80C4 E1   C8 13            cmpb  y_pixel,u                  >>
   1652  3     80C7 23   DE               bls   ESP_SubEraseSearchB0
   1653  3     80C9 20   2B               bra   ESP_SubCheckOverlayB0
   1654
   1655        80CB               ESP_NextObjectB0
   1656  5+1   80CB EE   C8 35            ldu   rsv_priority_prev_obj_0,u
   1657  3     80CE 26   BC               bne   ESP_ProcessEachPriorityLeve>>
   1658  5     80D0 39                    rts
   1659
   1660        80D1               ESP_SubDrawSpriteSearchInitB0
   1661  5+1   80D1 AE   C8 30            ldx   rsv_ptr_sub_object_draw,u
   1662                            
   1663        80D4               ESP_SubDrawSearchB0
   1664  7     80D4 BC   7DC3             cmpx  cur_ptr_sub_obj_draw
   1665  3     80D7 27   1D               beq   ESP_SubCheckOverlayB0      >>
   1666  6+3   80D9 10AE 83               ldy   ,--x
   1667
   1668        80DC               ESP_SubDrawCheckCollisionB0
   1669  5+1   80DC EC   A8 12            ldd   x_pixel,y                  >>
   1670  4+1   80DF A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1671  3     80E2 24   F0               bhs   ESP_SubDrawSearchB0
   1672  4+1   80E4 E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1673  3     80E7 24   EB               bhs   ESP_SubDrawSearchB0
   1674  5+1   80E9 EC   A8 32            ldd   rsv_x2_pixel,y             >>
   1675  4+1   80EC A1   C8 12            cmpa  x_pixel,u                  >>
   1676  3     80EF 23   E3               bls   ESP_SubDrawSearchB0
   1677  4+1   80F1 E1   C8 13            cmpb  y_pixel,u                  >>
   1678  3     80F4 23   DE               bls   ESP_SubDrawSearchB0
   1679                            
   1680        80F6               ESP_SubCheckOverlayB0
   1681  4+1   80F6 A6   42               lda   render_flags,u
   1682  2     80F8 84   10               anda  #render_fixedoverlay_mask
   1683  3     80FA 26   20               bne   ESP_UnsetOnScreenFlagB0
   1684                            
   1685        80FC               ESP_CallEraseRoutineB0
   1686  6     80FC FF   8110             stu   ESP_CallEraseRoutineB0_00+1>>
   1687  5+1   80FF AE   C8 39            ldx   rsv_prev_mapping_frame_0,u >>
   1688  4+1   8102 A6   06               lda   page_erase_routine,x
   1689  5     8104 B7   E7E5             sta   $E7E5                      >>
   1690  5+1   8107 EE   C8 3B            ldu   rsv_bgdata_0,u             >>
   1691  7+4   810A AD   98 07            jsr   [erase_routine,x]          >>
   1692  4+0   810D 31   C4               leay  ,u                         >>
   1693        810F               ESP_CallEraseRoutineB0_00
   1694  3     810F CE   0000             ldu   #$0000                     >>
   1695  5+1   8112 EC   C8 3B            ldd   rsv_bgdata_0,u             >>
   1696  2     8115 C4   40               andb  #cell_size                 >>
   1697  6     8117 1F   01               tfr   d,x                        >>
   1698                            
   1699        8119               ESP_FreeEraseBufferB0
   1700  8     8119 BD   8476             jsr   BgBufferFree               >>
   1701                            
   1702        811C               ESP_UnsetOnScreenFlagB0
   1703  6+1   811C 6F   C8 41            clr   rsv_onscreen_0,u           >>
   1704  3     811F 20   AA               bra   ESP_NextObjectB0
   1705
   1706                           * *******
   1707                           * BUFFER1
   1708                           * *******
   1709                            
   1710        8121               ESP_ProcessEachPriorityLevelB1
   1711  4+1   8121 A6   C8 42            lda   rsv_priority_1,u
   1712                            
   1713        8124               ESP_CheckPriorityB1
   1714  2     8124 81   00               cmpa  #0                         >>
   1715  3     8126 26   38               bne   ESP_NextObjectB1           >>
   1716                            
   1717        8128               ESP_UnsetCheckRefreshB1
   1718  4+1   8128 A6   C8 29            lda   rsv_render_flags,u
   1719  2     812B 84   FE               anda  #:rsv_render_checkrefresh_m>>
   1720  4+1   812D A7   C8 29            sta   rsv_render_flags,u
   1721                            
   1722        8130               ESP_CheckEraseB1
   1723  2     8130 84   02               anda  #rsv_render_erasesprite_mas>>
   1724  3     8132 26   5D               bne   ESP_CallEraseRoutineB1     >>
   1725                            
   1726                                   * if not supposed to be refreshed>>
   1727                            
   1728  4+1   8134 A6   C8 4F            lda   rsv_onscreen_1,u
   1729  3     8137 27   27               beq   ESP_NextObjectB1
   1730                            
   1731                                   * search a collision with a sprit>>
   1732                                   * the sprite under should have to>>
   1733                                   * in this case it forces the refr>>
   1734                                   * as a sub loop, this should be o>>
   1735                            
   1736        8139               ESP_SubEraseSpriteSearchInitB1
   1737  5+1   8139 AE   C8 2E            ldx   rsv_ptr_sub_object_erase,u
   1738                            
   1739        813C               ESP_SubEraseSearchB1
   1740  7     813C BC   7DC1             cmpx  cur_ptr_sub_obj_erase
   1741  3     813F 27   25               beq   ESP_SubDrawSpriteSearchInit>>
   1742  6+3   8141 10AE 83               ldy   ,--x
   1743                            
   1744        8144               ESP_SubEraseCheckCollisionB1
   1745  5+1   8144 EC   A8 4B            ldd   rsv_prev_x_pixel_1,y       >>
   1746  4+1   8147 A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1747  3     814A 24   F0               bhs   ESP_SubEraseSearchB1
   1748  4+1   814C E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1749  3     814F 24   EB               bhs   ESP_SubEraseSearchB1
   1750  5+1   8151 EC   A8 4D            ldd   rsv_prev_x2_pixel_1,y      >>
   1751  4+1   8154 A1   C8 12            cmpa  x_pixel,u                  >>
   1752  3     8157 23   E3               bls   ESP_SubEraseSearchB1
   1753  4+1   8159 E1   C8 13            cmpb  y_pixel,u                  >>
   1754  3     815C 23   DE               bls   ESP_SubEraseSearchB1
   1755  3     815E 20   2B               bra   ESP_SubCheckOverlayB1
   1756
   1757        8160               ESP_NextObjectB1
   1758  5+1   8160 EE   C8 43            ldu   rsv_priority_prev_obj_1,u
   1759  3     8163 26   BC               bne   ESP_ProcessEachPriorityLeve>>
   1760  5     8165 39                    rts
   1761
   1762        8166               ESP_SubDrawSpriteSearchInitB1
   1763  5+1   8166 AE   C8 30            ldx   rsv_ptr_sub_object_draw,u
   1764                            
   1765        8169               ESP_SubDrawSearchB1
   1766  7     8169 BC   7DC3             cmpx  cur_ptr_sub_obj_draw
   1767  3     816C 27   1D               beq   ESP_SubCheckOverlayB1      >>
   1768  6+3   816E 10AE 83               ldy   ,--x
   1769
   1770        8171               ESP_SubDrawCheckCollisionB1
   1771  5+1   8171 EC   A8 12            ldd   x_pixel,y                  >>
   1772  4+1   8174 A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1773  3     8177 24   F0               bhs   ESP_SubDrawSearchB1
   1774  4+1   8179 E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1775  3     817C 24   EB               bhs   ESP_SubDrawSearchB1
   1776  5+1   817E EC   A8 32            ldd   rsv_x2_pixel,y             >>
   1777  4+1   8181 A1   C8 12            cmpa  x_pixel,u                  >>
   1778  3     8184 23   E3               bls   ESP_SubDrawSearchB1
   1779  4+1   8186 E1   C8 13            cmpb  y_pixel,u                  >>
   1780  3     8189 23   DE               bls   ESP_SubDrawSearchB1
   1781                            
   1782        818B               ESP_SubCheckOverlayB1
   1783  4+1   818B A6   42               lda   render_flags,u
   1784  2     818D 84   10               anda  #render_fixedoverlay_mask
   1785  3     818F 26   20               bne   ESP_UnsetOnScreenFlagB1
   1786                            
   1787        8191               ESP_CallEraseRoutineB1
   1788  6     8191 FF   81A5             stu   ESP_CallEraseRoutineB1_00+1>>
   1789  5+1   8194 AE   C8 47            ldx   rsv_prev_mapping_frame_1,u >>
   1790  4+1   8197 A6   06               lda   page_erase_routine,x
   1791  5     8199 B7   E7E5             sta   $E7E5                      >>
   1792  5+1   819C EE   C8 49            ldu   rsv_bgdata_1,u             >>
   1793  7+4   819F AD   98 07            jsr   [erase_routine,x]          >>
   1794  4+0   81A2 31   C4               leay  ,u                         >>
   1795        81A4               ESP_CallEraseRoutineB1_00
   1796  3     81A4 CE   0000             ldu   #$0000                     >>
   1797  5+1   81A7 EC   C8 49            ldd   rsv_bgdata_1,u             >>
   1798  2     81AA C4   40               andb  #cell_size                 >>
   1799  6     81AC 1F   01               tfr   d,x                        >>
   1800                            
   1801        81AE               ESP_FreeEraseBufferB1
   1802  8     81AE BD   8476             jsr   BgBufferFree               >>
   1803                            
   1804        81B1               ESP_UnsetOnScreenFlagB1
   1805  6+1   81B1 6F   C8 4F            clr   rsv_onscreen_1,u           >>
   1806  3     81B4 20   AA               bra   ESP_NextObjectB1
   1807
   1808                                   INCLUD UNSETDSP
   1809                           * --------------------------------------->>
   1810                           * UnsetDisplayPriority
   1811                           * --------------------
   1812                           * Subroutine to unset sprites in Display >>
   1813                           * Read Lst_Priority_Unset_0/1
   1814                           *
   1815                           * input REG : none
   1816                           * --------------------------------------->>
   1817                            
   1818        81B6               UnsetDisplayPriority
   1819
   1820        81B6               UDP_Start
   1821  5     81B6 B6   611A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1822  3     81B9 26   6F               bne   UDP_B1
   1823                            
   1824        81BB               UDP_B0
   1825  3     81BB 8E   64DC             ldx   #Lst_Priority_Unset_0+2
   1826                            
   1827        81BE               UDP_CheckEndB0
   1828  7     81BE BC   64DA             cmpx  Lst_Priority_Unset_0       >>
   1829  3     81C1 26   07               bne   UDP_CheckPrioPrevB0
   1830                            
   1831        81C3               UDP_InitListB0
   1832  3     81C3 8E   64DC             ldx   #Lst_Priority_Unset_0+2
   1833  6     81C6 BF   64DA             stx   Lst_Priority_Unset_0       >>
   1834  5     81C9 39                    rts
   1835                            
   1836        81CA               UDP_CheckPrioPrevB0
   1837  5+3   81CA EE   81               ldu   ,x++
   1838  5+1   81CC EC   C8 35            ldd   rsv_priority_prev_obj_0,u
   1839  3     81CF 26   12               bne   UDP_ChainPrevB0
   1840                            
   1841  4+1   81D1 A6   C8 34            lda   rsv_priority_0,u
   1842  2     81D4 4A                    deca
   1843  2     81D5 48                    lsla
   1844  4     81D6 108E 64B6             ldy   #Tbl_Priority_First_Entry_0>>
   1845  4+1   81DA 31   A6               leay  a,y
   1846  5+1   81DC EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1847  5+0   81DF ED   A4               std   ,y
   1848  3     81E1 20   0A               bra   UDP_CheckPrioNextB0
   1849                            
   1850        81E3               UDP_ChainPrevB0
   1851  5+1   81E3 EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1852  6+1   81E6 10AE C8 35            ldy   rsv_priority_prev_obj_0,u
   1853  5+1   81EA ED   A8 37            std   rsv_priority_next_obj_0,y
   1854
   1855        81ED               UDP_CheckPrioNextB0
   1856  5+1   81ED EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1857  3     81F0 26   12               bne   UDP_ChainNextB0
   1858
   1859  4+1   81F2 A6   C8 34            lda   rsv_priority_0,u
   1860  2     81F5 4A                    deca
   1861  2     81F6 48                    lsla
   1862  4     81F7 108E 64C8             ldy   #Tbl_Priority_Last_Entry_0
   1863  4+1   81FB 31   A6               leay  a,y
   1864  5+1   81FD EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1865  5+0   8200 ED   A4               std   ,y
   1866  3     8202 20   0A               bra   UDP_CheckDeleteB0
   1867                            
   1868        8204               UDP_ChainNextB0
   1869  5+1   8204 EC   C8 35            ldd   rsv_priority_prev_obj_0,u
   1870  6+1   8207 10AE C8 37            ldy   rsv_priority_next_obj_0,u
   1871  5+1   820B ED   A8 35            std   rsv_priority_prev_obj_0,y
   1872                            
   1873        820E               UDP_CheckDeleteB0
   1874  4+1   820E A6   42               lda   render_flags,u
   1875  2     8210 84   20               anda  #render_todelete_mask
   1876  3     8212 27   0F               beq   UDP_SetNewPrioB0
   1877  4+1   8214 A6   C8 41            lda   rsv_onscreen_0,u
   1878  3     8217 26   0A               bne   UDP_SetNewPrioB0
   1879  4+1   8219 A6   C8 4F            lda   rsv_onscreen_1,u
   1880  3     821C 26   05               bne   UDP_SetNewPrioB0
   1881  8     821E BD   7D8F             jsr   ClearObj
   1882  3     8221 20   9B               bra   UDP_CheckEndB0
   1883                            
   1884        8223               UDP_SetNewPrioB0
   1885  4+1   8223 A6   43               lda   priority,u
   1886  4+1   8225 A7   C8 34            sta   rsv_priority_0,u
   1887  3     8228 20   94               bra   UDP_CheckEndB0
   1888
   1889        822A               UDP_B1
   1890  3     822A 8E   657C             ldx   #Lst_Priority_Unset_1+2
   1891                            
   1892        822D               UDP_CheckEndB1
   1893  7     822D BC   657A             cmpx  Lst_Priority_Unset_1       >>
   1894  3     8230 26   07               bne   UDP_CheckPrioPrevB1
   1895                            
   1896        8232               UDP_InitListB1
   1897  3     8232 8E   657C             ldx   #Lst_Priority_Unset_1+2
   1898  6     8235 BF   657A             stx   Lst_Priority_Unset_1       >>
   1899  5     8238 39                    rts
   1900                            
   1901        8239               UDP_CheckPrioPrevB1
   1902  5+3   8239 EE   81               ldu   ,x++
   1903  5+1   823B EC   C8 43            ldd   rsv_priority_prev_obj_1,u
   1904  3     823E 26   12               bne   UDP_ChainPrevB1
   1905                            
   1906  4+1   8240 A6   C8 42            lda   rsv_priority_1,u
   1907  2     8243 4A                    deca
   1908  2     8244 48                    lsla
   1909  4     8245 108E 6556             ldy   #Tbl_Priority_First_Entry_1>>
   1910  4+1   8249 31   A6               leay  a,y
   1911  5+1   824B EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1912  5+0   824E ED   A4               std   ,y
   1913  3     8250 20   0A               bra   UDP_CheckPrioNextB1
   1914                            
   1915        8252               UDP_ChainPrevB1
   1916  5+1   8252 EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1917  6+1   8255 10AE C8 43            ldy   rsv_priority_prev_obj_1,u
   1918  5+1   8259 ED   A8 45            std   rsv_priority_next_obj_1,y
   1919
   1920        825C               UDP_CheckPrioNextB1
   1921  5+1   825C EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1922  3     825F 26   12               bne   UDP_ChainNextB1
   1923
   1924  4+1   8261 A6   C8 42            lda   rsv_priority_1,u
   1925  2     8264 4A                    deca
   1926  2     8265 48                    lsla
   1927  4     8266 108E 6568             ldy   #Tbl_Priority_Last_Entry_1
   1928  4+1   826A 31   A6               leay  a,y
   1929  5+1   826C EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1930  5+0   826F ED   A4               std   ,y
   1931  3     8271 20   0A               bra   UDP_CheckDeleteB1
   1932                            
   1933        8273               UDP_ChainNextB1
   1934  5+1   8273 EC   C8 43            ldd   rsv_priority_prev_obj_1,u
   1935  6+1   8276 10AE C8 45            ldy   rsv_priority_next_obj_1,u
   1936  5+1   827A ED   A8 43            std   rsv_priority_prev_obj_1,y
   1937                            
   1938        827D               UDP_CheckDeleteB1
   1939  4+1   827D A6   42               lda   render_flags,u
   1940  2     827F 84   20               anda  #render_todelete_mask
   1941  3     8281 27   0F               beq   UDP_SetNewPrioB1
   1942  4+1   8283 A6   C8 4F            lda   rsv_onscreen_1,u
   1943  3     8286 26   0A               bne   UDP_SetNewPrioB1
   1944  4+1   8288 A6   C8 4F            lda   rsv_onscreen_1,u
   1945  3     828B 26   05               bne   UDP_SetNewPrioB1
   1946  8     828D BD   7D8F             jsr   ClearObj
   1947  3     8290 20   9B               bra   UDP_CheckEndB1
   1948                            
   1949        8292               UDP_SetNewPrioB1
   1950  4+1   8292 A6   43               lda   priority,u
   1951  4+1   8294 A7   C8 42            sta   rsv_priority_1,u
   1952  3     8297 20   94               bra   UDP_CheckEndB1
   1953
   1954                                   INCLUD DRAWSPR
   1955                           * --------------------------------------->>
   1956                           * DrawSprites
   1957                           * ------------
   1958                           * Subroutine to draw sprites on screen
   1959                           * Read Display Priority Structure (back t>>
   1960                           * priority: 0 - unregistred
   1961                           * priority: 1 - register non moving overl>>
   1962                           * priority; 2-8 - register moving sprite >>
   1963                           *
   1964                           * input REG : none
   1965                           * --------------------------------------->>
   1966                            
   1967        8299               DrawSprites
   1968
   1969        8299               DRS_Start
   1970  5     8299 B6   611A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1971  3     829C 26   41               bne   DRS_P8B1
   1972                            
   1973        829E               DRS_P8B0
   1974  6     829E BE   64C4             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1975  3     82A1 27   03               beq   DRS_P7B0
   1976  8     82A3 BD   8320             jsr   DRS_ProcessEachPriorityLeve>>
   1977        82A6               DRS_P7B0
   1978  6     82A6 BE   64C2             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1979  3     82A9 27   03               beq   DRS_P6B0
   1980  8     82AB BD   8320             jsr   DRS_ProcessEachPriorityLeve>>
   1981        82AE               DRS_P6B0
   1982  6     82AE BE   64C0             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1983  3     82B1 27   03               beq   DRS_P5B0
   1984  8     82B3 BD   8320             jsr   DRS_ProcessEachPriorityLeve>>
   1985        82B6               DRS_P5B0
   1986  6     82B6 BE   64BE             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1987  3     82B9 27   03               beq   DRS_P4B0
   1988  8     82BB BD   8320             jsr   DRS_ProcessEachPriorityLeve>>
   1989        82BE               DRS_P4B0
   1990  6     82BE BE   64BC             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1991  3     82C1 27   03               beq   DRS_P3B0
   1992  8     82C3 BD   8320             jsr   DRS_ProcessEachPriorityLeve>>
   1993        82C6               DRS_P3B0
   1994  6     82C6 BE   64BA             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1995  3     82C9 27   03               beq   DRS_P2B0
   1996  8     82CB BD   8320             jsr   DRS_ProcessEachPriorityLeve>>
   1997        82CE               DRS_P2B0
   1998  6     82CE BE   64B8             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1999  3     82D1 27   03               beq   DRS_P1B0
   2000  8     82D3 BD   8320             jsr   DRS_ProcessEachPriorityLeve>>
   2001        82D6               DRS_P1B0
   2002  6     82D6 BE   64B6             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2003  3     82D9 27   03               beq   DRS_rtsB0
   2004  8     82DB BD   8320             jsr   DRS_ProcessEachPriorityLeve>>
   2005        82DE               DRS_rtsB0
   2006  5     82DE 39                    rts
   2007                            
   2008        82DF               DRS_P8B1
   2009  6     82DF BE   6564             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2010  3     82E2 27   03               beq   DRS_P7B1
   2011  8     82E4 BD   83BD             jsr   DRS_ProcessEachPriorityLeve>>
   2012        82E7               DRS_P7B1
   2013  6     82E7 BE   6562             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2014  3     82EA 27   03               beq   DRS_P6B1
   2015  8     82EC BD   83BD             jsr   DRS_ProcessEachPriorityLeve>>
   2016        82EF               DRS_P6B1
   2017  6     82EF BE   6560             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2018  3     82F2 27   03               beq   DRS_P5B1
   2019  8     82F4 BD   83BD             jsr   DRS_ProcessEachPriorityLeve>>
   2020        82F7               DRS_P5B1
   2021  6     82F7 BE   655E             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2022  3     82FA 27   03               beq   DRS_P4B1
   2023  8     82FC BD   83BD             jsr   DRS_ProcessEachPriorityLeve>>
   2024        82FF               DRS_P4B1
   2025  6     82FF BE   655C             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2026  3     8302 27   03               beq   DRS_P3B1
   2027  8     8304 BD   83BD             jsr   DRS_ProcessEachPriorityLeve>>
   2028        8307               DRS_P3B1
   2029  6     8307 BE   655A             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2030  3     830A 27   03               beq   DRS_P2B1
   2031  8     830C BD   83BD             jsr   DRS_ProcessEachPriorityLeve>>
   2032        830F               DRS_P2B1
   2033  6     830F BE   6558             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2034  3     8312 27   03               beq   DRS_P1B1
   2035  8     8314 BD   83BD             jsr   DRS_ProcessEachPriorityLeve>>
   2036        8317               DRS_P1B1
   2037  6     8317 BE   6556             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2038  3     831A 27   03               beq   DRS_rtsB1
   2039  8     831C BD   83BD             jsr   DRS_ProcessEachPriorityLeve>>
   2040        831F               DRS_rtsB1
   2041  5     831F 39                    rts
   2042
   2043        8320               DRS_ProcessEachPriorityLevelB0
   2044  4+1   8320 A6   88 29            lda   rsv_render_flags,x
   2045  2     8323 84   04               anda  #rsv_render_displaysprite_m>>
   2046  3     8325 27   46               beq   DRS_NextObjectB0
   2047  4+1   8327 A6   88 41            lda   rsv_onscreen_0,x
   2048  3     832A 26   41               bne   DRS_NextObjectB0
   2049  4+1   832C A6   02               lda   render_flags,x
   2050  2     832E 84   10               anda  #render_fixedoverlay_mask
   2051  3     8330 26   41               bne   DRS_DrawWithoutBackupB0
   2052  5+1   8332 EE   88 2C            ldu   rsv_curr_mapping_frame,x
   2053  4+1   8335 A6   49               lda   erase_nb_cell,u
   2054  8     8337 BD   842D             jsr   BgBufferAlloc              >>
   2055  5     833A 108C 0000             cmpy  #$0000                     >>
   2056  3     833E 27   2D               beq   DRS_NextObjectB0           >>
   2057  5+1   8340 EC   88 12            ldd   x_pixel,x                  >>
   2058  5+1   8343 ED   88 3D            std   rsv_prev_x_pixel_0,x       >>
   2059  8     8346 BD   8390             jsr   DRS_XYToAddress
   2060  5+1   8349 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2061  5+1   834C EF   88 39            stu   rsv_prev_mapping_frame_0,x >>
   2062  4+1   834F A6   40               lda   page_bckdraw_routine,u
   2063  5     8351 B7   E7E5             sta   $E7E5                      >>
   2064  4+0   8354 33   A4               leau  ,y                         >>
   2065  6     8356 BF   835D             stx   DRS_dyn3B0+1               >>
   2066  7+4   8359 AD   98 01            jsr   [bckdraw_routine,x]        >>
   2067        835C               DRS_dyn3B0
   2068  3     835C 8E   0000             ldx   #$0000                     >>
   2069  5+1   835F EF   88 3B            stu   rsv_bgdata_0,x             >>
   2070  5+1   8362 EC   88 32            ldd   rsv_x2_pixel,x             >>
   2071  5+1   8365 ED   88 3F            std   rsv_prev_x2_pixel_0,x      >>
   2072  2     8368 86   01               lda   #$01
   2073  4+1   836A A7   88 41            sta   rsv_onscreen_0,x           >>
   2074        836D               DRS_NextObjectB0
   2075  5+1   836D AE   88 37            ldx   rsv_priority_next_obj_0,x
   2076  3     8370 26   AE               bne   DRS_ProcessEachPriorityLeve>>
   2077  5     8372 39                    rts
   2078                            
   2079        8373               DRS_DrawWithoutBackupB0
   2080  5+1   8373 EC   88 12            ldd   x_pixel,x                  >>
   2081  8     8376 BD   8390             jsr   DRS_XYToAddress
   2082  5+1   8379 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2083  4+1   837C A6   43               lda   page_draw_routine,u
   2084  5     837E B7   E7E5             sta   $E7E5                      >>
   2085  6     8381 BF   8388             stx   DRS_dyn4B0+1               >>
   2086  7+4   8384 AD   98 04            jsr   [draw_routine,x]           >>
   2087        8387               DRS_dyn4B0
   2088  3     8387 8E   0000             ldx   #$0000                     >>
   2089  5+1   838A AE   88 37            ldx   rsv_priority_next_obj_0,x
   2090  3     838D 26   91               bne   DRS_ProcessEachPriorityLeve>>
   2091  5     838F 39                    rts
   2092
   2093        8390               DRS_XYToAddress
   2094  2     8390 44                    lsra                             >>
   2095  3     8391 25   14               bcs   DRS_XYToAddressRAMBFirst   >>
   2096        8393               DRS_XYToAddressRAMAFirst
   2097  5     8393 B7   839E             sta   DRS_dyn1+2
   2098  2     8396 86   28               lda   #$28                       >>
   2099  4+1   8398 E6   88 13            ldb   y_pixel,x                  >>
   2100  11    839B 3D                    mul
   2101        839C               DRS_dyn1
   2102  6     839C D3   00               addd  $0000                      >>
   2103  6     839E FD   6120             std   Glb_Sprite_Screen_Pos_PartA>>
   2104  2     83A1 8A   20               ora   #$20                       >>
   2105  6     83A3 FD   6122             std   Glb_Sprite_Screen_Pos_PartB>>
   2106  5     83A6 39                    rts
   2107        83A7               DRS_XYToAddressRAMBFirst
   2108  5     83A7 B7   83B2             sta   DRS_dyn2+2
   2109  2     83AA 86   28               lda   #$28                       >>
   2110  4+1   83AC E6   88 13            ldb   y_pixel,x                  >>
   2111  11    83AF 3D                    mul
   2112        83B0               DRS_dyn2
   2113  7     83B0 F3   2000             addd  $2000                      >>
   2114  6     83B3 FD   6120             std   Glb_Sprite_Screen_Pos_PartA>>
   2115  7     83B6 B3   1FFF             subd  $1FFF
   2116  6     83B9 FD   6122             std   Glb_Sprite_Screen_Pos_PartB>>
   2117  5     83BC 39                    rts
   2118                            
   2119        83BD               DRS_ProcessEachPriorityLevelB1
   2120  4+1   83BD A6   88 29            lda   rsv_render_flags,x
   2121  2     83C0 84   04               anda  #rsv_render_displaysprite_m>>
   2122  3     83C2 27   46               beq   DRS_NextObjectB1
   2123  4+1   83C4 A6   88 4F            lda   rsv_onscreen_1,x
   2124  3     83C7 26   41               bne   DRS_NextObjectB1
   2125  4+1   83C9 A6   02               lda   render_flags,x
   2126  2     83CB 84   10               anda  #render_fixedoverlay_mask
   2127  3     83CD 26   41               bne   DRS_DrawWithoutBackupB1
   2128  5+1   83CF EE   88 2C            ldu   rsv_curr_mapping_frame,x
   2129  4+1   83D2 A6   49               lda   erase_nb_cell,u
   2130  8     83D4 BD   842D             jsr   BgBufferAlloc              >>
   2131  5     83D7 108C 0000             cmpy  #$0000                     >>
   2132  3     83DB 27   2D               beq   DRS_NextObjectB1           >>
   2133  5+1   83DD EC   88 12            ldd   x_pixel,x                  >>
   2134  5+1   83E0 ED   88 4B            std   rsv_prev_x_pixel_1,x       >>
   2135  8     83E3 BD   8390             jsr   DRS_XYToAddress
   2136  5+1   83E6 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2137  5+1   83E9 EF   88 47            stu   rsv_prev_mapping_frame_1,x >>
   2138  4+1   83EC A6   40               lda   page_bckdraw_routine,u
   2139  5     83EE B7   E7E5             sta   $E7E5                      >>
   2140  4+0   83F1 33   A4               leau  ,y                         >>
   2141  6     83F3 BF   83FA             stx   DRS_dyn3B1+1               >>
   2142  7+4   83F6 AD   98 01            jsr   [bckdraw_routine,x]        >>
   2143        83F9               DRS_dyn3B1
   2144  3     83F9 8E   0000             ldx   #$0000                     >>
   2145  5+1   83FC EF   88 49            stu   rsv_bgdata_1,x             >>
   2146  5+1   83FF EC   88 32            ldd   rsv_x2_pixel,x             >>
   2147  5+1   8402 ED   88 4D            std   rsv_prev_x2_pixel_1,x      >>
   2148  2     8405 86   01               lda   #$01
   2149  4+1   8407 A7   88 4F            sta   rsv_onscreen_1,x           >>
   2150        840A               DRS_NextObjectB1
   2151  5+1   840A AE   88 45            ldx   rsv_priority_next_obj_1,x
   2152  3     840D 26   AE               bne   DRS_ProcessEachPriorityLeve>>
   2153  5     840F 39                    rts
   2154                            
   2155        8410               DRS_DrawWithoutBackupB1
   2156  5+1   8410 EC   88 12            ldd   x_pixel,x                  >>
   2157  8     8413 BD   8390             jsr   DRS_XYToAddress
   2158  5+1   8416 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2159  4+1   8419 A6   43               lda   page_draw_routine,u
   2160  5     841B B7   E7E5             sta   $E7E5                      >>
   2161  6     841E BF   8425             stx   DRS_dyn4B1+1               >>
   2162  7+4   8421 AD   98 04            jsr   [draw_routine,x]           >>
   2163        8424               DRS_dyn4B1
   2164  3     8424 8E   0000             ldx   #$0000                     >>
   2165  5+1   8427 AE   88 45            ldx   rsv_priority_next_obj_1,x
   2166  3     842A 26   91               bne   DRS_ProcessEachPriorityLeve>>
   2167  5     842C 39                    rts
   2168
   2169                                   INCLUD BGBALLOC
   2170                           * --------------------------------------->>
   2171                           * BgBufferAlloc
   2172                           * -------------
   2173                           * Subroutine to allocate memory into back>>
   2174                           *
   2175                           * input  REG : [a] number of requested ce>>
   2176                           * output REG : [y] cell_end or 0000 if no>>
   2177                           * --------------------------------------->>
   2178
   2179        842D               BgBufferAlloc
   2180  5+3   842D 34   14               pshs  b,x
   2181  5     842F F6   611A             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2182  3     8432 26   09               bne   BBA1                       >>
   2183                            
   2184        8434               BBA0
   2185  3     8434 8E   6124             ldx   #Lst_FreeCellFirstEntry_0  >>
   2186  7     8437 10BE 6124             ldy   Lst_FreeCellFirstEntry_0   >>
   2187  3     843B 20   07               bra   BBA_Next
   2188                            
   2189        843D               BBA1
   2190  3     843D 8E   62ED             ldx   #Lst_FreeCellFirstEntry_1  >>
   2191  7     8440 10BE 62ED             ldy   Lst_FreeCellFirstEntry_1   >>
   2192                            
   2193        8444               BBA_Next
   2194  3     8444 27   2E               beq   BBA_rts                    >>
   2195  4+1   8446 A1   20               cmpa  nb_cells,y                 >>
   2196  3     8448 27   09               beq   BBA_FitCell                >>
   2197  3     844A 23   12               bls   BBA_DivideCell             >>
   2198  4+1   844C 30   25               leax  next_entry,y               >>
   2199  6+1   844E 10AE 25               ldy   next_entry,y               >>
   2200  3     8451 20   F1               bra   BBA_Next
   2201                            
   2202        8453               BBA_FitCell
   2203  5+1   8453 EC   25               ldd   next_entry,y
   2204  5+0   8455 ED   84               std   ,x                         >>
   2205  6+1   8457 6F   20               clr   nb_cells,y                 >>
   2206  6+1   8459 10AE 23               ldy   cell_end,y                 >>
   2207  3     845C 20   16               bra   BBA_rts
   2208                            
   2209        845E               BBA_DivideCell
   2210  5     845E B7   8464             sta   BBA_dyn+1
   2211  4+1   8461 E6   20               ldb   nb_cells,y
   2212        8463               BBA_dyn
   2213  2     8463 C0   00               subb  #$00                       >>
   2214  4+1   8465 E7   20               stb   nb_cells,y                 >>
   2215                            
   2216  2     8467 C6   40               ldb   #cell_size
   2217  11    8469 3D                    mul
   2218  2     846A 8A   50               ora   #80                        >>
   2219  5+1   846C AE   23               ldx   cell_end,y
   2220  4+4   846E 30   8B               leax  d,x                        >>
   2221  5+1   8470 AF   23               stx   cell_end,y                 >>
   2222  4+0   8472 31   84               leay  ,x                         >>
   2223                            
   2224        8474               BBA_rts
   2225  5+5   8474 35   94               puls  b,x,pc
   2226
   2227                                   INCLUD BGBFREE
   2228                           * --------------------------------------->>
   2229                           * BgBufferFree
   2230                           * ------------
   2231                           * Subroutine to free memory from backgrou>>
   2232                           *
   2233                           * input  REG : [x] cell_start
   2234                           *              [y] cell_end
   2235                           * output REG : none
   2236                           * --------------------------------------->>
   2237
   2238        8476               BgBufferFree
   2239  5+4   8476 34   46               pshs  d,u
   2240  3     8478 CC   0000             ldd   #$0000
   2241  6     847B FD   84C9             std   BBF_SetNewEntryNextentry+1 >>
   2242  5     847E F6   611A             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2243  3     8481 26   10               bne   BBF1                       >>
   2244                            
   2245        8483               BBF0
   2246  5+1   8483 EE   C8 39            ldu   rsv_prev_mapping_frame_0,u >>
   2247  4+1   8486 A6   49               lda   erase_nb_cell,u            >>
   2248  6     8488 FE   6126             ldu   Lst_FreeCell_0             >>
   2249  6     848B FF   84B7             stu   BBF_AddNewEntryAtEnd+4     >>
   2250  6     848E FE   6124             ldu   Lst_FreeCellFirstEntry_0   >>
   2251  3     8491 20   0E               bra   BBF_Next
   2252                            
   2253        8493               BBF1
   2254  5+1   8493 EE   C8 47            ldu   rsv_prev_mapping_frame_1,u
   2255  4+1   8496 A6   49               lda   erase_nb_cell,u
   2256  6     8498 FE   62EF             ldu   Lst_FreeCell_1
   2257  6     849B FF   84B7             stu   BBF_AddNewEntryAtEnd+4
   2258  6     849E FE   62ED             ldu   Lst_FreeCellFirstEntry_1
   2259                            
   2260        84A1               BBF_Next
   2261  3     84A1 27   10               beq   BBF_AddNewEntryAtEnd       >>
   2262  7+1   84A3 10AC 41               cmpy  cell_start,u               >>
   2263  3     84A6 27   29               beq   BBF_ExpandAtStart          >>
   2264  3     84A8 22   48               bhi   BBF_ExpandAtEnd            >>
   2265  5+1   84AA EE   45               ldu   next_entry,u               >>
   2266  3     84AC 20   F3               bra   BBF_Next
   2267                            
   2268        84AE               BBF_AddNewEntry
   2269  6     84AE FF   84C9             stu   BBF_SetNewEntryNextentry+1
   2270  4+1   84B1 33   45               leau  next_entry,u               >>
   2271        84B3               BBF_AddNewEntryAtEnd
   2272  6     84B3 FF   84CE             stu   BBF_SetNewEntryPrevLink+1  >>
   2273  3     84B6 CE   0000             ldu   #$0000                     >>
   2274        84B9               BBF_FindFreeSlot
   2275  4+1   84B9 E6   40               ldb   nb_cells,u                 >>
   2276  3     84BB 27   04               beq   BBF_SetNewEntry            >>
   2277  4+1   84BD 33   47               leau  entry_size,u               >>
   2278  3     84BF 20   F8               bra   BBF_FindFreeSlot           >>
   2279        84C1               BBF_SetNewEntry
   2280  4+1   84C1 A7   40               sta   nb_cells,u                 >>
   2281  5+1   84C3 AF   41               stx   cell_start,u               >>
   2282  6+1   84C5 10AF 43               sty   cell_end,u                 >>
   2283        84C8               BBF_SetNewEntryNextentry
   2284  3     84C8 8E   0000             ldx   #$0000                     >>
   2285  5+1   84CB AF   45               stx   next_entry,u               >>
   2286        84CD               BBF_SetNewEntryPrevLink
   2287  5     84CD DF   00               stu   $0000                      >>
   2288  3     84CF 20   2C               bra   BBF_rts
   2289
   2290        84D1               BBF_ExpandAtStart
   2291  5+1   84D1 AF   41               stx   cell_start,u
   2292  4+1   84D3 AB   40               adda  nb_cells,u
   2293  4+1   84D5 A7   40               sta   nb_cells,u
   2294  6+1   84D7 10AE 45               ldy   next_entry,u
   2295  3     84DA 27   21               beq   BBF_rts
   2296        84DC               BBF_Join
   2297  6+1   84DC AC   23               cmpx  cell_end,y
   2298  3     84DE 26   1D               bne   BBF_rts
   2299  5+1   84E0 EC   21               ldd   cell_start,y
   2300  5+1   84E2 ED   41               std   cell_start,u
   2301  4+1   84E4 A6   20               lda   nb_cells,y
   2302  4+1   84E6 AB   40               adda  nb_cells,u
   2303  4+1   84E8 A7   40               sta   nb_cells,u
   2304  6+1   84EA 6F   20               clr   nb_cells,y                 >>
   2305  5+1   84EC EC   25               ldd   next_entry,y
   2306  5+1   84EE ED   45               std   next_entry,u               >>
   2307  3     84F0 20   0B               bra   BBF_rts
   2308
   2309        84F2               BBF_ExpandAtEnd
   2310  6+1   84F2 AC   43               cmpx  cell_end,u
   2311  3     84F4 26   B8               bne   BBF_AddNewEntry
   2312  6+1   84F6 10AF 43               sty   cell_end,u
   2313  4+1   84F9 AB   40               adda  nb_cells,u
   2314  4+1   84FB A7   40               sta   nb_cells,u
   2315                            
   2316        84FD               BBF_rts
   2317  5+6   84FD 35   C6               puls  d,u,pc
----------------
5134 cycle(s)
9215 byte(s)
----------------
    151

000000 Total Errors

000418 Total Symbols
     1x          Label 7D23 am_ObjectMove_01
     1x          Label 7D39 am_ObjectMove_02
     3x          Label 7BE7 am_RunNextObject
     2x          Label 7B17 am_SwapVideoPage
     2x          Equ   0004 anim
     0x          Label 7C93 AnimateSprite
     1x          Label 7CC3 Anim_dyn
     1x          Label 7D12 Anim_End
     1x          Label 7D09 Anim_End_FA
     1x          Label 7CFE Anim_End_FB
     1x          Label 7CEE Anim_End_FC
     1x          Label 7CE6 Anim_End_FD
     1x          Label 7CD5 Anim_End_FE
     1x          Label 7CDD Anim_End_FE_dyn
     1x          Label 7CCA Anim_End_FF
     8x          Equ   0008 anim_frame
     4x          Equ   0009 anim_frame_duration
     2x          Label 7CB5 Anim_Next
     1x          Label 7CA1 Anim_Run
     1x          Label 7CC9 Anim_Wait
     0x          Label 8434 BBA0
     1x          Label 843D BBA1
     1x          Label 845E BBA_DivideCell
     1x          Label 8463 BBA_dyn
     1x          Label 8453 BBA_FitCell
     2x          Label 8444 BBA_Next
     2x          Label 8474 BBA_rts
     0x          Label 8483 BBF0
     1x          Label 8493 BBF1
     1x          Label 84AE BBF_AddNewEntry
     3x          Label 84B3 BBF_AddNewEntryAtEnd
     1x          Label 84F2 BBF_ExpandAtEnd
     1x          Label 84D1 BBF_ExpandAtStart
     1x          Label 84B9 BBF_FindFreeSlot
     0x          Label 84DC BBF_Join
     2x          Label 84A1 BBF_Next
     4x          Label 84FD BBF_rts
     1x          Label 84C1 BBF_SetNewEntry
     2x          Label 84C8 BBF_SetNewEntryNextentry
     1x          Label 84CD BBF_SetNewEntryPrevLink
     2x          Equ   0001 bckdraw_routine
     2x          Label 842D BgBufferAlloc
     2x          Label 8476 BgBufferFree
     0x          Label 7B52 Black_palette
     0x          Equ   0007 buf_bgdata
     2x          Equ   0024 buf_Lst_Priority_Unset
     2x          Equ   000D buf_onscreen
     1x          Equ   0005 buf_prev_mapping_frame
     0x          Equ   000B buf_prev_x2_pixel
     1x          Equ   0009 buf_prev_x_pixel
     0x          Equ   000C buf_prev_y2_pixel
     0x          Equ   000A buf_prev_y_pixel
     5x          Equ   0000 buf_priority
     5x          Equ   0003 buf_priority_next_obj
     2x          Equ   0001 buf_priority_prev_obj
    33x          Equ   0000 buf_Tbl_Priority_First_Entry
    18x          Equ   0012 buf_Tbl_Priority_Last_Entry
     0x          Equ   0040 c1_button_A_mask
     0x          Equ   0002 c1_button_down_mask
     0x          Equ   0004 c1_button_left_mask
     0x          Equ   0008 c1_button_right_mask
     0x          Equ   0001 c1_button_up_mask
     0x          Equ   0080 c2_button_A_mask
     0x          Equ   0020 c2_button_down_mask
     0x          Equ   0040 c2_button_left_mask
     0x          Equ   0080 c2_button_right_mask
     0x          Equ   0010 c2_button_up_mask
     7x          Equ   0003 cell_end
     3x          Equ   0040 cell_size
     5x          Equ   0001 cell_start
     0x          Equ   6000 cell_start_adr
     1x          Label 7DC5 CheckSpritesRefresh
     3x          Label 7D8F ClearObj
     1x          Label 7DB7 CLO_1
     1x          Label 7DBB CLO_2
     3x          Label 7B31 cpt
     0x          Label 7EA2 CSR_CheckDelHide
     2x          Label 7F84 CSR_CheckDraw
     3x          Label 7F47 CSR_CheckErase
     0x          Label 7EBC CSR_CheckPlayFieldCoord
     1x          Label 7F28 CSR_CheckVerticalPosition
     1x          Label 7F02 CSR_DoNotDisplaySprite
     2x          Label 7F21 CSR_NextObject
     1x          Label 7E2A CSR_P1B0
     1x          Label 7E8A CSR_P1B1
     1x          Label 7E1F CSR_P2B0
     1x          Label 7E7F CSR_P2B1
     1x          Label 7E14 CSR_P3B0
     1x          Label 7E74 CSR_P3B1
     1x          Label 7E09 CSR_P4B0
     1x          Label 7E69 CSR_P4B1
     1x          Label 7DFE CSR_P5B0
     1x          Label 7E5E CSR_P5B1
     1x          Label 7DF3 CSR_P6B0
     1x          Label 7E53 CSR_P6B1
     1x          Label 7DE8 CSR_P7B0
     1x          Label 7E48 CSR_P7B1
     0x          Label 7DDB CSR_P8B0
     0x          Label 7E3B CSR_P8B1
    21x          Label 7E96 CSR_ProcessEachPriorityLevel
     1x          Label 7E35 CSR_rtsB0
     1x          Label 7E95 CSR_rtsB1
     0x          Label 7DD6 CSR_SetBuffer0
     1x          Label 7E36 CSR_SetBuffer1
     3x          Label 7FB7 CSR_SetDrawFalse
     0x          Label 7FA5 CSR_SetDrawTrue
     2x          Label 7F7F CSR_SetEraseFalse
     3x          Label 7F72 CSR_SetEraseTrue
    10x          Label 7F3F CSR_SetOutOfRange
     0x          Label 7DC5 CSR_Start
     0x          Label 7EA8 CSR_UpdSpriteImageBasedOnMirror
    18x          Label 7DBF cur_priority
     5x          Label 7DC3 cur_ptr_sub_obj_draw
     7x          Label 7DC1 cur_ptr_sub_obj_erase
     0x          Label 7D5B DeleteObject
     0x          Label 7D55 DeleteObject_x
     2x          Label 7C2E DisplaySprite
     0x          Label 7C28 DisplaySprite_x
     0x          Equ   604F dk_destination
     0x          Equ   6049 dk_lecteur
     0x          Equ   604A dk_piste
     0x          Equ   604C dk_secteur
     1x          Label 7D8D DOB_rts
     1x          Label 7D5D DOB_Start
     0x          Label 7D6C DOB_TestOnscreen1
     1x          Label 7D7D DOB_TestOnscreen1Delete
     2x          Label 7D87 DOB_ToDeleteFlag
     0x          Label 7D62 DOB_Unset0
     1x          Label 7D71 DOB_Unset1
     2x          Label 7BB9 Dpad_Held
     0x          Label 7BBB Dpad_Press
    27x          Label 64B6 DPS_buffer_0
    25x          Label 6556 DPS_buffer_1
     1x          Label 8299 DrawSprites
     2x          Equ   0004 draw_routine
     1x          Label 8373 DRS_DrawWithoutBackupB0
     1x          Label 8410 DRS_DrawWithoutBackupB1
     1x          Label 839C DRS_dyn1
     1x          Label 83B0 DRS_dyn2
     1x          Label 835C DRS_dyn3B0
     1x          Label 83F9 DRS_dyn3B1
     1x          Label 8387 DRS_dyn4B0
     1x          Label 8424 DRS_dyn4B1
     3x          Label 836D DRS_NextObjectB0
     3x          Label 840A DRS_NextObjectB1
     1x          Label 82D6 DRS_P1B0
     1x          Label 8317 DRS_P1B1
     1x          Label 82CE DRS_P2B0
     1x          Label 830F DRS_P2B1
     1x          Label 82C6 DRS_P3B0
     1x          Label 8307 DRS_P3B1
     1x          Label 82BE DRS_P4B0
     1x          Label 82FF DRS_P4B1
     1x          Label 82B6 DRS_P5B0
     1x          Label 82F7 DRS_P5B1
     1x          Label 82AE DRS_P6B0
     1x          Label 82EF DRS_P6B1
     1x          Label 82A6 DRS_P7B0
     1x          Label 82E7 DRS_P7B1
     0x          Label 829E DRS_P8B0
     1x          Label 82DF DRS_P8B1
    10x          Label 8320 DRS_ProcessEachPriorityLevelB0
    10x          Label 83BD DRS_ProcessEachPriorityLevelB1
     1x          Label 82DE DRS_rtsB0
     1x          Label 831F DRS_rtsB1
     0x          Label 8299 DRS_Start
     4x          Label 8390 DRS_XYToAddress
     0x          Label 8393 DRS_XYToAddressRAMAFirst
     1x          Label 83A7 DRS_XYToAddressRAMBFirst
     0x          Label 7C58 DSP_addFirstNode
     1x          Label 7C67 DSP_addToExistingNode
     1x          Label 7C45 DSP_BufferPositionned
     1x          Label 7C80 DSP_ChangePriority
     1x          Label 7C51 DSP_CheckLastEntry
     0x          Label 7C4F DSP_InitPriority
     1x          Label 7C73 DSP_LinkBuffer1
     1x          Label 7C76 DSP_LinkCurWithPrev
     3x          Label 7C91 DSP_rts
     0x          Label 7C35 DSP_SetBuffer0
     1x          Label 7C3E DSP_SetBuffer1
     1x          Label 7C30 DSP_Start
     1x          Label 678A Dynamic_Object_RAM
     3x          Label 79FA Dynamic_Object_RAM_End
     3x          Equ   0007 entry_size
     1x          Label 7FC3 EraseSprites
     4x          Equ   0009 erase_nb_cell
     2x          Equ   0007 erase_routine
     1x          Label 80FC ESP_CallEraseRoutineB0
     1x          Label 810F ESP_CallEraseRoutineB0_00
     1x          Label 8191 ESP_CallEraseRoutineB1
     1x          Label 81A4 ESP_CallEraseRoutineB1_00
     0x          Label 809B ESP_CheckEraseB0
     0x          Label 8130 ESP_CheckEraseB1
     8x          Label 808F ESP_CheckPriorityB0
     8x          Label 8124 ESP_CheckPriorityB1
     0x          Label 8119 ESP_FreeEraseBufferB0
     0x          Label 81AE ESP_FreeEraseBufferB1
     3x          Label 80CB ESP_NextObjectB0
     3x          Label 8160 ESP_NextObjectB1
     0x          Label 7FC8 ESP_P1B0
     1x          Label 8023 ESP_P1B1
     1x          Label 7FD5 ESP_P2B0
     1x          Label 8030 ESP_P2B1
     1x          Label 7FE0 ESP_P3B0
     1x          Label 803D ESP_P3B1
     1x          Label 7FEB ESP_P4B0
     1x          Label 804A ESP_P4B1
     1x          Label 7FF6 ESP_P5B0
     1x          Label 8057 ESP_P5B1
     1x          Label 8001 ESP_P6B0
     1x          Label 8064 ESP_P6B1
     1x          Label 800C ESP_P7B0
     1x          Label 8071 ESP_P7B1
     1x          Label 8017 ESP_P8B0
     1x          Label 807E ESP_P8B1
     9x          Label 808C ESP_ProcessEachPriorityLevelB0
     9x          Label 8121 ESP_ProcessEachPriorityLevelB1
     1x          Label 8022 ESP_rtsB0
     1x          Label 808B ESP_rtsB1
     0x          Label 7FC3 ESP_Start
     2x          Label 80F6 ESP_SubCheckOverlayB0
     2x          Label 818B ESP_SubCheckOverlayB1
     0x          Label 80DC ESP_SubDrawCheckCollisionB0
     0x          Label 8171 ESP_SubDrawCheckCollisionB1
     4x          Label 80D4 ESP_SubDrawSearchB0
     4x          Label 8169 ESP_SubDrawSearchB1
     1x          Label 80D1 ESP_SubDrawSpriteSearchInitB0
     1x          Label 8166 ESP_SubDrawSpriteSearchInitB1
     0x          Label 80AF ESP_SubEraseCheckCollisionB0
     0x          Label 8144 ESP_SubEraseCheckCollisionB1
     4x          Label 80A7 ESP_SubEraseSearchB0
     4x          Label 813C ESP_SubEraseSearchB1
     0x          Label 80A4 ESP_SubEraseSpriteSearchInitB0
     0x          Label 8139 ESP_SubEraseSpriteSearchInitB1
     0x          Label 8093 ESP_UnsetCheckRefreshB0
     0x          Label 8128 ESP_UnsetCheckRefreshB1
     1x          Label 811C ESP_UnsetOnScreenFlagB0
     1x          Label 81B1 ESP_UnsetOnScreenFlagB1
     0x          Equ   001B ext_variables
     2x          Label 7BBA Fire_Held
     0x          Label 7BBC Fire_Press
     1x          Label 611C Glb_Camera_X_Pos
     1x          Label 611E Glb_Camera_Y_Pos
    10x          Label 611A Glb_Cur_Wrk_Screen_Id
     1x          Label 611B Glb_Cur_Wrk_Screen_Id_x2
     1x          Label 7AEA Glb_MainCharacter_Is_Dead
     2x          Label 6120 Glb_Sprite_Screen_Pos_PartA
     2x          Label 6122 Glb_Sprite_Screen_Pos_PartB
     0x          Equ   00FE goBackNFrames
     0x          Equ   00FD goToAnimation
     0x          Equ   0038 gravity
     0x          Equ   0000 id
     1x          Equ   0010 image_meta_size
     1x          Equ   000A image_x_offset
     1x          Equ   000E image_x_size
     1x          Equ   000C image_y_offset
     2x          Equ   000F image_y_size
     0x          Label 7BB9 Joypads
     1x          Label 7BB9 Joypads_Held
     1x          Label 7BBB Joypads_Press
     1x          Label 6100 LevelMainLoop
     1x          Label 79FA LevelOnly_Object_RAM
     1x          Label 7AEA LevelOnly_Object_RAM_End
     3x          Label 6124 Lst_FreeCellFirstEntry_0
     3x          Label 62ED Lst_FreeCellFirstEntry_1
     1x          Label 6126 Lst_FreeCell_0
     1x          Label 62EF Lst_FreeCell_1
     8x          Label 64DA Lst_Priority_Unset_0
     7x          Label 657A Lst_Priority_Unset_1
     2x          Equ   000A mapping_frame
     0x          Label 7C26 MarkObjGone
    14x          Equ   0000 nb_cells
     2x          Equ   003B nb_dynamic_objects
     2x          Equ   0082 nb_free_cells
     0x          Equ   0003 nb_level_objects
     4x          Equ   003D nb_objects
     4x          Equ   0008 nb_priority_levels
     1x          Equ   0002 nb_reserved_objects
     0x          Equ   00FC nextRoutine
     0x          Equ   00FA nextSubRoutine
     9x          Equ   0005 next_entry
     4x          Equ   0050 next_object
     1x          Label 7B32 Normal_palette
     0x          Label 7D13 ObjectMove
     1x          Label 66EA Object_RAM
     2x          Label 7AEA Object_RAM_End
     8x          Equ   0050 object_size
     0x          Label 66EA Obj_MainCharacter
     0x          Label 673A Obj_Sidekick
     0x          Label 7A4A Obj_SonicDust
     0x          Label 7A9A Obj_TailsDust
     0x          Label 79FA Obj_TailsTails
     2x          Equ   0000 page_bckdraw_routine
     2x          Equ   0003 page_draw_routine
     2x          Equ   0006 page_erase_routine
     2x          Equ   0006 prev_anim
     5x          Equ   0003 priority
     2x          Equ   0000 Ptr_palette
     1x          Label 7BBD ReadJoypads
     4x          Equ   0010 render_fixedoverlay_mask
    15x          Equ   0002 render_flags
     0x          Equ   0040 render_free2_mask
     0x          Equ   0080 render_free3_mask
     2x          Equ   0008 render_hide_mask
     1x          Equ   0004 render_playfieldcoord_mask
     4x          Equ   0020 render_todelete_mask
     2x          Equ   0001 render_xmirror_mask
     2x          Equ   0002 render_ymirror_mask
     1x          Label 66EA Reserved_Object_RAM
     1x          Label 678A Reserved_Object_RAM_End
     0x          Equ   00FF resetAnim
     0x          Equ   00FB resetAnimAndSubRoutine
     2x          Equ   0018 routine
     3x          Equ   0019 routine_secondary
     3x          Equ   003B rsv_bgdata_0
     3x          Equ   0049 rsv_bgdata_1
     2x          Equ   0034 rsv_buffer_0
     2x          Equ   0042 rsv_buffer_1
    10x          Equ   002C rsv_curr_mapping_frame
     6x          Equ   0041 rsv_onscreen_0
     9x          Equ   004F rsv_onscreen_1
     0x          Equ   002A rsv_prev_anim
     3x          Equ   0039 rsv_prev_mapping_frame_0
     3x          Equ   0047 rsv_prev_mapping_frame_1
     2x          Equ   003F rsv_prev_x2_pixel_0
     2x          Equ   004D rsv_prev_x2_pixel_1
     2x          Equ   003D rsv_prev_x_pixel_0
     2x          Equ   004B rsv_prev_x_pixel_1
     0x          Equ   0040 rsv_prev_y2_pixel_0
     0x          Equ   004E rsv_prev_y2_pixel_1
     0x          Equ   003E rsv_prev_y_pixel_0
     0x          Equ   004C rsv_prev_y_pixel_1
     4x          Equ   0034 rsv_priority_0
     4x          Equ   0042 rsv_priority_1
     9x          Equ   0037 rsv_priority_next_obj_0
     9x          Equ   0045 rsv_priority_next_obj_1
     5x          Equ   0035 rsv_priority_prev_obj_0
     5x          Equ   0043 rsv_priority_prev_obj_1
     3x          Equ   0030 rsv_ptr_sub_object_draw
     4x          Equ   002E rsv_ptr_sub_object_erase
     4x          Equ   0001 rsv_render_checkrefresh_mask
     5x          Equ   0004 rsv_render_displaysprite_mask
     6x          Equ   0002 rsv_render_erasesprite_mask
    23x          Equ   0029 rsv_render_flags
     4x          Equ   0008 rsv_render_outofrange_mask
     9x          Equ   0032 rsv_x2_pixel
     5x          Equ   0033 rsv_y2_pixel
     1x          Label 7BE4 RunNextObject
     2x          Label 7C1C RunNextObjectDisplayOnly
     3x          Label 7BDE RunObject
     2x          Label 7C12 RunObjectDisplayOnly
     1x          Label 7BD5 RunObjects
     1x          Label 7BEE RunObjectsWhenPlayerIsDead
     0x          Label 7BD9 RunObjects_01
     0x          Label 7BED RunObjects_End
     2x          Equ   00C8 screen_height
     1x          Equ   00A0 screen_width
     1x          Label 7BA1 SetColor
     0x          Label 7D3E SingleObjLoad2
     1x          Label 7D48 SingleObjLoad2_01
     2x          Label 7D54 SingleObjLoad2_02
     1x          Equ   001A status
     0x          Equ   0004 status_bit2
     0x          Equ   0080 status_bit7
     0x          Equ   0002 status_inair
     0x          Equ   0010 status_jumpingafterrolling
     0x          Equ   0004 status_jumporroll
     0x          Equ   0020 status_mainchar_pushing
     0x          Equ   0008 status_mainchar_standing
     0x          Equ   0008 status_norgroundnorfall
     0x          Equ   0020 status_pushing
     0x          Equ   0040 status_sidekick_pushing
     0x          Equ   0010 status_sidekick_standing
     0x          Equ   0040 status_underwater
     1x          Equ   0001 status_x_orientation
     1x          Equ   0002 status_y_orientation
     0x          Equ   0001 subtype
     0x          Label 7B0A SwapVideoPage
     1x          Label 7B2B SwapVideoPage_01
     1x          Label 64B6 Tbl_Priority_First_Entry_0
     1x          Label 6556 Tbl_Priority_First_Entry_1
     2x          Label 64C8 Tbl_Priority_Last_Entry_0
     1x          Label 6568 Tbl_Priority_Last_Entry_1
     1x          Label 6670 Tbl_Sub_Object_Draw
     1x          Label 65F6 Tbl_Sub_Object_Erase
     0x          Label 81BB UDP_B0
     1x          Label 822A UDP_B1
     1x          Label 8204 UDP_ChainNextB0
     1x          Label 8273 UDP_ChainNextB1
     1x          Label 81E3 UDP_ChainPrevB0
     1x          Label 8252 UDP_ChainPrevB1
     1x          Label 820E UDP_CheckDeleteB0
     1x          Label 827D UDP_CheckDeleteB1
     2x          Label 81BE UDP_CheckEndB0
     2x          Label 822D UDP_CheckEndB1
     1x          Label 81ED UDP_CheckPrioNextB0
     1x          Label 825C UDP_CheckPrioNextB1
     1x          Label 81CA UDP_CheckPrioPrevB0
     1x          Label 8239 UDP_CheckPrioPrevB1
     0x          Label 81C3 UDP_InitListB0
     0x          Label 8232 UDP_InitListB1
     3x          Label 8223 UDP_SetNewPrioB0
     3x          Label 8292 UDP_SetNewPrioB1
     0x          Label 81B6 UDP_Start
     1x          Label 81B6 UnsetDisplayPriority
     1x          Label 7B92 UpdatePalette
     2x          Label 7B2F Vint_runcount
     2x          Label 7AEB WaitVBL
     1x          Label 7AF0 WaitVBL_01
     0x          Label 7B72 White_palette
    12x          Equ   0012 x_pixel
     5x          Equ   000C x_pos
     0x          Equ   000E x_sub
     2x          Equ   0014 x_vel
     8x          Equ   0013 y_pixel
     5x          Equ   000F y_pos
     0x          Equ   0011 y_sub
     2x          Equ   0016 y_vel

