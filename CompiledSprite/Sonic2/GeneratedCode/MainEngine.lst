/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : .\Sonic2\GeneratedCode\MainEngine.asm
 * Fichier destination : .\Sonic2\GeneratedCode\TMP.BIN
 * Contenu :
 *     Main     0:MAIN.ASM     3627
 *     Include  0:CONSTANT.ASM 4400
 *     Include  0:WAITVBL.ASM  1923
 *     Include  0:UPDTPAL.ASM  629
 *     Include  0:READJPDS.ASM 1727
 *     Include  0:RUNOBJTS.ASM 1591
 *     Include  0:MRKOBJGN.ASM 481
 *     Include  0:DISPLSPR.ASM 2000
 *     Include  0:ANIMSPR.ASM  1972
 *     Include  0:OBJMOVE.ASM  752
 *     Include  0:OBJLOAD.ASM  1109
 *     Include  0:DELETOBJ.ASM 1178
 *     Include  0:CLEAROBJ.ASM 560
 *     Include  0:CHECKSPR.ASM 6159
 *     Include  0:ERASESPR.ASM 6826
 *     Include  0:UNSETDSP.ASM 2828
 *     Include  0:DRAWSPR.ASM  4677
 *     Include  0:BGBALLOC.ASM 958
 *     Include  0:BGBFREE.ASM  1735
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
    163                                   INCLUD CONSTANT
    164                           * --------------------------------------->>
    165                           * Constants
    166                           *
    167                           * Naming convention
    168                           * -----------------
    169                           * - lower case
    170                           * - underscore-separated names
    171                           *
    172                           * --------------------------------------->>
    173
    174                           * =======================================>>
    175                           * TO8 Registers
    176                           * =======================================>>
    177
    178                  6049     dk_lecteur                    equ $6049
    179                  604A     dk_piste                      equ $604A
    180                  604C     dk_secteur                    equ $604C
    181                  604F     dk_destination                equ $604F
    182
    183                           * =======================================>>
    184                           * Display Constants
    185                           * =======================================>>
    186
    187                  00A0     screen_width                  equ 160 ; s>>
    188                  00C8     screen_height                 equ 200 ; s>>
    189                  0008     nb_priority_levels            equ 8   ; n>>
    190
    191                           * =======================================>>
    192                           * Physics Constants
    193                           * =======================================>>
    194
    195                  0038     gravity                       equ $38 ; G>>
    196
    197                           * =======================================>>
    198                           * Images Constants
    199                           * =======================================>>
    200
    201                  0000     page_bckdraw_routine          equ 0
    202                  0001     bckdraw_routine               equ 1
    203                  0003     page_draw_routine             equ 3
    204                  0004     draw_routine                  equ 4
    205                  0006     page_erase_routine            equ 6
    206                  0007     erase_routine                 equ 7
    207                  0009     erase_nb_cell                 equ 9
    208                  000A     image_x_offset                equ 10
    209                  000C     image_y_offset                equ 12
    210                  000E     image_x_size                  equ 14
    211                  000F     image_y_size                  equ 15 ; mu>>
    212                  0010     image_meta_size               equ 16 ; nu>>
    213
    214                           * =======================================>>
    215                           * Object Constants
    216                           * =======================================>>
    217
    218                  0002     nb_reserved_objects           equ 2
    219                  003B     nb_dynamic_objects            equ 59
    220                  0003     nb_level_objects              equ 3
    221                  003D     nb_objects                    equ (nb_res>>
    222
    223                           * --------------------------------------->>
    224                           * Object Status Table offsets
    225                           * --------------------------------------->>
    226
    227                  0050     object_size                   equ 80 ; th>>
    228                  0050     next_object                   equ object_>>
    229
    230                  0000     id                            equ 0      >>
    231                  0001     subtype                       equ 1      >>
    232                  0002     render_flags                  equ 2
    233
    234                           * --- render_flags bitfield variables --->>
    235                  0001     render_xmirror_mask           equ $01 ; (>>
    236                  0002     render_ymirror_mask           equ $02 ; (>>
    237                  0004     render_playfieldcoord_mask    equ $04 ; (>>
    238                  0008     render_hide_mask              equ $08 ; (>>
    239                  0010     render_fixedoverlay_mask      equ $10 ; (>>
    240                  0020     render_todelete_mask          equ $20 ; (>>
    241                  0040     render_free2_mask             equ $40 ; (>>
    242                  0080     render_free3_mask             equ $80 ; (>>
    243                            
    244                  0003     priority                      equ 3      >>
    245                  0004     anim                          equ 4  ; an>>
    246                  0006     prev_anim                     equ 6  ; an>>
    247                  0008     anim_frame                    equ 8      >>
    248                  0009     anim_frame_duration           equ 9      >>
    249                  000A     mapping_frame                 equ 10 ; an>>
    250                  000C     x_pos                         equ 12 ; an>>
    251                  000E     x_sub                         equ 14     >>
    252                  000F     y_pos                         equ 15 ; an>>
    253                  0011     y_sub                         equ 17     >>
    254                  0012     x_pixel                       equ 18     >>
    255                  0013     y_pixel                       equ 19     >>
    256                  0014     x_vel                         equ 20 ; an>>
    257                  0016     y_vel                         equ 22 ; an>>
    258                  0018     routine                       equ 24     >>
    259                  0019     routine_secondary             equ 25     >>
    260                  001A     status                        equ 26
    261
    262                           * --- status bitfield variables for objec>>
    263                  0001     status_x_orientation          equ   $01 ;>>
    264                  0002     status_y_orientation          equ   $02 ;>>
    265                  0004     status_bit2                   equ   $04 ;>>
    266                  0008     status_mainchar_standing      equ   $08 ;>>
    267                  0010     status_sidekick_standing      equ   $10 ;>>
    268                  0020     status_mainchar_pushing       equ   $20 ;>>
    269                  0040     status_sidekick_pushing       equ   $40 ;>>
    270                  0080     status_bit7                   equ   $80 ;>>
    271
    272                           * --- status bitfield variables for Main >>
    273                  0002     status_inair                  equ   $02 ;>>
    274                  0004     status_jumporroll             equ   $04 ;>>
    275                  0008     status_norgroundnorfall       equ   $08 ;>>
    276                  0010     status_jumpingafterrolling    equ   $10 ;>>
    277                  0020     status_pushing                equ   $20 ;>>
    278                  0040     status_underwater             equ   $40 ;>>
    279
    280                  001B     ext_variables                 equ 27 ; to>>
    281
    282                           * --------------------------------------->>
    283                           * reserved variables (engine)
    284
    285                  0029     rsv_render_flags              equ 41
    286
    287                           * --- rsv_render_flags bitfield variables>>
    288                  0001     rsv_render_checkrefresh_mask  equ $01 ; (>>
    289                  0002     rsv_render_erasesprite_mask   equ $02 ; (>>
    290                  0004     rsv_render_displaysprite_mask equ $04 ; (>>
    291                  0008     rsv_render_outofrange_mask    equ $08 ; (>>
    292
    293                  002A     rsv_prev_anim                 equ 42 ; an>>
    294                  002C     rsv_curr_mapping_frame        equ 44 ; an>>
    295                  002E     rsv_ptr_sub_object_erase      equ 46 ; an>>
    296                  0030     rsv_ptr_sub_object_draw       equ 48 ; an>>
    297                  0032     rsv_x2_pixel                  equ 50     >>
    298                  0033     rsv_y2_pixel                  equ 51     >>
    299
    300                           * --------------------------------------->>
    301                           * reserved variables (engine) - buffer sp>>
    302
    303                  0034     rsv_buffer_0                  equ 52 ; St>>
    304                  0034     rsv_priority_0                equ 52 ; in>>
    305                  0035     rsv_priority_prev_obj_0       equ 53 ; an>>
    306                  0037     rsv_priority_next_obj_0       equ 55 ; an>>
    307                  0039     rsv_prev_mapping_frame_0      equ 57 ; an>>
    308                  003B     rsv_bgdata_0                  equ 59 ; an>>
    309                  003D     rsv_prev_x_pixel_0            equ 61 ; pr>>
    310                  003E     rsv_prev_y_pixel_0            equ 62 ; pr>>
    311                  003F     rsv_prev_x2_pixel_0           equ 63 ; pr>>
    312                  0040     rsv_prev_y2_pixel_0           equ 64 ; pr>>
    313                  0041     rsv_onscreen_0                equ 65 ; ha>>
    314
    315                  0042     rsv_buffer_1                  equ 66 ; St>>
    316                  0042     rsv_priority_1                equ 66 ; in>>
    317                  0043     rsv_priority_prev_obj_1       equ 67 ; an>>
    318                  0045     rsv_priority_next_obj_1       equ 69 ; an>>
    319                  0047     rsv_prev_mapping_frame_1      equ 71 ; an>>
    320                  0049     rsv_bgdata_1                  equ 73 ; an>>
    321                  004B     rsv_prev_x_pixel_1            equ 75 ; pr>>
    322                  004C     rsv_prev_y_pixel_1            equ 76 ; pr>>
    323                  004D     rsv_prev_x2_pixel_1           equ 77 ; pr>>
    324                  004E     rsv_prev_y2_pixel_1           equ 78 ; pr>>
    325                  004F     rsv_onscreen_1                equ 79 ; ha>>
    326
    327                  0000     buf_priority                  equ 0  ; of>>
    328                  0001     buf_priority_prev_obj         equ 1  ;
    329                  0003     buf_priority_next_obj         equ 3  ;
    330                  0005     buf_prev_mapping_frame        equ 5  ;
    331                  0007     buf_bgdata                    equ 7  ;
    332                  0009     buf_prev_x_pixel              equ 9  ;
    333                  000A     buf_prev_y_pixel              equ 10 ;
    334                  000B     buf_prev_x2_pixel             equ 11 ;
    335                  000C     buf_prev_y2_pixel             equ 12 ;
    336                  000D     buf_onscreen                  equ 13 ;
    337
     10        6100                       org   $6100
     11                  00               setdp $00
     12
     13                           *****************************************>>
     14                           * Main Loop
     15                           *****************************************>>
     16        6100               LevelMainLoop
     17  8     6100 BD   7AF7             jsr   WaitVBL
     18  8     6103 BD   7B9E             jsr   UpdatePalette
     19  8     6106 BD   7BC9             jsr   ReadJoypads
     20  8     6109 BD   7BE1             jsr   RunObjects
     21  8     610C BD   7DD1             jsr   CheckSpritesRefresh
     22  8     610F BD   7FCF             jsr   EraseSprites
     23  8     6112 BD   81C2             jsr   UnsetDisplayPriority
     24  8     6115 BD   82A5             jsr   DrawSprites
     25  3     6118 20   E6               bra   LevelMainLoop
     26
     27                           * =======================================>>
     28                           * Global Data
     29                           *
     30                           * Naming convention
     31                           * -----------------
     32                           * - underscore-separated names
     33                           * - first letter of each word in upper ca>>
     34                           *
     35                           * Templates
     36                           * ---------
     37                           * - Glb_*        : global variable
     38                           * - Tbl_*        : data table
     39                           * - Lst_*        : list is a data table w>>
     40                           * - Obj_*        : address of an object i>>
     41                           *
     42                           * - *_Object_RAM : sub group of objects
     43                           * - *_end        : data end label
     44                           *
     45                           * =======================================>>
     46
     47                           * --------------------------------------->>
     48                           * Display
     49                           * --------------------------------------->>
     50                            
     51        611A 00            Glb_Cur_Wrk_Screen_Id         fcb   $00  >>
     52        611B 00            Glb_Cur_Wrk_Screen_Id_x2      fcb   $00  >>
     53        611C 0000          Glb_Camera_X_Pos              fdb   $0000>>
     54        611E 0000          Glb_Camera_Y_Pos              fdb   $0000>>
     55        6120 0000          Glb_Sprite_Screen_Pos_PartA   fdb   $0000>>
     56        6122 0000          Glb_Sprite_Screen_Pos_PartB   fdb   $0000>>
     57
     58                           * --------------------------------------->>
     59                           * Background Backup Cells - BBC
     60                           * --------------------------------------->>
     61
     62                           * ----- Cells variables
     63                  0000     nb_cells                      equ   0
     64                  0001     cell_start                    equ   1
     65                  0003     cell_end                      equ   3
     66                  0005     next_entry                    equ   5
     67                  0007     entry_size                    equ   7
     68
     69                  0082     nb_free_cells                 equ   130
     70                  0040     cell_size                     equ   64   >>
     71                  6000     cell_start_adr                equ   $6000>>
     72
     73        6124 0000          Lst_FreeCellFirstEntry_0      fdb   $0000>>
     74        6126               Lst_FreeCell_0                rmb   entry>>
     75
     76        62ED 0000          Lst_FreeCellFirstEntry_1      fdb   $0000>>
     77        62EF               Lst_FreeCell_1                rmb   entry>>
     78
     79                           * --------------------------------------->>
     80                           * Display Priority Structure - DPS
     81                           * --------------------------------------->>
     82
     83        64B6               DPS_buffer_0
     84        64B6               Tbl_Priority_First_Entry_0    rmb   2+(nb>>
     85        64C8               Tbl_Priority_Last_Entry_0     rmb   2+(nb>>
     86        64DA 64DC          Lst_Priority_Unset_0          fdb   Lst_P>>
     87        64DC                                             rmb   (nb_o>>
     88        6556               DPS_buffer_1
     89        6556               Tbl_Priority_First_Entry_1    rmb   2+(nb>>
     90        6568               Tbl_Priority_Last_Entry_1     rmb   2+(nb>>
     91        657A 657C          Lst_Priority_Unset_1          fdb   Lst_P>>
     92        657C                                             rmb   (nb_o>>
     93                            
     94                  0000     buf_Tbl_Priority_First_Entry  equ   0
     95                  0012     buf_Tbl_Priority_Last_Entry   equ   Tbl_P>>
     96                  0024     buf_Lst_Priority_Unset        equ   Lst_P>>
     97
     98                           * --------------------------------------->>
     99                           * Sub Objects List - SOL
    100                           * --------------------------------------->>
    101
    102        65F6               Tbl_Sub_Object_Erase          rmb   nb_ob>>
    103        6670               Tbl_Sub_Object_Draw           rmb   nb_ob>>
    104
    105                           * --------------------------------------->>
    106                           * Object Status Table - OST
    107                           * --------------------------------------->>
    108                            
    109        66EA               Object_RAM *@globals
    110        66EA               Reserved_Object_RAM
    111        66EA               Obj_MainCharacter             rmb   objec>>
    112        673A               Obj_Sidekick                  rmb   objec>>
    113        678A               Reserved_Object_RAM_End
    114        678A               Dynamic_Object_RAM            rmb   nb_dy>>
    115        79FA               Dynamic_Object_RAM_End
    116        79FA               LevelOnly_Object_RAM
    117        79FA               Obj_TailsTails                rmb   objec>>
    118        7A4A               Obj_SonicDust                 rmb   objec>>
    119        7A9A               Obj_TailsDust                 rmb   objec>>
    120        7AEA               LevelOnly_Object_RAM_End
    121        7AEA               Object_RAM_End
    122
    123                           * --------------------------------------->>
    124                           * Lifecycle
    125                           * --------------------------------------->>
    126
    127        7AEA               Glb_MainCharacter_Is_Dead     rmb   $1,0
    128
    129                           * --------------------------------------->>
    130                           * Get Orientation To Player
    131                           * --------------------------------------->>
    132
    133        7AEB               Glb_Closest_Player            rmb   $2,0 >>
    134        7AED               Glb_Player_Is_Left            rmb   $1,0 >>
    135        7AEE               Glb_Player_Is_Above           rmb   $1,0 >>
    136        7AEF               Glb_Player_H_Distance         rmb   $2,0 >>
    137        7AF1               Glb_Player_V_Distance         rmb   $2,0 >>
    138        7AF3               Glb_Abs_H_Distance_Mainc      rmb   $2,0 >>
    139        7AF5               Glb_H_Distance_Sidek          rmb   $2,0 >>
    140
    141                           * =======================================>>
    142                           * Routines
    143                           * =======================================>>
    338                                   INCLUD WAITVBL
    339                           *****************************************>>
    340                           * Attente VBL
    341                           * Alternance de la page 2 et 3 entre affi>>
    342                           * Alternance de la RAMA et RAM B dans l'e>>
    343                           * --------------------------------------->>
    344                           *
    345                           * Page Affichee par l'automate Video
    346                           * ----------------------------------
    347                           *   $E7DD determine la page affichee a l'>>
    348                           *   bit7=0 bit6=0 bit5=0 bit4=0 (#$0_) : >>
    349                           *   bit7=0 bit6=1 bit5=0 bit4=0 (#$4_) : >>
    350                           *   bit7=1 bit6=0 bit5=0 bit4=0 (#$8_) : >>
    351                           *   bit7=1 bit6=1 bit5=0 bit4=0 (#$C_) : >>
    352                           *   bit3 bit2 bit1 bit0  (#$_0 a #$_F) : >>
    353                           *   Remarque : bit5 et bit4 utilisable un>>
    354                           *
    355                           * Page en espace cartouche (ecriture dans>>
    356                           * --------------------------------------->>
    357                           *   $E7E6 determine la page visible dans >>
    358                           *   bit7 toujours a 0
    359                           *   bit6=1 : ecriture autorisee
    360                           *   bit5=1 : espace cartouche recouvert p>>
    361                           *   bit4=0 : CAS1N valide : banques 0-15 >>
    362                           *   bit5=1 bit4=0 bit3=0 bit2=0 bit1=0 bi>>
    363                           *   ...
    364                           *   bit5=1 bit4=0 bit3=1 bit2=1 bit1=1 bi>>
    365                           *   bit5=1 bit4=1 bit3=0 bit2=0 bit1=0 bi>>
    366                           *   ...
    367                           *   bit5=1 bit4=1 bit3=1 bit2=1 bit1=1 bi>>
    368                           *
    369                           * Demi-Page 0 en espace ecran (4000 a 5FF>>
    370                           * --------------------------------------->>
    371                           *   $E7C3 determine la demi-page de la pa>>
    372                           *   bit0=0 : 8Ko RAMA
    373                           *   bit0=1 : 8ko RAMB
    374                           *
    375                           *****************************************>>
    376        7AF7               WaitVBL
    377  7     7AF7 7D   E7E7             tst   $E7E7              * le fai>>
    378  3     7AFA 2A   FB               bpl   WaitVBL            * tant q>>
    379        7AFC               WaitVBL_01
    380  7     7AFC 7D   E7E7             tst   $E7E7              * le fai>>
    381  3     7AFF 2B   FB               bmi   WaitVBL_01         * tant q>>
    382                            
    383  6     7B01 FC   7B3B             ldd   Vint_runcount
    384  4     7B04 C3   0001             addd  #1
    385  6     7B07 FD   7B3B             std   Vint_runcount
    386                            
    387  5     7B0A B6   611A             lda   Glb_Cur_Wrk_Screen_Id
    388  4     7B0D 9A   01               ora   1
    389  5     7B0F B7   611A             sta   Glb_Cur_Wrk_Screen_Id
    390  2     7B12 48                    lsla
    391  5     7B13 B7   611B             sta   Glb_Cur_Wrk_Screen_Id_x2
    392                            
    393        7B16               SwapVideoPage
    394  5     7B16 F6   7B24             ldb   am_SwapVideoPage+1 * charge>>
    395  2     7B19 C4   40               andb  #$40               * altern>>
    396  2     7B1B CA   80               orb   #$80               * bit7=1>>
    397  5     7B1D F7   E7DD             stb   $E7DD              * change>>
    398  7     7B20 73   7B24             com   am_SwapVideoPage+1 * altern>>
    399        7B23               am_SwapVideoPage
    400  2     7B23 C6   00               ldb   #$00
    401  2     7B25 C4   01               andb  #$01               * altern>>
    402  2     7B27 CA   62               orb   #$62               * bit6=1>>
    403  5     7B29 F7   E7E6             stb   $E7E6              * change>>
    404  5     7B2C F6   E7C3             ldb   $E7C3              * charge>>
    405  2     7B2F C4   01               andb  #$01
    406  3     7B31 26   04               bne   SwapVideoPage_01   * si bit>>
    407  7     7B33 7C   E7C3             inc   $E7C3              * bit0=1>>
    408  5     7B36 39                    rts
    409        7B37               SwapVideoPage_01
    410  7     7B37 7A   E7C3             dec   $E7C3              * bit0=0>>
    411  5     7B3A 39                    rts
    412                            
    413        7B3B               Vint_runcount rmb   $2,0 *@globals
    414
    415                                   INCLUD UPDTPAL
    416                           *****************************************>>
    417                           * Mise a jour de la palette
    418                           *****************************************>>
    419                           * TODO ajout systeme de refresh pour ne p>>
    420                           * ou integrer le refresh palette en debut>>
    421                           * palette doit etre refresh avant le trac>>
    422
    423        7B3D 00            cpt            fcb   $00
    424                  7B3E     Ptr_palette    equ   Normal_palette
    425        7B3E               Normal_palette rmb   $20,0   *@globals
    426        7B5E               Black_palette  rmb   $20,0   *@globals
    427        7B7E               White_palette  rmb   $20,$FF *@globals
    428
    429        7B9E               UpdatePalette
    430  6+3   7B9E 10AE 9F 0000         ldy   [Ptr_palette]
    431  5+3   7BA3 AE   9F 0000         ldx   [Ptr_palette]
    432  4+1   7BA7 30   88 20           leax  $20,x
    433  7     7BAA 7F   7B3D            clr   cpt                      * r>>
    434        7BAD               SetColor
    435  5     7BAD B6   7B3D             lda   cpt                        >>
    436  2     7BB0 48                   asla                              >>
    437  5     7BB1 B7   E7DB            sta   $E7DB                       >>
    438  5+3   7BB4 EC   A1              ldd   ,y++                        >>
    439  5     7BB6 F7   E7DA            stb   $E7DA                       >>
    440  5     7BB9 B7   E7DA            sta   $E7DA                    * s>>
    441  7     7BBC 7C   7B3D            inc   cpt                         >>
    442  7+0   7BBF 10AC 84              cmpy  ,x                       * t>>
    443  3     7BC2 26   E9              bne   SetColor                 * o>>
    444  5     7BC4 39                    rts
    445
    446
    447                                   INCLUD READJPDS
    448                           * --------------------------------------->>
    449                           * Controller Buttons
    450                           *
    451                  0001     c1_button_up_mask            equ   $01 *@>>
    452                  0002     c1_button_down_mask          equ   $02 *@>>
    453                  0004     c1_button_left_mask          equ   $04 *@>>
    454                  0008     c1_button_right_mask         equ   $08 *@>>
    455                  0010     c2_button_up_mask            equ   $10 *@>>
    456                  0020     c2_button_down_mask          equ   $20 *@>>
    457                  0040     c2_button_left_mask          equ   $40 *@>>
    458                  0080     c2_button_right_mask         equ   $80 *@>>
    459                  0040     c1_button_A_mask             equ   $40 *@>>
    460                  0080     c2_button_A_mask             equ   $80 *@>>
    461
    462        7BC5               Joypads
    463        7BC5               Joypads_Held
    464        7BC5 00            Dpad_Held                    fcb   $00
    465        7BC6 00            Fire_Held                    fcb   $00
    466        7BC7               Joypads_Press
    467        7BC7 00            Dpad_Press                   fcb   $00
    468        7BC8 00            Fire_Press                   fcb   $00
    469
    470                           *****************************************>>
    471                           * Get joystick parameters
    472                           *
    473                           * Direction des Joypads
    474                           * ---------------------
    475                           * Registre: $E7CC (8bits)
    476                           *
    477                           * Joypad2     Joypad1
    478                           * 1111        1111 (0: appuye | 1: relach>>
    479                           * ||||_Haut   ||||_Haut
    480                           * |||__Bas    |||__Bas
    481                           * ||___Gauche ||___Gauche
    482                           * |____Droite |____Droite
    483                           *
    484                           * Boutons des Joypads
    485                           * -------------------
    486                           * Registre: $E7CD (8bits)
    487                           *
    488                           * 11 000000 (0: appuye | 1: relache)
    489                           * ||[------] 6 bits convertisseur numeriq>>
    490                           * ||_Fire Joypad1
    491                           * |__Fire Joypad2
    492                           *
    493                           * Variables globales: Joypads_Held, Joypa>>
    494                           * --------------------------------------->>
    495                           * (16 bits)
    496                           * Joypad2     Joypad1
    497                           * 0000        0000 (0: relache | 1: appuy>>
    498                           * ||||_Haut   ||||_Haut                  >>
    499                           * |||__Bas    |||__Bas                   >>
    500                           * ||___Gauche ||___Gauche                >>
    501                           * |____Droite |____Droite
    502                           *
    503                           *****************************************>>
    504                            
    505                                                                  *;>>
    506                                                                  *;>>
    507                                                                  *;>>
    508                                                                  *;>>
    509                                                                  *
    510                                                                  *;>>
    511        7BC9               ReadJoypads                            *R>>
    512                                                                  * >>
    513                                                                  * >>
    514                                                                  * >>
    515                                                                  * >>
    516                                                                  *
    517                                                                  *;>>
    518                                                                  *J>>
    519                                                                  * >>
    520                                                                  * >>
    521                                                                  * >>
    522                                                                  * >>
    523                                                                  * >>
    524                                                                  * >>
    525                                                                  * >>
    526                                                                  * >>
    527                                                                  * >>
    528                                                                  * >>
    529                                                                  * >>
    530  3     7BC9 CC   E7CC             ldd   #$E7CC                   * >>
    531  2     7BCC 43                    coma                           * >>
    532  2     7BCD 53                    comb
    533                                                                  * >>
    534                                                                  * >>
    535                                                                  * >>
    536  6     7BCE FD   7BC5             std   Joypads_Held
    537  5     7BD1 B8   7BC5             eora  Dpad_Held
    538  5     7BD4 F8   7BC6             eorb  Fire_Held
    539  5     7BD7 B4   7BC5             anda  Dpad_Held                * >>
    540  5     7BDA F4   7BC6             andb  Fire_Held
    541  6     7BDD FD   7BC7             std   Joypads_Press            * >>
    542  5     7BE0 39                    rts                            * >>
    543                                                                  *;>>
    544
    545
    546                                   INCLUD RUNOBJTS
    547                           * --------------------------------------->>
    548                           * This runs the code of all the objects t>>
    549                           *
    550                           * ecart par rapport au code d'origine :
    551                           * Il n'y a pas de tableau de pointeur Obj>>
    552                           * du code de l'objet
    553                           * --------------------------------------->>
    554
    555                                                                  *;>>
    556                                                                  *;>>
    557                                                                  *;>>
    558                                                                  *
    559                                                                  *;>>
    560                                                                  *
    561                                                                  *;>>
    562        7BE1               RunObjects                             *R>>
    563                                                                  * >>
    564                                                                  * >>
    565  4     7BE1 108E 66EA             ldy   #Object_RAM              * >>
    566                                                                  *
    567                                                                  * >>
    568                                                                  * >>
    569                                                                  * >>
    570                                                                  * >>
    571                                                                  * >>
    572                                                                  * >>
    573        7BE5               RunObjects_01                          *+>>
    574                                                                  * >>
    575                                                                  * >>
    576                                                                  * >>
    577                                                                  *
    578                                                                  * >>
    579  7     7BE5 7D   7AEA             tst   Glb_MainCharacter_Is_Dead
    580  3     7BE8 27   10               beq   RunObjectsWhenPlayerIsDead
    581                                                                  * >>
    582                                                                  * >>
    583                                                                  *;>>
    584                                                                  *
    585                                                                  *;>>
    586                                                                  *;>>
    587                                                                  *;>>
    588                                                                  *
    589                                                                  *;>>
    590                                                                  *
    591                                                                  *;>>
    592        7BEA               RunObject                              *R>>
    593  5+0   7BEA EE   A4               ldu   ,y                       * >>
    594  3     7BEC 27   02               beq   RunNextObject            * >>
    595                                                                  *
    596                                                                  * >>
    597                                                                  * >>
    598                                                                  * >>
    599  7+0   7BEE AD   C4               jsr   ,u                       * >>
    600                                                                  * >>
    601                                                                  *
    602                                                                  *;>>
    603        7BF0               RunNextObject                          *R>>
    604  4+1   7BF0 31   A8 50            leay  next_object,y            * >>
    605        7BF3               am_RunNextObject
    606  5     7BF3 108C 7AEA             cmpy  #Object_RAM_End          * >>
    607  3     7BF7 26   F1               bne   RunObject                *;>>
    608        7BF9               RunObjects_End                         *R>>
    609  5     7BF9 39                    rts                            * >>
    610                                                                  *
    611                                                                  *;>>
    612                                                                  *;>>
    613                                                                  *;>>
    614        7BFA               RunObjectsWhenPlayerIsDead             *R>>
    615                                                                  * >>
    616                                                                  * >>
    617  4     7BFA 108E 66EA             ldy   #Reserved_Object_RAM
    618  3     7BFE 8E   678A             ldx   #Reserved_Object_RAM_End
    619  6     7C01 BF   7BF5             stx   am_RunNextObject+2
    620  7     7C04 8D   E4               bsr   RunObject
    621                                                                  * >>
    622                                                                  * >>
    623  4     7C06 108E 678A             ldy   #Dynamic_Object_RAM
    624  7     7C0A 8D   12               bsr   RunObjectDisplayOnly
    625                                                                  * >>
    626                                                                  * >>
    627  4     7C0C 108E 79FA             ldy   #LevelOnly_Object_RAM
    628  3     7C10 8E   7AEA             ldx   #LevelOnly_Object_RAM_End
    629  6     7C13 BF   7BF5             stx   am_RunNextObject+2
    630  3     7C16 20   D2               bra   RunObject
    631                                                                  *
    632  3     7C18 8E   7AEA             ldx   #Object_RAM_End          * >>
    633  6     7C1B BF   7BF5             stx   am_RunNextObject+2
    634                                                                  *;>>
    635                                                                  *
    636                                                                  *;>>
    637        7C1E               RunObjectDisplayOnly                   *R>>
    638                                                                  * >>
    639  5+0   7C1E EE   A4               ldu   ,y                       * >>
    640  3     7C20 27   06               beq   RunNextObjectDisplayOnly * >>
    641  6+1   7C22 6D   22               tst   render_flags,y           * >>
    642  3     7C24 2A   02               bpl   RunNextObjectDisplayOnly * >>
    643  7     7C26 8D   12               bsr   DisplaySprite            * >>
    644        7C28               RunNextObjectDisplayOnly               *+>>
    645  4+1   7C28 31   A8 50            leay  next_object,y            * >>
    646  5     7C2B 108C 79FA             cmpy  #Dynamic_Object_RAM_End  * >>
    647  3     7C2F 26   ED               bne   RunObjectDisplayOnly
    648  5     7C31 39                    rts                            * >>
    649                                                                  *;>>
    650                                                                  *
    651                                                                  *;>>
    652
    653                                   INCLUD MRKOBJGN
    654                           * --------------------------------------->>
    655                           * MarkObjGone
    656                           * -----------
    657                           * Subroutine to destroy an object that is>>
    658                           * -- TODO --
    659                           * waiting for camera implementation
    660                           *
    661                           * input REG : none
    662                           * clear REG : none
    663                           * --------------------------------------->>
    664
    665                                                                  *;>>
    666                                                                  *;>>
    667                                                                  *;>>
    668                                                                  *
    669                                                                  *;>>
    670                                                                  *;>>
    671                                                                  *;>>
    672        7C32               MarkObjGone *@globals                  *M>>
    673                                                                  * >>
    674                                                                  * >>
    675  3     7C32 20   06               bra   DisplaySprite            * >>
    676                                                                  *+>>
    677                                                                  * >>
    678                                                                  * >>
    679                                                                  * >>
    680                                                                  * >>
    681                                                                  * >>
    682                                                                  * >>
    683                                                                  *
    684                                                                  *+>>
    685                                                                  * >>
    686                                                                  * >>
    687                                                                  * >>
    688                                                                  * >>
    689                                                                  *+>>
    690                                                                  * >>
    691
    692                                   INCLUD DISPLSPR
    693                           * --------------------------------------->>
    694                           * DisplaySprite
    695                           * -------------
    696                           * Subroutine to manage sprite priority.
    697                           * Object's priority is read and object is>>
    698                           * priority: 0 - unregistred
    699                           * priority: 1 - register non moving overl>>
    700                           * priority; 2-8 - register moving sprite >>
    701                           *
    702                           * Unlike original S2 code, sprite priorit>>
    703                           * it allows to keep an exact sprite order>>
    704                           *
    705                           * DisplaySprite
    706                           * input REG : [u] object pointer (OST)
    707                           *
    708                           * DisplaySprite_x
    709                           * input REG : [x] object pointer (OST)
    710                           * --------------------------------------->>
    711                            
    712        7C34               DisplaySprite_x *@globals
    713  5+6   7C34 34   56               pshs  d,x,u
    714  6     7C36 1F   13               tfr   x,u
    715  3     7C38 20   02               bra   DSP_Start
    716                            
    717        7C3A               DisplaySprite *@globals
    718  5+6   7C3A 34   56               pshs  d,x,u
    719                            
    720        7C3C               DSP_Start
    721  5     7C3C B6   611A             lda   Glb_Cur_Wrk_Screen_Id      >>
    722  3     7C3F 26   09               bne   DSP_SetBuffer1
    723                            
    724        7C41               DSP_SetBuffer0
    725  4+1   7C41 30   C8 34            leax  rsv_buffer_0,u             >>
    726  7     7C44 10BE 64B6             ldy   DPS_buffer_0               >>
    727  3     7C48 20   07               bra   DSP_BufferPositionned
    728                            
    729        7C4A               DSP_SetBuffer1
    730  4+1   7C4A 30   C8 42            leax  rsv_buffer_1,u             >>
    731  7     7C4D 10BE 6556             ldy   DPS_buffer_1               >>
    732                            
    733        7C51               DSP_BufferPositionned
    734  4+1   7C51 A6   43               lda   priority,u                 >>
    735  4+1   7C53 A1   00               cmpa  buf_priority,x
    736  3     7C55 27   46               beq   DSP_rts                    >>
    737  4+1   7C57 E6   00               ldb   buf_priority,x
    738  3     7C59 26   31               bne   DSP_ChangePriority
    739                            
    740        7C5B               DSP_InitPriority
    741  4+1   7C5B A7   00               sta   buf_priority,x             >>
    742                            
    743        7C5D               DSP_CheckLastEntry
    744  4+1   7C5D 31   A8 12            leay  buf_Tbl_Priority_Last_Entry>>
    745  6+1   7C60 6D   A6               tst   a,y                        >>
    746  3     7C62 26   0F               bne   DSP_addToExistingNode      >>
    747                            
    748        7C64               DSP_addFirstNode
    749  5+1   7C64 EF   A6               stu   a,y                        >>
    750  4+1   7C66 31   A8 EE            leay  buf_Tbl_Priority_First_Entr>>
    751  5+1   7C69 EF   A6               stu   a,y                        >>
    752  5     7C6B DC   00               ldd   0
    753  5+1   7C6D ED   01               std   buf_priority_prev_obj,x    >>
    754  5+1   7C6F ED   03               std   buf_priority_next_obj,x
    755  3     7C71 20   2A               bra   DSP_rts
    756                            
    757        7C73               DSP_addToExistingNode
    758  5+4   7C73 AE   B6               ldx   [a,y]                      >>
    759  5     7C75 F6   611A             ldb   Glb_Cur_Wrk_Screen_Id
    760  3     7C78 26   05               bne   DSP_LinkBuffer1
    761  5+1   7C7A EF   88 37            stu   rsv_priority_next_obj_0,x  >>
    762  3     7C7D 20   03               bra   DSP_LinkCurWithPrev
    763        7C7F               DSP_LinkBuffer1
    764  5+1   7C7F EF   88 45            stu   rsv_priority_next_obj_1,x  >>
    765                            
    766        7C82               DSP_LinkCurWithPrev
    767  5+1   7C82 AF   41               stx   buf_priority_prev_obj,u    >>
    768  5+1   7C84 EF   A6               stu   a,y                        >>
    769  5     7C86 DC   00               ldd   0
    770  5+1   7C88 ED   03               std   buf_priority_next_obj,x    >>
    771  3     7C8A 20   11               bra   DSP_rts
    772                            
    773        7C8C               DSP_ChangePriority
    774  4+1   7C8C 31   A8 24            leay  buf_Lst_Priority_Unset,y
    775  5+3   7C8F EF   B4               stu   [,y]                       >>
    776  4+1   7C91 31   22               leay  2,y
    777  6+0   7C93 10AF A4               sty   ,y                         >>
    778  4+1   7C96 31   A8 DA            leay  -buf_Lst_Priority_Unset-2,y>>
    779  4     7C99 91   00               cmpa  0
    780  3     7C9B 26   C0               bne   DSP_CheckLastEntry         >>
    781
    782        7C9D               DSP_rts
    783  5+8   7C9D 35   D6               puls  d,x,u,pc
    784                            
    785                                                                  *;>>
    786                                                                  *;>>
    787                                                                  *;>>
    788                                                                  *
    789                                                                  *;>>
    790                                                                  *
    791                                                                  *;>>
    792                                                                  *D>>
    793                                                                  * >>
    794                                                                  * >>
    795                                                                  * >>
    796                                                                  * >>
    797                                                                  * >>
    798                            
    799                                                                  * >>
    800                                                                  * >>
    801                                                                  * >>
    802                            
    803                                                                  * >>
    804                                                                  * >>
    805                                                                  *
    806                                                                  *r>>
    807                            
    808                                                                  * >>
    809                                                                  *;>>
    810
    811                                   INCLUD ANIMSPR
    812                           * --------------------------------------->>
    813                           * Subroutine to animate a sprite using an>>
    814                           *
    815                           *   this function also change render flag>>
    816                           *   the status byte;
    817                           *
    818                           * input REG : [u] pointeur sur l'objet
    819                           *
    820                           * --------------------------------------->>
    821
    822                  00FF     resetAnim              equ $FF
    823                  00FE     goBackNFrames          equ $FE ; followed>>
    824                  00FD     goToAnimation          equ $FD ; followed>>
    825                  00FC     nextRoutine            equ $FC
    826                  00FB     resetAnimAndSubRoutine equ $FB
    827                  00FA     nextSubRoutine         equ $FA
    828
    829                                                                    >>
    830                                                                    >>
    831                                                                    >>
    832                                                                    >>
    833                                                                    >>
    834                                                                    >>
    835                                                                    >>
    836        7C9F               AnimateSprite                            >>
    837                                                                    >>
    838  5+1   7C9F AE   44               ldx   anim,u                     >>
    839  6+1   7CA1 AC   46               cmpx  prev_anim,u                >>
    840  3     7CA3 27   08               beq   Anim_Run                   >>
    841  5+1   7CA5 AF   46               stx   prev_anim,u                >>
    842  2     7CA7 C6   00                     ldb   #0
    843  4+1   7CA9 E7   48               stb   anim_frame,u               >>
    844  4+1   7CAB E7   49               stb   anim_frame_duration,u      >>
    845                                                                    >>
    846        7CAD               Anim_Run                                 >>
    847  6+1   7CAD 6A   49               dec   anim_frame_duration,u      >>
    848  3     7CAF 2A   24               bpl   Anim_Wait                  >>
    849                                   * no offset table                >>
    850                                   * anim is the address of anim    >>
    851  4+0   7CB1 E6   84               ldb   ,x
    852  4+1   7CB3 E7   49                     stb   anim_frame_duration,u>>
    853                                                                    >>
    854  4+1   7CB5 E6   48               ldb   anim_frame,u               >>
    855  2     7CB7 5C                    incb
    856  2     7CB8 58                    aslb
    857  4+1   7CB9 31   85               leay  b,x
    858  5+0   7CBB EC   A4               ldd   ,y                         >>
    859                                   * bmi   Anim_End_FF              >>
    860  2     7CBD 81   FA                     cmpa  #$FA                 >>
    861  3     7CBF 24   15                     bhs   Anim_End_FF          >>
    862                                                                    >>
    863        7CC1               Anim_Next                                >>
    864                                      * ne pas utiliser             >>
    865  5+1   7CC1 ED   4A               std   mapping_frame,u            >>
    866  4+1   7CC3 E6   C8 1A            ldb   status,u                   >>
    867  2     7CC6 C4   03               andb  #status_x_orientation+statu>>
    868  5     7CC8 F7   7CD0             stb   Anim_dyn+1
    869                                                                    >>
    870  4+1   7CCB A6   42               lda   render_flags,u             >>
    871  2     7CCD 84   FC               anda  #:(render_xmirror_mask+rend>>
    872        7CCF               Anim_dyn
    873  2     7CCF 8A   00               ora   #$00                       >>
    874                                                                    >>
    875  4+1   7CD1 A7   42               sta   render_flags,u
    876  6+1   7CD3 6C   48               inc   anim_frame,u               >>
    877                                                                    >>
    878        7CD5               Anim_Wait                                >>
    879  5     7CD5 39                    rts                              >>
    880                                                                    >>
    881                                                                    >>
    882        7CD6               Anim_End_FF                              >>
    883  2     7CD6 4C                    inca                             >>
    884  3     7CD7 26   08               bne   Anim_End_FE                >>
    885  2     7CD9 C6   00                     ldb   #0
    886  4+1   7CDB E7   48               stb   anim_frame,u               >>
    887  5+1   7CDD EC   01               ldd   1,x                        >>
    888  3     7CDF 20   E0               bra   Anim_Next                  >>
    889                                                                    >>
    890                                                                    >>
    891        7CE1               Anim_End_FE                              >>
    892  2     7CE1 4C                    inca                             >>
    893  3     7CE2 26   0E               bne   Anim_End_FD                >>
    894  4+1   7CE4 A6   48               lda   anim_frame,u
    895  5     7CE6 F7   7CEA             stb   Anim_End_FE_dyn+1          >>
    896        7CE9               Anim_End_FE_dyn
    897  2     7CE9 80   00               suba  #$00                       >>
    898  4+1   7CEB A7   48               sta   anim_frame,u               >>
    899                                                                    >>
    900  2     7CED 48                    asla
    901  5+1   7CEE EC   86               ldd   a,x                        >>
    902  3     7CF0 20   CF               bra   Anim_Next                  >>
    903                                                                    >>
    904                                                                    >>
    905        7CF2               Anim_End_FD                              >>
    906  2     7CF2 4C                    inca                             >>
    907  3     7CF3 26   05               bne   Anim_End_FC                >>
    908  5+1   7CF5 EC   21               ldd   1,y                        >>
    909  5+1   7CF7 ED   44               std   anim,u                     >>
    910  5     7CF9 39                    rts                              >>
    911                                                                    >>
    912                                                                    >>
    913        7CFA               Anim_End_FC                              >>
    914  2     7CFA 4C                    inca                             >>
    915  3     7CFB 26   0D               bne   Anim_End_FB                >>
    916  6+1   7CFD 6C   C8 18            inc   routine,u
    917  6+1   7D00 6C   C8 18            inc   routine,u                  >>
    918  2     7D03 86   00               lda   #0
    919  4+1   7D05 A7   49               sta   anim_frame_duration,u      >>
    920  6+1   7D07 6C   48               inc   anim_frame,u               >>
    921  5     7D09 39                    rts                              >>
    922                                                                    >>
    923                                                                    >>
    924        7D0A               Anim_End_FB                              >>
    925  2     7D0A 4C                    inca                             >>
    926  3     7D0B 26   08               bne   Anim_End_FA                >>
    927  2     7D0D 86   00               lda   #0
    928  4+1   7D0F A7   48               sta   anim_frame,u               >>
    929  4+1   7D11 A7   C8 19            sta   routine_secondary,u        >>
    930  5     7D14 39                    rts                              >>
    931                                                                    >>
    932                                                                    >>
    933        7D15               Anim_End_FA                              >>
    934  2     7D15 4C                    inca                             >>
    935  3     7D16 26   06               bne   Anim_End                   >>
    936  6+1   7D18 6C   C8 19            inc   routine_secondary,u        >>
    937  6+1   7D1B 6C   C8 19            inc   routine_secondary,u
    938        7D1E               Anim_End
    939  5     7D1E 39                    rts                              >>
    940                                                                    >>
    941                                                                    >>
    942                                                                    >>
    943                                                                    >>
    944                                                                    >>
    945                                                                    >>
    946                                                                    >>
    947                                                                    >>
    948                                                                    >>
    949                                                                    >>
    950
    951                                   INCLUD OBJMOVE
    952                           * --------------------------------------->>
    953                           * Subroutine translating object speed to >>
    954                           * This moves the object horizontally and >>
    955                           * but does not apply gravity to it
    956                           * --------------------------------------->>
    957
    958                                                                  *;>>
    959                                                                  *;>>
    960                                                                  *;>>
    961                                                                  *;>>
    962                                                                  *;>>
    963                                                                  *
    964                                                                  *;>>
    965                                                                  *
    966                                                                  *;>>
    967        7D1F               ObjectMove                             *O>>
    968                                                                  * >>
    969                                                                  * >>
    970                                                                  * >>
    971                                                                  * >>
    972                                                                  * >>
    973                                                                  * >>
    974  4+1   7D1F E6   C8 14            ldb   x_vel,u
    975  2     7D22 1D                    sex                            ; >>
    976  5     7D23 B7   7D30             sta   am_ObjectMove_01+1
    977  5+1   7D26 EC   C8 14            ldd   x_vel,u
    978  6+1   7D29 E3   4D               addd  x_pos+1,u                ; >>
    979  5+1   7D2B ED   4D               std   x_pos+1,u                ; >>
    980  4+1   7D2D A6   4C               lda   x_pos,u
    981        7D2F               am_ObjectMove_01
    982  2     7D2F 89   00               adca  #$00                     ; >>
    983  4+1   7D31 A7   4C               sta   x_pos,u                  ; >>
    984                            
    985                                                                  * >>
    986                                                                  * >>
    987                                                                  * >>
    988                                                                  * >>
    989                                                                  * >>
    990                                                                  * >>
    991  4+1   7D33 E6   C8 16            ldb   y_vel,u
    992  2     7D36 1D                    sex                            ; >>
    993  5     7D37 B7   7D46             sta   am_ObjectMove_02+1
    994  5+1   7D3A EC   C8 16            ldd   y_vel,u
    995  6+1   7D3D E3   C8 10            addd  y_pos+1,u                ; >>
    996  5+1   7D40 ED   C8 10            std   y_pos+1,u                ; >>
    997  4+1   7D43 A6   4F               lda   y_pos,u
    998        7D45               am_ObjectMove_02
    999  2     7D45 89   00               adca  #$00                     ; >>
   1000  4+1   7D47 A7   4F               sta   y_pos,u                  ; >>
   1001  5     7D49 39                    rts                            * >>
   1002                                                                  *;>>
   1003                                                                  *;>>
   1004
   1005                                   INCLUD OBJLOAD
   1006                           * --------------------------------------->>
   1007                           * Single object loading subroutine
   1008                           * Find an empty object array
   1009                           *
   1010                           * input  REG : [u] pointeur sur l'objet c>>
   1011                           * output REG : [x] pointeur sur l'objet l>>
   1012                           * --------------------------------------->>
   1013
   1014                                                                  *;>>
   1015                                                                  *;>>
   1016                                                                  *;>>
   1017                                                                  *;>>
   1018                                                                  *;>>
   1019                                                                  *
   1020                                                                  *;>>
   1021                                                                  *S>>
   1022                                                                  * >>
   1023                                                                  * >>
   1024                                                                  * >>
   1025                                                                  * >>
   1026                                                                  * >>
   1027                                                                  *
   1028                                                                  */>>
   1029                                                                  * >>
   1030                                                                  * >>
   1031                                                                  * >>
   1032                                                                  * >>
   1033                                                                  *
   1034                                                                  *r>>
   1035                                                                  * >>
   1036                                                                  *;>>
   1037                                                                  *;>>
   1038                                                                  *;>>
   1039                                                                  *;>>
   1040                                                                  *;>>
   1041                                                                  *
   1042                                                                  *;>>
   1043                                                                  *
   1044                                                                  *;>>
   1045        7D4A               SingleObjLoad2                         *S>>
   1046  6     7D4A 1F   31               tfr   u,x                      * >>
   1047  4+1   7D4C 30   88 50            leax  next_object,x            * >>
   1048  4     7D4F 8C   79FA             cmpx  #Dynamic_Object_RAM_End  * >>
   1049  3     7D52 27   0C               beq   SingleObjLoad2_02        * >>
   1050                                                                  * >>
   1051                                                                  * >>
   1052                                                                  * >>
   1053                                                                  * >>
   1054                                                                  * >>
   1055                                                                  * >>
   1056                                                                  * >>
   1057                                                                  * >>
   1058                                                                  *
   1059        7D54               SingleObjLoad2_01                      *->>
   1060  6+0   7D54 6D   84               tst   ,x                       * >>
   1061  3     7D56 27   08               beq   SingleObjLoad2_02        * >>
   1062  4+1   7D58 30   88 50            leax  next_object,x            * >>
   1063  4     7D5B 8C   79FA             cmpx  #Dynamic_Object_RAM_End
   1064  3     7D5E 26   F4               bne   SingleObjLoad2_01        * >>
   1065                                                                  *
   1066        7D60               SingleObjLoad2_02                      *r>>
   1067  5     7D60 39                    rts                            * >>
   1068                                                                  *
   1069                                                                  * >>
   1070                                                                  *+>>
   1071                                                                  *.>>
   1072                                                                  *.>>
   1073                                                                  *
   1074                                                                  * >>
   1075                                                                  * >>
   1076                                                                  * >>
   1077                                                                  * >>
   1078                                                                  * >>
   1079                                                                  * >>
   1080                                                                  *
   1081                                                                  *.>>
   1082                                                                  *.>>
   1083                                                                  * >>
   1084                                                                  * >>
   1085                                                                  * >>
   1086                                                                  *;>>
   1087                                                                  *;>>
   1088                                                                  *;>>
   1089                                                                  *;>>
   1090                                                                  *;>>
   1091                                                                  *
   1092                                                                  *;>>
   1093                                                                  *
   1094                                                                  *;>>
   1095                                                                  *S>>
   1096                                                                  * >>
   1097                                                                  * >>
   1098                                                                  *
   1099                                                                  *->>
   1100                                                                  * >>
   1101                                                                  * >>
   1102                                                                  * >>
   1103                                                                  * >>
   1104                                                                  *
   1105                                                                  *r>>
   1106                                                                  * >>
   1107                                                                  *;>>
   1108
   1109
   1110                                   INCLUD DELETOBJ
   1111                           * --------------------------------------->>
   1112                           * DeleteObject
   1113                           * ------------
   1114                           * Subroutine to delete an object.
   1115                           * If the object is rendered as a sprite i>>
   1116                           * routine
   1117                           *
   1118                           * DeleteObject
   1119                           * input REG : [u] object pointer (OST)
   1120                           *
   1121                           * DeleteObject_x
   1122                           * input REG : [x] object pointer (OST)
   1123                           * --------------------------------------->>
   1124
   1125                                                                  *;>>
   1126                                                                  *;>>
   1127                                                                  *;>>
   1128                                                                  *
   1129                                                                  *;>>
   1130                                                                  *
   1131                                                                  *;>>
   1132        7D61               DeleteObject_x *@globals               *D>>
   1133  5+6   7D61 34   56               pshs  d,x,u                    * >>
   1134  6     7D63 1F   13               tfr   x,u                      *;>>
   1135  3     7D65 20   02               bra   DOB_Start
   1136        7D67               DeleteObject *@globals                 *D>>
   1137  5+6   7D67 34   56               pshs  d,x,u
   1138        7D69               DOB_Start
   1139  4+1   7D69 A6   C8 41            lda   rsv_onscreen_0,u
   1140  3     7D6C 27   1B               beq   DOB_TestOnscreen1Delete  ; >>
   1141                            
   1142        7D6E               DOB_Unset0
   1143  6     7D6E BE   64DA             ldx   Lst_Priority_Unset_0     ; >>
   1144  5+0   7D71 EF   84               stu   ,x
   1145  4+1   7D73 30   02               leax  2,x
   1146  6     7D75 BF   64DA             stx   Lst_Priority_Unset_0
   1147                            
   1148        7D78               DOB_TestOnscreen1
   1149  4+1   7D78 A6   C8 4F            lda   rsv_onscreen_1,u
   1150  3     7D7B 27   16               beq   DOB_ToDeleteFlag         ; >>
   1151                            
   1152        7D7D               DOB_Unset1
   1153  6     7D7D BE   657A             ldx   Lst_Priority_Unset_1     ; >>
   1154  5+0   7D80 EF   84               stu   ,x
   1155  4+1   7D82 30   02               leax  2,x
   1156  6     7D84 BF   657A             stx   Lst_Priority_Unset_1
   1157  3     7D87 20   0A               bra  DOB_ToDeleteFlag
   1158                            
   1159        7D89               DOB_TestOnscreen1Delete
   1160  4+1   7D89 A6   C8 4F            lda   rsv_onscreen_1,u
   1161  3     7D8C 26   EF               bne   DOB_Unset1               ; >>
   1162
   1163  8     7D8E BD   7D9B             jsr   ClearObj                 ; >>
   1164  3     7D91 20   06               bra   DOB_rts
   1165                                                                  * >>
   1166                                                                  *
   1167                                                                  * >>
   1168                                                                  * >>
   1169                                                                  *->>
   1170                                                                  * >>
   1171                                                                  * >>
   1172                                                                  * >>
   1173                                                                  * >>
   1174                                                                  *
   1175        7D93               DOB_ToDeleteFlag
   1176  4+1   7D93 A6   42               lda   render_flags,u
   1177  4     7D95 9A   20               ora   render_todelete_mask
   1178  4+1   7D97 A7   42               sta   render_flags,u           ; >>
   1179                            
   1180        7D99               DOB_rts
   1181  5+8   7D99 35   D6               puls  d,x,u,pc                 * >>
   1182                                                                  *;>>
   1183
   1184                                   INCLUD CLEAROBJ
   1185                           * --------------------------------------->>
   1186                           * ClearObj
   1187                           * --------
   1188                           * Subroutine to clear an object data in O>>
   1189                           *
   1190                           * input REG : [u] pointer on objet (OST)
   1191                           * clear REG : [d,y]
   1192                           * --------------------------------------->>
   1193
   1194        7D9B               ClearObj *@globals
   1195  7     7D9B 10FF 7DC5             sts   CLO_1+2
   1196  6     7D9F BF   7DC9             stx   CLO_2+2
   1197  3     7DA2 CC   0000             ldd   #$0000
   1198  3     7DA5 8E   0000             ldx   #$0000
   1199  4+0   7DA8 31   84               leay  ,x
   1200  4+0   7DAA 32   84               leas  ,x
   1201  4+1   7DAC 33   C8 50            leau  object_size,u
   1202  5+8   7DAF 36   76               pshu  d,x,y,s
   1203  5+8   7DB1 36   76               pshu  d,x,y,s
   1204  5+8   7DB3 36   76               pshu  d,x,y,s
   1205  5+8   7DB5 36   76               pshu  d,x,y,s
   1206  5+8   7DB7 36   76               pshu  d,x,y,s
   1207  5+8   7DB9 36   76               pshu  d,x,y,s
   1208  5+8   7DBB 36   76               pshu  d,x,y,s
   1209  5+8   7DBD 36   76               pshu  d,x,y,s
   1210  5+8   7DBF 36   76               pshu  d,x,y,s
   1211  5+8   7DC1 36   76               pshu  d,x,y,s
   1212        7DC3               CLO_1
   1213  4     7DC3 10CE 0000             lds   #$0000
   1214        7DC7               CLO_2
   1215  3     7DC7 8E   0000             ldx   #$0000
   1216  5     7DCA 39                    rts
   1217
   1218                                   INCLUD CHECKSPR
   1219                           * --------------------------------------->>
   1220                           * CheckSpritesRefresh
   1221                           * -------------------
   1222                           * Subroutine to determine if sprites are >>
   1223                           * Read Display Priority Structure (back t>>
   1224                           * priority: 0 - unregistred
   1225                           * priority: 1 - register non moving overl>>
   1226                           * priority; 2-8 - register moving sprite >>
   1227                           *
   1228                           * input REG : none
   1229                           * --------------------------------------->>
   1230
   1231        7DCB 0000          cur_priority            fdb   $00
   1232        7DCD 0000          cur_ptr_sub_obj_erase   fdb   $0000
   1233        7DCF 0000          cur_ptr_sub_obj_draw    fdb   $0000
   1234                            
   1235        7DD1               CheckSpritesRefresh
   1236
   1237        7DD1               CSR_Start
   1238  3     7DD1 CC   65F6             ldd   #Tbl_Sub_Object_Erase
   1239  6     7DD4 FD   7DCD             std   cur_ptr_sub_obj_erase
   1240  3     7DD7 CC   6670             ldd   #Tbl_Sub_Object_Draw
   1241  6     7DDA FD   7DCF             std   cur_ptr_sub_obj_draw
   1242  5     7DDD B6   611A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1243  3     7DE0 26   60               bne   CSR_SetBuffer1
   1244                            
   1245        7DE2               CSR_SetBuffer0
   1246  4     7DE2 96   34               lda   rsv_buffer_0               >>
   1247  5     7DE4 B7   7EA4             sta   CSR_ProcessEachPriorityLeve>>
   1248        7DE7               CSR_P8B0
   1249  6     7DE7 FE   64C4             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1250  3     7DEA 27   08               beq   CSR_P7B0
   1251  2     7DEC 86   08               lda   #$08
   1252  5     7DEE B7   7DCB             sta   cur_priority
   1253  8     7DF1 BD   7EA2             jsr   CSR_ProcessEachPriorityLeve>>
   1254        7DF4               CSR_P7B0
   1255  6     7DF4 FE   64C2             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1256  3     7DF7 27   06               beq   CSR_P6B0
   1257  7     7DF9 7A   7DCB             dec   cur_priority
   1258  8     7DFC BD   7EA2             jsr   CSR_ProcessEachPriorityLeve>>
   1259        7DFF               CSR_P6B0
   1260  6     7DFF FE   64C0             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1261  3     7E02 27   06               beq   CSR_P5B0
   1262  7     7E04 7A   7DCB             dec   cur_priority
   1263  8     7E07 BD   7EA2             jsr   CSR_ProcessEachPriorityLeve>>
   1264        7E0A               CSR_P5B0
   1265  6     7E0A FE   64BE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1266  3     7E0D 27   06               beq   CSR_P4B0
   1267  7     7E0F 7A   7DCB             dec   cur_priority
   1268  8     7E12 BD   7EA2             jsr   CSR_ProcessEachPriorityLeve>>
   1269        7E15               CSR_P4B0
   1270  6     7E15 FE   64BC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1271  3     7E18 27   06               beq   CSR_P3B0
   1272  7     7E1A 7A   7DCB             dec   cur_priority
   1273  8     7E1D BD   7EA2             jsr   CSR_ProcessEachPriorityLeve>>
   1274        7E20               CSR_P3B0
   1275  6     7E20 FE   64BA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1276  3     7E23 27   06               beq   CSR_P2B0
   1277  7     7E25 7A   7DCB             dec   cur_priority
   1278  8     7E28 BD   7EA2             jsr   CSR_ProcessEachPriorityLeve>>
   1279        7E2B               CSR_P2B0
   1280  6     7E2B FE   64B8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1281  3     7E2E 27   06               beq   CSR_P1B0
   1282  7     7E30 7A   7DCB             dec   cur_priority
   1283  8     7E33 BD   7EA2             jsr   CSR_ProcessEachPriorityLeve>>
   1284        7E36               CSR_P1B0
   1285  6     7E36 FE   64B6             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1286  3     7E39 27   06               beq   CSR_rtsB0
   1287  7     7E3B 7A   7DCB             dec   cur_priority
   1288  8     7E3E BD   7EA2             jsr   CSR_ProcessEachPriorityLeve>>
   1289        7E41               CSR_rtsB0
   1290  5     7E41 39                    rts
   1291                            
   1292        7E42               CSR_SetBuffer1
   1293  4     7E42 96   42               lda   rsv_buffer_1               >>
   1294  5     7E44 B7   7EA4             sta   CSR_ProcessEachPriorityLeve>>
   1295        7E47               CSR_P8B1
   1296  6     7E47 FE   6564             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1297  3     7E4A 27   08               beq   CSR_P7B1
   1298  2     7E4C 86   08               lda   #$08
   1299  5     7E4E B7   7DCB             sta   cur_priority
   1300  8     7E51 BD   7EA2             jsr   CSR_ProcessEachPriorityLeve>>
   1301        7E54               CSR_P7B1
   1302  6     7E54 FE   6562             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1303  3     7E57 27   06               beq   CSR_P6B1
   1304  7     7E59 7A   7DCB             dec   cur_priority
   1305  8     7E5C BD   7EA2             jsr   CSR_ProcessEachPriorityLeve>>
   1306        7E5F               CSR_P6B1
   1307  6     7E5F FE   6560             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1308  3     7E62 27   06               beq   CSR_P5B1
   1309  7     7E64 7A   7DCB             dec   cur_priority
   1310  8     7E67 BD   7EA2             jsr   CSR_ProcessEachPriorityLeve>>
   1311        7E6A               CSR_P5B1
   1312  6     7E6A FE   655E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1313  3     7E6D 27   06               beq   CSR_P4B1
   1314  7     7E6F 7A   7DCB             dec   cur_priority
   1315  8     7E72 BD   7EA2             jsr   CSR_ProcessEachPriorityLeve>>
   1316        7E75               CSR_P4B1
   1317  6     7E75 FE   655C             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1318  3     7E78 27   06               beq   CSR_P3B1
   1319  7     7E7A 7A   7DCB             dec   cur_priority
   1320  8     7E7D BD   7EA2             jsr   CSR_ProcessEachPriorityLeve>>
   1321        7E80               CSR_P3B1
   1322  6     7E80 FE   655A             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1323  3     7E83 27   06               beq   CSR_P2B1
   1324  7     7E85 7A   7DCB             dec   cur_priority
   1325  8     7E88 BD   7EA2             jsr   CSR_ProcessEachPriorityLeve>>
   1326        7E8B               CSR_P2B1
   1327  6     7E8B FE   6558             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1328  3     7E8E 27   06               beq   CSR_P1B1
   1329  7     7E90 7A   7DCB             dec   cur_priority
   1330  8     7E93 BD   7EA2             jsr   CSR_ProcessEachPriorityLeve>>
   1331        7E96               CSR_P1B1
   1332  6     7E96 FE   6556             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1333  3     7E99 27   06               beq   CSR_rtsB1
   1334  7     7E9B 7A   7DCB             dec   cur_priority
   1335  8     7E9E BD   7EA2             jsr   CSR_ProcessEachPriorityLeve>>
   1336        7EA1               CSR_rtsB1
   1337  5     7EA1 39                    rts
   1338
   1339        7EA2               CSR_ProcessEachPriorityLevel
   1340  4+1   7EA2 30   C8 10            leax  16,u                       >>
   1341  4+1   7EA5 A6   C8 29            lda   rsv_render_flags,u
   1342  2     7EA8 84   01               anda  #rsv_render_checkrefresh_ma>>
   1343  6     7EAA 1026 00A5             lbne  CSR_CheckErase
   1344                            
   1345        7EAE               CSR_CheckDelHide
   1346  4+1   7EAE A6   42               lda   render_flags,u
   1347  2     7EB0 84   28               anda  #render_hide_mask!render_to>>
   1348  3     7EB2 26   5A               bne   CSR_DoNotDisplaySprite
   1349
   1350        7EB4               CSR_UpdSpriteImageBasedOnMirror
   1351  4+1   7EB4 A6   C8 29            lda   rsv_render_flags,u
   1352  2     7EB7 8A   01               ora   #rsv_render_checkrefresh_ma>>
   1353  4+1   7EB9 A7   C8 29            sta   rsv_render_flags,u         >>
   1354  4+1   7EBC A6   42               lda   render_flags,u             >>
   1355  2     7EBE 84   03               anda  #render_xmirror_mask!render>>
   1356  2     7EC0 C6   10               ldb   #image_meta_size
   1357  11    7EC2 3D                    mul
   1358  6+1   7EC3 E3   4A               addd  mapping_frame,u
   1359  5+1   7EC5 ED   C8 2C            std   rsv_curr_mapping_frame,u
   1360                            
   1361        7EC8               CSR_CheckPlayFieldCoord
   1362  4+1   7EC8 A6   42               lda   render_flags,u
   1363  2     7ECA 84   04               anda  #render_playfieldcoord_mask>>
   1364  3     7ECC 27   66               beq   CSR_CheckVerticalPosition  >>
   1365                            
   1366  5+1   7ECE EC   4C               ldd   x_pos,u
   1367  7     7ED0 B3   611C             subd  Glb_Camera_X_Pos
   1368  6+1   7ED3 10AE C8 2C            ldy   rsv_curr_mapping_frame,u
   1369  6+1   7ED7 E3   2A               addd  image_x_offset,y
   1370  3     7ED9 29   70               bvs   CSR_SetOutOfRange          >>
   1371  3     7EDB 2B   6E               bmi   CSR_SetOutOfRange          >>
   1372  4+1   7EDD E7   C8 12            stb   x_pixel,u
   1373  4+1   7EE0 EB   2E               addb  image_x_size,y
   1374  3     7EE2 29   67               bvs   CSR_SetOutOfRange          >>
   1375  4+1   7EE4 E7   C8 32            stb   rsv_x2_pixel,u
   1376  2     7EE7 C1   A0               cmpb  #screen_width
   1377  3     7EE9 2E   60               bgt   CSR_SetOutOfRange          >>
   1378
   1379  5+1   7EEB EC   4F               ldd   y_pos,u
   1380  7     7EED B3   611E             subd  Glb_Camera_Y_Pos
   1381  6+1   7EF0 E3   2C               addd  image_y_offset,y
   1382  3     7EF2 29   57               bvs   CSR_SetOutOfRange          >>
   1383  3     7EF4 2B   55               bmi   CSR_SetOutOfRange          >>
   1384  4+1   7EF6 E7   C8 13            stb   y_pixel,u
   1385  4+1   7EF9 EB   2F               addb  image_y_size,y
   1386  3     7EFB 29   4E               bvs   CSR_SetOutOfRange          >>
   1387  4+1   7EFD E7   C8 33            stb   rsv_y2_pixel,u
   1388  2     7F00 C1   C8               cmpb  #screen_height
   1389  3     7F02 2E   47               bgt   CSR_SetOutOfRange          >>
   1390  4+1   7F04 A6   C8 29            lda   rsv_render_flags,u
   1391  2     7F07 84   F7               anda  #:rsv_render_outofrange_mas>>
   1392  4+1   7F09 A7   C8 29            sta   rsv_render_flags,u
   1393  3     7F0C 20   45               bra   CSR_CheckErase
   1394                            
   1395        7F0E               CSR_DoNotDisplaySprite
   1396  4+1   7F0E A6   C8 29            lda   rsv_render_flags,u
   1397  2     7F11 84   F9               anda  #:rsv_render_erasesprite_ma>>
   1398  4+1   7F13 A7   C8 29            sta   rsv_render_flags,u
   1399  4+1   7F16 E6   0D               ldb   buf_onscreen,x
   1400  3     7F18 27   13               beq   CSR_NextObject             >>
   1401  2     7F1A 8A   02               ora   #rsv_render_erasesprite_mas>>
   1402  4+1   7F1C A7   C8 29            sta   rsv_render_flags,u
   1403                            
   1404  7     7F1F 10BE 7DCD             ldy   cur_ptr_sub_obj_erase
   1405  6+1   7F23 10AF C8 2E            sty   rsv_ptr_sub_object_erase,u
   1406  5+3   7F27 EF   A1               stu   ,y++
   1407  7     7F29 10BF 7DCD             sty   cur_ptr_sub_obj_erase
   1408                            
   1409        7F2D               CSR_NextObject
   1410  5+1   7F2D EE   03               ldu   buf_priority_next_obj,x
   1411  6     7F2F 1026 FF6F             lbne  CSR_ProcessEachPriorityLeve>>
   1412  5     7F33 39                    rts
   1413
   1414        7F34               CSR_CheckVerticalPosition
   1415  4+1   7F34 E6   C8 13            ldb   y_pixel,u                  >>
   1416  6+1   7F37 E3   2F               addd  image_y_size,y
   1417  3     7F39 29   10               bvs   CSR_SetOutOfRange          >>
   1418  5     7F3B 1083 00C8             cmpd  #screen_height
   1419  3     7F3F 2E   0A               bgt   CSR_SetOutOfRange          >>
   1420  4+1   7F41 A6   C8 29            lda   rsv_render_flags,u
   1421  2     7F44 84   F7               anda  #:rsv_render_outofrange_mas>>
   1422  4+1   7F46 A7   C8 29            sta   rsv_render_flags,u
   1423  3     7F49 20   08               bra   CSR_CheckErase
   1424                            
   1425        7F4B               CSR_SetOutOfRange
   1426  4+1   7F4B A6   C8 29            lda   rsv_render_flags,u
   1427  2     7F4E 8A   08               ora   #rsv_render_outofrange_mask>>
   1428  4+1   7F50 A7   C8 29            sta   rsv_render_flags,u
   1429
   1430        7F53               CSR_CheckErase
   1431  4+1   7F53 A6   00               lda   buf_priority,x
   1432  5     7F55 B1   7DCB             cmpa  cur_priority
   1433  3     7F58 26   36               bne   CSR_CheckDraw
   1434                            
   1435  7     7F5A 10BE 7DCD             ldy   cur_ptr_sub_obj_erase
   1436  6+1   7F5E 10AF C8 2E            sty   rsv_ptr_sub_object_erase,u
   1437                            
   1438  4+1   7F62 A6   0D               lda   buf_onscreen,x
   1439  3     7F64 27   25               beq   CSR_SetEraseFalse          >>
   1440  5+1   7F66 EC   C8 12            ldd   x_pixel,u                  >>
   1441  7+1   7F69 10A3 09               cmpd  buf_prev_x_pixel,x
   1442  3     7F6C 26   10               bne   CSR_SetEraseTrue           >>
   1443  5+1   7F6E EC   C8 2C            ldd   rsv_curr_mapping_frame,u
   1444  7+1   7F71 10A3 05               cmpd  buf_prev_mapping_frame,x
   1445  3     7F74 26   08               bne   CSR_SetEraseTrue           >>
   1446  4+1   7F76 A6   43               lda   priority,u
   1447  4+1   7F78 A1   00               cmpa  buf_priority,x
   1448  3     7F7A 26   02               bne   CSR_SetEraseTrue           >>
   1449  3     7F7C 20   0D               bra   CSR_SetEraseFalse          >>
   1450                            
   1451        7F7E               CSR_SetEraseTrue
   1452  4+1   7F7E A6   C8 29            lda   rsv_render_flags,u
   1453  2     7F81 8A   02               ora   #rsv_render_erasesprite_mas>>
   1454                            
   1455  5+3   7F83 EF   A1               stu   ,y++
   1456  7     7F85 10BF 7DCD             sty   cur_ptr_sub_obj_erase
   1457                            
   1458  3     7F89 20   05               bra   CSR_CheckDraw
   1459                            
   1460        7F8B               CSR_SetEraseFalse
   1461  4+1   7F8B A6   C8 29            lda   rsv_render_flags,u
   1462  2     7F8E 84   FD               anda  #:rsv_render_erasesprite_ma>>
   1463                            
   1464        7F90               CSR_CheckDraw
   1465  4+1   7F90 A6   43               lda   priority,u
   1466  5     7F92 B1   7DCB             cmpa  cur_priority
   1467  3     7F95 26   96               bne   CSR_NextObject
   1468                            
   1469  7     7F97 10BE 7DCF             ldy   cur_ptr_sub_obj_draw
   1470  6+1   7F9B 10AF C8 30            sty   rsv_ptr_sub_object_draw,u
   1471                            
   1472  4+1   7F9F A6   C8 29            lda   rsv_render_flags,u
   1473  2     7FA2 84   08               anda  #rsv_render_outofrange_mask>>
   1474  3     7FA4 26   1D               bne   CSR_SetDrawFalse           >>
   1475  5+1   7FA6 EC   C8 2C            ldd   rsv_curr_mapping_frame,u
   1476  3     7FA9 27   18               beq   CSR_SetDrawFalse           >>
   1477  4     7FAB 96   02               lda   render_flags
   1478  2     7FAD 84   08               anda  #render_hide_mask
   1479  3     7FAF 26   12               bne   CSR_SetDrawFalse           >>
   1480                            
   1481        7FB1               CSR_SetDrawTrue
   1482  4+1   7FB1 A6   C8 29            lda   rsv_render_flags,u
   1483  2     7FB4 8A   04               ora   #rsv_render_displaysprite_m>>
   1484                            
   1485  5+3   7FB6 EF   A1               stu   ,y++
   1486  7     7FB8 10BF 7DCF             sty   cur_ptr_sub_obj_draw
   1487                            
   1488  5+1   7FBC EE   03               ldu   buf_priority_next_obj,x
   1489  6     7FBE 1026 FEE0             lbne   CSR_ProcessEachPriorityLev>>
   1490  5     7FC2 39                    rts
   1491
   1492        7FC3               CSR_SetDrawFalse
   1493  4+1   7FC3 A6   C8 29            lda   rsv_render_flags,u
   1494  2     7FC6 84   FB               anda  #:rsv_render_displaysprite_>>
   1495                            
   1496  5+1   7FC8 EE   03               ldu   buf_priority_next_obj,x
   1497  6     7FCA 1026 FED4             lbne   CSR_ProcessEachPriorityLev>>
   1498  5     7FCE 39                    rts
   1499
   1500
   1501                                   INCLUD ERASESPR
   1502                           * --------------------------------------->>
   1503                           * EraseSprites
   1504                           * ------------
   1505                           * Subroutine to erase sprites on screen
   1506                           * Read Display Priority Structure (front >>
   1507                           * priority: 0 - unregistred
   1508                           * priority: 1 - register non moving overl>>
   1509                           * priority; 2-8 - register moving sprite >>
   1510                           *
   1511                           * input REG : none
   1512                           * --------------------------------------->>
   1513                            
   1514        7FCF               EraseSprites
   1515
   1516        7FCF               ESP_Start
   1517  5     7FCF B6   611A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1518  3     7FD2 26   5B               bne   ESP_P1B1
   1519                            
   1520        7FD4               ESP_P1B0
   1521  6     7FD4 FE   64C8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1522  3     7FD7 27   08               beq   ESP_P2B0
   1523  2     7FD9 86   01               lda   #$01
   1524  5     7FDB B7   809C             sta   ESP_CheckPriorityB0+1
   1525  8     7FDE BD   8098             jsr   ESP_ProcessEachPriorityLeve>>
   1526        7FE1               ESP_P2B0
   1527  6     7FE1 FE   64CA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1528  3     7FE4 27   06               beq   ESP_P3B0
   1529  7     7FE6 7C   809C             inc   ESP_CheckPriorityB0+1
   1530  8     7FE9 BD   8098             jsr   ESP_ProcessEachPriorityLeve>>
   1531        7FEC               ESP_P3B0
   1532  6     7FEC FE   64CC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1533  3     7FEF 27   06               beq   ESP_P4B0
   1534  7     7FF1 7C   809C             inc   ESP_CheckPriorityB0+1
   1535  8     7FF4 BD   8098             jsr   ESP_ProcessEachPriorityLeve>>
   1536        7FF7               ESP_P4B0
   1537  6     7FF7 FE   64CE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1538  3     7FFA 27   06               beq   ESP_P5B0
   1539  7     7FFC 7C   809C             inc   ESP_CheckPriorityB0+1
   1540  8     7FFF BD   8098             jsr   ESP_ProcessEachPriorityLeve>>
   1541        8002               ESP_P5B0
   1542  6     8002 FE   64D0             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1543  3     8005 27   06               beq   ESP_P6B0
   1544  7     8007 7C   809C             inc   ESP_CheckPriorityB0+1
   1545  8     800A BD   8098             jsr   ESP_ProcessEachPriorityLeve>>
   1546        800D               ESP_P6B0
   1547  6     800D FE   64D2             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1548  3     8010 27   06               beq   ESP_P7B0
   1549  7     8012 7C   809C             inc   ESP_CheckPriorityB0+1
   1550  8     8015 BD   8098             jsr   ESP_ProcessEachPriorityLeve>>
   1551        8018               ESP_P7B0
   1552  6     8018 FE   64D4             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1553  3     801B 27   06               beq   ESP_P8B0
   1554  7     801D 7C   809C             inc   ESP_CheckPriorityB0+1
   1555  8     8020 BD   8098             jsr   ESP_ProcessEachPriorityLeve>>
   1556        8023               ESP_P8B0
   1557  6     8023 FE   64D6             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1558  3     8026 27   06               beq   ESP_rtsB0
   1559  7     8028 7C   809C             inc   ESP_CheckPriorityB0+1
   1560  8     802B BD   8098             jsr   ESP_ProcessEachPriorityLeve>>
   1561        802E               ESP_rtsB0
   1562  5     802E 39                    rts
   1563                            
   1564        802F               ESP_P1B1
   1565  6     802F FE   6568             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1566  3     8032 27   08               beq   ESP_P2B1
   1567  2     8034 86   08               lda   #$08
   1568  5     8036 B7   8131             sta   ESP_CheckPriorityB1+1
   1569  8     8039 BD   812D             jsr   ESP_ProcessEachPriorityLeve>>
   1570        803C               ESP_P2B1
   1571  6     803C FE   656A             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1572  3     803F 27   08               beq   ESP_P3B1
   1573  2     8041 86   07               lda   #$07
   1574  5     8043 B7   8131             sta   ESP_CheckPriorityB1+1
   1575  8     8046 BD   812D             jsr   ESP_ProcessEachPriorityLeve>>
   1576        8049               ESP_P3B1
   1577  6     8049 FE   656C             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1578  3     804C 27   08               beq   ESP_P4B1
   1579  2     804E 86   06               lda   #$06
   1580  5     8050 B7   8131             sta   ESP_CheckPriorityB1+1
   1581  8     8053 BD   812D             jsr   ESP_ProcessEachPriorityLeve>>
   1582        8056               ESP_P4B1
   1583  6     8056 FE   656E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1584  3     8059 27   08               beq   ESP_P5B1
   1585  2     805B 86   05               lda   #$05
   1586  5     805D B7   8131             sta   ESP_CheckPriorityB1+1
   1587  8     8060 BD   812D             jsr   ESP_ProcessEachPriorityLeve>>
   1588        8063               ESP_P5B1
   1589  6     8063 FE   6570             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1590  3     8066 27   08               beq   ESP_P6B1
   1591  2     8068 86   04               lda   #$04
   1592  5     806A B7   8131             sta   ESP_CheckPriorityB1+1
   1593  8     806D BD   812D             jsr   ESP_ProcessEachPriorityLeve>>
   1594        8070               ESP_P6B1
   1595  6     8070 FE   6572             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1596  3     8073 27   08               beq   ESP_P7B1
   1597  2     8075 86   03               lda   #$03
   1598  5     8077 B7   8131             sta   ESP_CheckPriorityB1+1
   1599  8     807A BD   812D             jsr   ESP_ProcessEachPriorityLeve>>
   1600        807D               ESP_P7B1
   1601  6     807D FE   6574             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1602  3     8080 27   08               beq   ESP_P8B1
   1603  2     8082 86   02               lda   #$02
   1604  5     8084 B7   8131             sta   ESP_CheckPriorityB1+1
   1605  8     8087 BD   812D             jsr   ESP_ProcessEachPriorityLeve>>
   1606        808A               ESP_P8B1
   1607  6     808A FE   6576             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1608  3     808D 27   08               beq   ESP_rtsB1
   1609  2     808F 86   01               lda   #$01
   1610  5     8091 B7   8131             sta   ESP_CheckPriorityB1+1
   1611  8     8094 BD   812D             jsr   ESP_ProcessEachPriorityLeve>>
   1612        8097               ESP_rtsB1
   1613  5     8097 39                    rts
   1614
   1615                           * *******
   1616                           * BUFFER0
   1617                           * *******
   1618
   1619        8098               ESP_ProcessEachPriorityLevelB0
   1620  4+1   8098 A6   C8 34            lda   rsv_priority_0,u
   1621                            
   1622        809B               ESP_CheckPriorityB0
   1623  2     809B 81   00               cmpa  #0                         >>
   1624  3     809D 26   38               bne   ESP_NextObjectB0           >>
   1625                            
   1626        809F               ESP_UnsetCheckRefreshB0
   1627  4+1   809F A6   C8 29            lda   rsv_render_flags,u
   1628  2     80A2 84   FE               anda  #:rsv_render_checkrefresh_m>>
   1629  4+1   80A4 A7   C8 29            sta   rsv_render_flags,u
   1630                            
   1631        80A7               ESP_CheckEraseB0
   1632  2     80A7 84   02               anda  #rsv_render_erasesprite_mas>>
   1633  3     80A9 26   5D               bne   ESP_CallEraseRoutineB0     >>
   1634                            
   1635                                   * if not supposed to be refreshed>>
   1636                            
   1637  4+1   80AB A6   C8 41            lda   rsv_onscreen_0,u
   1638  3     80AE 27   27               beq   ESP_NextObjectB0
   1639                            
   1640                                   * search a collision with a sprit>>
   1641                                   * the sprite under should have to>>
   1642                                   * in this case it forces the refr>>
   1643                                   * as a sub loop, this should be o>>
   1644                            
   1645        80B0               ESP_SubEraseSpriteSearchInitB0
   1646  5+1   80B0 AE   C8 2E            ldx   rsv_ptr_sub_object_erase,u
   1647                            
   1648        80B3               ESP_SubEraseSearchB0
   1649  7     80B3 BC   7DCD             cmpx  cur_ptr_sub_obj_erase
   1650  3     80B6 27   25               beq   ESP_SubDrawSpriteSearchInit>>
   1651  6+3   80B8 10AE 83               ldy   ,--x
   1652                            
   1653        80BB               ESP_SubEraseCheckCollisionB0
   1654  5+1   80BB EC   A8 3D            ldd   rsv_prev_x_pixel_0,y       >>
   1655  4+1   80BE A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1656  3     80C1 24   F0               bhs   ESP_SubEraseSearchB0
   1657  4+1   80C3 E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1658  3     80C6 24   EB               bhs   ESP_SubEraseSearchB0
   1659  5+1   80C8 EC   A8 3F            ldd   rsv_prev_x2_pixel_0,y      >>
   1660  4+1   80CB A1   C8 12            cmpa  x_pixel,u                  >>
   1661  3     80CE 23   E3               bls   ESP_SubEraseSearchB0
   1662  4+1   80D0 E1   C8 13            cmpb  y_pixel,u                  >>
   1663  3     80D3 23   DE               bls   ESP_SubEraseSearchB0
   1664  3     80D5 20   2B               bra   ESP_SubCheckOverlayB0
   1665
   1666        80D7               ESP_NextObjectB0
   1667  5+1   80D7 EE   C8 35            ldu   rsv_priority_prev_obj_0,u
   1668  3     80DA 26   BC               bne   ESP_ProcessEachPriorityLeve>>
   1669  5     80DC 39                    rts
   1670
   1671        80DD               ESP_SubDrawSpriteSearchInitB0
   1672  5+1   80DD AE   C8 30            ldx   rsv_ptr_sub_object_draw,u
   1673                            
   1674        80E0               ESP_SubDrawSearchB0
   1675  7     80E0 BC   7DCF             cmpx  cur_ptr_sub_obj_draw
   1676  3     80E3 27   1D               beq   ESP_SubCheckOverlayB0      >>
   1677  6+3   80E5 10AE 83               ldy   ,--x
   1678
   1679        80E8               ESP_SubDrawCheckCollisionB0
   1680  5+1   80E8 EC   A8 12            ldd   x_pixel,y                  >>
   1681  4+1   80EB A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1682  3     80EE 24   F0               bhs   ESP_SubDrawSearchB0
   1683  4+1   80F0 E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1684  3     80F3 24   EB               bhs   ESP_SubDrawSearchB0
   1685  5+1   80F5 EC   A8 32            ldd   rsv_x2_pixel,y             >>
   1686  4+1   80F8 A1   C8 12            cmpa  x_pixel,u                  >>
   1687  3     80FB 23   E3               bls   ESP_SubDrawSearchB0
   1688  4+1   80FD E1   C8 13            cmpb  y_pixel,u                  >>
   1689  3     8100 23   DE               bls   ESP_SubDrawSearchB0
   1690                            
   1691        8102               ESP_SubCheckOverlayB0
   1692  4+1   8102 A6   42               lda   render_flags,u
   1693  2     8104 84   10               anda  #render_fixedoverlay_mask
   1694  3     8106 26   20               bne   ESP_UnsetOnScreenFlagB0
   1695                            
   1696        8108               ESP_CallEraseRoutineB0
   1697  6     8108 FF   811C             stu   ESP_CallEraseRoutineB0_00+1>>
   1698  5+1   810B AE   C8 39            ldx   rsv_prev_mapping_frame_0,u >>
   1699  4+1   810E A6   06               lda   page_erase_routine,x
   1700  5     8110 B7   E7E5             sta   $E7E5                      >>
   1701  5+1   8113 EE   C8 3B            ldu   rsv_bgdata_0,u             >>
   1702  7+4   8116 AD   98 07            jsr   [erase_routine,x]          >>
   1703  4+0   8119 31   C4               leay  ,u                         >>
   1704        811B               ESP_CallEraseRoutineB0_00
   1705  3     811B CE   0000             ldu   #$0000                     >>
   1706  5+1   811E EC   C8 3B            ldd   rsv_bgdata_0,u             >>
   1707  2     8121 C4   40               andb  #cell_size                 >>
   1708  6     8123 1F   01               tfr   d,x                        >>
   1709                            
   1710        8125               ESP_FreeEraseBufferB0
   1711  8     8125 BD   8482             jsr   BgBufferFree               >>
   1712                            
   1713        8128               ESP_UnsetOnScreenFlagB0
   1714  6+1   8128 6F   C8 41            clr   rsv_onscreen_0,u           >>
   1715  3     812B 20   AA               bra   ESP_NextObjectB0
   1716
   1717                           * *******
   1718                           * BUFFER1
   1719                           * *******
   1720                            
   1721        812D               ESP_ProcessEachPriorityLevelB1
   1722  4+1   812D A6   C8 42            lda   rsv_priority_1,u
   1723                            
   1724        8130               ESP_CheckPriorityB1
   1725  2     8130 81   00               cmpa  #0                         >>
   1726  3     8132 26   38               bne   ESP_NextObjectB1           >>
   1727                            
   1728        8134               ESP_UnsetCheckRefreshB1
   1729  4+1   8134 A6   C8 29            lda   rsv_render_flags,u
   1730  2     8137 84   FE               anda  #:rsv_render_checkrefresh_m>>
   1731  4+1   8139 A7   C8 29            sta   rsv_render_flags,u
   1732                            
   1733        813C               ESP_CheckEraseB1
   1734  2     813C 84   02               anda  #rsv_render_erasesprite_mas>>
   1735  3     813E 26   5D               bne   ESP_CallEraseRoutineB1     >>
   1736                            
   1737                                   * if not supposed to be refreshed>>
   1738                            
   1739  4+1   8140 A6   C8 4F            lda   rsv_onscreen_1,u
   1740  3     8143 27   27               beq   ESP_NextObjectB1
   1741                            
   1742                                   * search a collision with a sprit>>
   1743                                   * the sprite under should have to>>
   1744                                   * in this case it forces the refr>>
   1745                                   * as a sub loop, this should be o>>
   1746                            
   1747        8145               ESP_SubEraseSpriteSearchInitB1
   1748  5+1   8145 AE   C8 2E            ldx   rsv_ptr_sub_object_erase,u
   1749                            
   1750        8148               ESP_SubEraseSearchB1
   1751  7     8148 BC   7DCD             cmpx  cur_ptr_sub_obj_erase
   1752  3     814B 27   25               beq   ESP_SubDrawSpriteSearchInit>>
   1753  6+3   814D 10AE 83               ldy   ,--x
   1754                            
   1755        8150               ESP_SubEraseCheckCollisionB1
   1756  5+1   8150 EC   A8 4B            ldd   rsv_prev_x_pixel_1,y       >>
   1757  4+1   8153 A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1758  3     8156 24   F0               bhs   ESP_SubEraseSearchB1
   1759  4+1   8158 E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1760  3     815B 24   EB               bhs   ESP_SubEraseSearchB1
   1761  5+1   815D EC   A8 4D            ldd   rsv_prev_x2_pixel_1,y      >>
   1762  4+1   8160 A1   C8 12            cmpa  x_pixel,u                  >>
   1763  3     8163 23   E3               bls   ESP_SubEraseSearchB1
   1764  4+1   8165 E1   C8 13            cmpb  y_pixel,u                  >>
   1765  3     8168 23   DE               bls   ESP_SubEraseSearchB1
   1766  3     816A 20   2B               bra   ESP_SubCheckOverlayB1
   1767
   1768        816C               ESP_NextObjectB1
   1769  5+1   816C EE   C8 43            ldu   rsv_priority_prev_obj_1,u
   1770  3     816F 26   BC               bne   ESP_ProcessEachPriorityLeve>>
   1771  5     8171 39                    rts
   1772
   1773        8172               ESP_SubDrawSpriteSearchInitB1
   1774  5+1   8172 AE   C8 30            ldx   rsv_ptr_sub_object_draw,u
   1775                            
   1776        8175               ESP_SubDrawSearchB1
   1777  7     8175 BC   7DCF             cmpx  cur_ptr_sub_obj_draw
   1778  3     8178 27   1D               beq   ESP_SubCheckOverlayB1      >>
   1779  6+3   817A 10AE 83               ldy   ,--x
   1780
   1781        817D               ESP_SubDrawCheckCollisionB1
   1782  5+1   817D EC   A8 12            ldd   x_pixel,y                  >>
   1783  4+1   8180 A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1784  3     8183 24   F0               bhs   ESP_SubDrawSearchB1
   1785  4+1   8185 E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1786  3     8188 24   EB               bhs   ESP_SubDrawSearchB1
   1787  5+1   818A EC   A8 32            ldd   rsv_x2_pixel,y             >>
   1788  4+1   818D A1   C8 12            cmpa  x_pixel,u                  >>
   1789  3     8190 23   E3               bls   ESP_SubDrawSearchB1
   1790  4+1   8192 E1   C8 13            cmpb  y_pixel,u                  >>
   1791  3     8195 23   DE               bls   ESP_SubDrawSearchB1
   1792                            
   1793        8197               ESP_SubCheckOverlayB1
   1794  4+1   8197 A6   42               lda   render_flags,u
   1795  2     8199 84   10               anda  #render_fixedoverlay_mask
   1796  3     819B 26   20               bne   ESP_UnsetOnScreenFlagB1
   1797                            
   1798        819D               ESP_CallEraseRoutineB1
   1799  6     819D FF   81B1             stu   ESP_CallEraseRoutineB1_00+1>>
   1800  5+1   81A0 AE   C8 47            ldx   rsv_prev_mapping_frame_1,u >>
   1801  4+1   81A3 A6   06               lda   page_erase_routine,x
   1802  5     81A5 B7   E7E5             sta   $E7E5                      >>
   1803  5+1   81A8 EE   C8 49            ldu   rsv_bgdata_1,u             >>
   1804  7+4   81AB AD   98 07            jsr   [erase_routine,x]          >>
   1805  4+0   81AE 31   C4               leay  ,u                         >>
   1806        81B0               ESP_CallEraseRoutineB1_00
   1807  3     81B0 CE   0000             ldu   #$0000                     >>
   1808  5+1   81B3 EC   C8 49            ldd   rsv_bgdata_1,u             >>
   1809  2     81B6 C4   40               andb  #cell_size                 >>
   1810  6     81B8 1F   01               tfr   d,x                        >>
   1811                            
   1812        81BA               ESP_FreeEraseBufferB1
   1813  8     81BA BD   8482             jsr   BgBufferFree               >>
   1814                            
   1815        81BD               ESP_UnsetOnScreenFlagB1
   1816  6+1   81BD 6F   C8 4F            clr   rsv_onscreen_1,u           >>
   1817  3     81C0 20   AA               bra   ESP_NextObjectB1
   1818
   1819                                   INCLUD UNSETDSP
   1820                           * --------------------------------------->>
   1821                           * UnsetDisplayPriority
   1822                           * --------------------
   1823                           * Subroutine to unset sprites in Display >>
   1824                           * Read Lst_Priority_Unset_0/1
   1825                           *
   1826                           * input REG : none
   1827                           * --------------------------------------->>
   1828                            
   1829        81C2               UnsetDisplayPriority
   1830
   1831        81C2               UDP_Start
   1832  5     81C2 B6   611A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1833  3     81C5 26   6F               bne   UDP_B1
   1834                            
   1835        81C7               UDP_B0
   1836  3     81C7 8E   64DC             ldx   #Lst_Priority_Unset_0+2
   1837                            
   1838        81CA               UDP_CheckEndB0
   1839  7     81CA BC   64DA             cmpx  Lst_Priority_Unset_0       >>
   1840  3     81CD 26   07               bne   UDP_CheckPrioPrevB0
   1841                            
   1842        81CF               UDP_InitListB0
   1843  3     81CF 8E   64DC             ldx   #Lst_Priority_Unset_0+2
   1844  6     81D2 BF   64DA             stx   Lst_Priority_Unset_0       >>
   1845  5     81D5 39                    rts
   1846                            
   1847        81D6               UDP_CheckPrioPrevB0
   1848  5+3   81D6 EE   81               ldu   ,x++
   1849  5+1   81D8 EC   C8 35            ldd   rsv_priority_prev_obj_0,u
   1850  3     81DB 26   12               bne   UDP_ChainPrevB0
   1851                            
   1852  4+1   81DD A6   C8 34            lda   rsv_priority_0,u
   1853  2     81E0 4A                    deca
   1854  2     81E1 48                    lsla
   1855  4     81E2 108E 64B6             ldy   #Tbl_Priority_First_Entry_0>>
   1856  4+1   81E6 31   A6               leay  a,y
   1857  5+1   81E8 EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1858  5+0   81EB ED   A4               std   ,y
   1859  3     81ED 20   0A               bra   UDP_CheckPrioNextB0
   1860                            
   1861        81EF               UDP_ChainPrevB0
   1862  5+1   81EF EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1863  6+1   81F2 10AE C8 35            ldy   rsv_priority_prev_obj_0,u
   1864  5+1   81F6 ED   A8 37            std   rsv_priority_next_obj_0,y
   1865
   1866        81F9               UDP_CheckPrioNextB0
   1867  5+1   81F9 EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1868  3     81FC 26   12               bne   UDP_ChainNextB0
   1869
   1870  4+1   81FE A6   C8 34            lda   rsv_priority_0,u
   1871  2     8201 4A                    deca
   1872  2     8202 48                    lsla
   1873  4     8203 108E 64C8             ldy   #Tbl_Priority_Last_Entry_0
   1874  4+1   8207 31   A6               leay  a,y
   1875  5+1   8209 EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1876  5+0   820C ED   A4               std   ,y
   1877  3     820E 20   0A               bra   UDP_CheckDeleteB0
   1878                            
   1879        8210               UDP_ChainNextB0
   1880  5+1   8210 EC   C8 35            ldd   rsv_priority_prev_obj_0,u
   1881  6+1   8213 10AE C8 37            ldy   rsv_priority_next_obj_0,u
   1882  5+1   8217 ED   A8 35            std   rsv_priority_prev_obj_0,y
   1883                            
   1884        821A               UDP_CheckDeleteB0
   1885  4+1   821A A6   42               lda   render_flags,u
   1886  2     821C 84   20               anda  #render_todelete_mask
   1887  3     821E 27   0F               beq   UDP_SetNewPrioB0
   1888  4+1   8220 A6   C8 41            lda   rsv_onscreen_0,u
   1889  3     8223 26   0A               bne   UDP_SetNewPrioB0
   1890  4+1   8225 A6   C8 4F            lda   rsv_onscreen_1,u
   1891  3     8228 26   05               bne   UDP_SetNewPrioB0
   1892  8     822A BD   7D9B             jsr   ClearObj
   1893  3     822D 20   9B               bra   UDP_CheckEndB0
   1894                            
   1895        822F               UDP_SetNewPrioB0
   1896  4+1   822F A6   43               lda   priority,u
   1897  4+1   8231 A7   C8 34            sta   rsv_priority_0,u
   1898  3     8234 20   94               bra   UDP_CheckEndB0
   1899
   1900        8236               UDP_B1
   1901  3     8236 8E   657C             ldx   #Lst_Priority_Unset_1+2
   1902                            
   1903        8239               UDP_CheckEndB1
   1904  7     8239 BC   657A             cmpx  Lst_Priority_Unset_1       >>
   1905  3     823C 26   07               bne   UDP_CheckPrioPrevB1
   1906                            
   1907        823E               UDP_InitListB1
   1908  3     823E 8E   657C             ldx   #Lst_Priority_Unset_1+2
   1909  6     8241 BF   657A             stx   Lst_Priority_Unset_1       >>
   1910  5     8244 39                    rts
   1911                            
   1912        8245               UDP_CheckPrioPrevB1
   1913  5+3   8245 EE   81               ldu   ,x++
   1914  5+1   8247 EC   C8 43            ldd   rsv_priority_prev_obj_1,u
   1915  3     824A 26   12               bne   UDP_ChainPrevB1
   1916                            
   1917  4+1   824C A6   C8 42            lda   rsv_priority_1,u
   1918  2     824F 4A                    deca
   1919  2     8250 48                    lsla
   1920  4     8251 108E 6556             ldy   #Tbl_Priority_First_Entry_1>>
   1921  4+1   8255 31   A6               leay  a,y
   1922  5+1   8257 EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1923  5+0   825A ED   A4               std   ,y
   1924  3     825C 20   0A               bra   UDP_CheckPrioNextB1
   1925                            
   1926        825E               UDP_ChainPrevB1
   1927  5+1   825E EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1928  6+1   8261 10AE C8 43            ldy   rsv_priority_prev_obj_1,u
   1929  5+1   8265 ED   A8 45            std   rsv_priority_next_obj_1,y
   1930
   1931        8268               UDP_CheckPrioNextB1
   1932  5+1   8268 EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1933  3     826B 26   12               bne   UDP_ChainNextB1
   1934
   1935  4+1   826D A6   C8 42            lda   rsv_priority_1,u
   1936  2     8270 4A                    deca
   1937  2     8271 48                    lsla
   1938  4     8272 108E 6568             ldy   #Tbl_Priority_Last_Entry_1
   1939  4+1   8276 31   A6               leay  a,y
   1940  5+1   8278 EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1941  5+0   827B ED   A4               std   ,y
   1942  3     827D 20   0A               bra   UDP_CheckDeleteB1
   1943                            
   1944        827F               UDP_ChainNextB1
   1945  5+1   827F EC   C8 43            ldd   rsv_priority_prev_obj_1,u
   1946  6+1   8282 10AE C8 45            ldy   rsv_priority_next_obj_1,u
   1947  5+1   8286 ED   A8 43            std   rsv_priority_prev_obj_1,y
   1948                            
   1949        8289               UDP_CheckDeleteB1
   1950  4+1   8289 A6   42               lda   render_flags,u
   1951  2     828B 84   20               anda  #render_todelete_mask
   1952  3     828D 27   0F               beq   UDP_SetNewPrioB1
   1953  4+1   828F A6   C8 4F            lda   rsv_onscreen_1,u
   1954  3     8292 26   0A               bne   UDP_SetNewPrioB1
   1955  4+1   8294 A6   C8 4F            lda   rsv_onscreen_1,u
   1956  3     8297 26   05               bne   UDP_SetNewPrioB1
   1957  8     8299 BD   7D9B             jsr   ClearObj
   1958  3     829C 20   9B               bra   UDP_CheckEndB1
   1959                            
   1960        829E               UDP_SetNewPrioB1
   1961  4+1   829E A6   43               lda   priority,u
   1962  4+1   82A0 A7   C8 42            sta   rsv_priority_1,u
   1963  3     82A3 20   94               bra   UDP_CheckEndB1
   1964
   1965                                   INCLUD DRAWSPR
   1966                           * --------------------------------------->>
   1967                           * DrawSprites
   1968                           * ------------
   1969                           * Subroutine to draw sprites on screen
   1970                           * Read Display Priority Structure (back t>>
   1971                           * priority: 0 - unregistred
   1972                           * priority: 1 - register non moving overl>>
   1973                           * priority; 2-8 - register moving sprite >>
   1974                           *
   1975                           * input REG : none
   1976                           * --------------------------------------->>
   1977                            
   1978        82A5               DrawSprites
   1979
   1980        82A5               DRS_Start
   1981  5     82A5 B6   611A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1982  3     82A8 26   41               bne   DRS_P8B1
   1983                            
   1984        82AA               DRS_P8B0
   1985  6     82AA BE   64C4             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1986  3     82AD 27   03               beq   DRS_P7B0
   1987  8     82AF BD   832C             jsr   DRS_ProcessEachPriorityLeve>>
   1988        82B2               DRS_P7B0
   1989  6     82B2 BE   64C2             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1990  3     82B5 27   03               beq   DRS_P6B0
   1991  8     82B7 BD   832C             jsr   DRS_ProcessEachPriorityLeve>>
   1992        82BA               DRS_P6B0
   1993  6     82BA BE   64C0             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1994  3     82BD 27   03               beq   DRS_P5B0
   1995  8     82BF BD   832C             jsr   DRS_ProcessEachPriorityLeve>>
   1996        82C2               DRS_P5B0
   1997  6     82C2 BE   64BE             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1998  3     82C5 27   03               beq   DRS_P4B0
   1999  8     82C7 BD   832C             jsr   DRS_ProcessEachPriorityLeve>>
   2000        82CA               DRS_P4B0
   2001  6     82CA BE   64BC             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2002  3     82CD 27   03               beq   DRS_P3B0
   2003  8     82CF BD   832C             jsr   DRS_ProcessEachPriorityLeve>>
   2004        82D2               DRS_P3B0
   2005  6     82D2 BE   64BA             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2006  3     82D5 27   03               beq   DRS_P2B0
   2007  8     82D7 BD   832C             jsr   DRS_ProcessEachPriorityLeve>>
   2008        82DA               DRS_P2B0
   2009  6     82DA BE   64B8             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2010  3     82DD 27   03               beq   DRS_P1B0
   2011  8     82DF BD   832C             jsr   DRS_ProcessEachPriorityLeve>>
   2012        82E2               DRS_P1B0
   2013  6     82E2 BE   64B6             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2014  3     82E5 27   03               beq   DRS_rtsB0
   2015  8     82E7 BD   832C             jsr   DRS_ProcessEachPriorityLeve>>
   2016        82EA               DRS_rtsB0
   2017  5     82EA 39                    rts
   2018                            
   2019        82EB               DRS_P8B1
   2020  6     82EB BE   6564             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2021  3     82EE 27   03               beq   DRS_P7B1
   2022  8     82F0 BD   83C9             jsr   DRS_ProcessEachPriorityLeve>>
   2023        82F3               DRS_P7B1
   2024  6     82F3 BE   6562             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2025  3     82F6 27   03               beq   DRS_P6B1
   2026  8     82F8 BD   83C9             jsr   DRS_ProcessEachPriorityLeve>>
   2027        82FB               DRS_P6B1
   2028  6     82FB BE   6560             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2029  3     82FE 27   03               beq   DRS_P5B1
   2030  8     8300 BD   83C9             jsr   DRS_ProcessEachPriorityLeve>>
   2031        8303               DRS_P5B1
   2032  6     8303 BE   655E             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2033  3     8306 27   03               beq   DRS_P4B1
   2034  8     8308 BD   83C9             jsr   DRS_ProcessEachPriorityLeve>>
   2035        830B               DRS_P4B1
   2036  6     830B BE   655C             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2037  3     830E 27   03               beq   DRS_P3B1
   2038  8     8310 BD   83C9             jsr   DRS_ProcessEachPriorityLeve>>
   2039        8313               DRS_P3B1
   2040  6     8313 BE   655A             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2041  3     8316 27   03               beq   DRS_P2B1
   2042  8     8318 BD   83C9             jsr   DRS_ProcessEachPriorityLeve>>
   2043        831B               DRS_P2B1
   2044  6     831B BE   6558             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2045  3     831E 27   03               beq   DRS_P1B1
   2046  8     8320 BD   83C9             jsr   DRS_ProcessEachPriorityLeve>>
   2047        8323               DRS_P1B1
   2048  6     8323 BE   6556             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2049  3     8326 27   03               beq   DRS_rtsB1
   2050  8     8328 BD   83C9             jsr   DRS_ProcessEachPriorityLeve>>
   2051        832B               DRS_rtsB1
   2052  5     832B 39                    rts
   2053
   2054        832C               DRS_ProcessEachPriorityLevelB0
   2055  4+1   832C A6   88 29            lda   rsv_render_flags,x
   2056  2     832F 84   04               anda  #rsv_render_displaysprite_m>>
   2057  3     8331 27   46               beq   DRS_NextObjectB0
   2058  4+1   8333 A6   88 41            lda   rsv_onscreen_0,x
   2059  3     8336 26   41               bne   DRS_NextObjectB0
   2060  4+1   8338 A6   02               lda   render_flags,x
   2061  2     833A 84   10               anda  #render_fixedoverlay_mask
   2062  3     833C 26   41               bne   DRS_DrawWithoutBackupB0
   2063  5+1   833E EE   88 2C            ldu   rsv_curr_mapping_frame,x
   2064  4+1   8341 A6   49               lda   erase_nb_cell,u
   2065  8     8343 BD   8439             jsr   BgBufferAlloc              >>
   2066  5     8346 108C 0000             cmpy  #$0000                     >>
   2067  3     834A 27   2D               beq   DRS_NextObjectB0           >>
   2068  5+1   834C EC   88 12            ldd   x_pixel,x                  >>
   2069  5+1   834F ED   88 3D            std   rsv_prev_x_pixel_0,x       >>
   2070  8     8352 BD   839C             jsr   DRS_XYToAddress
   2071  5+1   8355 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2072  5+1   8358 EF   88 39            stu   rsv_prev_mapping_frame_0,x >>
   2073  4+1   835B A6   40               lda   page_bckdraw_routine,u
   2074  5     835D B7   E7E5             sta   $E7E5                      >>
   2075  4+0   8360 33   A4               leau  ,y                         >>
   2076  6     8362 BF   8369             stx   DRS_dyn3B0+1               >>
   2077  7+4   8365 AD   98 01            jsr   [bckdraw_routine,x]        >>
   2078        8368               DRS_dyn3B0
   2079  3     8368 8E   0000             ldx   #$0000                     >>
   2080  5+1   836B EF   88 3B            stu   rsv_bgdata_0,x             >>
   2081  5+1   836E EC   88 32            ldd   rsv_x2_pixel,x             >>
   2082  5+1   8371 ED   88 3F            std   rsv_prev_x2_pixel_0,x      >>
   2083  2     8374 86   01               lda   #$01
   2084  4+1   8376 A7   88 41            sta   rsv_onscreen_0,x           >>
   2085        8379               DRS_NextObjectB0
   2086  5+1   8379 AE   88 37            ldx   rsv_priority_next_obj_0,x
   2087  3     837C 26   AE               bne   DRS_ProcessEachPriorityLeve>>
   2088  5     837E 39                    rts
   2089                            
   2090        837F               DRS_DrawWithoutBackupB0
   2091  5+1   837F EC   88 12            ldd   x_pixel,x                  >>
   2092  8     8382 BD   839C             jsr   DRS_XYToAddress
   2093  5+1   8385 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2094  4+1   8388 A6   43               lda   page_draw_routine,u
   2095  5     838A B7   E7E5             sta   $E7E5                      >>
   2096  6     838D BF   8394             stx   DRS_dyn4B0+1               >>
   2097  7+4   8390 AD   98 04            jsr   [draw_routine,x]           >>
   2098        8393               DRS_dyn4B0
   2099  3     8393 8E   0000             ldx   #$0000                     >>
   2100  5+1   8396 AE   88 37            ldx   rsv_priority_next_obj_0,x
   2101  3     8399 26   91               bne   DRS_ProcessEachPriorityLeve>>
   2102  5     839B 39                    rts
   2103
   2104        839C               DRS_XYToAddress
   2105  2     839C 44                    lsra                             >>
   2106  3     839D 25   14               bcs   DRS_XYToAddressRAMBFirst   >>
   2107        839F               DRS_XYToAddressRAMAFirst
   2108  5     839F B7   83AA             sta   DRS_dyn1+2
   2109  2     83A2 86   28               lda   #$28                       >>
   2110  4+1   83A4 E6   88 13            ldb   y_pixel,x                  >>
   2111  11    83A7 3D                    mul
   2112        83A8               DRS_dyn1
   2113  6     83A8 D3   00               addd  $0000                      >>
   2114  6     83AA FD   6120             std   Glb_Sprite_Screen_Pos_PartA>>
   2115  2     83AD 8A   20               ora   #$20                       >>
   2116  6     83AF FD   6122             std   Glb_Sprite_Screen_Pos_PartB>>
   2117  5     83B2 39                    rts
   2118        83B3               DRS_XYToAddressRAMBFirst
   2119  5     83B3 B7   83BE             sta   DRS_dyn2+2
   2120  2     83B6 86   28               lda   #$28                       >>
   2121  4+1   83B8 E6   88 13            ldb   y_pixel,x                  >>
   2122  11    83BB 3D                    mul
   2123        83BC               DRS_dyn2
   2124  7     83BC F3   2000             addd  $2000                      >>
   2125  6     83BF FD   6120             std   Glb_Sprite_Screen_Pos_PartA>>
   2126  7     83C2 B3   1FFF             subd  $1FFF
   2127  6     83C5 FD   6122             std   Glb_Sprite_Screen_Pos_PartB>>
   2128  5     83C8 39                    rts
   2129                            
   2130        83C9               DRS_ProcessEachPriorityLevelB1
   2131  4+1   83C9 A6   88 29            lda   rsv_render_flags,x
   2132  2     83CC 84   04               anda  #rsv_render_displaysprite_m>>
   2133  3     83CE 27   46               beq   DRS_NextObjectB1
   2134  4+1   83D0 A6   88 4F            lda   rsv_onscreen_1,x
   2135  3     83D3 26   41               bne   DRS_NextObjectB1
   2136  4+1   83D5 A6   02               lda   render_flags,x
   2137  2     83D7 84   10               anda  #render_fixedoverlay_mask
   2138  3     83D9 26   41               bne   DRS_DrawWithoutBackupB1
   2139  5+1   83DB EE   88 2C            ldu   rsv_curr_mapping_frame,x
   2140  4+1   83DE A6   49               lda   erase_nb_cell,u
   2141  8     83E0 BD   8439             jsr   BgBufferAlloc              >>
   2142  5     83E3 108C 0000             cmpy  #$0000                     >>
   2143  3     83E7 27   2D               beq   DRS_NextObjectB1           >>
   2144  5+1   83E9 EC   88 12            ldd   x_pixel,x                  >>
   2145  5+1   83EC ED   88 4B            std   rsv_prev_x_pixel_1,x       >>
   2146  8     83EF BD   839C             jsr   DRS_XYToAddress
   2147  5+1   83F2 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2148  5+1   83F5 EF   88 47            stu   rsv_prev_mapping_frame_1,x >>
   2149  4+1   83F8 A6   40               lda   page_bckdraw_routine,u
   2150  5     83FA B7   E7E5             sta   $E7E5                      >>
   2151  4+0   83FD 33   A4               leau  ,y                         >>
   2152  6     83FF BF   8406             stx   DRS_dyn3B1+1               >>
   2153  7+4   8402 AD   98 01            jsr   [bckdraw_routine,x]        >>
   2154        8405               DRS_dyn3B1
   2155  3     8405 8E   0000             ldx   #$0000                     >>
   2156  5+1   8408 EF   88 49            stu   rsv_bgdata_1,x             >>
   2157  5+1   840B EC   88 32            ldd   rsv_x2_pixel,x             >>
   2158  5+1   840E ED   88 4D            std   rsv_prev_x2_pixel_1,x      >>
   2159  2     8411 86   01               lda   #$01
   2160  4+1   8413 A7   88 4F            sta   rsv_onscreen_1,x           >>
   2161        8416               DRS_NextObjectB1
   2162  5+1   8416 AE   88 45            ldx   rsv_priority_next_obj_1,x
   2163  3     8419 26   AE               bne   DRS_ProcessEachPriorityLeve>>
   2164  5     841B 39                    rts
   2165                            
   2166        841C               DRS_DrawWithoutBackupB1
   2167  5+1   841C EC   88 12            ldd   x_pixel,x                  >>
   2168  8     841F BD   839C             jsr   DRS_XYToAddress
   2169  5+1   8422 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2170  4+1   8425 A6   43               lda   page_draw_routine,u
   2171  5     8427 B7   E7E5             sta   $E7E5                      >>
   2172  6     842A BF   8431             stx   DRS_dyn4B1+1               >>
   2173  7+4   842D AD   98 04            jsr   [draw_routine,x]           >>
   2174        8430               DRS_dyn4B1
   2175  3     8430 8E   0000             ldx   #$0000                     >>
   2176  5+1   8433 AE   88 45            ldx   rsv_priority_next_obj_1,x
   2177  3     8436 26   91               bne   DRS_ProcessEachPriorityLeve>>
   2178  5     8438 39                    rts
   2179
   2180                                   INCLUD BGBALLOC
   2181                           * --------------------------------------->>
   2182                           * BgBufferAlloc
   2183                           * -------------
   2184                           * Subroutine to allocate memory into back>>
   2185                           *
   2186                           * input  REG : [a] number of requested ce>>
   2187                           * output REG : [y] cell_end or 0000 if no>>
   2188                           * --------------------------------------->>
   2189
   2190        8439               BgBufferAlloc
   2191  5+3   8439 34   14               pshs  b,x
   2192  5     843B F6   611A             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2193  3     843E 26   09               bne   BBA1                       >>
   2194                            
   2195        8440               BBA0
   2196  3     8440 8E   6124             ldx   #Lst_FreeCellFirstEntry_0  >>
   2197  7     8443 10BE 6124             ldy   Lst_FreeCellFirstEntry_0   >>
   2198  3     8447 20   07               bra   BBA_Next
   2199                            
   2200        8449               BBA1
   2201  3     8449 8E   62ED             ldx   #Lst_FreeCellFirstEntry_1  >>
   2202  7     844C 10BE 62ED             ldy   Lst_FreeCellFirstEntry_1   >>
   2203                            
   2204        8450               BBA_Next
   2205  3     8450 27   2E               beq   BBA_rts                    >>
   2206  4+1   8452 A1   20               cmpa  nb_cells,y                 >>
   2207  3     8454 27   09               beq   BBA_FitCell                >>
   2208  3     8456 23   12               bls   BBA_DivideCell             >>
   2209  4+1   8458 30   25               leax  next_entry,y               >>
   2210  6+1   845A 10AE 25               ldy   next_entry,y               >>
   2211  3     845D 20   F1               bra   BBA_Next
   2212                            
   2213        845F               BBA_FitCell
   2214  5+1   845F EC   25               ldd   next_entry,y
   2215  5+0   8461 ED   84               std   ,x                         >>
   2216  6+1   8463 6F   20               clr   nb_cells,y                 >>
   2217  6+1   8465 10AE 23               ldy   cell_end,y                 >>
   2218  3     8468 20   16               bra   BBA_rts
   2219                            
   2220        846A               BBA_DivideCell
   2221  5     846A B7   8470             sta   BBA_dyn+1
   2222  4+1   846D E6   20               ldb   nb_cells,y
   2223        846F               BBA_dyn
   2224  2     846F C0   00               subb  #$00                       >>
   2225  4+1   8471 E7   20               stb   nb_cells,y                 >>
   2226                            
   2227  2     8473 C6   40               ldb   #cell_size
   2228  11    8475 3D                    mul
   2229  2     8476 8A   50               ora   #80                        >>
   2230  5+1   8478 AE   23               ldx   cell_end,y
   2231  4+4   847A 30   8B               leax  d,x                        >>
   2232  5+1   847C AF   23               stx   cell_end,y                 >>
   2233  4+0   847E 31   84               leay  ,x                         >>
   2234                            
   2235        8480               BBA_rts
   2236  5+5   8480 35   94               puls  b,x,pc
   2237
   2238                                   INCLUD BGBFREE
   2239                           * --------------------------------------->>
   2240                           * BgBufferFree
   2241                           * ------------
   2242                           * Subroutine to free memory from backgrou>>
   2243                           *
   2244                           * input  REG : [x] cell_start
   2245                           *              [y] cell_end
   2246                           * output REG : none
   2247                           * --------------------------------------->>
   2248
   2249        8482               BgBufferFree
   2250  5+4   8482 34   46               pshs  d,u
   2251  3     8484 CC   0000             ldd   #$0000
   2252  6     8487 FD   84D5             std   BBF_SetNewEntryNextentry+1 >>
   2253  5     848A F6   611A             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2254  3     848D 26   10               bne   BBF1                       >>
   2255                            
   2256        848F               BBF0
   2257  5+1   848F EE   C8 39            ldu   rsv_prev_mapping_frame_0,u >>
   2258  4+1   8492 A6   49               lda   erase_nb_cell,u            >>
   2259  6     8494 FE   6126             ldu   Lst_FreeCell_0             >>
   2260  6     8497 FF   84C3             stu   BBF_AddNewEntryAtEnd+4     >>
   2261  6     849A FE   6124             ldu   Lst_FreeCellFirstEntry_0   >>
   2262  3     849D 20   0E               bra   BBF_Next
   2263                            
   2264        849F               BBF1
   2265  5+1   849F EE   C8 47            ldu   rsv_prev_mapping_frame_1,u
   2266  4+1   84A2 A6   49               lda   erase_nb_cell,u
   2267  6     84A4 FE   62EF             ldu   Lst_FreeCell_1
   2268  6     84A7 FF   84C3             stu   BBF_AddNewEntryAtEnd+4
   2269  6     84AA FE   62ED             ldu   Lst_FreeCellFirstEntry_1
   2270                            
   2271        84AD               BBF_Next
   2272  3     84AD 27   10               beq   BBF_AddNewEntryAtEnd       >>
   2273  7+1   84AF 10AC 41               cmpy  cell_start,u               >>
   2274  3     84B2 27   29               beq   BBF_ExpandAtStart          >>
   2275  3     84B4 22   48               bhi   BBF_ExpandAtEnd            >>
   2276  5+1   84B6 EE   45               ldu   next_entry,u               >>
   2277  3     84B8 20   F3               bra   BBF_Next
   2278                            
   2279        84BA               BBF_AddNewEntry
   2280  6     84BA FF   84D5             stu   BBF_SetNewEntryNextentry+1
   2281  4+1   84BD 33   45               leau  next_entry,u               >>
   2282        84BF               BBF_AddNewEntryAtEnd
   2283  6     84BF FF   84DA             stu   BBF_SetNewEntryPrevLink+1  >>
   2284  3     84C2 CE   0000             ldu   #$0000                     >>
   2285        84C5               BBF_FindFreeSlot
   2286  4+1   84C5 E6   40               ldb   nb_cells,u                 >>
   2287  3     84C7 27   04               beq   BBF_SetNewEntry            >>
   2288  4+1   84C9 33   47               leau  entry_size,u               >>
   2289  3     84CB 20   F8               bra   BBF_FindFreeSlot           >>
   2290        84CD               BBF_SetNewEntry
   2291  4+1   84CD A7   40               sta   nb_cells,u                 >>
   2292  5+1   84CF AF   41               stx   cell_start,u               >>
   2293  6+1   84D1 10AF 43               sty   cell_end,u                 >>
   2294        84D4               BBF_SetNewEntryNextentry
   2295  3     84D4 8E   0000             ldx   #$0000                     >>
   2296  5+1   84D7 AF   45               stx   next_entry,u               >>
   2297        84D9               BBF_SetNewEntryPrevLink
   2298  5     84D9 DF   00               stu   $0000                      >>
   2299  3     84DB 20   2C               bra   BBF_rts
   2300
   2301        84DD               BBF_ExpandAtStart
   2302  5+1   84DD AF   41               stx   cell_start,u
   2303  4+1   84DF AB   40               adda  nb_cells,u
   2304  4+1   84E1 A7   40               sta   nb_cells,u
   2305  6+1   84E3 10AE 45               ldy   next_entry,u
   2306  3     84E6 27   21               beq   BBF_rts
   2307        84E8               BBF_Join
   2308  6+1   84E8 AC   23               cmpx  cell_end,y
   2309  3     84EA 26   1D               bne   BBF_rts
   2310  5+1   84EC EC   21               ldd   cell_start,y
   2311  5+1   84EE ED   41               std   cell_start,u
   2312  4+1   84F0 A6   20               lda   nb_cells,y
   2313  4+1   84F2 AB   40               adda  nb_cells,u
   2314  4+1   84F4 A7   40               sta   nb_cells,u
   2315  6+1   84F6 6F   20               clr   nb_cells,y                 >>
   2316  5+1   84F8 EC   25               ldd   next_entry,y
   2317  5+1   84FA ED   45               std   next_entry,u               >>
   2318  3     84FC 20   0B               bra   BBF_rts
   2319
   2320        84FE               BBF_ExpandAtEnd
   2321  6+1   84FE AC   43               cmpx  cell_end,u
   2322  3     8500 26   B8               bne   BBF_AddNewEntry
   2323  6+1   8502 10AF 43               sty   cell_end,u
   2324  4+1   8505 AB   40               adda  nb_cells,u
   2325  4+1   8507 A7   40               sta   nb_cells,u
   2326                            
   2327        8509               BBF_rts
   2328  5+6   8509 35   C6               puls  d,u,pc
----------------
5134 cycle(s)
9227 byte(s)
----------------
    162

000000 Total Errors

000425 Total Symbols
     1x          Label 7D2F am_ObjectMove_01
     1x          Label 7D45 am_ObjectMove_02
     3x          Label 7BF3 am_RunNextObject
     2x          Label 7B23 am_SwapVideoPage
     2x          Equ   0004 anim
     0x          Label 7C9F AnimateSprite
     1x          Label 7CCF Anim_dyn
     1x          Label 7D1E Anim_End
     1x          Label 7D15 Anim_End_FA
     1x          Label 7D0A Anim_End_FB
     1x          Label 7CFA Anim_End_FC
     1x          Label 7CF2 Anim_End_FD
     1x          Label 7CE1 Anim_End_FE
     1x          Label 7CE9 Anim_End_FE_dyn
     1x          Label 7CD6 Anim_End_FF
     8x          Equ   0008 anim_frame
     4x          Equ   0009 anim_frame_duration
     2x          Label 7CC1 Anim_Next
     1x          Label 7CAD Anim_Run
     1x          Label 7CD5 Anim_Wait
     0x          Label 8440 BBA0
     1x          Label 8449 BBA1
     1x          Label 846A BBA_DivideCell
     1x          Label 846F BBA_dyn
     1x          Label 845F BBA_FitCell
     2x          Label 8450 BBA_Next
     2x          Label 8480 BBA_rts
     0x          Label 848F BBF0
     1x          Label 849F BBF1
     1x          Label 84BA BBF_AddNewEntry
     3x          Label 84BF BBF_AddNewEntryAtEnd
     1x          Label 84FE BBF_ExpandAtEnd
     1x          Label 84DD BBF_ExpandAtStart
     1x          Label 84C5 BBF_FindFreeSlot
     0x          Label 84E8 BBF_Join
     2x          Label 84AD BBF_Next
     4x          Label 8509 BBF_rts
     1x          Label 84CD BBF_SetNewEntry
     2x          Label 84D4 BBF_SetNewEntryNextentry
     1x          Label 84D9 BBF_SetNewEntryPrevLink
     2x          Equ   0001 bckdraw_routine
     2x          Label 8439 BgBufferAlloc
     2x          Label 8482 BgBufferFree
     0x          Label 7B5E Black_palette
     0x          Equ   0007 buf_bgdata
     2x          Equ   0024 buf_Lst_Priority_Unset
     2x          Equ   000D buf_onscreen
     1x          Equ   0005 buf_prev_mapping_frame
     0x          Equ   000B buf_prev_x2_pixel
     1x          Equ   0009 buf_prev_x_pixel
     0x          Equ   000C buf_prev_y2_pixel
     0x          Equ   000A buf_prev_y_pixel
     5x          Equ   0000 buf_priority
     5x          Equ   0003 buf_priority_next_obj
     2x          Equ   0001 buf_priority_prev_obj
    33x          Equ   0000 buf_Tbl_Priority_First_Entry
    18x          Equ   0012 buf_Tbl_Priority_Last_Entry
     0x          Equ   0040 c1_button_A_mask
     0x          Equ   0002 c1_button_down_mask
     0x          Equ   0004 c1_button_left_mask
     0x          Equ   0008 c1_button_right_mask
     0x          Equ   0001 c1_button_up_mask
     0x          Equ   0080 c2_button_A_mask
     0x          Equ   0020 c2_button_down_mask
     0x          Equ   0040 c2_button_left_mask
     0x          Equ   0080 c2_button_right_mask
     0x          Equ   0010 c2_button_up_mask
     7x          Equ   0003 cell_end
     3x          Equ   0040 cell_size
     5x          Equ   0001 cell_start
     0x          Equ   6000 cell_start_adr
     1x          Label 7DD1 CheckSpritesRefresh
     3x          Label 7D9B ClearObj
     1x          Label 7DC3 CLO_1
     1x          Label 7DC7 CLO_2
     3x          Label 7B3D cpt
     0x          Label 7EAE CSR_CheckDelHide
     2x          Label 7F90 CSR_CheckDraw
     3x          Label 7F53 CSR_CheckErase
     0x          Label 7EC8 CSR_CheckPlayFieldCoord
     1x          Label 7F34 CSR_CheckVerticalPosition
     1x          Label 7F0E CSR_DoNotDisplaySprite
     2x          Label 7F2D CSR_NextObject
     1x          Label 7E36 CSR_P1B0
     1x          Label 7E96 CSR_P1B1
     1x          Label 7E2B CSR_P2B0
     1x          Label 7E8B CSR_P2B1
     1x          Label 7E20 CSR_P3B0
     1x          Label 7E80 CSR_P3B1
     1x          Label 7E15 CSR_P4B0
     1x          Label 7E75 CSR_P4B1
     1x          Label 7E0A CSR_P5B0
     1x          Label 7E6A CSR_P5B1
     1x          Label 7DFF CSR_P6B0
     1x          Label 7E5F CSR_P6B1
     1x          Label 7DF4 CSR_P7B0
     1x          Label 7E54 CSR_P7B1
     0x          Label 7DE7 CSR_P8B0
     0x          Label 7E47 CSR_P8B1
    21x          Label 7EA2 CSR_ProcessEachPriorityLevel
     1x          Label 7E41 CSR_rtsB0
     1x          Label 7EA1 CSR_rtsB1
     0x          Label 7DE2 CSR_SetBuffer0
     1x          Label 7E42 CSR_SetBuffer1
     3x          Label 7FC3 CSR_SetDrawFalse
     0x          Label 7FB1 CSR_SetDrawTrue
     2x          Label 7F8B CSR_SetEraseFalse
     3x          Label 7F7E CSR_SetEraseTrue
    10x          Label 7F4B CSR_SetOutOfRange
     0x          Label 7DD1 CSR_Start
     0x          Label 7EB4 CSR_UpdSpriteImageBasedOnMirror
    18x          Label 7DCB cur_priority
     5x          Label 7DCF cur_ptr_sub_obj_draw
     7x          Label 7DCD cur_ptr_sub_obj_erase
     0x          Label 7D67 DeleteObject
     0x          Label 7D61 DeleteObject_x
     2x          Label 7C3A DisplaySprite
     0x          Label 7C34 DisplaySprite_x
     0x          Equ   604F dk_destination
     0x          Equ   6049 dk_lecteur
     0x          Equ   604A dk_piste
     0x          Equ   604C dk_secteur
     1x          Label 7D99 DOB_rts
     1x          Label 7D69 DOB_Start
     0x          Label 7D78 DOB_TestOnscreen1
     1x          Label 7D89 DOB_TestOnscreen1Delete
     2x          Label 7D93 DOB_ToDeleteFlag
     0x          Label 7D6E DOB_Unset0
     1x          Label 7D7D DOB_Unset1
     2x          Label 7BC5 Dpad_Held
     0x          Label 7BC7 Dpad_Press
    27x          Label 64B6 DPS_buffer_0
    25x          Label 6556 DPS_buffer_1
     1x          Label 82A5 DrawSprites
     2x          Equ   0004 draw_routine
     1x          Label 837F DRS_DrawWithoutBackupB0
     1x          Label 841C DRS_DrawWithoutBackupB1
     1x          Label 83A8 DRS_dyn1
     1x          Label 83BC DRS_dyn2
     1x          Label 8368 DRS_dyn3B0
     1x          Label 8405 DRS_dyn3B1
     1x          Label 8393 DRS_dyn4B0
     1x          Label 8430 DRS_dyn4B1
     3x          Label 8379 DRS_NextObjectB0
     3x          Label 8416 DRS_NextObjectB1
     1x          Label 82E2 DRS_P1B0
     1x          Label 8323 DRS_P1B1
     1x          Label 82DA DRS_P2B0
     1x          Label 831B DRS_P2B1
     1x          Label 82D2 DRS_P3B0
     1x          Label 8313 DRS_P3B1
     1x          Label 82CA DRS_P4B0
     1x          Label 830B DRS_P4B1
     1x          Label 82C2 DRS_P5B0
     1x          Label 8303 DRS_P5B1
     1x          Label 82BA DRS_P6B0
     1x          Label 82FB DRS_P6B1
     1x          Label 82B2 DRS_P7B0
     1x          Label 82F3 DRS_P7B1
     0x          Label 82AA DRS_P8B0
     1x          Label 82EB DRS_P8B1
    10x          Label 832C DRS_ProcessEachPriorityLevelB0
    10x          Label 83C9 DRS_ProcessEachPriorityLevelB1
     1x          Label 82EA DRS_rtsB0
     1x          Label 832B DRS_rtsB1
     0x          Label 82A5 DRS_Start
     4x          Label 839C DRS_XYToAddress
     0x          Label 839F DRS_XYToAddressRAMAFirst
     1x          Label 83B3 DRS_XYToAddressRAMBFirst
     0x          Label 7C64 DSP_addFirstNode
     1x          Label 7C73 DSP_addToExistingNode
     1x          Label 7C51 DSP_BufferPositionned
     1x          Label 7C8C DSP_ChangePriority
     1x          Label 7C5D DSP_CheckLastEntry
     0x          Label 7C5B DSP_InitPriority
     1x          Label 7C7F DSP_LinkBuffer1
     1x          Label 7C82 DSP_LinkCurWithPrev
     3x          Label 7C9D DSP_rts
     0x          Label 7C41 DSP_SetBuffer0
     1x          Label 7C4A DSP_SetBuffer1
     1x          Label 7C3C DSP_Start
     1x          Label 678A Dynamic_Object_RAM
     3x          Label 79FA Dynamic_Object_RAM_End
     3x          Equ   0007 entry_size
     1x          Label 7FCF EraseSprites
     4x          Equ   0009 erase_nb_cell
     2x          Equ   0007 erase_routine
     1x          Label 8108 ESP_CallEraseRoutineB0
     1x          Label 811B ESP_CallEraseRoutineB0_00
     1x          Label 819D ESP_CallEraseRoutineB1
     1x          Label 81B0 ESP_CallEraseRoutineB1_00
     0x          Label 80A7 ESP_CheckEraseB0
     0x          Label 813C ESP_CheckEraseB1
     8x          Label 809B ESP_CheckPriorityB0
     8x          Label 8130 ESP_CheckPriorityB1
     0x          Label 8125 ESP_FreeEraseBufferB0
     0x          Label 81BA ESP_FreeEraseBufferB1
     3x          Label 80D7 ESP_NextObjectB0
     3x          Label 816C ESP_NextObjectB1
     0x          Label 7FD4 ESP_P1B0
     1x          Label 802F ESP_P1B1
     1x          Label 7FE1 ESP_P2B0
     1x          Label 803C ESP_P2B1
     1x          Label 7FEC ESP_P3B0
     1x          Label 8049 ESP_P3B1
     1x          Label 7FF7 ESP_P4B0
     1x          Label 8056 ESP_P4B1
     1x          Label 8002 ESP_P5B0
     1x          Label 8063 ESP_P5B1
     1x          Label 800D ESP_P6B0
     1x          Label 8070 ESP_P6B1
     1x          Label 8018 ESP_P7B0
     1x          Label 807D ESP_P7B1
     1x          Label 8023 ESP_P8B0
     1x          Label 808A ESP_P8B1
     9x          Label 8098 ESP_ProcessEachPriorityLevelB0
     9x          Label 812D ESP_ProcessEachPriorityLevelB1
     1x          Label 802E ESP_rtsB0
     1x          Label 8097 ESP_rtsB1
     0x          Label 7FCF ESP_Start
     2x          Label 8102 ESP_SubCheckOverlayB0
     2x          Label 8197 ESP_SubCheckOverlayB1
     0x          Label 80E8 ESP_SubDrawCheckCollisionB0
     0x          Label 817D ESP_SubDrawCheckCollisionB1
     4x          Label 80E0 ESP_SubDrawSearchB0
     4x          Label 8175 ESP_SubDrawSearchB1
     1x          Label 80DD ESP_SubDrawSpriteSearchInitB0
     1x          Label 8172 ESP_SubDrawSpriteSearchInitB1
     0x          Label 80BB ESP_SubEraseCheckCollisionB0
     0x          Label 8150 ESP_SubEraseCheckCollisionB1
     4x          Label 80B3 ESP_SubEraseSearchB0
     4x          Label 8148 ESP_SubEraseSearchB1
     0x          Label 80B0 ESP_SubEraseSpriteSearchInitB0
     0x          Label 8145 ESP_SubEraseSpriteSearchInitB1
     0x          Label 809F ESP_UnsetCheckRefreshB0
     0x          Label 8134 ESP_UnsetCheckRefreshB1
     1x          Label 8128 ESP_UnsetOnScreenFlagB0
     1x          Label 81BD ESP_UnsetOnScreenFlagB1
     0x          Equ   001B ext_variables
     2x          Label 7BC6 Fire_Held
     0x          Label 7BC8 Fire_Press
     0x          Label 7AF3 Glb_Abs_H_Distance_Mainc
     1x          Label 611C Glb_Camera_X_Pos
     1x          Label 611E Glb_Camera_Y_Pos
     0x          Label 7AEB Glb_Closest_Player
    10x          Label 611A Glb_Cur_Wrk_Screen_Id
     1x          Label 611B Glb_Cur_Wrk_Screen_Id_x2
     0x          Label 7AF5 Glb_H_Distance_Sidek
     1x          Label 7AEA Glb_MainCharacter_Is_Dead
     0x          Label 7AEF Glb_Player_H_Distance
     0x          Label 7AEE Glb_Player_Is_Above
     0x          Label 7AED Glb_Player_Is_Left
     0x          Label 7AF1 Glb_Player_V_Distance
     2x          Label 6120 Glb_Sprite_Screen_Pos_PartA
     2x          Label 6122 Glb_Sprite_Screen_Pos_PartB
     0x          Equ   00FE goBackNFrames
     0x          Equ   00FD goToAnimation
     0x          Equ   0038 gravity
     0x          Equ   0000 id
     1x          Equ   0010 image_meta_size
     1x          Equ   000A image_x_offset
     1x          Equ   000E image_x_size
     1x          Equ   000C image_y_offset
     2x          Equ   000F image_y_size
     0x          Label 7BC5 Joypads
     1x          Label 7BC5 Joypads_Held
     1x          Label 7BC7 Joypads_Press
     1x          Label 6100 LevelMainLoop
     1x          Label 79FA LevelOnly_Object_RAM
     1x          Label 7AEA LevelOnly_Object_RAM_End
     3x          Label 6124 Lst_FreeCellFirstEntry_0
     3x          Label 62ED Lst_FreeCellFirstEntry_1
     1x          Label 6126 Lst_FreeCell_0
     1x          Label 62EF Lst_FreeCell_1
     8x          Label 64DA Lst_Priority_Unset_0
     7x          Label 657A Lst_Priority_Unset_1
     2x          Equ   000A mapping_frame
     0x          Label 7C32 MarkObjGone
    14x          Equ   0000 nb_cells
     2x          Equ   003B nb_dynamic_objects
     2x          Equ   0082 nb_free_cells
     0x          Equ   0003 nb_level_objects
     4x          Equ   003D nb_objects
     4x          Equ   0008 nb_priority_levels
     1x          Equ   0002 nb_reserved_objects
     0x          Equ   00FC nextRoutine
     0x          Equ   00FA nextSubRoutine
     9x          Equ   0005 next_entry
     4x          Equ   0050 next_object
     1x          Label 7B3E Normal_palette
     0x          Label 7D1F ObjectMove
     1x          Label 66EA Object_RAM
     2x          Label 7AEA Object_RAM_End
     8x          Equ   0050 object_size
     0x          Label 66EA Obj_MainCharacter
     0x          Label 673A Obj_Sidekick
     0x          Label 7A4A Obj_SonicDust
     0x          Label 7A9A Obj_TailsDust
     0x          Label 79FA Obj_TailsTails
     2x          Equ   0000 page_bckdraw_routine
     2x          Equ   0003 page_draw_routine
     2x          Equ   0006 page_erase_routine
     2x          Equ   0006 prev_anim
     5x          Equ   0003 priority
     2x          Equ   0000 Ptr_palette
     1x          Label 7BC9 ReadJoypads
     4x          Equ   0010 render_fixedoverlay_mask
    15x          Equ   0002 render_flags
     0x          Equ   0040 render_free2_mask
     0x          Equ   0080 render_free3_mask
     2x          Equ   0008 render_hide_mask
     1x          Equ   0004 render_playfieldcoord_mask
     4x          Equ   0020 render_todelete_mask
     2x          Equ   0001 render_xmirror_mask
     2x          Equ   0002 render_ymirror_mask
     1x          Label 66EA Reserved_Object_RAM
     1x          Label 678A Reserved_Object_RAM_End
     0x          Equ   00FF resetAnim
     0x          Equ   00FB resetAnimAndSubRoutine
     2x          Equ   0018 routine
     3x          Equ   0019 routine_secondary
     3x          Equ   003B rsv_bgdata_0
     3x          Equ   0049 rsv_bgdata_1
     2x          Equ   0034 rsv_buffer_0
     2x          Equ   0042 rsv_buffer_1
    10x          Equ   002C rsv_curr_mapping_frame
     6x          Equ   0041 rsv_onscreen_0
     9x          Equ   004F rsv_onscreen_1
     0x          Equ   002A rsv_prev_anim
     3x          Equ   0039 rsv_prev_mapping_frame_0
     3x          Equ   0047 rsv_prev_mapping_frame_1
     2x          Equ   003F rsv_prev_x2_pixel_0
     2x          Equ   004D rsv_prev_x2_pixel_1
     2x          Equ   003D rsv_prev_x_pixel_0
     2x          Equ   004B rsv_prev_x_pixel_1
     0x          Equ   0040 rsv_prev_y2_pixel_0
     0x          Equ   004E rsv_prev_y2_pixel_1
     0x          Equ   003E rsv_prev_y_pixel_0
     0x          Equ   004C rsv_prev_y_pixel_1
     4x          Equ   0034 rsv_priority_0
     4x          Equ   0042 rsv_priority_1
     9x          Equ   0037 rsv_priority_next_obj_0
     9x          Equ   0045 rsv_priority_next_obj_1
     5x          Equ   0035 rsv_priority_prev_obj_0
     5x          Equ   0043 rsv_priority_prev_obj_1
     3x          Equ   0030 rsv_ptr_sub_object_draw
     4x          Equ   002E rsv_ptr_sub_object_erase
     4x          Equ   0001 rsv_render_checkrefresh_mask
     5x          Equ   0004 rsv_render_displaysprite_mask
     6x          Equ   0002 rsv_render_erasesprite_mask
    23x          Equ   0029 rsv_render_flags
     4x          Equ   0008 rsv_render_outofrange_mask
     9x          Equ   0032 rsv_x2_pixel
     5x          Equ   0033 rsv_y2_pixel
     1x          Label 7BF0 RunNextObject
     2x          Label 7C28 RunNextObjectDisplayOnly
     3x          Label 7BEA RunObject
     2x          Label 7C1E RunObjectDisplayOnly
     1x          Label 7BE1 RunObjects
     1x          Label 7BFA RunObjectsWhenPlayerIsDead
     0x          Label 7BE5 RunObjects_01
     0x          Label 7BF9 RunObjects_End
     2x          Equ   00C8 screen_height
     1x          Equ   00A0 screen_width
     1x          Label 7BAD SetColor
     0x          Label 7D4A SingleObjLoad2
     1x          Label 7D54 SingleObjLoad2_01
     2x          Label 7D60 SingleObjLoad2_02
     1x          Equ   001A status
     0x          Equ   0004 status_bit2
     0x          Equ   0080 status_bit7
     0x          Equ   0002 status_inair
     0x          Equ   0010 status_jumpingafterrolling
     0x          Equ   0004 status_jumporroll
     0x          Equ   0020 status_mainchar_pushing
     0x          Equ   0008 status_mainchar_standing
     0x          Equ   0008 status_norgroundnorfall
     0x          Equ   0020 status_pushing
     0x          Equ   0040 status_sidekick_pushing
     0x          Equ   0010 status_sidekick_standing
     0x          Equ   0040 status_underwater
     1x          Equ   0001 status_x_orientation
     1x          Equ   0002 status_y_orientation
     0x          Equ   0001 subtype
     0x          Label 7B16 SwapVideoPage
     1x          Label 7B37 SwapVideoPage_01
     1x          Label 64B6 Tbl_Priority_First_Entry_0
     1x          Label 6556 Tbl_Priority_First_Entry_1
     2x          Label 64C8 Tbl_Priority_Last_Entry_0
     1x          Label 6568 Tbl_Priority_Last_Entry_1
     1x          Label 6670 Tbl_Sub_Object_Draw
     1x          Label 65F6 Tbl_Sub_Object_Erase
     0x          Label 81C7 UDP_B0
     1x          Label 8236 UDP_B1
     1x          Label 8210 UDP_ChainNextB0
     1x          Label 827F UDP_ChainNextB1
     1x          Label 81EF UDP_ChainPrevB0
     1x          Label 825E UDP_ChainPrevB1
     1x          Label 821A UDP_CheckDeleteB0
     1x          Label 8289 UDP_CheckDeleteB1
     2x          Label 81CA UDP_CheckEndB0
     2x          Label 8239 UDP_CheckEndB1
     1x          Label 81F9 UDP_CheckPrioNextB0
     1x          Label 8268 UDP_CheckPrioNextB1
     1x          Label 81D6 UDP_CheckPrioPrevB0
     1x          Label 8245 UDP_CheckPrioPrevB1
     0x          Label 81CF UDP_InitListB0
     0x          Label 823E UDP_InitListB1
     3x          Label 822F UDP_SetNewPrioB0
     3x          Label 829E UDP_SetNewPrioB1
     0x          Label 81C2 UDP_Start
     1x          Label 81C2 UnsetDisplayPriority
     1x          Label 7B9E UpdatePalette
     2x          Label 7B3B Vint_runcount
     2x          Label 7AF7 WaitVBL
     1x          Label 7AFC WaitVBL_01
     0x          Label 7B7E White_palette
    12x          Equ   0012 x_pixel
     5x          Equ   000C x_pos
     0x          Equ   000E x_sub
     2x          Equ   0014 x_vel
     8x          Equ   0013 y_pixel
     5x          Equ   000F y_pos
     0x          Equ   0011 y_sub
     2x          Equ   0016 y_vel

