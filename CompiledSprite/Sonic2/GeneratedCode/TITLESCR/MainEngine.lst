/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : .\Sonic2\GeneratedCode\TITLESCR\MainEngine.asm
 * Fichier destination : .\Sonic2\GeneratedCode\TMP.BIN
 * Contenu :
 *     Main     0:MAIN.ASM     4017
 *     Include  0:CONSTANT.ASM 5657
 *     Include  0:WAITVBL.ASM  1795
 *     Include  0:READJPDS.ASM 1855
 *     Include  0:RUNOBJTS.ASM 1312
 *     Include  0:MRKOBJGN.ASM 481
 *     Include  0:DISPLSPR.ASM 2223
 *     Include  0:ANIMSPR.ASM  1998
 *     Include  0:OBJMOVE.ASM  752
 *     Include  0:OBJLOAD.ASM  1109
 *     Include  0:DELETOBJ.ASM 2732
 *     Include  0:CLEAROBJ.ASM 602
 *     Include  0:CHECKSPR.ASM 9373
 *     Include  0:ERASESPR.ASM 4844
 *     Include  0:UNSETDSP.ASM 2832
 *     Include  0:DRAWSPR.ASM  5919
 *     Include  0:BGBALLOC.ASM 1029
 *     Include  0:BGBFREE.ASM  1879
 *     Include  0:PLAYPCM.ASM  1188
 *     Include  0:PSGLIB.ASM   16956
 *     Include  0:IMAGEIDX.ASM 2690
 *     Include  0:ANIMSCPT.ASM 538
 *     Include  0:OBJINDEX.ASM 6715
 *     Include  0:SOUNDIDX.ASM 174
 *     Include  0:LOADACT.ASM  431
 *     Include  0:CLRCARTM.ASM 559
 *     Include  0:PALETTE.ASM  259
 *     Include  0:UPDTPAL.ASM  562
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
    197                                   INCLUD CONSTANT
    198                           * --------------------------------------->>
    199                           * Constants
    200                           *
    201                           * Naming convention
    202                           * -----------------
    203                           * - lower case
    204                           * - underscore-separated names
    205                           *
    206                           * --------------------------------------->>
    207
    208                           * =======================================>>
    209                           * TO8 Registers
    210                           * =======================================>>
    211
    212                  6049     dk_lecteur                    equ $6049
    213                  604A     dk_piste                      equ $604A
    214                  604B     dk_pisteL                     equ $604B
    215                  604C     dk_secteur                    equ $604C
    216                  604F     dk_destination                equ $604F
    217
    218                           * =======================================>>
    219                           * Display Constants
    220                           * =======================================>>
    221
    222                  00A0     screen_width                  equ 160 ; s>>
    223                  001C     screen_top                    equ 28 ; in>>
    224                  00E4     screen_bottom                 equ 200+28 >>
    225                  0008     nb_priority_levels            equ 8   ; n>>
    226
    227                           * =======================================>>
    228                           * Physics Constants
    229                           * =======================================>>
    230
    231                  0038     gravity                       equ $38 ; G>>
    232
    233                           * =======================================>>
    234                           * Animation Constants
    235                           * =======================================>>
    236
    237                  00FF     _resetAnim                    equ $FF
    238                  00FE     _goBackNFrames                equ $FE
    239                  00FD     _goToAnimation                equ $FD
    240                  00FC     _nextRoutine                  equ $FC
    241                  00FB     _resetAnimAndSubRoutine       equ $FB
    242                  00FA     _nextSubRoutine               equ $FA
    243
    244                           * =======================================>>
    245                           * Images Constants
    246                           * =======================================>>
    247
    248                  0004     image_x_size                  equ 4
    249                  0005     image_y_size                  equ 5
    250
    251                  0004     image_subset_x1_offset        equ 4
    252                  0005     image_subset_y1_offset        equ 5
    253
    254                  0000     page_draw_routine             equ 0
    255                  0001     draw_routine                  equ 1
    256                  0003     page_erase_routine            equ 3
    257                  0004     erase_routine                 equ 4
    258                  0006     erase_nb_cell                 equ 6
    259
    260                           * =======================================>>
    261                           * Sound Constants
    262                           * =======================================>>
    263
    264                  0000     pcm_page        equ 0
    265                  0001     pcm_start_addr  equ 1
    266                  0003     pcm_end_addr    equ 3
    267                  0005     pcm_meta_size   equ 5
    268
    269                           * =======================================>>
    270                           * Object Constants
    271                           * =======================================>>
    272
    273                  0002     nb_reserved_objects           equ 2
    274                  001B     nb_dynamic_objects            equ 27
    275                  0003     nb_level_objects              equ 3
    276                  0040     nb_objects                    equ 64 * ma>>
    277
    278                           * --------------------------------------->>
    279                           * Object Status Table offsets
    280                           * --------------------------------------->>
    281
    282                  005A     object_size                   equ 90 ; th>>
    283                  005A     next_object                   equ object_>>
    284
    285                  0000     id                            equ 0      >>
    286                  0001     subtype                       equ 1      >>
    287                  0002     render_flags                  equ 2
    288
    289                           * --- render_flags bitfield variables --->>
    290                  0001     render_xmirror_mask           equ $01 ; (>>
    291                  0002     render_ymirror_mask           equ $02 ; (>>
    292                  0004     render_overlay_mask           equ $04 ; (>>
    293                  0008     render_motionless_mask        equ $08 ; (>>
    294                  0010     render_playfieldcoord_mask    equ $10 ; (>>
    295                  0020     render_hide_mask              equ $20 ; (>>
    296                  0040     render_todelete_mask          equ $40 ; (>>
    297                  0080     render_free3_mask             equ $80 ; (>>
    298                            
    299                  0003     priority                      equ 3      >>
    300                  0004     anim                          equ 4  ; an>>
    301                  0006     prev_anim                     equ 6  ; an>>
    302                  0008     anim_frame                    equ 8      >>
    303                  0009     anim_frame_duration           equ 9      >>
    304                  000A     image_set                     equ 10 ; an>>
    305                  000C     x_pos                         equ 12 ; an>>
    306                  000E     x_sub                         equ 14     >>
    307                  000F     y_pos                         equ 15 ; an>>
    308                  0011     y_sub                         equ 17     >>
    309                  0012     xy_pixel                      equ 18     >>
    310                  0012     x_pixel                       equ 18     >>
    311                  0013     y_pixel                       equ 19     >>
    312                  0014     x_vel                         equ 20 ; an>>
    313                  0016     y_vel                         equ 22 ; an>>
    314                  0018     routine                       equ 24     >>
    315                  0019     routine_secondary             equ 25     >>
    316                  001A     status                        equ 26
    317
    318                           * --- status bitfield variables for objec>>
    319                  0001     status_x_orientation          equ   $01 ;>>
    320                  0002     status_y_orientation          equ   $02 ;>>
    321                  0004     status_bit2                   equ   $04 ;>>
    322                  0008     status_mainchar_standing      equ   $08 ;>>
    323                  0010     status_sidekick_standing      equ   $10 ;>>
    324                  0020     status_mainchar_pushing       equ   $20 ;>>
    325                  0040     status_sidekick_pushing       equ   $40 ;>>
    326                  0080     status_bit7                   equ   $80 ;>>
    327
    328                           * --- status bitfield variables for Main >>
    329                  0002     status_inair                  equ   $02 ;>>
    330                  0004     status_jumporroll             equ   $04 ;>>
    331                  0008     status_norgroundnorfall       equ   $08 ;>>
    332                  0010     status_jumpingafterrolling    equ   $10 ;>>
    333                  0020     status_pushing                equ   $20 ;>>
    334                  0040     status_underwater             equ   $40 ;>>
    335
    336                  001B     ext_variables                 equ 27 ; to>>
    337
    338                           * --------------------------------------->>
    339                           * reserved variables (engine)
    340
    341                  0029     rsv_render_flags              equ 41
    342
    343                           * --- rsv_render_flags bitfield variables>>
    344                  0001     rsv_render_checkrefresh_mask  equ $01 ; (>>
    345                  0002     rsv_render_erasesprite_mask   equ $02 ; (>>
    346                  0004     rsv_render_displaysprite_mask equ $04 ; (>>
    347                  0008     rsv_render_outofrange_mask    equ $08 ; (>>
    348
    349                  002A     rsv_prev_anim                 equ 42 ; an>>
    350                           *rsv_image_set                equ 44 ; an>>
    351                  002E     rsv_image_subset              equ 46 ; an>>
    352                  0030     rsv_mapping_frame             equ 48 ; an>>
    353                  0032     rsv_xy1_pixel                 equ 50     >>
    354                  0032     rsv_x1_pixel                  equ 50     >>
    355                  0033     rsv_y1_pixel                  equ 51     >>
    356                  0034     rsv_xy2_pixel                 equ 52     >>
    357                  0034     rsv_x2_pixel                  equ 52     >>
    358                  0035     rsv_y2_pixel                  equ 53     >>
    359
    360                           * --------------------------------------->>
    361                           * reserved variables (engine) - buffer sp>>
    362
    363                  0036     rsv_buffer_0                  equ 54 ; St>>
    364                  0036     rsv_priority_0                equ 54 ; in>>
    365                  0037     rsv_priority_prev_obj_0       equ 55 ; an>>
    366                  0039     rsv_priority_next_obj_0       equ 57 ; an>>
    367                           *rsv_prev_image_subset_0       equ 59 ; a>>
    368                  003D     rsv_prev_mapping_frame_0      equ 61 ; an>>
    369                  003F     rsv_bgdata_0                  equ 63 ; an>>
    370                  0041     rsv_prev_xy_pixel_0           equ 65 ;
    371                  0041     rsv_prev_x_pixel_0            equ 65 ; pr>>
    372                  0042     rsv_prev_y_pixel_0            equ 66 ; pr>>
    373                  0043     rsv_prev_xy1_pixel_0          equ 67 ;
    374                  0043     rsv_prev_x1_pixel_0           equ 67 ; pr>>
    375                  0044     rsv_prev_y1_pixel_0           equ 68 ; pr>>
    376                  0045     rsv_prev_xy2_pixel_0          equ 69 ;
    377                  0045     rsv_prev_x2_pixel_0           equ 69 ; pr>>
    378                  0046     rsv_prev_y2_pixel_0           equ 70 ; pr>>
    379                  0047     rsv_prev_render_flags_0       equ 71 ;
    380                           * --- rsv_prev_render_flags_0 bitfield va>>
    381                  0001     rsv_prev_render_overlay_mask  equ $01 ; (>>
    382                  0080     rsv_prev_render_onscreen_mask equ $80 ; (>>
    383
    384                  0048     rsv_buffer_1                  equ 72 ; St>>
    385                  0048     rsv_priority_1                equ 72 ; in>>
    386                  0049     rsv_priority_prev_obj_1       equ 73 ; an>>
    387                  004B     rsv_priority_next_obj_1       equ 75 ; an>>
    388                           *rsv_prev_image_subset_1       equ 77 ; a>>
    389                  004F     rsv_prev_mapping_frame_1      equ 79 ; an>>
    390                  0051     rsv_bgdata_1                  equ 81 ; an>>
    391                  0053     rsv_prev_xy_pixel_1           equ 83 ;
    392                  0053     rsv_prev_x_pixel_1            equ 83 ; pr>>
    393                  0054     rsv_prev_y_pixel_1            equ 84 ; pr>>
    394                  0055     rsv_prev_xy1_pixel_1          equ 85 ;
    395                  0055     rsv_prev_x1_pixel_1           equ 85 ; pr>>
    396                  0056     rsv_prev_y1_pixel_1           equ 86 ; pr>>
    397                  0057     rsv_prev_xy2_pixel_1          equ 87 ;
    398                  0057     rsv_prev_x2_pixel_1           equ 87 ; pr>>
    399                  0058     rsv_prev_y2_pixel_1           equ 88 ; pr>>
    400                  0059     rsv_prev_render_flags_1       equ 89 ;
    401
    402                  0000     buf_priority                  equ 0  ; of>>
    403                  0001     buf_priority_prev_obj         equ 1  ;
    404                  0003     buf_priority_next_obj         equ 3  ;
    405                           *buf_prev_image_subset         equ 5  ;
    406                  0007     buf_prev_mapping_frame        equ 7  ;
    407                  0009     buf_bgdata                    equ 9  ;
    408                  000B     buf_prev_xy_pixel             equ 11 ;
    409                  000B     buf_prev_x_pixel              equ 11 ;
    410                  000C     buf_prev_y_pixel              equ 12 ;
    411                  000D     buf_prev_xy1_pixel            equ 13 ;
    412                  000D     buf_prev_x1_pixel             equ 13 ;
    413                  000E     buf_prev_y1_pixel             equ 14 ;
    414                  000F     buf_prev_xy2_pixel            equ 15 ;
    415                  000F     buf_prev_x2_pixel             equ 15 ;
    416                  0010     buf_prev_y2_pixel             equ 16 ;
    417                  0011     buf_prev_render_flags         equ 17 ;
    418
     10        6100                       org   $6100
     11
     12  8     6100 BD   8758             jsr   LoadAct
     13  8     6103 BD   7DB2             jsr   PSGInit
     14
     15        6106               InitIRQ
     16  3     6106 CC   6129             ldd   #_IRQ                      >>
     17  6     6109 FD   6027             std   $6027
     18  3     610C CC   09C4             ldd   #$09C4
     19  6     610F FD   E7C6             std   $E7C6                      >>
     20
     21                           * =======================================>>
     22                           * Main Loop
     23                           * =======================================>>
     24        6112               LevelMainLoop
     25  8     6112 BD   7271             jsr   WaitVBL
     26  8     6115 BD   72AE             jsr   ReadJoypads
     27  8     6118 BD   72CF             jsr   RunObjects
     28  8     611B BD   755F             jsr   CheckSpritesRefresh
     29  8     611E BD   7848             jsr   EraseSprites
     30  8     6121 BD   79BB             jsr   UnsetDisplayPriority
     31  8     6124 BD   7A9A             jsr   DrawSprites
     32  3     6127 20   E9               bra   LevelMainLoop
     33                            
     34                           * =======================================>>
     35                           * IRQ
     36                           * =======================================>>
     37        6129               _IRQ
     38  5     6129 B6   E7E5             lda   $E7E5
     39  5     612C B7   6136             sta   _IRQ_end+1                 >>
     40  8     612F BD   8021             jsr   PSGFrame
     41  8     6132 BD   812D             jsr   PSGSFXFrame
     42        6135               _IRQ_end
     43  2     6135 86   00               lda   #$00
     44  5     6137 B7   E7E5             sta   $E7E5                      >>
     45  4     613A 7E   E830             jmp   $E830
     46
     47                           * =======================================>>
     48                           * Global Data
     49                           *
     50                           * Naming convention
     51                           * -----------------
     52                           * - underscore-separated names
     53                           * - first letter of each word in upper ca>>
     54                           *
     55                           * Templates
     56                           * ---------
     57                           * - Glb_*        : global variable
     58                           * - Tbl_*        : data table
     59                           * - Lst_*        : list is a data table w>>
     60                           * - Obj_*        : address of an object i>>
     61                           *
     62                           * - *_Object_RAM : sub group of objects
     63                           * - *_end        : data end label
     64                           *
     65                           * =======================================>>
     66
     67                           * --------------------------------------->>
     68                           * Display
     69                           * --------------------------------------->>
     70                            
     71        613D 00            Glb_Cur_Wrk_Screen_Id         fcb   $00  >>
     72        613E 0000          Glb_Camera_X_Pos              fdb   $0000>>
     73        6140 0000          Glb_Camera_Y_Pos              fdb   $0000>>
     74        6142 0000          Glb_Sprite_Screen_Pos_PartA   fdb   $0000>>
     75        6144 0000          Glb_Sprite_Screen_Pos_PartB   fdb   $0000>>
     76
     77                           * --------------------------------------->>
     78                           * Background Backup Cells - BBC
     79                           * --------------------------------------->>
     80
     81                           * ----- Cell variables
     82                  0000     nb_cells                      equ   0
     83                  0001     cell_start                    equ   1
     84                  0003     cell_end                      equ   3
     85                  0005     next_entry                    equ   5
     86                  0007     entry_size                    equ   7
     87
     88                           * ----- Cells List
     89                  0082     nb_free_cells                 equ   130
     90                  0040     cell_size                     equ   64   >>
     91                  6000     cell_start_adr                equ   $6000>>
     92
     93        6146 6148          Lst_FreeCellFirstEntry_0      fdb   Lst_F>>
     94        6148 82            Lst_FreeCell_0                fcb   nb_fr>>
     95        6149 3F80                                        fdb   cell_>>
     96        614B 6000                                        fdb   cell_>>
     97        614D 0000                                        fdb   $0000>>
     98        614F                                             rmb   (entr>>
     99                            
    100        6315 6317          Lst_FreeCellFirstEntry_1      fdb   Lst_F>>
    101        6317 82            Lst_FreeCell_1                fcb   nb_fr>>
    102        6318 3F80                                        fdb   cell_>>
    103        631A 6000                                        fdb   cell_>>
    104        631C 0000                                        fdb   $0000>>
    105        631E                                             rmb   (entr>>
    106                           * --------------------------------------->>
    107                           * Display Priority Structure - DPS
    108                           * --------------------------------------->>
    109
    110        64E4               DPS_buffer_0
    111        64E4               Tbl_Priority_First_Entry_0    rmb   2+(nb>>
    112        64F6               Tbl_Priority_Last_Entry_0     rmb   2+(nb>>
    113        6508 650A          Lst_Priority_Unset_0          fdb   Lst_P>>
    114        650A                                             rmb   (nb_o>>
    115        658A               DPS_buffer_1
    116        658A               Tbl_Priority_First_Entry_1    rmb   2+(nb>>
    117        659C               Tbl_Priority_Last_Entry_1     rmb   2+(nb>>
    118        65AE 65B0          Lst_Priority_Unset_1          fdb   Lst_P>>
    119        65B0                                             rmb   (nb_o>>
    120                            
    121                  0000     buf_Tbl_Priority_First_Entry  equ   0
    122                  0012     buf_Tbl_Priority_Last_Entry   equ   Tbl_P>>
    123                  0024     buf_Lst_Priority_Unset        equ   Lst_P>>
    124
    125                           * --------------------------------------->>
    126                           * Sub Priority Objects List - SOL
    127                           * --------------------------------------->>
    128
    129        6630               Tbl_Sub_Object_Erase          rmb   nb_ob>>
    130        66B0               Tbl_Sub_Object_Draw           rmb   nb_ob>>
    131
    132                           * --------------------------------------->>
    133                           * Object Status Table - OST
    134                           * --------------------------------------->>
    135                            
    136        6730               Object_RAM *@globals
    137        6730               Reserved_Object_RAM
    138        6730 01            Obj_MainCharacter             fcb   01
    139        6731                                             rmb   objec>>
    140        678A               Obj_Sidekick                  rmb   objec>>
    141        67E4               Reserved_Object_RAM_End
    142
    143        67E4               Dynamic_Object_RAM            rmb   nb_dy>>
    144        7162               Dynamic_Object_RAM_End
    145
    146        7162               LevelOnly_Object_RAM                     >>
    147        7162               Obj_TailsTails                rmb   objec>>
    148        71BC               Obj_SonicDust                 rmb   objec>>
    149        7216               Obj_TailsDust                 rmb   objec>>
    150        7270               LevelOnly_Object_RAM_End
    151        7270               Object_RAM_End
    152
    153                           * --------------------------------------->>
    154                           * Lifecycle
    155                           * --------------------------------------->>
    156
    157        7270               Glb_MainCharacter_Is_Dead     rmb   $1,0
    158
    159                           * =======================================>>
    160                           * Routines
    161                           * =======================================>>
    419                                   INCLUD WAITVBL
    420                           *****************************************>>
    421                           * Attente VBL
    422                           * Alternance de la page 2 et 3 entre affi>>
    423                           * Alternance de la RAMA et RAM B dans l'e>>
    424                           * --------------------------------------->>
    425                           *
    426                           * Page Affichee par l'automate Video
    427                           * ----------------------------------
    428                           *   $E7DD determine la page affichee a l'>>
    429                           *   bit7=0 bit6=0 bit5=0 bit4=0 (#$0_) : >>
    430                           *   bit7=0 bit6=1 bit5=0 bit4=0 (#$4_) : >>
    431                           *   bit7=1 bit6=0 bit5=0 bit4=0 (#$8_) : >>
    432                           *   bit7=1 bit6=1 bit5=0 bit4=0 (#$C_) : >>
    433                           *   bit3 bit2 bit1 bit0  (#$_0 a #$_F) : >>
    434                           *   Remarque : bit5 et bit4 utilisable un>>
    435                           *
    436                           * Page en espace cartouche (ecriture dans>>
    437                           * --------------------------------------->>
    438                           *   $E7E6 determine la page visible dans >>
    439                           *   bit7 toujours a 0
    440                           *   bit6=1 : ecriture autorisee
    441                           *   bit5=1 : espace cartouche recouvert p>>
    442                           *   bit4=0 : CAS1N valide : banques 0-15 >>
    443                           *   bit5=1 bit4=0 bit3=0 bit2=0 bit1=0 bi>>
    444                           *   ...
    445                           *   bit5=1 bit4=0 bit3=1 bit2=1 bit1=1 bi>>
    446                           *   bit5=1 bit4=1 bit3=0 bit2=0 bit1=0 bi>>
    447                           *   ...
    448                           *   bit5=1 bit4=1 bit3=1 bit2=1 bit1=1 bi>>
    449                           *
    450                           * Demi-Page 0 en espace ecran (4000 a 5FF>>
    451                           * --------------------------------------->>
    452                           *   $E7C3 determine la demi-page de la pa>>
    453                           *   bit0=0 : 8Ko RAMA
    454                           *   bit0=1 : 8ko RAMB
    455                           *
    456                           *****************************************>>
    457        7271               WaitVBL
    458  7     7271 7D   E7E7             tst   $E7E7              * le fai>>
    459  3     7274 2A   FB               bpl   WaitVBL            * tant q>>
    460        7276               WaitVBL_01
    461  7     7276 7D   E7E7             tst   $E7E7              * le fai>>
    462  3     7279 2B   FB               bmi   WaitVBL_01         * tant q>>
    463                            
    464  6     727B FC   72A6             ldd   Vint_runcount
    465  4     727E C3   0001             addd  #1
    466  6     7281 FD   72A6             std   Vint_runcount
    467                            
    468        7284               SwapVideoPage
    469  5     7284 F6   7292             ldb   am_SwapVideoPage+1 * charge>>
    470  2     7287 C4   40               andb  #$40               * altern>>
    471        7289               screen_border_color *@globals
    472  2     7289 CA   80               orb   #$80               * bit7=1>>
    473  5     728B F7   E7DD             stb   $E7DD              * change>>
    474  7     728E 73   7292             com   am_SwapVideoPage+1 * altern>>
    475        7291               am_SwapVideoPage
    476  2     7291 C6   00               ldb   #$00
    477  2     7293 C4   01               andb  #$01               * altern>>
    478  5     7295 F7   613D             stb   Glb_Cur_Wrk_Screen_Id
    479  2     7298 CA   62               orb   #$62               * bit6=1>>
    480  5     729A F7   E7E6             stb   $E7E6              * change>>
    481  5     729D F6   E7C3             ldb   $E7C3              * charge>>
    482  2     72A0 C8   01               eorb  #$01               * altern>>
    483  5     72A2 F7   E7C3             stb   $E7C3
    484  5     72A5 39                    rts
    485                            
    486        72A6               Vint_runcount rmb   $2,0 *@globals
    487
    488                                   INCLUD READJPDS
    489                           * --------------------------------------->>
    490                           * Controller Buttons
    491                           *
    492                  0001     c1_button_up_mask            equ   $01 *@>>
    493                  0002     c1_button_down_mask          equ   $02 *@>>
    494                  0004     c1_button_left_mask          equ   $04 *@>>
    495                  0008     c1_button_right_mask         equ   $08 *@>>
    496                  0010     c2_button_up_mask            equ   $10 *@>>
    497                  0020     c2_button_down_mask          equ   $20 *@>>
    498                  0040     c2_button_left_mask          equ   $40 *@>>
    499                  0080     c2_button_right_mask         equ   $80 *@>>
    500                  0040     c1_button_A_mask             equ   $40 *@>>
    501                  0080     c2_button_A_mask             equ   $80 *@>>
    502
    503        72A8               Joypads_Read
    504        72A8 00            Dpad_Read                    fcb   $00
    505        72A9 00            Fire_Read                    fcb   $00
    506                            
    507        72AA               Joypads
    508        72AA               Joypads_Held                           *@>>
    509        72AA 00            Dpad_Held                    fcb   $00 *@>>
    510        72AB 00            Fire_Held                    fcb   $00 *@>>
    511        72AC               Joypads_Press                          *@>>
    512        72AC 00            Dpad_Press                   fcb   $00 *@>>
    513        72AD 00            Fire_Press                   fcb   $00 *@>>
    514
    515                           *****************************************>>
    516                           * Get joystick parameters
    517                           *
    518                           * Direction des Joypads
    519                           * ---------------------
    520                           * Registre: $E7CC (8bits)
    521                           *
    522                           * Joypad2     Joypad1
    523                           * 1111        1111 (0: appuye | 1: relach>>
    524                           * ||||_Haut   ||||_Haut
    525                           * |||__Bas    |||__Bas
    526                           * ||___Gauche ||___Gauche
    527                           * |____Droite |____Droite
    528                           *
    529                           * Boutons des Joypads
    530                           * -------------------
    531                           * Registre: $E7CD (8bits)
    532                           *
    533                           * 11 000000 (0: appuye | 1: relache)
    534                           * ||[------] 6 bits convertisseur numeriq>>
    535                           * ||_Fire Joypad1
    536                           * |__Fire Joypad2
    537                           *
    538                           * Variables globales: Joypads_Held, Joypa>>
    539                           * --------------------------------------->>
    540                           * (16 bits)
    541                           * Joypad2     Joypad1
    542                           * 0000        0000 (0: relache | 1: appuy>>
    543                           * ||||_Haut   ||||_Haut                  >>
    544                           * |||__Bas    |||__Bas                   >>
    545                           * ||___Gauche ||___Gauche                >>
    546                           * |____Droite |____Droite
    547                           *
    548                           *****************************************>>
    549                            
    550                                                                  *;>>
    551                                                                  *;>>
    552                                                                  *;>>
    553                                                                  *;>>
    554                                                                  *
    555                                                                  *;>>
    556        72AE               ReadJoypads                            *R>>
    557                                                                  * >>
    558                                                                  * >>
    559                                                                  * >>
    560                                                                  * >>
    561                                                                  *
    562                                                                  *;>>
    563                                                                  *J>>
    564                                                                  * >>
    565                                                                  * >>
    566                                                                  * >>
    567                                                                  * >>
    568                                                                  * >>
    569                                                                  * >>
    570                                                                  * >>
    571                                                                  * >>
    572                                                                  * >>
    573                                                                  * >>
    574                                                                  * >>
    575                                                                  * >>
    576  6     72AE FC   E7CC             ldd   $E7CC
    577  2     72B1 43                    coma
    578  2     72B2 53                    comb                           * >>
    579  6     72B3 FD   72A8             std   Joypads_Read
    580  6     72B6 FC   72AA             ldd   Joypads_Held             * >>
    581  5     72B9 B8   72A8             eora  Dpad_Read                * >>
    582  5     72BC F8   72A9             eorb  Fire_Read
    583                                                                  * >>
    584  5     72BF B4   72A8             anda  Dpad_Read                * >>
    585  5     72C2 F4   72A9             andb  Fire_Read
    586  6     72C5 FD   72AC             std   Joypads_Press            * >>
    587  6     72C8 FC   72A8             ldd   Joypads_Read
    588  6     72CB FD   72AA             std   Joypads_Held
    589  5     72CE 39                    rts                            * >>
    590                                                                  *;>>
    591
    592
    593                                   INCLUD RUNOBJTS
    594                           * --------------------------------------->>
    595                           * RunObjects
    596                           * ------------
    597                           * Subroutine to run objects code
    598                           *
    599                           * input REG : none
    600                           * --------------------------------------->>
    601                                                                    >>
    602                                                                    >>
    603                                                                    >>
    604                                                                    >>
    605                                                                    >>
    606                                                                    >>
    607                                                                    >>
    608        72CF               RunObjects                               >>
    609                                                                    >>
    610                                                                    >>
    611  3     72CF CE   6730             ldu   #Object_RAM                >>
    612                                                                    >>
    613                                                                    >>
    614                                                                    >>
    615                                                                    >>
    616                                                                    >>
    617                                                                    >>
    618                                                                    >>
    619        72D2               RunObjects_01                            >>
    620                                                                    >>
    621                                                                    >>
    622                                                                    >>
    623                                                                    >>
    624  7     72D2 7D   7270             tst   Glb_MainCharacter_Is_Dead  >>
    625  3     72D5 26   23               bne   RunObjectsWhenPlayerIsDead >>
    626                                                                    >>
    627                                                                    >>
    628                                                                    >>
    629                                                                    >>
    630                                                                    >>
    631                                                                    >>
    632                                                                    >>
    633                                                                    >>
    634                                                                    >>
    635                                                                    >>
    636        72D7               RunObject                                >>
    637  2     72D7 86   00               lda   #$00
    638  4+0   72D9 E6   C4               ldb   ,u                         >>
    639  3     72DB 27   13               beq   RunNextObject              >>
    640
    641  4     72DD 108E 8447             ldy   #Obj_Index_Page
    642  4+4   72E1 A6   AB               lda   d,y                        >>
    643  5     72E3 B7   E7E5             sta   $E7E5                      >>
    644  2     72E6 86   00               lda   #$00
    645  2     72E8 58                    aslb                             >>
    646  2     72E9 49                    rola                             >>
    647  4     72EA 108E 8547             ldy   #Obj_Index_Address         >>
    648  7+7   72EE AD   BB               jsr   [d,y]                      >>
    649                                                                    >>
    650                                                                    >>
    651                                                                    >>
    652        72F0               RunNextObject                            >>
    653  4+1   72F0 33   C8 5A            leau  next_object,u              >>
    654        72F3               am_RunNextObject
    655  5     72F3 1183 7270             cmpu  #Object_RAM_End            >>
    656  3     72F7 26   DE               bne   RunObject                  >>
    657        72F9               RunObjects_End                           >>
    658  5     72F9 39                    rts                              >>
    659                                                                    >>
    660                                                                    >>
    661                                                                    >>
    662                                                                    >>
    663        72FA               RunObjectsWhenPlayerIsDead               >>
    664  3     72FA CE   6730             ldu   #Reserved_Object_RAM
    665  3     72FD 8E   67E4             ldx   #Reserved_Object_RAM_End
    666  6     7300 BF   72F5             stx   am_RunNextObject+2         >>
    667  7     7303 8D   D2               bsr   RunObject                  >>
    668                                                                    >>
    669                                                                    >>
    670  3     7305 CE   7162             ldu   #LevelOnly_Object_RAM
    671  3     7308 8E   7270             ldx   #LevelOnly_Object_RAM_End
    672  6     730B BF   72F5             stx   am_RunNextObject+2         >>
    673  7     730E 8D   C7               bsr   RunObject                  >>
    674                                                                    >>
    675  3     7310 8E   7270             ldx   #Object_RAM_End            >>
    676  6     7313 BF   72F5             stx   am_RunNextObject+2
    677  5     7316 39                    rts
    678                                                                    >>
    679                                                                    >>
    680                                                                    >>
    681                                                                    >>
    682                                                                    >>
    683                                                                    >>
    684                                                                    >>
    685                                                                    >>
    686                                                                    >>
    687                                                                    >>
    688                                                                    >>
    689                                                                    >>
    690                                                                    >>
    691                            
    692                                                                    >>
    693                                                                    >>
    694                                                                    >>
    695                                                                    >>
    696
    697                                   INCLUD MRKOBJGN
    698                           * --------------------------------------->>
    699                           * MarkObjGone
    700                           * -----------
    701                           * Subroutine to destroy an object that is>>
    702                           * -- TODO --
    703                           * waiting for camera implementation
    704                           *
    705                           * input REG : none
    706                           * clear REG : none
    707                           * --------------------------------------->>
    708
    709                                                                  *;>>
    710                                                                  *;>>
    711                                                                  *;>>
    712                                                                  *
    713                                                                  *;>>
    714                                                                  *;>>
    715                                                                  *;>>
    716        7317               MarkObjGone *@globals                  *M>>
    717                                                                  * >>
    718                                                                  * >>
    719  3     7317 20   06               bra   DisplaySprite            * >>
    720                                                                  *+>>
    721                                                                  * >>
    722                                                                  * >>
    723                                                                  * >>
    724                                                                  * >>
    725                                                                  * >>
    726                                                                  * >>
    727                                                                  *
    728                                                                  *+>>
    729                                                                  * >>
    730                                                                  * >>
    731                                                                  * >>
    732                                                                  * >>
    733                                                                  *+>>
    734                                                                  * >>
    735
    736                                   INCLUD DISPLSPR
    737                           * --------------------------------------->>
    738                           * DisplaySprite
    739                           * -------------
    740                           * Subroutine to manage sprite priority.
    741                           * Object's priority is read and object is>>
    742                           * priority: 0 - unregistred
    743                           * priority: 1 - register non moving overl>>
    744                           * priority; 2-8 - register moving sprite >>
    745                           *
    746                           * Unlike original S2 code, sprite priorit>>
    747                           * it allows to keep an exact sprite order>>
    748                           *
    749                           * DisplaySprite
    750                           * input REG : [u] object pointer (OST)
    751                           *
    752                           * DisplaySprite_x
    753                           * input REG : [x] object pointer (OST)
    754                           * --------------------------------------->>
    755                            
    756        7319               DisplaySprite_x *@globals
    757  5+6   7319 34   56               pshs  d,x,u
    758  6     731B 1F   13               tfr   x,u
    759  3     731D 20   02               bra   DSP_Start
    760                            
    761        731F               DisplaySprite *@globals
    762  5+6   731F 34   56               pshs  d,x,u
    763                            
    764        7321               DSP_Start
    765  4+1   7321 A6   42               lda   render_flags,u
    766  2     7323 84   DF               anda  #:render_hide_mask         >>
    767  4+1   7325 A7   42               sta   render_flags,u
    768
    769  5     7327 B6   613D             lda   Glb_Cur_Wrk_Screen_Id      >>
    770  3     732A 26   09               bne   DSP_SetBuffer1
    771                            
    772        732C               DSP_SetBuffer0
    773  4+1   732C 30   C8 36            leax  rsv_buffer_0,u             >>
    774  4     732F 108E 64E4             ldy   #DPS_buffer_0              >>
    775  3     7333 20   07               bra   DSP_BufferPositionned
    776                            
    777        7335               DSP_SetBuffer1
    778  4+1   7335 30   C8 48            leax  rsv_buffer_1,u             >>
    779  4     7338 108E 658A             ldy   #DPS_buffer_1              >>
    780                            
    781        733C               DSP_BufferPositionned
    782  4+1   733C A6   43               lda   priority,u                 >>
    783  4+1   733E A1   00               cmpa  buf_priority,x
    784  3     7340 27   1C               beq   DSP_rts                    >>
    785  4+1   7342 E6   00               ldb   buf_priority,x
    786  3     7344 26   3F               bne   DSP_ChangePriority
    787                            
    788        7346               DSP_InitPriority
    789  4+1   7346 A7   00               sta   buf_priority,x             >>
    790  2     7348 48                    asla                             >>
    791                            
    792        7349               DSP_CheckLastEntry
    793  4+1   7349 31   A8 12            leay  buf_Tbl_Priority_Last_Entry>>
    794  6+1   734C 6D   A6               tst   a,y                        >>
    795  3     734E 26   10               bne   DSP_addToExistingNode      >>
    796                            
    797        7350               DSP_addFirstNode
    798  5+1   7350 EF   A6               stu   a,y                        >>
    799  4+1   7352 31   A8 EE            leay  buf_Tbl_Priority_First_Entr>>
    800  5+1   7355 EF   A6               stu   a,y                        >>
    801  3     7357 CC   0000             ldd   #0
    802  5+1   735A ED   01               std   buf_priority_prev_obj,x    >>
    803  5+1   735C ED   03               std   buf_priority_next_obj,x
    804                            
    805        735E               DSP_rts
    806  5+8   735E 35   D6               puls  d,x,u,pc                   >>
    807                            
    808        7360               DSP_addToExistingNode
    809  5+1   7360 AE   A6               ldx   a,y                        >>
    810  5     7362 F6   613D             ldb   Glb_Cur_Wrk_Screen_Id
    811  3     7365 26   0E               bne   DSP_LinkBuffer1
    812  5+1   7367 EF   88 39            stu   rsv_priority_next_obj_0,x  >>
    813  5+1   736A AF   C8 37            stx   rsv_priority_prev_obj_0,u  >>
    814  6+1   736D 6F   C8 39            clr   rsv_priority_next_obj_0,u  >>
    815  6+1   7370 6F   C8 3A            clr   rsv_priority_next_obj_0+1,u>>
    816  3     7373 20   0C               bra   DSP_LinkCurWithPrev
    817        7375               DSP_LinkBuffer1
    818  5+1   7375 EF   88 4B            stu   rsv_priority_next_obj_1,x  >>
    819  5+1   7378 AF   C8 49            stx   rsv_priority_prev_obj_1,u  >>
    820  6+1   737B 6F   C8 4B            clr   rsv_priority_next_obj_1,u  >>
    821  6+1   737E 6F   C8 4C            clr   rsv_priority_next_obj_1+1,u>>
    822                            
    823        7381               DSP_LinkCurWithPrev
    824  5+1   7381 EF   A6               stu   a,y                        >>
    825  5+8   7383 35   D6               puls  d,x,u,pc                   >>
    826                            
    827        7385               DSP_ChangePriority
    828  4+1   7385 31   A8 24            leay  buf_Lst_Priority_Unset,y
    829  5+3   7388 EF   B4               stu   [,y]                       >>
    830  4+1   738A 31   22               leay  2,y
    831  6+0   738C 10AF A4               sty   ,y                         >>
    832  4+1   738F 31   A8 DA            leay  -buf_Lst_Priority_Unset-2,y>>
    833  2     7392 81   00               cmpa  #0
    834  3     7394 26   B3               bne   DSP_CheckLastEntry         >>
    835  5+8   7396 35   D6               puls  d,x,u,pc                   >>
    836
    837                            
    838                                                                  *;>>
    839                                                                  *;>>
    840                                                                  *;>>
    841                                                                  *
    842                                                                  *;>>
    843                                                                  *
    844                                                                  *;>>
    845                                                                  *D>>
    846                                                                  * >>
    847                                                                  * >>
    848                                                                  * >>
    849                                                                  * >>
    850                                                                  * >>
    851                            
    852                                                                  * >>
    853                                                                  * >>
    854                                                                  * >>
    855                            
    856                                                                  * >>
    857                                                                  * >>
    858                                                                  *
    859                                                                  *r>>
    860                            
    861                                                                  * >>
    862                                                                  *;>>
    863
    864                                   INCLUD ANIMSPR
    865                           * --------------------------------------->>
    866                           * Subroutine to animate a sprite using an>>
    867                           *
    868                           *   this function also change render flag>>
    869                           *   the status byte;
    870                           *
    871                           * input REG : [u] pointeur sur l'objet
    872                           *
    873                           * --------------------------------------->>
    874
    875                  00FF     resetAnim              equ $FF
    876                  00FE     goBackNFrames          equ $FE ; followed>>
    877                  00FD     goToAnimation          equ $FD ; followed>>
    878                  00FC     nextRoutine            equ $FC
    879                  00FB     resetAnimAndSubRoutine equ $FB
    880                  00FA     nextSubRoutine         equ $FA
    881
    882                                                                    >>
    883                                                                    >>
    884                                                                    >>
    885                                                                    >>
    886                                                                    >>
    887                                                                    >>
    888                                                                    >>
    889        7398               AnimateSprite * @globals                 >>
    890                                                                    >>
    891  5+1   7398 AE   44               ldx   anim,u                     >>
    892  6+1   739A AC   46               cmpx  prev_anim,u                >>
    893  3     739C 27   08               beq   Anim_Run                   >>
    894  5+1   739E AF   46               stx   prev_anim,u                >>
    895  2     73A0 C6   00                     ldb   #0
    896  4+1   73A2 E7   48               stb   anim_frame,u               >>
    897  4+1   73A4 E7   49               stb   anim_frame_duration,u      >>
    898                                                                    >>
    899        73A6               Anim_Run                                 >>
    900  6+1   73A6 6A   49               dec   anim_frame_duration,u      >>
    901  3     73A8 2A   23               bpl   Anim_Wait                  >>
    902                                   * no offset table                >>
    903                                   * anim is the address of anim    >>
    904  4+1   73AA E6   1F               ldb   -1,x
    905  4+1   73AC E7   49                     stb   anim_frame_duration,u>>
    906                                                                    >>
    907  4+1   73AE E6   48               ldb   anim_frame,u               >>
    908  2     73B0 58                    aslb
    909  4+1   73B1 31   85               leay  b,x
    910  5+0   73B3 EC   A4               ldd   ,y                         >>
    911                                   * bmi   Anim_End_FF              >>
    912  2     73B5 81   FA                     cmpa  #$FA                 >>
    913  3     73B7 24   15                     bhs   Anim_End_FF          >>
    914                                                                    >>
    915        73B9               Anim_Next                                >>
    916                                      * ne pas utiliser             >>
    917  5+1   73B9 ED   4A               std   image_set,u                >>
    918  4+1   73BB E6   C8 1A            ldb   status,u                   >>
    919  2     73BE C4   03               andb  #status_x_orientation+statu>>
    920  5     73C0 F7   73C8             stb   Anim_dyn+1
    921                                                                    >>
    922  4+1   73C3 A6   42               lda   render_flags,u             >>
    923  2     73C5 84   FC               anda  #:(render_xmirror_mask+rend>>
    924        73C7               Anim_dyn
    925  2     73C7 8A   00               ora   #$00                       >>
    926                                                                    >>
    927  4+1   73C9 A7   42               sta   render_flags,u
    928  6+1   73CB 6C   48               inc   anim_frame,u               >>
    929                                                                    >>
    930        73CD               Anim_Wait                                >>
    931  5     73CD 39                    rts                              >>
    932                                                                    >>
    933                                                                    >>
    934        73CE               Anim_End_FF                              >>
    935  2     73CE 4C                    inca                             >>
    936  3     73CF 26   08               bne   Anim_End_FE                >>
    937  2     73D1 C6   00                     ldb   #0
    938  4+1   73D3 E7   48               stb   anim_frame,u               >>
    939  5+0   73D5 EC   84               ldd   ,x                         >>
    940  3     73D7 20   E0               bra   Anim_Next                  >>
    941                                                                    >>
    942                                                                    >>
    943        73D9               Anim_End_FE                              >>
    944  2     73D9 4C                    inca                             >>
    945  3     73DA 26   0E               bne   Anim_End_FD                >>
    946  4+1   73DC A6   48               lda   anim_frame,u
    947  5     73DE F7   73E2             stb   Anim_End_FE_dyn+1          >>
    948        73E1               Anim_End_FE_dyn
    949  2     73E1 80   00               suba  #$00                       >>
    950  4+1   73E3 A7   48               sta   anim_frame,u               >>
    951                                                                    >>
    952  2     73E5 48                    asla
    953  5+1   73E6 EC   86               ldd   a,x                        >>
    954  3     73E8 20   CF               bra   Anim_Next                  >>
    955                                                                    >>
    956                                                                    >>
    957        73EA               Anim_End_FD                              >>
    958  2     73EA 4C                    inca                             >>
    959  3     73EB 26   05               bne   Anim_End_FC                >>
    960  5+1   73ED EC   21               ldd   1,y                        >>
    961  5+1   73EF ED   44               std   anim,u                     >>
    962  5     73F1 39                    rts                              >>
    963                                                                    >>
    964                                                                    >>
    965        73F2               Anim_End_FC                              >>
    966  2     73F2 4C                    inca                             >>
    967  3     73F3 26   0F               bne   Anim_End_FB                >>
    968  4+1   73F5 E6   C8 18            ldb   routine,u
    969  2     73F8 CB   03               addb  #$03
    970  4+1   73FA E7   C8 18            stb   routine,u                  >>
    971  2     73FD 86   00               lda   #0
    972  4+1   73FF A7   49               sta   anim_frame_duration,u      >>
    973  6+1   7401 6C   48               inc   anim_frame,u               >>
    974  5     7403 39                    rts                              >>
    975                                                                    >>
    976                                                                    >>
    977        7404               Anim_End_FB                              >>
    978  2     7404 4C                    inca                             >>
    979  3     7405 26   08               bne   Anim_End_FA                >>
    980  2     7407 86   00               lda   #0
    981  4+1   7409 A7   48               sta   anim_frame,u               >>
    982  4+1   740B A7   C8 19            sta   routine_secondary,u        >>
    983  5     740E 39                    rts                              >>
    984                                                                    >>
    985                                                                    >>
    986        740F               Anim_End_FA                              >>
    987  2     740F 4C                    inca                             >>
    988  3     7410 26   08               bne   Anim_End                   >>
    989  4+1   7412 E6   C8 19            ldb   routine_secondary,u        >>
    990  2     7415 CB   03               addb  #$03
    991  4+1   7417 E7   C8 19            stb   routine_secondary,u
    992        741A               Anim_End
    993  5     741A 39                    rts                              >>
    994                                                                    >>
    995                                                                    >>
    996                                                                    >>
    997                                                                    >>
    998                                                                    >>
    999                                                                    >>
   1000                                                                    >>
   1001                                                                    >>
   1002                                                                    >>
   1003                                                                    >>
   1004
   1005                                   INCLUD OBJMOVE
   1006                           * --------------------------------------->>
   1007                           * Subroutine translating object speed to >>
   1008                           * This moves the object horizontally and >>
   1009                           * but does not apply gravity to it
   1010                           * --------------------------------------->>
   1011
   1012                                                                  *;>>
   1013                                                                  *;>>
   1014                                                                  *;>>
   1015                                                                  *;>>
   1016                                                                  *;>>
   1017                                                                  *
   1018                                                                  *;>>
   1019                                                                  *
   1020                                                                  *;>>
   1021        741B               ObjectMove                             *O>>
   1022                                                                  * >>
   1023                                                                  * >>
   1024                                                                  * >>
   1025                                                                  * >>
   1026                                                                  * >>
   1027                                                                  * >>
   1028  4+1   741B E6   C8 14            ldb   x_vel,u
   1029  2     741E 1D                    sex                            ; >>
   1030  5     741F B7   742C             sta   am_ObjectMove_01+1
   1031  5+1   7422 EC   C8 14            ldd   x_vel,u
   1032  6+1   7425 E3   4D               addd  x_pos+1,u                ; >>
   1033  5+1   7427 ED   4D               std   x_pos+1,u                ; >>
   1034  4+1   7429 A6   4C               lda   x_pos,u
   1035        742B               am_ObjectMove_01
   1036  2     742B 89   00               adca  #$00                     ; >>
   1037  4+1   742D A7   4C               sta   x_pos,u                  ; >>
   1038                            
   1039                                                                  * >>
   1040                                                                  * >>
   1041                                                                  * >>
   1042                                                                  * >>
   1043                                                                  * >>
   1044                                                                  * >>
   1045  4+1   742F E6   C8 16            ldb   y_vel,u
   1046  2     7432 1D                    sex                            ; >>
   1047  5     7433 B7   7442             sta   am_ObjectMove_02+1
   1048  5+1   7436 EC   C8 16            ldd   y_vel,u
   1049  6+1   7439 E3   C8 10            addd  y_pos+1,u                ; >>
   1050  5+1   743C ED   C8 10            std   y_pos+1,u                ; >>
   1051  4+1   743F A6   4F               lda   y_pos,u
   1052        7441               am_ObjectMove_02
   1053  2     7441 89   00               adca  #$00                     ; >>
   1054  4+1   7443 A7   4F               sta   y_pos,u                  ; >>
   1055  5     7445 39                    rts                            * >>
   1056                                                                  *;>>
   1057                                                                  *;>>
   1058
   1059                                   INCLUD OBJLOAD
   1060                           * --------------------------------------->>
   1061                           * Single object loading subroutine
   1062                           * Find an empty object array
   1063                           *
   1064                           * input  REG : [u] pointeur sur l'objet c>>
   1065                           * output REG : [x] pointeur sur l'objet l>>
   1066                           * --------------------------------------->>
   1067
   1068                                                                  *;>>
   1069                                                                  *;>>
   1070                                                                  *;>>
   1071                                                                  *;>>
   1072                                                                  *;>>
   1073                                                                  *
   1074                                                                  *;>>
   1075                                                                  *S>>
   1076                                                                  * >>
   1077                                                                  * >>
   1078                                                                  * >>
   1079                                                                  * >>
   1080                                                                  * >>
   1081                                                                  *
   1082                                                                  */>>
   1083                                                                  * >>
   1084                                                                  * >>
   1085                                                                  * >>
   1086                                                                  * >>
   1087                                                                  *
   1088                                                                  *r>>
   1089                                                                  * >>
   1090                                                                  *;>>
   1091                                                                  *;>>
   1092                                                                  *;>>
   1093                                                                  *;>>
   1094                                                                  *;>>
   1095                                                                  *
   1096                                                                  *;>>
   1097                                                                  *
   1098                                                                  *;>>
   1099        7446               SingleObjLoad2                         *S>>
   1100  6     7446 1F   31               tfr   u,x                      * >>
   1101  4+1   7448 30   88 5A            leax  next_object,x            * >>
   1102  4     744B 8C   7162             cmpx  #Dynamic_Object_RAM_End  * >>
   1103  3     744E 27   0C               beq   SingleObjLoad2_02        * >>
   1104                                                                  * >>
   1105                                                                  * >>
   1106                                                                  * >>
   1107                                                                  * >>
   1108                                                                  * >>
   1109                                                                  * >>
   1110                                                                  * >>
   1111                                                                  * >>
   1112                                                                  *
   1113        7450               SingleObjLoad2_01                      *->>
   1114  6+0   7450 6D   84               tst   ,x                       * >>
   1115  3     7452 27   08               beq   SingleObjLoad2_02        * >>
   1116  4+1   7454 30   88 5A            leax  next_object,x            * >>
   1117  4     7457 8C   7162             cmpx  #Dynamic_Object_RAM_End
   1118  3     745A 26   F4               bne   SingleObjLoad2_01        * >>
   1119                                                                  *
   1120        745C               SingleObjLoad2_02                      *r>>
   1121  5     745C 39                    rts                            * >>
   1122                                                                  *
   1123                                                                  * >>
   1124                                                                  *+>>
   1125                                                                  *.>>
   1126                                                                  *.>>
   1127                                                                  *
   1128                                                                  * >>
   1129                                                                  * >>
   1130                                                                  * >>
   1131                                                                  * >>
   1132                                                                  * >>
   1133                                                                  * >>
   1134                                                                  *
   1135                                                                  *.>>
   1136                                                                  *.>>
   1137                                                                  * >>
   1138                                                                  * >>
   1139                                                                  * >>
   1140                                                                  *;>>
   1141                                                                  *;>>
   1142                                                                  *;>>
   1143                                                                  *;>>
   1144                                                                  *;>>
   1145                                                                  *
   1146                                                                  *;>>
   1147                                                                  *
   1148                                                                  *;>>
   1149                                                                  *S>>
   1150                                                                  * >>
   1151                                                                  * >>
   1152                                                                  *
   1153                                                                  *->>
   1154                                                                  * >>
   1155                                                                  * >>
   1156                                                                  * >>
   1157                                                                  * >>
   1158                                                                  *
   1159                                                                  *r>>
   1160                                                                  * >>
   1161                                                                  *;>>
   1162
   1163
   1164                                   INCLUD DELETOBJ
   1165                           * --------------------------------------->>
   1166                           * DeleteObject
   1167                           * ------------
   1168                           * Subroutine to delete an object.
   1169                           * If the object is rendered as a sprite i>>
   1170                           * routine
   1171                           *
   1172                           * DeleteObject
   1173                           * input REG : [u] object pointer (OST)
   1174                           *
   1175                           * DeleteObject_x
   1176                           * input REG : [x] object pointer (OST)
   1177                           * --------------------------------------->>
   1178
   1179                                                                  *;>>
   1180                                                                  *;>>
   1181                                                                  *;>>
   1182                                                                  *
   1183                                                                  *;>>
   1184                                                                  *
   1185                                                                  *;>>
   1186        745D               DeleteObject_x *@globals               *D>>
   1187  5+6   745D 34   56               pshs  d,x,u                    * >>
   1188  6     745F 1F   13               tfr   x,u                      *;>>
   1189  3     7461 20   02               bra   DOB_Start
   1190                            
   1191        7463               DeleteObject *@globals                 *D>>
   1192  5+6   7463 34   56               pshs  d,x,u
   1193                            
   1194        7465               DOB_Start
   1195  4+1   7465 A6   C8 47            lda   rsv_prev_render_flags_0,u
   1196  3     7468 2A   27               bpl   DOB_RemoveFromDPSB0        >>
   1197
   1198        746A               DOB_ToDeleteFlag0
   1199  4+1   746A A6   42               lda   render_flags,u
   1200  2     746C 8A   40               ora   #render_todelete_mask
   1201  4+1   746E A7   42               sta   render_flags,u             >>
   1202                            
   1203        7470               DOB_Unset0
   1204  6     7470 BE   6508             ldx   Lst_Priority_Unset_0       >>
   1205  5+0   7473 EF   84               stu   ,x
   1206  4+1   7475 30   02               leax  2,x
   1207  6     7477 BF   6508             stx   Lst_Priority_Unset_0
   1208                            
   1209        747A               DOB_TestOnscreen1
   1210  4+1   747A A6   C8 59            lda   rsv_prev_render_flags_1,u
   1211  3     747D 2A   54               bpl   DOB_RemoveFromDPSB1        >>
   1212                            
   1213        747F               DOB_ToDeleteFlag1
   1214  4+1   747F A6   42               lda   render_flags,u
   1215  2     7481 8A   40               ora   #render_todelete_mask
   1216  4+1   7483 A7   42               sta   render_flags,u             >>
   1217                            
   1218        7485               DOB_Unset1
   1219  6     7485 BE   65AE             ldx   Lst_Priority_Unset_1       >>
   1220  5+0   7488 EF   84               stu   ,x
   1221  4+1   748A 30   02               leax  2,x
   1222  6     748C BF   65AE             stx   Lst_Priority_Unset_1
   1223  5+8   748F 35   D6               puls  d,x,u,pc                   >>
   1224
   1225        7491               DOB_RemoveFromDPSB0
   1226  5+1   7491 EC   C8 37            ldd   rsv_priority_prev_obj_0,u  >>
   1227  3     7494 26   11               bne   DOB_ChainPrevB0
   1228                            
   1229  4+1   7496 A6   C8 36            lda   rsv_priority_0,u
   1230  2     7499 48                    lsla
   1231  4     749A 108E 64E4             ldy   #Tbl_Priority_First_Entry_0>>
   1232  4+1   749E 31   A6               leay  a,y
   1233  5+1   74A0 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1234  5+0   74A3 ED   A4               std   ,y
   1235  3     74A5 20   0A               bra   DOB_CheckPrioNextB0
   1236                            
   1237        74A7               DOB_ChainPrevB0
   1238  5+1   74A7 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1239  6+1   74AA 10AE C8 37            ldy   rsv_priority_prev_obj_0,u
   1240  5+1   74AE ED   A8 39            std   rsv_priority_next_obj_0,y
   1241
   1242        74B1               DOB_CheckPrioNextB0
   1243  5+1   74B1 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   1244  3     74B4 26   11               bne   DOB_ChainNextB0
   1245
   1246  4+1   74B6 A6   C8 36            lda   rsv_priority_0,u
   1247  2     74B9 48                    lsla
   1248  4     74BA 108E 64F6             ldy   #Tbl_Priority_Last_Entry_0
   1249  4+1   74BE 31   A6               leay  a,y
   1250  5+1   74C0 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   1251  5+0   74C3 ED   A4               std   ,y
   1252  3     74C5 20   B3               bra   DOB_TestOnscreen1
   1253                            
   1254        74C7               DOB_ChainNextB0
   1255  5+1   74C7 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   1256  6+1   74CA 10AE C8 39            ldy   rsv_priority_next_obj_0,u
   1257  5+1   74CE ED   A8 37            std   rsv_priority_prev_obj_0,y
   1258  3     74D1 20   A7               bra   DOB_TestOnscreen1
   1259
   1260        74D3               DOB_RemoveFromDPSB1
   1261  5+1   74D3 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1262  3     74D6 26   11               bne   DOB_ChainPrevB1
   1263                            
   1264  4+1   74D8 A6   C8 48            lda   rsv_priority_1,u
   1265  2     74DB 48                    lsla
   1266  4     74DC 108E 658A             ldy   #Tbl_Priority_First_Entry_1>>
   1267  4+1   74E0 31   A6               leay  a,y
   1268  5+1   74E2 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1269  5+0   74E5 ED   A4               std   ,y
   1270  3     74E7 20   0A               bra   DOB_CheckPrioNextB1
   1271                            
   1272        74E9               DOB_ChainPrevB1
   1273  5+1   74E9 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1274  6+1   74EC 10AE C8 49            ldy   rsv_priority_prev_obj_1,u
   1275  5+1   74F0 ED   A8 4B            std   rsv_priority_next_obj_1,y
   1276
   1277        74F3               DOB_CheckPrioNextB1
   1278  5+1   74F3 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   1279  3     74F6 26   19               bne   DOB_ChainNextB1
   1280
   1281  4+1   74F8 A6   C8 48            lda   rsv_priority_1,u
   1282  2     74FB 48                    lsla
   1283  4     74FC 108E 659C             ldy   #Tbl_Priority_Last_Entry_1
   1284  4+1   7500 31   A6               leay  a,y
   1285  5+1   7502 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1286  5+0   7505 ED   A4               std   ,y
   1287  4+1   7507 A6   C8 47            lda   rsv_prev_render_flags_0,u
   1288  3     750A 2B   03               bmi   DOB_rts                    >>
   1289  8     750C BD   7525             jsr   ClearObj                   >>
   1290        750F               DOB_rts                                *
   1291  5+8   750F 35   D6               puls  d,x,u,pc
   1292                            
   1293        7511               DOB_ChainNextB1
   1294  5+1   7511 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   1295  6+1   7514 10AE C8 4B            ldy   rsv_priority_next_obj_1,u
   1296  5+1   7518 ED   A8 49            std   rsv_priority_prev_obj_1,y
   1297  4+1   751B A6   C8 47            lda   rsv_prev_render_flags_0,u
   1298  3     751E 2B   EF               bmi   DOB_rts                    >>
   1299  8     7520 BD   7525             jsr   ClearObj                   >>
   1300  5+8   7523 35   D6               puls  d,x,u,pc
   1301
   1302                                                                  * >>
   1303                                                                  *
   1304                                                                  * >>
   1305                                                                  * >>
   1306                                                                  *->>
   1307                                                                  * >>
   1308                                                                  * >>
   1309                                                                  * >>
   1310                                                                  * >>
   1311                                                                  *
   1312                                                                  * >>
   1313                                                                  *;>>
   1314
   1315                                   INCLUD CLEAROBJ
   1316                           * --------------------------------------->>
   1317                           * ClearObj
   1318                           * --------
   1319                           * Subroutine to clear an object data in O>>
   1320                           *
   1321                           * input REG : [u] pointer on objet (OST)
   1322                           * clear REG : [d,y]
   1323                           * --------------------------------------->>
   1324
   1325        7525               ClearObj *@globals
   1326  7     7525 10FF 7553             sts   CLO_1+2
   1327  6     7529 BF   7556             stx   CLO_2+1
   1328  3     752C CC   0000             ldd   #$0000
   1329  3     752F 8E   0000             ldx   #$0000
   1330  4+0   7532 31   84               leay  ,x
   1331  4+0   7534 32   84               leas  ,x
   1332  4+1   7536 33   C8 5A            leau  object_size,u
   1333  5+8   7539 36   76               pshu  d,x,y,s
   1334  5+8   753B 36   76               pshu  d,x,y,s
   1335  5+8   753D 36   76               pshu  d,x,y,s
   1336  5+8   753F 36   76               pshu  d,x,y,s
   1337  5+8   7541 36   76               pshu  d,x,y,s
   1338  5+8   7543 36   76               pshu  d,x,y,s
   1339  5+8   7545 36   76               pshu  d,x,y,s
   1340  5+8   7547 36   76               pshu  d,x,y,s
   1341  5+8   7549 36   76               pshu  d,x,y,s
   1342  5+8   754B 36   76               pshu  d,x,y,s
   1343  5+8   754D 36   76               pshu  d,x,y,s
   1344  5+2   754F 36   06               pshu  d         ; DEPENDENCY on o>>
   1345        7551               CLO_1
   1346  4     7551 10CE 0000             lds   #$0000
   1347        7555               CLO_2
   1348  3     7555 8E   0000             ldx   #$0000
   1349  5     7558 39                    rts
   1350
   1351                                   INCLUD CHECKSPR
   1352                           * --------------------------------------->>
   1353                           * CheckSpritesRefresh
   1354                           * -------------------
   1355                           * Subroutine to determine if sprites are >>
   1356                           * Read Display Priority Structure (back t>>
   1357                           * priority: 0 - unregistred
   1358                           * priority: 1 - register non moving overl>>
   1359                           * priority; 2-8 - register moving sprite >>
   1360                           *
   1361                           * input REG : none
   1362                           * --------------------------------------->>
   1363
   1364        7559 0000          cur_priority            fdb   $00
   1365        755B 0000          cur_ptr_sub_obj_erase   fdb   $0000
   1366        755D 0000          cur_ptr_sub_obj_draw    fdb   $0000
   1367                            
   1368        755F               CheckSpritesRefresh
   1369
   1370        755F               CSR_Start
   1371  3     755F CC   6630             ldd   #Tbl_Sub_Object_Erase
   1372  6     7562 FD   755B             std   cur_ptr_sub_obj_erase
   1373  3     7565 CC   66B0             ldd   #Tbl_Sub_Object_Draw
   1374  6     7568 FD   755D             std   cur_ptr_sub_obj_draw
   1375  5     756B B6   613D             lda   Glb_Cur_Wrk_Screen_Id      >>
   1376  3     756E 26   6E               bne   CSR_SetBuffer1
   1377                            
   1378        7570               CSR_SetBuffer0
   1379  2     7570 86   36               lda   #rsv_buffer_0              >>
   1380  5     7572 B7   764E             sta   CSR_ProcessEachPriorityLeve>>
   1381        7575               CSR_P8B0
   1382  6     7575 FE   64F4             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1383  3     7578 27   08               beq   CSR_P7B0
   1384  2     757A 86   08               lda   #$08
   1385  5     757C B7   7559             sta   cur_priority
   1386  8     757F BD   764C             jsr   CSR_ProcessEachPriorityLeve>>
   1387        7582               CSR_P7B0
   1388  6     7582 FE   64F2             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1389  3     7585 27   08               beq   CSR_P6B0
   1390  2     7587 86   07               lda   #$07
   1391  5     7589 B7   7559             sta   cur_priority
   1392  8     758C BD   764C             jsr   CSR_ProcessEachPriorityLeve>>
   1393        758F               CSR_P6B0
   1394  6     758F FE   64F0             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1395  3     7592 27   08               beq   CSR_P5B0
   1396  2     7594 86   06               lda   #$06
   1397  5     7596 B7   7559             sta   cur_priority
   1398  8     7599 BD   764C             jsr   CSR_ProcessEachPriorityLeve>>
   1399        759C               CSR_P5B0
   1400  6     759C FE   64EE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1401  3     759F 27   08               beq   CSR_P4B0
   1402  2     75A1 86   05               lda   #$05
   1403  5     75A3 B7   7559             sta   cur_priority
   1404  8     75A6 BD   764C             jsr   CSR_ProcessEachPriorityLeve>>
   1405        75A9               CSR_P4B0
   1406  6     75A9 FE   64EC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1407  3     75AC 27   08               beq   CSR_P3B0
   1408  2     75AE 86   04               lda   #$04
   1409  5     75B0 B7   7559             sta   cur_priority
   1410  8     75B3 BD   764C             jsr   CSR_ProcessEachPriorityLeve>>
   1411        75B6               CSR_P3B0
   1412  6     75B6 FE   64EA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1413  3     75B9 27   08               beq   CSR_P2B0
   1414  2     75BB 86   03               lda   #$03
   1415  5     75BD B7   7559             sta   cur_priority
   1416  8     75C0 BD   764C             jsr   CSR_ProcessEachPriorityLeve>>
   1417        75C3               CSR_P2B0
   1418  6     75C3 FE   64E8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1419  3     75C6 27   08               beq   CSR_P1B0
   1420  2     75C8 86   02               lda   #$02
   1421  5     75CA B7   7559             sta   cur_priority
   1422  8     75CD BD   764C             jsr   CSR_ProcessEachPriorityLeve>>
   1423        75D0               CSR_P1B0
   1424  6     75D0 FE   64E6             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1425  3     75D3 27   08               beq   CSR_rtsB0
   1426  2     75D5 86   01               lda   #$01
   1427  5     75D7 B7   7559             sta   cur_priority
   1428  8     75DA BD   764C             jsr   CSR_ProcessEachPriorityLeve>>
   1429        75DD               CSR_rtsB0
   1430  5     75DD 39                    rts
   1431                            
   1432        75DE               CSR_SetBuffer1
   1433  2     75DE 86   48               lda   #rsv_buffer_1              >>
   1434  5     75E0 B7   764E             sta   CSR_ProcessEachPriorityLeve>>
   1435        75E3               CSR_P8B1
   1436  6     75E3 FE   659A             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1437  3     75E6 27   08               beq   CSR_P7B1
   1438  2     75E8 86   08               lda   #$08
   1439  5     75EA B7   7559             sta   cur_priority
   1440  8     75ED BD   764C             jsr   CSR_ProcessEachPriorityLeve>>
   1441        75F0               CSR_P7B1
   1442  6     75F0 FE   6598             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1443  3     75F3 27   08               beq   CSR_P6B1
   1444  2     75F5 86   07               lda   #$07
   1445  5     75F7 B7   7559             sta   cur_priority
   1446  8     75FA BD   764C             jsr   CSR_ProcessEachPriorityLeve>>
   1447        75FD               CSR_P6B1
   1448  6     75FD FE   6596             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1449  3     7600 27   08               beq   CSR_P5B1
   1450  2     7602 86   06               lda   #$06
   1451  5     7604 B7   7559             sta   cur_priority
   1452  8     7607 BD   764C             jsr   CSR_ProcessEachPriorityLeve>>
   1453        760A               CSR_P5B1
   1454  6     760A FE   6594             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1455  3     760D 27   08               beq   CSR_P4B1
   1456  2     760F 86   05               lda   #$05
   1457  5     7611 B7   7559             sta   cur_priority
   1458  8     7614 BD   764C             jsr   CSR_ProcessEachPriorityLeve>>
   1459        7617               CSR_P4B1
   1460  6     7617 FE   6592             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1461  3     761A 27   08               beq   CSR_P3B1
   1462  2     761C 86   04               lda   #$04
   1463  5     761E B7   7559             sta   cur_priority
   1464  8     7621 BD   764C             jsr   CSR_ProcessEachPriorityLeve>>
   1465        7624               CSR_P3B1
   1466  6     7624 FE   6590             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1467  3     7627 27   08               beq   CSR_P2B1
   1468  2     7629 86   03               lda   #$03
   1469  5     762B B7   7559             sta   cur_priority
   1470  8     762E BD   764C             jsr   CSR_ProcessEachPriorityLeve>>
   1471        7631               CSR_P2B1
   1472  6     7631 FE   658E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1473  3     7634 27   08               beq   CSR_P1B1
   1474  2     7636 86   02               lda   #$02
   1475  5     7638 B7   7559             sta   cur_priority
   1476  8     763B BD   764C             jsr   CSR_ProcessEachPriorityLeve>>
   1477        763E               CSR_P1B1
   1478  6     763E FE   658C             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1479  3     7641 27   08               beq   CSR_rtsB1
   1480  2     7643 86   01               lda   #$01
   1481  5     7645 B7   7559             sta   cur_priority
   1482  8     7648 BD   764C             jsr   CSR_ProcessEachPriorityLeve>>
   1483        764B               CSR_rtsB1
   1484  5     764B 39                    rts
   1485
   1486        764C               CSR_ProcessEachPriorityLevel
   1487  4+1   764C 30   C8 10            leax  16,u                       >>
   1488                            
   1489        764F               CSR_CheckDelHide
   1490  4+1   764F A6   42               lda   render_flags,u
   1491  2     7651 84   60               anda  #render_hide_mask!render_to>>
   1492  3     7653 26   26               bne   CSR_DoNotDisplaySprite
   1493
   1494        7655               CSR_CheckRefresh
   1495  4+1   7655 A6   C8 29            lda   rsv_render_flags,u
   1496  2     7658 84   01               anda  #rsv_render_checkrefresh_ma>>
   1497  6     765A 1026 00B8             lbne  CSR_CheckErase
   1498
   1499        765E               CSR_UpdSpriteImageBasedOnMirror
   1500  4+1   765E A6   C8 29            lda   rsv_render_flags,u
   1501  2     7661 8A   01               ora   #rsv_render_checkrefresh_ma>>
   1502  4+1   7663 A7   C8 29            sta   rsv_render_flags,u         >>
   1503                            
   1504  4+1   7666 A6   42               lda   render_flags,u             >>
   1505  2     7668 84   03               anda  #render_xmirror_mask!render>>
   1506  6+1   766A 10AE 4A               ldy   image_set,u
   1507  4+1   766D E6   A6               ldb   a,y
   1508  4+1   766F 31   A5               leay  b,y                        >>
   1509  6+1   7671 10AF C8 2E            sty   rsv_image_subset,u
   1510                            
   1511        7675               CSR_CheckPlayFieldCoord
   1512  4+1   7675 A6   42               lda   render_flags,u
   1513  2     7677 84   10               anda  #render_playfieldcoord_mask>>
   1514  3     7679 27   2A               beq   CSR_CheckVerticalPosition  >>
   1515                            
   1516                                   * not yet implemented
   1517                                   * need to be updated with new alg>>
   1518                                   *ldd   x_pos,u
   1519                                   *subd  Glb_Camera_X_Pos
   1520                                   *ldy   rsv_mapping_frame,u
   1521                                   *addd  image_x_offset,y
   1522                                   *lbvs   CSR_SetOutOfRange        >>
   1523                                   *lbmi   CSR_SetOutOfRange        >>
   1524                                   *stb   x_pixel,u
   1525                                   *addb  image_x_size_l,y
   1526                                   *lbvs   CSR_SetOutOfRange        >>
   1527                                   *stb   rsv_x2_pixel,u
   1528                                   *cmpb  #screen_width
   1529                                   *lbgt   CSR_SetOutOfRange        >>
   1530
   1531                                   *ldd   y_pos,u
   1532                                   *subd  Glb_Camera_Y_Pos
   1533                                   *addd  image_y1_offset,y
   1534                                   *bvs   CSR_SetOutOfRange         >>
   1535                                   *bmi   CSR_SetOutOfRange         >>
   1536                                   *stb   y_pixel,u
   1537                                   *addb  image_y_size_l,y
   1538                                   *bvs   CSR_SetOutOfRange         >>
   1539                                   *stb   rsv_y2_pixel,u
   1540                                   *cmpb  #screen_bottom
   1541                                   *bhi   CSR_SetOutOfRange         >>
   1542                                   *lda   rsv_render_flags,u
   1543                                   *anda  #:rsv_render_outofrange_ma>>
   1544                                   *sta   rsv_render_flags,u
   1545                                   *bra   CSR_CheckErase
   1546                            
   1547        767B               CSR_DoNotDisplaySprite
   1548  4+1   767B A6   43               lda   priority,u
   1549  5     767D B1   7559             cmpa  cur_priority
   1550  3     7680 26   1C               bne   CSR_NextObject             >>
   1551                            
   1552  4+1   7682 A6   C8 29            lda   rsv_render_flags,u
   1553  2     7685 84   F9               anda  #:rsv_render_erasesprite_ma>>
   1554  4+1   7687 A7   C8 29            sta   rsv_render_flags,u
   1555                            
   1556  4+1   768A E6   88 11            ldb   buf_prev_render_flags,x
   1557  3     768D 2A   0F               bpl   CSR_NextObject             >>
   1558                            
   1559  2     768F 8A   02               ora   #rsv_render_erasesprite_mas>>
   1560  4+1   7691 A7   C8 29            sta   rsv_render_flags,u
   1561                            
   1562  7     7694 10BE 755B             ldy   cur_ptr_sub_obj_erase      >>
   1563  5+3   7698 EF   A1               stu   ,y++
   1564  7     769A 10BF 755B             sty   cur_ptr_sub_obj_erase
   1565                            
   1566        769E               CSR_NextObject
   1567  5+1   769E EE   03               ldu   buf_priority_next_obj,x
   1568  6     76A0 1026 FFA8             lbne  CSR_ProcessEachPriorityLeve>>
   1569  5     76A4 39                    rts
   1570
   1571        76A5               CSR_CheckVerticalPosition
   1572  4+1   76A5 A6   C8 12            lda   x_pixel,u                  >>
   1573  2     76A8 84   01               anda  #$01                       >>
   1574  2     76AA 48                    asla                             >>
   1575  4+1   76AB E6   42               ldb   render_flags,u
   1576  2     76AD C4   04               andb  #render_overlay_mask       >>
   1577  3     76AF 27   01               beq   CSR_NoOverlay
   1578  2     76B1 4C                    inca
   1579        76B2               CSR_NoOverlay
   1580  4+1   76B2 E6   A6               ldb   a,y
   1581  3     76B4 27   08               beq   CSR_NoDefinedFrame
   1582  4+1   76B6 31   A5               leay  b,y                        >>
   1583  6+1   76B8 10AF C8 30            sty   rsv_mapping_frame,u
   1584  3     76BC 20   16               bra CSR_CVP_Continue
   1585                            
   1586        76BE               CSR_NoDefinedFrame
   1587  2     76BE 84   01               anda  #$01                       >>
   1588  4+1   76C0 E6   A6               ldb   a,y
   1589  3     76C2 27   08               beq   CSR_NoFrameFound           >>
   1590  4+1   76C4 31   A5               leay  b,y                        >>
   1591  6+1   76C6 10AF C8 30            sty   rsv_mapping_frame,u
   1592  3     76CA 20   08               bra CSR_CVP_Continue
   1593                            
   1594        76CC               CSR_NoFrameFound
   1595  4     76CC 108E 0000             ldy   #$0000
   1596  6+1   76D0 10AF C8 30            sty   rsv_mapping_frame,u
   1597
   1598        76D4               CSR_CVP_Continue
   1599  4+1   76D4 E6   C8 13            ldb   y_pixel,u
   1600  6+1   76D7 10AE C8 2E            ldy   rsv_image_subset,u
   1601  4+1   76DB EB   25               addb  image_subset_y1_offset,y
   1602  4+1   76DD E7   C8 33            stb   rsv_y1_pixel,u
   1603
   1604  2     76E0 C1   1C               cmpb  #screen_top
   1605  3     76E2 25   2A               bcs   CSR_SetOutOfRange
   1606                            
   1607  6+1   76E4 10AE 4A               ldy   image_set,u
   1608  4+1   76E7 EB   25               addb  image_y_size,y
   1609  4+1   76E9 E7   C8 35            stb   rsv_y2_pixel,u
   1610
   1611  2     76EC C1   E4               cmpb  #screen_bottom
   1612  3     76EE 22   1E               bhi   CSR_SetOutOfRange
   1613                            
   1614  4+1   76F0 E6   C8 12            ldb   x_pixel,u
   1615  6+1   76F3 10AE C8 2E            ldy   rsv_image_subset,u
   1616  4+1   76F7 EB   24               addb  image_subset_x1_offset,y
   1617  4+1   76F9 E7   C8 32            stb   rsv_x1_pixel,u
   1618  6+1   76FC 10AE 4A               ldy   image_set,u
   1619  4+1   76FF EB   24               addb  image_x_size,y
   1620  4+1   7701 E7   C8 34            stb   rsv_x2_pixel,u
   1621                            
   1622  4+1   7704 A6   C8 29            lda   rsv_render_flags,u
   1623  2     7707 84   F7               anda  #:rsv_render_outofrange_mas>>
   1624  4+1   7709 A7   C8 29            sta   rsv_render_flags,u
   1625  3     770C 20   08               bra   CSR_CheckErase
   1626                            
   1627        770E               CSR_SetOutOfRange
   1628  4+1   770E A6   C8 29            lda   rsv_render_flags,u
   1629  2     7711 8A   08               ora   #rsv_render_outofrange_mask>>
   1630  4+1   7713 A7   C8 29            sta   rsv_render_flags,u
   1631
   1632        7716               CSR_CheckErase
   1633  7     7716 10FF 77EB             sts   CSR_CheckDraw+2
   1634  4+1   771A A6   00               lda   buf_priority,x
   1635  5     771C B1   7559             cmpa  cur_priority
   1636  6     771F 1026 00C6             lbne  CSR_CheckDraw
   1637                            
   1638  7     7723 10BE 755B             ldy   cur_ptr_sub_obj_erase
   1639                            
   1640  4+1   7727 A6   88 11            lda   buf_prev_render_flags,x
   1641  6     772A 102A 00B3             lbpl  CSR_SetEraseFalse          >>
   1642  5+1   772E EC   C8 12            ldd   xy_pixel,u
   1643  2     7731 44                    lsra                             >>
   1644  7+1   7732 10A3 0B               cmpd  buf_prev_xy_pixel,x
   1645  3     7735 26   10               bne   CSR_SetEraseTrue           >>
   1646  5+1   7737 EC   C8 30            ldd   rsv_mapping_frame,u
   1647  7+1   773A 10A3 07               cmpd  buf_prev_mapping_frame,x
   1648  3     773D 26   08               bne   CSR_SetEraseTrue           >>
   1649  4+1   773F A6   43               lda   priority,u
   1650  4+1   7741 A1   00               cmpa  buf_priority,x
   1651  3     7743 26   02               bne   CSR_SetEraseTrue           >>
   1652  3     7745 20   11               bra   CSR_SubEraseSpriteSearchIni>>
   1653                            
   1654        7747               CSR_SetEraseTrue
   1655  4+1   7747 A6   C8 29            lda   rsv_render_flags,u
   1656  2     774A 8A   02               ora   #rsv_render_erasesprite_mas>>
   1657  4+1   774C A7   C8 29            sta   rsv_render_flags,u
   1658                            
   1659  5+3   774F EF   A1               stu   ,y++
   1660  7     7751 10BF 755B             sty   cur_ptr_sub_obj_erase
   1661                            
   1662  5     7755 16   0091             lbra   CSR_CheckDraw
   1663                            
   1664        7758               CSR_SubEraseSpriteSearchInit
   1665
   1666                                   * search a collision with a sprit>>
   1667                                   * the sprite under should have to>>
   1668                                   * in this case it forces the refr>>
   1669                                   * as a sub loop, this should be o>>
   1670                                   * there are two lists because a s>>
   1671                                   * and displayed at another positi>>
   1672
   1673  7     7758 10FE 755B             lds   cur_ptr_sub_obj_erase
   1674  5     775C B6   613D             lda   Glb_Cur_Wrk_Screen_Id      >>
   1675  3     775F 26   29               bne   CSR_SubEraseSearchB1
   1676                            
   1677        7761               CSR_SubEraseSearchB0
   1678  5     7761 118C 6630             cmps  #Tbl_Sub_Object_Erase
   1679  3     7765 27   4C               beq   CSR_SubDrawSpriteSearchInit>>
   1680  6+3   7767 10AE E3               ldy   ,--s
   1681                            
   1682        776A               CSR_SubEraseCheckCollisionB0
   1683  5+1   776A EC   A8 43            ldd   rsv_prev_xy1_pixel_0,y     >>
   1684  4+1   776D A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1685  3     7770 24   EF               bhs   CSR_SubEraseSearchB0
   1686  4+1   7772 E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1687  3     7775 24   EA               bhs   CSR_SubEraseSearchB0
   1688  5+1   7777 EC   A8 45            ldd   rsv_prev_xy2_pixel_0,y     >>
   1689  4+1   777A A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1690  3     777D 23   E2               bls   CSR_SubEraseSearchB0
   1691  4+1   777F E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1692  3     7782 23   DD               bls   CSR_SubEraseSearchB0
   1693                            
   1694  7     7784 10BE 755B             ldy   cur_ptr_sub_obj_erase
   1695  3     7788 20   BD               bra   CSR_SetEraseTrue           >>
   1696
   1697        778A               CSR_SubEraseSearchB1
   1698  5     778A 118C 6630             cmps  #Tbl_Sub_Object_Erase
   1699  3     778E 27   23               beq   CSR_SubDrawSpriteSearchInit>>
   1700  6+3   7790 10AE E3               ldy   ,--s
   1701                            
   1702        7793               CSR_SubEraseCheckCollisionB1
   1703  5+1   7793 EC   A8 55            ldd   rsv_prev_xy1_pixel_1,y     >>
   1704  4+1   7796 A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1705  3     7799 22   EF               bhi   CSR_SubEraseSearchB1
   1706  4+1   779B E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1707  3     779E 22   EA               bhi   CSR_SubEraseSearchB1
   1708  5+1   77A0 EC   A8 57            ldd   rsv_prev_xy2_pixel_1,y     >>
   1709  4+1   77A3 A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1710  3     77A6 25   E2               blo   CSR_SubEraseSearchB1
   1711  4+1   77A8 E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1712  3     77AB 25   DD               blo   CSR_SubEraseSearchB1
   1713                            
   1714  7     77AD 10BE 755B             ldy   cur_ptr_sub_obj_erase
   1715  3     77B1 20   94               bra   CSR_SetEraseTrue           >>
   1716
   1717        77B3               CSR_SubDrawSpriteSearchInit
   1718  7     77B3 10FE 755D             lds   cur_ptr_sub_obj_draw
   1719                            
   1720        77B7               CSR_SubDrawSearch
   1721  5     77B7 118C 66B0             cmps  #Tbl_Sub_Object_Draw
   1722  3     77BB 27   24               beq   CSR_SetEraseFalse          >>
   1723  6+3   77BD 10AE E3               ldy   ,--s
   1724
   1725        77C0               CSR_SubDrawCheckCollision
   1726  5+1   77C0 EC   A8 32            ldd   rsv_xy1_pixel,y            >>
   1727  4+1   77C3 A1   C8 34            cmpa  rsv_x2_pixel,u             >>
   1728  3     77C6 22   EF               bhi   CSR_SubDrawSearch
   1729  4+1   77C8 E1   C8 35            cmpb  rsv_y2_pixel,u             >>
   1730  3     77CB 22   EA               bhi   CSR_SubDrawSearch
   1731  5+1   77CD EC   A8 34            ldd   rsv_xy2_pixel,y            >>
   1732  4+1   77D0 A1   C8 32            cmpa  rsv_x1_pixel,u             >>
   1733  3     77D3 25   E2               blo   CSR_SubDrawSearch
   1734  4+1   77D5 E1   C8 33            cmpb  rsv_y1_pixel,u             >>
   1735  3     77D8 25   DD               blo   CSR_SubDrawSearch
   1736                            
   1737  7     77DA 10BE 755B             ldy   cur_ptr_sub_obj_erase
   1738  5     77DE 16   FF66             lbra  CSR_SetEraseTrue           >>
   1739
   1740        77E1               CSR_SetEraseFalse
   1741  4+1   77E1 A6   C8 29            lda   rsv_render_flags,u
   1742  2     77E4 84   FD               anda  #:rsv_render_erasesprite_ma>>
   1743  4+1   77E6 A7   C8 29            sta   rsv_render_flags,u
   1744                            
   1745        77E9               CSR_CheckDraw
   1746  4     77E9 10CE FFFF             lds   #$FFFF                     >>
   1747  4+1   77ED A6   43               lda   priority,u
   1748  5     77EF B1   7559             cmpa  cur_priority
   1749  6     77F2 1026 FEA8             lbne  CSR_NextObject
   1750                            
   1751  7     77F6 10BE 755D             ldy   cur_ptr_sub_obj_draw
   1752                            
   1753  4+1   77FA A6   C8 29            lda   rsv_render_flags,u
   1754  2     77FD 84   08               anda  #rsv_render_outofrange_mask>>
   1755  3     77FF 26   38               bne   CSR_SetDrawFalse           >>
   1756  5+1   7801 EC   C8 30            ldd   rsv_mapping_frame,u
   1757  3     7804 27   33               beq   CSR_SetDrawFalse           >>
   1758  4+1   7806 A6   42               lda   render_flags,u
   1759  2     7808 84   20               anda  #render_hide_mask
   1760  3     780A 26   2D               bne   CSR_SetDrawFalse           >>
   1761                            
   1762        780C               CSR_SetDrawTrue
   1763  4+1   780C A6   C8 29            lda   rsv_render_flags,u
   1764  2     780F 8A   04               ora   #rsv_render_displaysprite_m>>
   1765  4+1   7811 A7   C8 29            sta   rsv_render_flags,u
   1766                            
   1767  2     7814 85   02               bita  #rsv_render_erasesprite_mas>>
   1768  3     7816 27   02               beq   CSR_SDT1
   1769  3     7818 20   07               bra   CSR_SDT2
   1770        781A               CSR_SDT1
   1771  4+1   781A E6   88 11            ldb   buf_prev_render_flags,x
   1772  3     781D 2B   0D               bmi   CSR_SetHide
   1773  3     781F 20   05               bra   CSR_SDT3
   1774        7821               CSR_SDT2
   1775  4+1   7821 E6   88 11            ldb   buf_prev_render_flags,x
   1776  3     7824 2A   06               bpl   CSR_SetHide
   1777        7826               CSR_SDT3
   1778  5+3   7826 EF   A1               stu   ,y++
   1779  7     7828 10BF 755D             sty   cur_ptr_sub_obj_draw       >>
   1780
   1781        782C               CSR_SetHide
   1782  4+1   782C A6   42               lda   render_flags,u
   1783  2     782E 8A   20               ora   #render_hide_mask          >>
   1784  4+1   7830 A7   42               sta   render_flags,u
   1785                            
   1786  5+1   7832 EE   03               ldu   buf_priority_next_obj,x
   1787  6     7834 1026 FE14             lbne  CSR_ProcessEachPriorityLeve>>
   1788  5     7838 39                    rts
   1789
   1790        7839               CSR_SetDrawFalse
   1791  4+1   7839 A6   C8 29            lda   rsv_render_flags,u
   1792  2     783C 84   FB               anda  #:rsv_render_displaysprite_>>
   1793  4+1   783E A7   C8 29            sta   rsv_render_flags,u
   1794                            
   1795  5+1   7841 EE   03               ldu   buf_priority_next_obj,x
   1796  6     7843 1026 FE05             lbne   CSR_ProcessEachPriorityLev>>
   1797  5     7847 39                    rts
   1798
   1799
   1800                                   INCLUD ERASESPR
   1801                           * --------------------------------------->>
   1802                           * EraseSprites
   1803                           * ------------
   1804                           * Subroutine to erase sprites on screen
   1805                           * Read Display Priority Structure (front >>
   1806                           * priority: 0 - unregistred
   1807                           * priority: 1 - register non moving overl>>
   1808                           * priority; 2-8 - register moving sprite >>
   1809                           *
   1810                           * input REG : none
   1811                           * --------------------------------------->>
   1812                            
   1813        7848               EraseSprites
   1814
   1815        7848               ESP_Start
   1816  5     7848 B6   613D             lda   Glb_Cur_Wrk_Screen_Id      >>
   1817  3     784B 26   69               bne   ESP_P1B1
   1818
   1819        784D               ESP_P1B0
   1820  6     784D FE   64F8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1821  3     7850 27   08               beq   ESP_P2B0
   1822  2     7852 86   01               lda   #$01
   1823  5     7854 B7   7923             sta   ESP_CheckPriorityB0+1
   1824  8     7857 BD   791F             jsr   ESP_ProcessEachPriorityLeve>>
   1825        785A               ESP_P2B0
   1826  6     785A FE   64FA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1827  3     785D 27   08               beq   ESP_P3B0
   1828  2     785F 86   02               lda   #$02
   1829  5     7861 B7   7923             sta   ESP_CheckPriorityB0+1
   1830  8     7864 BD   791F             jsr   ESP_ProcessEachPriorityLeve>>
   1831        7867               ESP_P3B0
   1832  6     7867 FE   64FC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1833  3     786A 27   08               beq   ESP_P4B0
   1834  2     786C 86   03               lda   #$03
   1835  5     786E B7   7923             sta   ESP_CheckPriorityB0+1
   1836  8     7871 BD   791F             jsr   ESP_ProcessEachPriorityLeve>>
   1837        7874               ESP_P4B0
   1838  6     7874 FE   64FE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1839  3     7877 27   08               beq   ESP_P5B0
   1840  2     7879 86   04               lda   #$04
   1841  5     787B B7   7923             sta   ESP_CheckPriorityB0+1
   1842  8     787E BD   791F             jsr   ESP_ProcessEachPriorityLeve>>
   1843        7881               ESP_P5B0
   1844  6     7881 FE   6500             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1845  3     7884 27   08               beq   ESP_P6B0
   1846  2     7886 86   05               lda   #$05
   1847  5     7888 B7   7923             sta   ESP_CheckPriorityB0+1
   1848  8     788B BD   791F             jsr   ESP_ProcessEachPriorityLeve>>
   1849        788E               ESP_P6B0
   1850  6     788E FE   6502             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1851  3     7891 27   08               beq   ESP_P7B0
   1852  2     7893 86   06               lda   #$06
   1853  5     7895 B7   7923             sta   ESP_CheckPriorityB0+1
   1854  8     7898 BD   791F             jsr   ESP_ProcessEachPriorityLeve>>
   1855        789B               ESP_P7B0
   1856  6     789B FE   6504             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1857  3     789E 27   08               beq   ESP_P8B0
   1858  2     78A0 86   07               lda   #$07
   1859  5     78A2 B7   7923             sta   ESP_CheckPriorityB0+1
   1860  8     78A5 BD   791F             jsr   ESP_ProcessEachPriorityLeve>>
   1861        78A8               ESP_P8B0
   1862  6     78A8 FE   6506             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1863  3     78AB 27   08               beq   ESP_rtsB0
   1864  2     78AD 86   08               lda   #$08
   1865  5     78AF B7   7923             sta   ESP_CheckPriorityB0+1
   1866  8     78B2 BD   791F             jsr   ESP_ProcessEachPriorityLeve>>
   1867        78B5               ESP_rtsB0
   1868  5     78B5 39                    rts
   1869                            
   1870        78B6               ESP_P1B1
   1871  6     78B6 FE   659E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1872  3     78B9 27   08               beq   ESP_P2B1
   1873  2     78BB 86   01               lda   #$01
   1874  5     78BD B7   7971             sta   ESP_CheckPriorityB1+1
   1875  8     78C0 BD   796D             jsr   ESP_ProcessEachPriorityLeve>>
   1876        78C3               ESP_P2B1
   1877  6     78C3 FE   65A0             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1878  3     78C6 27   08               beq   ESP_P3B1
   1879  2     78C8 86   02               lda   #$02
   1880  5     78CA B7   7971             sta   ESP_CheckPriorityB1+1
   1881  8     78CD BD   796D             jsr   ESP_ProcessEachPriorityLeve>>
   1882        78D0               ESP_P3B1
   1883  6     78D0 FE   65A2             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1884  3     78D3 27   08               beq   ESP_P4B1
   1885  2     78D5 86   03               lda   #$03
   1886  5     78D7 B7   7971             sta   ESP_CheckPriorityB1+1
   1887  8     78DA BD   796D             jsr   ESP_ProcessEachPriorityLeve>>
   1888        78DD               ESP_P4B1
   1889  6     78DD FE   65A4             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1890  3     78E0 27   08               beq   ESP_P5B1
   1891  2     78E2 86   04               lda   #$04
   1892  5     78E4 B7   7971             sta   ESP_CheckPriorityB1+1
   1893  8     78E7 BD   796D             jsr   ESP_ProcessEachPriorityLeve>>
   1894        78EA               ESP_P5B1
   1895  6     78EA FE   65A6             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1896  3     78ED 27   08               beq   ESP_P6B1
   1897  2     78EF 86   05               lda   #$05
   1898  5     78F1 B7   7971             sta   ESP_CheckPriorityB1+1
   1899  8     78F4 BD   796D             jsr   ESP_ProcessEachPriorityLeve>>
   1900        78F7               ESP_P6B1
   1901  6     78F7 FE   65A8             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1902  3     78FA 27   08               beq   ESP_P7B1
   1903  2     78FC 86   06               lda   #$06
   1904  5     78FE B7   7971             sta   ESP_CheckPriorityB1+1
   1905  8     7901 BD   796D             jsr   ESP_ProcessEachPriorityLeve>>
   1906        7904               ESP_P7B1
   1907  6     7904 FE   65AA             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1908  3     7907 27   08               beq   ESP_P8B1
   1909  2     7909 86   07               lda   #$07
   1910  5     790B B7   7971             sta   ESP_CheckPriorityB1+1
   1911  8     790E BD   796D             jsr   ESP_ProcessEachPriorityLeve>>
   1912        7911               ESP_P8B1
   1913  6     7911 FE   65AC             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1914  3     7914 27   08               beq   ESP_rtsB1
   1915  2     7916 86   08               lda   #$08
   1916  5     7918 B7   7971             sta   ESP_CheckPriorityB1+1
   1917  8     791B BD   796D             jsr   ESP_ProcessEachPriorityLeve>>
   1918        791E               ESP_rtsB1
   1919  5     791E 39                    rts
   1920
   1921                           * *******
   1922                           * BUFFER0
   1923                           * *******
   1924
   1925        791F               ESP_ProcessEachPriorityLevelB0
   1926  4+1   791F A6   C8 36            lda   rsv_priority_0,u
   1927                            
   1928        7922               ESP_CheckPriorityB0
   1929  2     7922 81   00               cmpa  #0                         >>
   1930  3     7924 26   41               bne   ESP_NextObjectB0           >>
   1931                            
   1932        7926               ESP_UnsetCheckRefreshB0
   1933  4+1   7926 A6   C8 29            lda   rsv_render_flags,u
   1934  4+1   7929 E6   42               ldb   render_flags,u
   1935  2     792B C4   08               andb  #render_motionless_mask
   1936  3     792D 26   05               bne   ESP_CheckEraseB0
   1937  2     792F 84   FE               anda  #:rsv_render_checkrefresh_m>>
   1938  4+1   7931 A7   C8 29            sta   rsv_render_flags,u
   1939                            
   1940        7934               ESP_CheckEraseB0
   1941  2     7934 84   02               anda  #rsv_render_erasesprite_mas>>
   1942  3     7936 27   2F               beq   ESP_NextObjectB0
   1943  4+1   7938 E6   C8 47            ldb   rsv_prev_render_flags_0,u
   1944  2     793B C4   01               andb  #rsv_prev_render_overlay_ma>>
   1945  3     793D 26   20               bne   ESP_UnsetOnScreenFlagB0
   1946                            
   1947        793F               ESP_CallEraseRoutineB0
   1948  6     793F FF   7953             stu   ESP_CallEraseRoutineB0_00+1>>
   1949  5+1   7942 AE   C8 3D            ldx   rsv_prev_mapping_frame_0,u >>
   1950  4+1   7945 A6   03               lda   page_erase_routine,x
   1951  5     7947 B7   E7E5             sta   $E7E5                      >>
   1952  5+1   794A EE   C8 3F            ldu   rsv_bgdata_0,u             >>
   1953  7+4   794D AD   98 04            jsr   [erase_routine,x]          >>
   1954  4+0   7950 31   C4               leay  ,u                         >>
   1955        7952               ESP_CallEraseRoutineB0_00
   1956  3     7952 CE   0000             ldu   #$0000                     >>
   1957  5+1   7955 EC   C8 3F            ldd   rsv_bgdata_0,u             >>
   1958  2     7958 C4   C0               andb  #256-cell_size             >>
   1959  6     795A 1F   01               tfr   d,x                        >>
   1960                            
   1961        795C               ESP_FreeEraseBufferB0
   1962  8     795C BD   7CC7             jsr   BgBufferFree               >>
   1963                            
   1964        795F               ESP_UnsetOnScreenFlagB0
   1965  4+1   795F A6   C8 47            lda   rsv_prev_render_flags_0,u
   1966  2     7962 84   7F               anda  #:rsv_prev_render_onscreen_>>
   1967  4+1   7964 A7   C8 47            sta   rsv_prev_render_flags_0,u
   1968
   1969        7967               ESP_NextObjectB0
   1970  5+1   7967 EE   C8 37            ldu   rsv_priority_prev_obj_0,u
   1971  3     796A 26   B3               bne   ESP_ProcessEachPriorityLeve>>
   1972  5     796C 39                    rts
   1973
   1974                           * *******
   1975                           * BUFFER1
   1976                           * *******
   1977                            
   1978        796D               ESP_ProcessEachPriorityLevelB1
   1979  4+1   796D A6   C8 48            lda   rsv_priority_1,u
   1980                            
   1981        7970               ESP_CheckPriorityB1
   1982  2     7970 81   00               cmpa  #0                         >>
   1983  3     7972 26   41               bne   ESP_NextObjectB1           >>
   1984                            
   1985        7974               ESP_UnsetCheckRefreshB1
   1986  4+1   7974 A6   C8 29            lda   rsv_render_flags,u
   1987  4+1   7977 E6   42               ldb   render_flags,u
   1988  2     7979 C4   08               andb  #render_motionless_mask
   1989  3     797B 26   05               bne   ESP_CheckEraseB1
   1990  2     797D 84   FE               anda  #:rsv_render_checkrefresh_m>>
   1991  4+1   797F A7   C8 29            sta   rsv_render_flags,u
   1992                            
   1993        7982               ESP_CheckEraseB1
   1994  2     7982 84   02               anda  #rsv_render_erasesprite_mas>>
   1995  3     7984 27   2F               beq   ESP_NextObjectB1
   1996  4+1   7986 E6   C8 59            ldb   rsv_prev_render_flags_1,u
   1997  2     7989 C4   01               andb  #rsv_prev_render_overlay_ma>>
   1998  3     798B 26   20               bne   ESP_UnsetOnScreenFlagB1
   1999                            
   2000        798D               ESP_CallEraseRoutineB1
   2001  6     798D FF   79A1             stu   ESP_CallEraseRoutineB1_00+1>>
   2002  5+1   7990 AE   C8 4F            ldx   rsv_prev_mapping_frame_1,u >>
   2003  4+1   7993 A6   03               lda   page_erase_routine,x
   2004  5     7995 B7   E7E5             sta   $E7E5                      >>
   2005  5+1   7998 EE   C8 51            ldu   rsv_bgdata_1,u             >>
   2006  7+4   799B AD   98 04            jsr   [erase_routine,x]          >>
   2007  4+0   799E 31   C4               leay  ,u                         >>
   2008        79A0               ESP_CallEraseRoutineB1_00
   2009  3     79A0 CE   0000             ldu   #$0000                     >>
   2010  5+1   79A3 EC   C8 51            ldd   rsv_bgdata_1,u             >>
   2011  2     79A6 C4   C0               andb  #256-cell_size             >>
   2012  6     79A8 1F   01               tfr   d,x                        >>
   2013                            
   2014        79AA               ESP_FreeEraseBufferB1
   2015  8     79AA BD   7CC7             jsr   BgBufferFree               >>
   2016                            
   2017        79AD               ESP_UnsetOnScreenFlagB1
   2018  4+1   79AD A6   C8 59            lda   rsv_prev_render_flags_1,u
   2019  2     79B0 84   7F               anda  #:rsv_prev_render_onscreen_>>
   2020  4+1   79B2 A7   C8 59            sta   rsv_prev_render_flags_1,u
   2021                            
   2022        79B5               ESP_NextObjectB1
   2023  5+1   79B5 EE   C8 49            ldu   rsv_priority_prev_obj_1,u
   2024  3     79B8 26   B3               bne   ESP_ProcessEachPriorityLeve>>
   2025  5     79BA 39                    rts
   2026
   2027                                   INCLUD UNSETDSP
   2028                           * --------------------------------------->>
   2029                           * UnsetDisplayPriority
   2030                           * --------------------
   2031                           * Subroutine to unset sprites in Display >>
   2032                           * Read Lst_Priority_Unset_0/1
   2033                           *
   2034                           * input REG : none
   2035                           * --------------------------------------->>
   2036                            
   2037        79BB               UnsetDisplayPriority
   2038
   2039        79BB               UDP_Start
   2040  5     79BB B6   613D             lda   Glb_Cur_Wrk_Screen_Id      >>
   2041  3     79BE 26   6D               bne   UDP_B1
   2042                            
   2043        79C0               UDP_B0
   2044  3     79C0 8E   650A             ldx   #Lst_Priority_Unset_0+2
   2045                            
   2046        79C3               UDP_CheckEndB0
   2047  7     79C3 BC   6508             cmpx  Lst_Priority_Unset_0       >>
   2048  3     79C6 26   07               bne   UDP_CheckPrioPrevB0
   2049                            
   2050        79C8               UDP_InitListB0
   2051  3     79C8 8E   650A             ldx   #Lst_Priority_Unset_0+2
   2052  6     79CB BF   6508             stx   Lst_Priority_Unset_0       >>
   2053  5     79CE 39                    rts
   2054                            
   2055        79CF               UDP_CheckPrioPrevB0
   2056  5+3   79CF EE   81               ldu   ,x++
   2057  5+1   79D1 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2058  3     79D4 26   11               bne   UDP_ChainPrevB0
   2059                            
   2060  4+1   79D6 A6   C8 36            lda   rsv_priority_0,u
   2061  2     79D9 48                    lsla
   2062  4     79DA 108E 64E4             ldy   #Tbl_Priority_First_Entry_0>>
   2063  4+1   79DE 31   A6               leay  a,y
   2064  5+1   79E0 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2065  5+0   79E3 ED   A4               std   ,y
   2066  3     79E5 20   0A               bra   UDP_CheckPrioNextB0
   2067                            
   2068        79E7               UDP_ChainPrevB0
   2069  5+1   79E7 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2070  6+1   79EA 10AE C8 37            ldy   rsv_priority_prev_obj_0,u
   2071  5+1   79EE ED   A8 39            std   rsv_priority_next_obj_0,y
   2072
   2073        79F1               UDP_CheckPrioNextB0
   2074  5+1   79F1 EC   C8 39            ldd   rsv_priority_next_obj_0,u
   2075  3     79F4 26   11               bne   UDP_ChainNextB0
   2076
   2077  4+1   79F6 A6   C8 36            lda   rsv_priority_0,u
   2078  2     79F9 48                    lsla
   2079  4     79FA 108E 64F6             ldy   #Tbl_Priority_Last_Entry_0
   2080  4+1   79FE 31   A6               leay  a,y
   2081  5+1   7A00 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2082  5+0   7A03 ED   A4               std   ,y
   2083  3     7A05 20   0A               bra   UDP_CheckDeleteB0
   2084                            
   2085        7A07               UDP_ChainNextB0
   2086  5+1   7A07 EC   C8 37            ldd   rsv_priority_prev_obj_0,u
   2087  6+1   7A0A 10AE C8 39            ldy   rsv_priority_next_obj_0,u
   2088  5+1   7A0E ED   A8 37            std   rsv_priority_prev_obj_0,y
   2089                            
   2090        7A11               UDP_CheckDeleteB0
   2091  4+1   7A11 A6   42               lda   render_flags,u
   2092  2     7A13 84   40               anda  #render_todelete_mask
   2093  3     7A15 27   0F               beq   UDP_SetNewPrioB0
   2094  4+1   7A17 A6   C8 47            lda   rsv_prev_render_flags_0,u
   2095  3     7A1A 2B   0A               bmi   UDP_SetNewPrioB0
   2096  4+1   7A1C A6   C8 59            lda   rsv_prev_render_flags_1,u
   2097  3     7A1F 2B   05               bmi   UDP_SetNewPrioB0
   2098  8     7A21 BD   7525             jsr   ClearObj
   2099  3     7A24 20   9D               bra   UDP_CheckEndB0
   2100                            
   2101        7A26               UDP_SetNewPrioB0
   2102  4+1   7A26 A6   43               lda   priority,u
   2103  4+1   7A28 A7   C8 36            sta   rsv_priority_0,u
   2104  3     7A2B 20   96               bra   UDP_CheckEndB0
   2105
   2106        7A2D               UDP_B1
   2107  3     7A2D 8E   65B0             ldx   #Lst_Priority_Unset_1+2
   2108                            
   2109        7A30               UDP_CheckEndB1
   2110  7     7A30 BC   65AE             cmpx  Lst_Priority_Unset_1       >>
   2111  3     7A33 26   07               bne   UDP_CheckPrioPrevB1
   2112                            
   2113        7A35               UDP_InitListB1
   2114  3     7A35 8E   65B0             ldx   #Lst_Priority_Unset_1+2
   2115  6     7A38 BF   65AE             stx   Lst_Priority_Unset_1       >>
   2116  5     7A3B 39                    rts
   2117                            
   2118        7A3C               UDP_CheckPrioPrevB1
   2119  5+3   7A3C EE   81               ldu   ,x++
   2120  5+1   7A3E EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2121  3     7A41 26   11               bne   UDP_ChainPrevB1
   2122                            
   2123  4+1   7A43 A6   C8 48            lda   rsv_priority_1,u
   2124  2     7A46 48                    lsla
   2125  4     7A47 108E 658A             ldy   #Tbl_Priority_First_Entry_1>>
   2126  4+1   7A4B 31   A6               leay  a,y
   2127  5+1   7A4D EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2128  5+0   7A50 ED   A4               std   ,y
   2129  3     7A52 20   0A               bra   UDP_CheckPrioNextB1
   2130                            
   2131        7A54               UDP_ChainPrevB1
   2132  5+1   7A54 EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2133  6+1   7A57 10AE C8 49            ldy   rsv_priority_prev_obj_1,u
   2134  5+1   7A5B ED   A8 4B            std   rsv_priority_next_obj_1,y
   2135
   2136        7A5E               UDP_CheckPrioNextB1
   2137  5+1   7A5E EC   C8 4B            ldd   rsv_priority_next_obj_1,u
   2138  3     7A61 26   11               bne   UDP_ChainNextB1
   2139
   2140  4+1   7A63 A6   C8 48            lda   rsv_priority_1,u
   2141  2     7A66 48                    lsla
   2142  4     7A67 108E 659C             ldy   #Tbl_Priority_Last_Entry_1
   2143  4+1   7A6B 31   A6               leay  a,y
   2144  5+1   7A6D EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2145  5+0   7A70 ED   A4               std   ,y
   2146  3     7A72 20   0A               bra   UDP_CheckDeleteB1
   2147                            
   2148        7A74               UDP_ChainNextB1
   2149  5+1   7A74 EC   C8 49            ldd   rsv_priority_prev_obj_1,u
   2150  6+1   7A77 10AE C8 4B            ldy   rsv_priority_next_obj_1,u
   2151  5+1   7A7B ED   A8 49            std   rsv_priority_prev_obj_1,y
   2152                            
   2153        7A7E               UDP_CheckDeleteB1
   2154  4+1   7A7E A6   42               lda   render_flags,u
   2155  2     7A80 84   40               anda  #render_todelete_mask
   2156  3     7A82 27   0F               beq   UDP_SetNewPrioB1
   2157  4+1   7A84 A6   C8 47            lda   rsv_prev_render_flags_0,u
   2158  3     7A87 2B   0A               bmi   UDP_SetNewPrioB1
   2159  4+1   7A89 A6   C8 59            lda   rsv_prev_render_flags_1,u
   2160  3     7A8C 2B   05               bmi   UDP_SetNewPrioB1
   2161  8     7A8E BD   7525             jsr   ClearObj
   2162  3     7A91 20   9D               bra   UDP_CheckEndB1
   2163                            
   2164        7A93               UDP_SetNewPrioB1
   2165  4+1   7A93 A6   43               lda   priority,u
   2166  4+1   7A95 A7   C8 48            sta   rsv_priority_1,u
   2167  3     7A98 20   96               bra   UDP_CheckEndB1
   2168
   2169                                   INCLUD DRAWSPR
   2170                           * --------------------------------------->>
   2171                           * DrawSprites
   2172                           * ------------
   2173                           * Subroutine to draw sprites on screen
   2174                           * Read Display Priority Structure (back t>>
   2175                           * priority: 0 - unregistred
   2176                           * priority: 1 - register non moving overl>>
   2177                           * priority; 2-8 - register moving sprite >>
   2178                           *
   2179                           * input REG : none
   2180                           * --------------------------------------->>
   2181                            
   2182        7A9A               DrawSprites
   2183
   2184        7A9A               DRS_Start
   2185  5     7A9A B6   613D             lda   Glb_Cur_Wrk_Screen_Id      >>
   2186  3     7A9D 26   41               bne   DRS_P8B1
   2187                            
   2188        7A9F               DRS_P8B0
   2189  6     7A9F BE   64F4             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2190  3     7AA2 27   03               beq   DRS_P7B0
   2191  8     7AA4 BD   7B21             jsr   DRS_ProcessEachPriorityLeve>>
   2192        7AA7               DRS_P7B0
   2193  6     7AA7 BE   64F2             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2194  3     7AAA 27   03               beq   DRS_P6B0
   2195  8     7AAC BD   7B21             jsr   DRS_ProcessEachPriorityLeve>>
   2196        7AAF               DRS_P6B0
   2197  6     7AAF BE   64F0             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2198  3     7AB2 27   03               beq   DRS_P5B0
   2199  8     7AB4 BD   7B21             jsr   DRS_ProcessEachPriorityLeve>>
   2200        7AB7               DRS_P5B0
   2201  6     7AB7 BE   64EE             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2202  3     7ABA 27   03               beq   DRS_P4B0
   2203  8     7ABC BD   7B21             jsr   DRS_ProcessEachPriorityLeve>>
   2204        7ABF               DRS_P4B0
   2205  6     7ABF BE   64EC             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2206  3     7AC2 27   03               beq   DRS_P3B0
   2207  8     7AC4 BD   7B21             jsr   DRS_ProcessEachPriorityLeve>>
   2208        7AC7               DRS_P3B0
   2209  6     7AC7 BE   64EA             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2210  3     7ACA 27   03               beq   DRS_P2B0
   2211  8     7ACC BD   7B21             jsr   DRS_ProcessEachPriorityLeve>>
   2212        7ACF               DRS_P2B0
   2213  6     7ACF BE   64E8             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2214  3     7AD2 27   03               beq   DRS_P1B0
   2215  8     7AD4 BD   7B21             jsr   DRS_ProcessEachPriorityLeve>>
   2216        7AD7               DRS_P1B0
   2217  6     7AD7 BE   64E6             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   2218  3     7ADA 27   03               beq   DRS_rtsB0
   2219  8     7ADC BD   7B21             jsr   DRS_ProcessEachPriorityLeve>>
   2220        7ADF               DRS_rtsB0
   2221  5     7ADF 39                    rts
   2222                            
   2223        7AE0               DRS_P8B1
   2224  6     7AE0 BE   659A             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2225  3     7AE3 27   03               beq   DRS_P7B1
   2226  8     7AE5 BD   7BE1             jsr   DRS_ProcessEachPriorityLeve>>
   2227        7AE8               DRS_P7B1
   2228  6     7AE8 BE   6598             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2229  3     7AEB 27   03               beq   DRS_P6B1
   2230  8     7AED BD   7BE1             jsr   DRS_ProcessEachPriorityLeve>>
   2231        7AF0               DRS_P6B1
   2232  6     7AF0 BE   6596             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2233  3     7AF3 27   03               beq   DRS_P5B1
   2234  8     7AF5 BD   7BE1             jsr   DRS_ProcessEachPriorityLeve>>
   2235        7AF8               DRS_P5B1
   2236  6     7AF8 BE   6594             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2237  3     7AFB 27   03               beq   DRS_P4B1
   2238  8     7AFD BD   7BE1             jsr   DRS_ProcessEachPriorityLeve>>
   2239        7B00               DRS_P4B1
   2240  6     7B00 BE   6592             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2241  3     7B03 27   03               beq   DRS_P3B1
   2242  8     7B05 BD   7BE1             jsr   DRS_ProcessEachPriorityLeve>>
   2243        7B08               DRS_P3B1
   2244  6     7B08 BE   6590             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2245  3     7B0B 27   03               beq   DRS_P2B1
   2246  8     7B0D BD   7BE1             jsr   DRS_ProcessEachPriorityLeve>>
   2247        7B10               DRS_P2B1
   2248  6     7B10 BE   658E             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2249  3     7B13 27   03               beq   DRS_P1B1
   2250  8     7B15 BD   7BE1             jsr   DRS_ProcessEachPriorityLeve>>
   2251        7B18               DRS_P1B1
   2252  6     7B18 BE   658C             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2253  3     7B1B 27   03               beq   DRS_rtsB1
   2254  8     7B1D BD   7BE1             jsr   DRS_ProcessEachPriorityLeve>>
   2255        7B20               DRS_rtsB1
   2256  5     7B20 39                    rts
   2257
   2258        7B21               DRS_ProcessEachPriorityLevelB0
   2259  4+1   7B21 A6   88 29            lda   rsv_render_flags,x
   2260  2     7B24 84   04               anda  #rsv_render_displaysprite_m>>
   2261  3     7B26 27   63               beq   DRS_NextObjectB0
   2262  4+1   7B28 A6   88 47            lda   rsv_prev_render_flags_0,x
   2263  3     7B2B 2B   5E               bmi   DRS_NextObjectB0
   2264  4+1   7B2D A6   02               lda   render_flags,x
   2265  2     7B2F 84   04               anda  #render_overlay_mask
   2266  3     7B31 26   60               bne   DRS_DrawWithoutBackupB0
   2267  5+1   7B33 EE   88 30            ldu   rsv_mapping_frame,x
   2268  4+1   7B36 A6   46               lda   erase_nb_cell,u
   2269  8     7B38 BD   7C74             jsr   BgBufferAlloc              >>
   2270  5     7B3B 108C 0000             cmpy  #$0000                     >>
   2271  3     7B3F 27   4A               beq   DRS_NextObjectB0           >>
   2272  5+1   7B41 EC   88 12            ldd   xy_pixel,x                 >>
   2273  8     7B44 BD   7BB4             jsr   DRS_XYToAddress
   2274                           *        ldu   rsv_image_subset,x
   2275                           *        stu   rsv_prev_image_subset_0,x
   2276  5+1   7B47 EE   88 30            ldu   rsv_mapping_frame,x        >>
   2277  5+1   7B4A EF   88 3D            stu   rsv_prev_mapping_frame_0,x >>
   2278  4+1   7B4D A6   40               lda   page_draw_routine,u
   2279  5     7B4F B7   E7E5             sta   $E7E5                      >>
   2280  6     7B52 BF   7B63             stx   DRS_dyn3B0+1               >>
   2281  5+1   7B55 AE   41               ldx   draw_routine,u
   2282  4+0   7B57 33   A4               leau  ,y                         >>
   2283  4     7B59 108E 6144             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2284  6     7B5D FC   6142             ldd   Glb_Sprite_Screen_Pos_PartA>>
   2285  7+0   7B60 AD   84               jsr   ,x                         >>
   2286        7B62               DRS_dyn3B0
   2287  3     7B62 8E   0000             ldx   #$0000                     >>
   2288  5+1   7B65 EF   88 3F            stu   rsv_bgdata_0,x             >>
   2289  5+1   7B68 EC   88 12            ldd   xy_pixel,x                 >>
   2290  2     7B6B 44                    lsra                             >>
   2291  5+1   7B6C ED   88 41            std   rsv_prev_xy_pixel_0,x      >>
   2292  5+1   7B6F EC   88 32            ldd   rsv_xy1_pixel,x            >>
   2293  5+1   7B72 ED   88 43            std   rsv_prev_xy1_pixel_0,x     >>
   2294  5+1   7B75 EC   88 34            ldd   rsv_xy2_pixel,x            >>
   2295  5+1   7B78 ED   88 45            std   rsv_prev_xy2_pixel_0,x     >>
   2296  4+1   7B7B A6   88 47            lda   rsv_prev_render_flags_0,x
   2297  2     7B7E 8A   80               ora   #rsv_prev_render_onscreen_m>>
   2298  4+1   7B80 E6   02               ldb   render_flags,x
   2299  2     7B82 C5   04               bitb  #render_overlay_mask
   2300  3     7B84 27   02               beq   DRS_NoOverlayB0
   2301  2     7B86 8A   01               ora   #rsv_prev_render_overlay_ma>>
   2302        7B88               DRS_NoOverlayB0
   2303  4+1   7B88 A7   88 47            sta   rsv_prev_render_flags_0,x  >>
   2304                            
   2305        7B8B               DRS_NextObjectB0
   2306  5+1   7B8B AE   88 39            ldx   rsv_priority_next_obj_0,x
   2307  6     7B8E 1026 FF8F             lbne  DRS_ProcessEachPriorityLeve>>
   2308  5     7B92 39                    rts
   2309                            
   2310        7B93               DRS_DrawWithoutBackupB0
   2311  5+1   7B93 EC   88 12            ldd   xy_pixel,x                 >>
   2312  8     7B96 BD   7BB4             jsr   DRS_XYToAddress
   2313  5+1   7B99 EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2314  5+1   7B9C EF   88 3D            stu   rsv_prev_mapping_frame_0,x >>
   2315  4+1   7B9F A6   40               lda   page_draw_routine,u
   2316  5     7BA1 B7   E7E5             sta   $E7E5                      >>
   2317  6     7BA4 BF   7B63             stx   DRS_dyn3B0+1               >>
   2318  5+1   7BA7 AE   41               ldx   draw_routine,u
   2319  4     7BA9 108E 6144             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2320  6     7BAD FC   6142             ldd   Glb_Sprite_Screen_Pos_PartA>>
   2321  7+0   7BB0 AD   84               jsr   ,x                         >>
   2322  3     7BB2 20   AE               bra   DRS_dyn3B0
   2323
   2324                           *****************************************>>
   2325                           * x_pixel and y_pixel coordinate system
   2326                           * x coordinates:
   2327                           *    - off-screen left 00-2F (0-47)
   2328                           *    - on screen 30-CF (48-207)
   2329                           *    - off-screen right D0-FF (208-255)
   2330                           *
   2331                           * y coordinates:
   2332                           *    - off-screen top 00-1B (0-27)
   2333                           *    - on screen 1C-E3 (28-227)
   2334                           *    - off-screen bottom E4-FF (228-255)
   2335                           *****************************************>>
   2336
   2337        7BB4               DRS_XYToAddress
   2338  2     7BB4 80   30               suba  #$30
   2339  2     7BB6 C0   1C               subb  #$1C
   2340  2     7BB8 44                    lsra                             >>
   2341  2     7BB9 44                    lsra                             >>
   2342  3     7BBA 25   12               bcs   DRS_XYToAddressRAMBFirst   >>
   2343        7BBC               DRS_XYToAddressRAMAFirst
   2344  5     7BBC B7   7BC4             sta   DRS_dyn1+2
   2345  2     7BBF 86   28               lda   #$28                       >>
   2346  11    7BC1 3D                    mul
   2347        7BC2               DRS_dyn1
   2348  4     7BC2 C3   0000             addd  #$0000                     >>
   2349  6     7BC5 FD   6142             std   Glb_Sprite_Screen_Pos_PartA>>
   2350  2     7BC8 8A   20               ora   #$20                       >>
   2351  6     7BCA FD   6144             std   Glb_Sprite_Screen_Pos_PartB>>
   2352  5     7BCD 39                    rts
   2353        7BCE               DRS_XYToAddressRAMBFirst
   2354  5     7BCE B7   7BD6             sta   DRS_dyn2+2
   2355  2     7BD1 86   28               lda   #$28                       >>
   2356  11    7BD3 3D                    mul
   2357        7BD4               DRS_dyn2
   2358  4     7BD4 C3   2000             addd  #$2000                     >>
   2359  6     7BD7 FD   6142             std   Glb_Sprite_Screen_Pos_PartA>>
   2360  4     7BDA 83   1FFF             subd  #$1FFF
   2361  6     7BDD FD   6144             std   Glb_Sprite_Screen_Pos_PartB>>
   2362  5     7BE0 39                    rts
   2363                            
   2364        7BE1               DRS_ProcessEachPriorityLevelB1
   2365  4+1   7BE1 A6   88 29            lda   rsv_render_flags,x
   2366  2     7BE4 84   04               anda  #rsv_render_displaysprite_m>>
   2367  3     7BE6 27   63               beq   DRS_NextObjectB1
   2368  4+1   7BE8 A6   88 59            lda   rsv_prev_render_flags_1,x
   2369  3     7BEB 2B   5E               bmi   DRS_NextObjectB1
   2370  4+1   7BED A6   02               lda   render_flags,x
   2371  2     7BEF 84   04               anda  #render_overlay_mask
   2372  3     7BF1 26   60               bne   DRS_DrawWithoutBackupB1
   2373  5+1   7BF3 EE   88 30            ldu   rsv_mapping_frame,x
   2374  4+1   7BF6 A6   46               lda   erase_nb_cell,u
   2375  8     7BF8 BD   7C74             jsr   BgBufferAlloc              >>
   2376  5     7BFB 108C 0000             cmpy  #$0000                     >>
   2377  3     7BFF 27   4A               beq   DRS_NextObjectB1           >>
   2378  5+1   7C01 EC   88 12            ldd   xy_pixel,x                 >>
   2379  8     7C04 BD   7BB4             jsr   DRS_XYToAddress
   2380                                   *ldu   rsv_image_subset,x
   2381                                   *stu   rsv_prev_image_subset_1,x
   2382  5+1   7C07 EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2383  5+1   7C0A EF   88 4F            stu   rsv_prev_mapping_frame_1,x >>
   2384  4+1   7C0D A6   40               lda   page_draw_routine,u
   2385  5     7C0F B7   E7E5             sta   $E7E5                      >>
   2386  6     7C12 BF   7C23             stx   DRS_dyn3B1+1               >>
   2387  5+1   7C15 AE   41               ldx   draw_routine,u
   2388  4+0   7C17 33   A4               leau  ,y                         >>
   2389  4     7C19 108E 6144             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2390  6     7C1D FC   6142             ldd   Glb_Sprite_Screen_Pos_PartA>>
   2391  7+0   7C20 AD   84               jsr   ,x                         >>
   2392        7C22               DRS_dyn3B1
   2393  3     7C22 8E   0000             ldx   #$0000                     >>
   2394  5+1   7C25 EF   88 51            stu   rsv_bgdata_1,x             >>
   2395  5+1   7C28 EC   88 12            ldd   xy_pixel,x                 >>
   2396  2     7C2B 44                    lsra                             >>
   2397  5+1   7C2C ED   88 53            std   rsv_prev_xy_pixel_1,x      >>
   2398  5+1   7C2F EC   88 32            ldd   rsv_xy1_pixel,x            >>
   2399  5+1   7C32 ED   88 55            std   rsv_prev_xy1_pixel_1,x     >>
   2400  5+1   7C35 EC   88 34            ldd   rsv_xy2_pixel,x            >>
   2401  5+1   7C38 ED   88 57            std   rsv_prev_xy2_pixel_1,x     >>
   2402  4+1   7C3B A6   88 59            lda   rsv_prev_render_flags_1,x
   2403  2     7C3E 8A   80               ora   #rsv_prev_render_onscreen_m>>
   2404  4+1   7C40 E6   02               ldb   render_flags,x
   2405  2     7C42 C5   04               bitb  #render_overlay_mask
   2406  3     7C44 27   02               beq   DRS_NoOverlayB1
   2407  2     7C46 8A   01               ora   #rsv_prev_render_overlay_ma>>
   2408        7C48               DRS_NoOverlayB1
   2409  4+1   7C48 A7   88 59            sta   rsv_prev_render_flags_1,x  >>
   2410                            
   2411        7C4B               DRS_NextObjectB1
   2412  5+1   7C4B AE   88 4B            ldx   rsv_priority_next_obj_1,x
   2413  6     7C4E 1026 FF8F             lbne  DRS_ProcessEachPriorityLeve>>
   2414  5     7C52 39                    rts
   2415                            
   2416        7C53               DRS_DrawWithoutBackupB1
   2417  5+1   7C53 EC   88 12            ldd   xy_pixel,x                 >>
   2418  8     7C56 BD   7BB4             jsr   DRS_XYToAddress
   2419  5+1   7C59 EE   88 30            ldu   rsv_mapping_frame,x      ; >>
   2420  5+1   7C5C EF   88 4F            stu   rsv_prev_mapping_frame_1,x >>
   2421  4+1   7C5F A6   40               lda   page_draw_routine,u
   2422  5     7C61 B7   E7E5             sta   $E7E5                      >>
   2423  6     7C64 BF   7C23             stx   DRS_dyn3B1+1               >>
   2424  5+1   7C67 AE   41               ldx   draw_routine,u
   2425  4     7C69 108E 6144             ldy   #Glb_Sprite_Screen_Pos_Part>>
   2426  6     7C6D FC   6142             ldd   Glb_Sprite_Screen_Pos_PartA>>
   2427  7+0   7C70 AD   84               jsr   ,x                         >>
   2428  3     7C72 20   AE               bra   DRS_dyn3B1
   2429
   2430                                   INCLUD BGBALLOC
   2431                           * --------------------------------------->>
   2432                           * BgBufferAlloc
   2433                           * -------------
   2434                           * Subroutine to allocate memory into back>>
   2435                           *
   2436                           * input  REG : [a] number of requested ce>>
   2437                           * output REG : [y] cell_end or 0000 if no>>
   2438                           * --------------------------------------->>
   2439
   2440        7C74               BgBufferAlloc
   2441  5+3   7C74 34   14               pshs  b,x
   2442  5     7C76 F6   613D             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2443  3     7C79 26   09               bne   BBA1                       >>
   2444                            
   2445        7C7B               BBA0
   2446  3     7C7B 8E   6146             ldx   #Lst_FreeCellFirstEntry_0  >>
   2447  7     7C7E 10BE 6146             ldy   Lst_FreeCellFirstEntry_0   >>
   2448  3     7C82 20   07               bra   BBA_Next
   2449                            
   2450        7C84               BBA1
   2451  3     7C84 8E   6315             ldx   #Lst_FreeCellFirstEntry_1  >>
   2452  7     7C87 10BE 6315             ldy   Lst_FreeCellFirstEntry_1   >>
   2453                            
   2454        7C8B               BBA_Next
   2455  3     7C8B 27   38               beq   BBA_rts                    >>
   2456  4+1   7C8D A1   20               cmpa  nb_cells,y                 >>
   2457  3     7C8F 27   09               beq   BBA_FitCell                >>
   2458  3     7C91 23   12               bls   BBA_DivideCell             >>
   2459  4+1   7C93 30   25               leax  next_entry,y               >>
   2460  6+1   7C95 10AE 25               ldy   next_entry,y               >>
   2461  3     7C98 20   F1               bra   BBA_Next
   2462                            
   2463        7C9A               BBA_FitCell
   2464  5+1   7C9A EC   25               ldd   next_entry,y
   2465  5+0   7C9C ED   84               std   ,x                         >>
   2466  6+1   7C9E 6F   20               clr   nb_cells,y                 >>
   2467  6+1   7CA0 10AE 23               ldy   cell_end,y                 >>
   2468  3     7CA3 20   20               bra   BBA_rts
   2469                            
   2470        7CA5               BBA_DivideCell
   2471  5     7CA5 B7   7CAB             sta   BBA_dyn+1
   2472  4+1   7CA8 E6   20               ldb   nb_cells,y
   2473        7CAA               BBA_dyn
   2474  2     7CAA C0   00               subb  #$00                       >>
   2475  4+1   7CAC E7   20               stb   nb_cells,y                 >>
   2476                            
   2477  2     7CAE C6   40               ldb   #cell_size
   2478  11    7CB0 3D                    mul
   2479  2     7CB1 88   FF               eora  #$FF                       >>
   2480  2     7CB3 C8   FF               eorb  #$FF                       >>
   2481  4     7CB5 C3   0001             addd  #$01
   2482  5+1   7CB8 AE   23               ldx   cell_end,y
   2483  6     7CBA BF   7CC3             stx   cell_end_return+2
   2484  4+4   7CBD 30   8B               leax  d,x                        >>
   2485  5+1   7CBF AF   23               stx   cell_end,y                 >>
   2486        7CC1               cell_end_return
   2487  4     7CC1 108E 0000             ldy   #$0000
   2488        7CC5               BBA_rts
   2489  5+5   7CC5 35   94               puls  b,x,pc
   2490
   2491                                   INCLUD BGBFREE
   2492                           * --------------------------------------->>
   2493                           * BgBufferFree
   2494                           * ------------
   2495                           * Subroutine to free memory from backgrou>>
   2496                           *
   2497                           * input  REG : [x] cell_start
   2498                           *              [y] cell_end
   2499                           * output REG : none
   2500                           * --------------------------------------->>
   2501
   2502        7CC7               BgBufferFree
   2503  5+4   7CC7 34   46               pshs  d,u
   2504  3     7CC9 CC   0000             ldd   #$0000
   2505  6     7CCC FD   7D29             std   BBF_SetNewEntryNextentry+1 >>
   2506  5     7CCF F6   613D             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2507  3     7CD2 26   16               bne   BBF1                       >>
   2508                            
   2509        7CD4               BBF0
   2510  5+1   7CD4 EE   C8 3D            ldu   rsv_prev_mapping_frame_0,u >>
   2511  4+1   7CD7 A6   46               lda   erase_nb_cell,u            >>
   2512  3     7CD9 CE   6146             ldu   #Lst_FreeCellFirstEntry_0
   2513  6     7CDC FF   7D2E             stu   BBF_SetNewEntryPrevLink+1  >>
   2514  3     7CDF CE   6148             ldu   #Lst_FreeCell_0            >>
   2515  6     7CE2 FF   7D17             stu   BBF_AddNewEntryAtEnd+1     >>
   2516  6     7CE5 FE   6146             ldu   Lst_FreeCellFirstEntry_0   >>
   2517  3     7CE8 20   14               bra   BBF_Next
   2518                            
   2519        7CEA               BBF1
   2520  5+1   7CEA EE   C8 4F            ldu   rsv_prev_mapping_frame_1,u
   2521  4+1   7CED A6   46               lda   erase_nb_cell,u
   2522  3     7CEF CE   6315             ldu   #Lst_FreeCellFirstEntry_1
   2523  6     7CF2 FF   7D2E             stu   BBF_SetNewEntryPrevLink+1
   2524  3     7CF5 CE   6317             ldu   #Lst_FreeCell_1
   2525  6     7CF8 FF   7D17             stu   BBF_AddNewEntryAtEnd+1
   2526  6     7CFB FE   6315             ldu   Lst_FreeCellFirstEntry_1
   2527                            
   2528        7CFE               BBF_Next
   2529  3     7CFE 27   16               beq   BBF_AddNewEntryAtEnd       >>
   2530  7+1   7D00 10AC 41               cmpy  cell_start,u               >>
   2531  3     7D03 27   2D               beq   BBF_ExpandAtStart          >>
   2532  3     7D05 22   4C               bhi   BBF_ExpandAtEnd            >>
   2533  5+1   7D07 EE   45               ldu   next_entry,u               >>
   2534  6     7D09 1F   30               tfr   u,d
   2535  4     7D0B C3   0005             addd  #next_entry                >>
   2536  6     7D0E FD   7D2E             std   BBF_SetNewEntryPrevLink+1
   2537  3     7D11 20   EB               bra   BBF_Next
   2538
   2539        7D13               BBF_AddNewEntry
   2540  6     7D13 FF   7D29             stu   BBF_SetNewEntryNextentry+1
   2541        7D16               BBF_AddNewEntryAtEnd
   2542  3     7D16 CE   0000             ldu   #$0000                     >>
   2543        7D19               BBF_FindFreeSlot
   2544  4+1   7D19 E6   40               ldb   nb_cells,u                 >>
   2545  3     7D1B 27   04               beq   BBF_SetNewEntry            >>
   2546  4+1   7D1D 33   47               leau  entry_size,u               >>
   2547  3     7D1F 20   F8               bra   BBF_FindFreeSlot           >>
   2548        7D21               BBF_SetNewEntry
   2549  4+1   7D21 A7   40               sta   nb_cells,u                 >>
   2550  5+1   7D23 AF   41               stx   cell_start,u               >>
   2551  6+1   7D25 10AF 43               sty   cell_end,u                 >>
   2552        7D28               BBF_SetNewEntryNextentry
   2553  3     7D28 8E   0000             ldx   #$0000                     >>
   2554  5+1   7D2B AF   45               stx   next_entry,u               >>
   2555        7D2D               BBF_SetNewEntryPrevLink
   2556  6     7D2D FF   FFFF             stu   $FFFF                      >>
   2557  3     7D30 20   2C               bra   BBF_rts
   2558
   2559        7D32               BBF_ExpandAtStart
   2560  5+1   7D32 AF   41               stx   cell_start,u
   2561  4+1   7D34 AB   40               adda  nb_cells,u
   2562  4+1   7D36 A7   40               sta   nb_cells,u
   2563  6+1   7D38 10AE 45               ldy   next_entry,u
   2564  3     7D3B 27   21               beq   BBF_rts
   2565        7D3D               BBF_Join
   2566  6+1   7D3D AC   23               cmpx  cell_end,y
   2567  3     7D3F 26   1D               bne   BBF_rts
   2568  5+1   7D41 EC   21               ldd   cell_start,y
   2569  5+1   7D43 ED   41               std   cell_start,u
   2570  4+1   7D45 A6   20               lda   nb_cells,y
   2571  4+1   7D47 AB   40               adda  nb_cells,u
   2572  4+1   7D49 A7   40               sta   nb_cells,u
   2573  6+1   7D4B 6F   20               clr   nb_cells,y                 >>
   2574  5+1   7D4D EC   25               ldd   next_entry,y
   2575  5+1   7D4F ED   45               std   next_entry,u               >>
   2576  3     7D51 20   0B               bra   BBF_rts
   2577
   2578        7D53               BBF_ExpandAtEnd
   2579  6+1   7D53 AC   43               cmpx  cell_end,u
   2580  3     7D55 26   BC               bne   BBF_AddNewEntry
   2581  6+1   7D57 10AF 43               sty   cell_end,u
   2582  4+1   7D5A AB   40               adda  nb_cells,u
   2583  4+1   7D5C A7   40               sta   nb_cells,u
   2584                            
   2585        7D5E               BBF_rts
   2586  5+6   7D5E 35   C6               puls  d,u,pc
   2587
   2588                                   INCLUD PLAYPCM
   2589                           * --------------------------------------->>
   2590                           * PlayPCM
   2591                           * ------------
   2592                           * Subroutine to play a PCM sample at 16kH>>
   2593                           * This will freeze anything running
   2594                           * DAC Init from Mission: Liftoff (merci P>>
   2595                           *
   2596                           * input REG : [y] Pcm_ index to play
   2597                           * reset REG : [d] [x] [y]
   2598                           * --------------------------------------->>
   2599
   2600        7D60               PlayPCM *@globals
   2601
   2602  5     7D60 B6   E7E5             lda   $E7E5
   2603  5     7D63 B7   7DAD             sta   PlayPCM_RestorePage+1
   2604
   2605  3     7D66 CC   FB3F             ldd   #$fb3f  ! Mute by CRA to
   2606  5     7D69 B4   E7CF             anda  $e7cf   ! avoid sound when
   2607  5     7D6C B7   E7CF             sta   $e7cf   ! $e7cd written
   2608  5     7D6F F7   E7CD             stb   $e7cd   ! Full sound line
   2609  2     7D72 8A   04               ora   #$04    ! Disable mute by
   2610  5     7D74 B7   E7CF             sta   $e7cf   ! CRA and sound
   2611                            
   2612        7D77               PlayPCM_ReadChunk
   2613  4+1   7D77 A6   20               lda   pcm_page,y                 >>
   2614  2     7D79 81   FF               cmpa  #$FF
   2615  3     7D7B 27   1B               beq   PlayPCM_End
   2616  5     7D7D B7   E7E5             sta   $E7E5                      >>
   2617  5+1   7D80 AE   21               ldx   pcm_start_addr,y           >>
   2618                            
   2619        7D82               PlayPCM_Loop
   2620  4+2   7D82 A6   80               lda   ,x+
   2621  5     7D84 B7   E7CD             sta   $e7cd                      >>
   2622  6+1   7D87 AC   23               cmpx  pcm_end_addr,y
   2623  3     7D89 27   07               beq   PlayPCM_NextChunk
   2624  11    7D8B 3D                    mul                              >>
   2625  11    7D8C 3D                    mul
   2626  11    7D8D 3D                    mul
   2627  6     7D8E 1F   89               tfr   a,b
   2628  3     7D90 20   F0               bra   PlayPCM_Loop               >>
   2629                            
   2630        7D92               PlayPCM_NextChunk
   2631  4+1   7D92 31   25               leay  pcm_meta_size,y
   2632  11    7D94 3D                    mul                              >>
   2633  2     7D95 12                    nop
   2634  3     7D96 20   DF               bra   PlayPCM_ReadChunk
   2635                            
   2636        7D98               PlayPCM_End
   2637  3     7D98 CC   FBFC             ldd   #$fbfc  ! Mute by CRA to
   2638  5     7D9B B4   E7CF             anda  $e7cf   ! avoid sound when
   2639  5     7D9E B7   E7CF             sta   $e7cf   ! $e7cd is written
   2640  5     7DA1 F4   E7CD             andb  $e7cd   ! Activate
   2641  5     7DA4 F7   E7CD             stb   $e7cd   ! joystick port
   2642  2     7DA7 8A   04               ora   #$04    ! Disable mute by
   2643  5     7DA9 B7   E7CF             sta   $e7cf   ! CRA + joystick
   2644
   2645        7DAC               PlayPCM_RestorePage
   2646  2     7DAC 86   00               lda   #$00
   2647  5     7DAE B7   E7E5             sta   $E7E5
   2648                            
   2649  5     7DB1 39                    rts
   2650
   2651
   2652                                   INCLUD PSGLIB
   2653                           * --------------------------------------->>
   2654                           * PSGlib
   2655                           * ------------
   2656                           * Converted to 6809 from:
   2657                           * PSGlib - Programmable Sound Generator a>>
   2658                           *          https://github.com/sverx/PSGli>>
   2659                           *
   2660                           * Typical workflow:
   2661                           * 1) You (or a friend of yours) track one>>
   2662                           * 2) Optional, but warmly suggested: opti>>
   2663                           * 3) Convert the VGM to PSG file(s) using>>
   2664                           * 4) Optional, suggested: compress the PS>>
   2665                           * 5) include the library and 'incbin' the>>
   2666                           * 6) call PSGInit once somewhere near the>>
   2667                           * 7) Set up a steady interrupt (vertical >>
   2668                           * 8) Start/stop tunes when needed using P>>
   2669                           * - Looping SFXs are supported too: fire >>
   2670                           * - Tunes can be set to run just once ins>>
   2671                           * - To check if a tune is still playing u>>
   2672                           *
   2673                           * PSGlib functions reference
   2674                           * ==========================
   2675                           *
   2676                           * engine initializer function
   2677                           * ---------------------------
   2678                           *
   2679                           * **PSGInit**: initializes the PSG engine>>
   2680                           * - no required parameters
   2681                           * - no return values
   2682                           * - destroys A
   2683                           *
   2684                           * functions for music
   2685                           * -------------------
   2686                           *
   2687                           * **PSGFrame**: processes a music frame
   2688                           * - no required parameters
   2689                           * - no return values
   2690                           * - destroys A,B,X
   2691                           *
   2692                           * **PSGPlay** / **PSGPlayNoRepeat**: star>>
   2693                           * - *needs* the address of the PSG to sta>>
   2694                           * - no return values
   2695                           * - destroys A
   2696                           *
   2697                           * **PSGStop**: stops (pauses) the music (>>
   2698                           * - no required parameters
   2699                           * - no return values
   2700                           * - destroys A
   2701                           *
   2702                           * **PSGResume**: resume the previously st>>
   2703                           * - no required parameters
   2704                           * - no return values
   2705                           * - destroys A
   2706                           *
   2707                           * **PSGCancelLoop**: sets the currently l>>
   2708                           * - no required parameters
   2709                           * - no return values
   2710                           * - destroys A
   2711                           *
   2712                           * **PSGGetStatus**: gets the current stat>>
   2713                           * - no required parameters
   2714                           * - *returns* `PSG_PLAYING` in register A>>
   2715                           *
   2716                           * functions for SFX
   2717                           * -----------------
   2718                           *
   2719                           * **PSGSFXFrame**: processes a SFX frame
   2720                           * - no required parameters
   2721                           * - no return values
   2722                           * - destroys A,B,Y
   2723                           *
   2724                           * **PSGSFXPlay** / **PSGSFXPlayLoop**: st>>
   2725                           * - *needs* the address of the SFX to sta>>
   2726                           * - *needs* a mask indicating which chann>>
   2727                           * - destroys A
   2728                           *
   2729                           * **PSGSFXStop**: stops the SFX (leaving >>
   2730                           * - no required parameters
   2731                           * - no return values
   2732                           * - destroys A
   2733                           *
   2734                           * **PSGSFXCancelLoop**: sets the currentl>>
   2735                           * - no required parameters
   2736                           * - no return values
   2737                           * - destroys A
   2738                           *
   2739                           * **PSGSFXGetStatus**: gets the current s>>
   2740                           * - no required parameters
   2741                           * - *returns* `PSG_PLAYING` in register A>>
   2742                           *
   2743                           * functions for music volume and hardware>>
   2744                           * --------------------------------------->>
   2745                           *
   2746                           * **PSGSetMusicVolumeAttenuation**: sets >>
   2747                           * - *needs* the volume attenuation value >>
   2748                           * - no return values
   2749                           * - destroys A
   2750                           *
   2751                           * **PSGSilenceChannels**: sets all hardwa>>
   2752                           * - no required parameters
   2753                           * - no return values
   2754                           * - destroys A
   2755                           *
   2756                           * **PSGRestoreVolumes**: resets silenced >>
   2757                           * - no required parameters
   2758                           * - no return values
   2759                           * - destroys A
   2760                           *
   2761                           * --------------------------------------->>
   2762
   2763                  0000     PSG_STOPPED         equ 0
   2764                  0001     PSG_PLAYING         equ 1
   2765
   2766                  E7B0     PSGDataPort         equ $e7b0
   2767
   2768                  0080     PSGLatch            equ $80
   2769                  0040     PSGData             equ $40
   2770
   2771                  0000     PSGChannel0         equ $00
   2772                  0020     PSGChannel1         equ $20
   2773                  0040     PSGChannel2         equ $40
   2774                  0060     PSGChannel3         equ $60
   2775                  0010     PSGVolumeData       equ $10
   2776
   2777                  0038     PSGWait             equ $38
   2778                  0008     PSGSubString        equ $08
   2779                  0001     PSGLoop             equ $01
   2780                  0000     PSGEnd              equ $00
   2781
   2782                  0001     SFX_CHANNEL2        equ $01
   2783                  0002     SFX_CHANNEL3        equ $02
   2784                  0003     SFX_CHANNELS2AND3   equ SFX_CHANNEL2!SFX_>>
   2785
   2786                           * ***************************************>>
   2787                           * initializes the PSG 'engine'
   2788                           * destroys A
   2789
   2790        7DB2               PSGInit *@globals
   2791  2     7DB2 86   00               lda   #PSG_STOPPED               >>
   2792  5     7DB4 B7   81AF             sta   PSGMusicStatus             >>
   2793  5     7DB7 B7   81C9             sta   PSGSFXStatus               >>
   2794  5     7DBA B7   81C5             sta   PSGChannel2SFX             >>
   2795  5     7DBD B7   81C6             sta   PSGChannel3SFX             >>
   2796  5     7DC0 B7   81C4             sta   PSGMusicVolumeAttenuation  >>
   2797  5     7DC3 39                    rts
   2798
   2799                           * ***************************************>>
   2800                           * receives in X the address of the PSG to>>
   2801                           * destroys A
   2802
   2803        7DC4               PSGPlayNoRepeat *@globals
   2804  2     7DC4 86   00               lda   #0                         >>
   2805  3     7DC6 20   02               bra   PSGPlay1
   2806        7DC8               PSGPlay
   2807  2     7DC8 86   01               lda   #1                         >>
   2808        7DCA               PSGPlay1
   2809  5     7DCA B7   81B8             sta   PSGLoopFlag
   2810  7     7DCD 8D   23               bsr   PSGStop                    >>
   2811                            
   2812  4+0   7DCF A6   84               lda   ,x
   2813  5     7DD1 B7   81B0             sta   PSGMusicPage
   2814  5+1   7DD4 AE   01               ldx   1,x
   2815  6     7DD6 BF   81B1             stx   PSGMusicStart              >>
   2816  6     7DD9 BF   81B3             stx   PSGMusicPointer            >>
   2817  6     7DDC BF   81B5             stx   PSGMusicLoopPoint          >>
   2818  2     7DDF 86   00               lda   #0
   2819  5     7DE1 B7   81B7             sta   PSGMusicSkipFrames         >>
   2820  5     7DE4 B7   81BA             sta   PSGMusicSubstringLen       >>
   2821  2     7DE7 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   2822  5     7DE9 B7   81B9             sta   PSGMusicLastLatch          >>
   2823  2     7DEC 86   01               lda   #PSG_PLAYING
   2824  5     7DEE B7   81AF             sta   PSGMusicStatus             >>
   2825  5     7DF1 39                    rts
   2826
   2827                           * ***************************************>>
   2828                           * stops the music (leaving the SFX on, if>>
   2829                           * destroys A
   2830
   2831        7DF2               PSGStop *@globals
   2832  5     7DF2 B6   81AF             lda   PSGMusicStatus             >>
   2833  3     7DF5 27   23               beq   PSGStop_end
   2834  2     7DF7 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   2835  5     7DF9 B7   E7B0             sta   PSGDataPort
   2836  2     7DFC 86   BF               lda   #PSGLatch!PSGChannel1!PSGVo>>
   2837  5     7DFE B7   E7B0             sta   PSGDataPort
   2838  5     7E01 B6   81C5             lda   PSGChannel2SFX
   2839  3     7E04 26   05               bne   PSGStop2
   2840  2     7E06 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   2841  5     7E08 B7   E7B0             sta   PSGDataPort
   2842        7E0B               PSGStop2
   2843  5     7E0B B6   81C6             lda   PSGChannel3SFX
   2844  3     7E0E 26   05               bne   PSGStop3
   2845  2     7E10 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   2846  5     7E12 B7   E7B0             sta   PSGDataPort
   2847        7E15               PSGStop3
   2848  2     7E15 86   00               lda   #PSG_STOPPED               >>
   2849  5     7E17 B7   81AF             sta   PSGMusicStatus             >>
   2850        7E1A               PSGStop_end
   2851  5     7E1A 39              rts
   2852
   2853
   2854                           * ***************************************>>
   2855                           * resume a previously stopped music
   2856                           * destroys A
   2857
   2858        7E1B               PSGResume *@globals
   2859  5     7E1B B6   81AF             lda   PSGMusicStatus             >>
   2860  3     7E1E 26   45               bne   PSGResume_end
   2861  5     7E20 B6   81BD             lda   PSGChan0Volume             >>
   2862  2     7E23 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   2863  5     7E25 B7   E7B0             sta   PSGDataPort
   2864  5     7E28 B6   81BE             lda   PSGChan1Volume             >>
   2865  2     7E2B 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   2866  5     7E2D B7   E7B0             sta   PSGDataPort
   2867  5     7E30 B6   81C5             lda   PSGChannel2SFX
   2868  3     7E33 26   16               bne   PSGResume1
   2869  5     7E35 B6   81C1             lda   PSGChan2LowTone            >>
   2870  2     7E38 8A   C0               ora   #PSGLatch!PSGChannel2
   2871  5     7E3A B7   E7B0             sta   PSGDataPort
   2872  5     7E3D B6   81C3             lda   PSGChan2HighTone
   2873  5     7E40 B7   E7B0             sta   PSGDataPort
   2874  5     7E43 B6   81BF             lda   PSGChan2Volume             >>
   2875  2     7E46 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   2876  5     7E48 B7   E7B0             sta   PSGDataPort
   2877        7E4B               PSGResume1
   2878  5     7E4B B6   81C6             lda   PSGChannel3SFX
   2879  3     7E4E 26   10               bne   PSGResume2
   2880  5     7E50 B6   81C2             lda   PSGChan3LowTone            >>
   2881  2     7E53 8A   E0               ora   #PSGLatch!PSGChannel3
   2882  5     7E55 B7   E7B0             sta   PSGDataPort
   2883  5     7E58 B6   81C0             lda   PSGChan3Volume             >>
   2884  2     7E5B 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   2885  5     7E5D B7   E7B0             sta   PSGDataPort
   2886        7E60               PSGResume2
   2887  2     7E60 86   01               lda   #PSG_PLAYING
   2888  5     7E62 B7   81AF             sta   PSGMusicStatus             >>
   2889        7E65               PSGResume_end
   2890  5     7E65 39                    rts
   2891
   2892                           * ***************************************>>
   2893                           * sets the currently looping music to no >>
   2894                           * destroys A
   2895
   2896        7E66               PSGCancelLoop *@globals
   2897  7     7E66 7F   81B8               clr   PSGLoopFlag
   2898  5     7E69 39                      rts
   2899
   2900                           * ***************************************>>
   2901                           * gets the current status of music into r>>
   2902
   2903        7E6A               PSGGetStatus *@globals
   2904  5     7E6A B6   81AF             lda   PSGMusicStatus
   2905  5     7E6D 39                    rts
   2906
   2907                           * ***************************************>>
   2908                           * receives in A the volume attenuation fo>>
   2909                           * destroys A
   2910
   2911        7E6E               PSGSetMusicVolumeAttenuation *@globals
   2912  5     7E6E B7   81C4             sta   PSGMusicVolumeAttenuation
   2913  5     7E71 B6   81AF             lda   PSGMusicStatus             >>
   2914  3     7E74 27   56               beq   PSGSetMusicVolumeAttenuatio>>
   2915
   2916  5     7E76 B6   81BD             lda   PSGChan0Volume
   2917  2     7E79 84   0F               anda  #$0F
   2918  5     7E7B BB   81C4             adda  PSGMusicVolumeAttenuation
   2919  2     7E7E 81   10               cmpa  #$10                       >>
   2920  3     7E80 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   2921  2     7E82 86   0F               lda   #$0F                       >>
   2922        7E84               PSGSetMusicVolumeAttenuation1
   2923  2     7E84 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   2924  5     7E86 B7   E7B0             sta   PSGDataPort                >>
   2925                            
   2926  5     7E89 B6   81BE             lda   PSGChan1Volume
   2927  2     7E8C 84   0F               anda  #$0F
   2928  5     7E8E BB   81C4             adda  PSGMusicVolumeAttenuation
   2929  2     7E91 81   10               cmpa  #$10                       >>
   2930  3     7E93 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   2931  2     7E95 86   0F               lda   #$0F                       >>
   2932        7E97               PSGSetMusicVolumeAttenuation2
   2933  2     7E97 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   2934  5     7E99 B7   E7B0             sta   PSGDataPort                >>
   2935                            
   2936
   2937  5     7E9C B6   81C5             lda   PSGChannel2SFX             >>
   2938  3     7E9F 26   13               bne   _restore_channel3          >>
   2939
   2940  5     7EA1 B6   81BF             lda   PSGChan2Volume
   2941  2     7EA4 84   0F               anda  #$0F
   2942  5     7EA6 BB   81C4             adda  PSGMusicVolumeAttenuation
   2943  2     7EA9 81   10               cmpa  #$10                       >>
   2944  3     7EAB 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   2945  2     7EAD 86   0F               lda   #$0F                       >>
   2946        7EAF               PSGSetMusicVolumeAttenuation3
   2947  2     7EAF 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   2948  5     7EB1 B7   E7B0             sta   PSGDataPort
   2949
   2950        7EB4               _restore_channel3
   2951  5     7EB4 B6   81C6             lda   PSGChannel3SFX             >>
   2952  3     7EB7 26   13               bne   PSGSetMusicVolumeAttenuatio>>
   2953
   2954  5     7EB9 B6   81C0             lda   PSGChan3Volume
   2955  2     7EBC 84   0F               anda  #$0F
   2956  5     7EBE BB   81C4             adda  PSGMusicVolumeAttenuation
   2957  2     7EC1 81   10               cmpa  #$10                       >>
   2958  3     7EC3 25   02               bcs   PSGSetMusicVolumeAttenuatio>>
   2959  2     7EC5 86   0F               lda   #$0F                       >>
   2960        7EC7               PSGSetMusicVolumeAttenuation4
   2961  2     7EC7 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   2962  5     7EC9 B7   E7B0             sta   PSGDataPort
   2963                            
   2964        7ECC               PSGSetMusicVolumeAttenuation_end
   2965  5     7ECC 39                    rts
   2966
   2967                           * ***************************************>>
   2968                           * sets all PSG channels to volume ZERO (u>>
   2969                           * destroys A
   2970
   2971        7ECD               PSGSilenceChannels *@globals
   2972  2     7ECD 86   9F               lda   #PSGLatch!PSGChannel0!PSGVo>>
   2973  5     7ECF B7   E7B0             sta   PSGDataPort
   2974  2     7ED2 86   BF               lda   #PSGLatch!PSGChannel1!PSGVo>>
   2975  5     7ED4 B7   E7B0             sta   PSGDataPort
   2976  2     7ED7 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   2977  5     7ED9 B7   E7B0             sta   PSGDataPort
   2978  2     7EDC 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   2979  5     7EDE B7   E7B0             sta   PSGDataPort
   2980  5     7EE1 39                    rts
   2981
   2982                           * ***************************************>>
   2983                           * resets all PSG channels to previous vol>>
   2984                           * destroys A
   2985
   2986        7EE2               PSGRestoreVolumes *@globals
   2987  5     7EE2 B6   81AF             lda   PSGMusicStatus             >>
   2988  3     7EE5 27   26               beq   _chkchn2                   >>
   2989
   2990  5     7EE7 B6   81BD             lda   PSGChan0Volume
   2991  2     7EEA 84   0F               anda  #$0F
   2992  5     7EEC BB   81C4             adda  PSGMusicVolumeAttenuation
   2993  2     7EEF 81   10               cmpa  #$10                       >>
   2994  3     7EF1 25   02               bcs   PSGRestoreVolumes1         >>
   2995  2     7EF3 86   0F               lda   #$0F                       >>
   2996        7EF5               PSGRestoreVolumes1
   2997  2     7EF5 8A   90               ora   #PSGLatch!PSGChannel0!PSGVo>>
   2998  5     7EF7 B7   E7B0             sta   PSGDataPort                >>
   2999
   3000  5     7EFA B6   81BE             lda   PSGChan1Volume
   3001  2     7EFD 84   0F               anda  #$0F
   3002  5     7EFF BB   81C4             adda  PSGMusicVolumeAttenuation
   3003  2     7F02 81   10               cmpa  #$10                       >>
   3004  3     7F04 25   02               bcs   PSGRestoreVolumes2         >>
   3005  2     7F06 86   0F               lda   #$0F                       >>
   3006        7F08               PSGRestoreVolumes2
   3007  2     7F08 8A   B0               ora   #PSGLatch!PSGChannel1!PSGVo>>
   3008  5     7F0A B7   E7B0             sta   PSGDataPort                >>
   3009                            
   3010        7F0D               _chkchn2
   3011  5     7F0D B6   81C5             lda   PSGChannel2SFX             >>
   3012  3     7F10 26   15               bne   _restoreSFX2
   3013                            
   3014  5     7F12 B6   81AF             lda   PSGMusicStatus             >>
   3015  3     7F15 27   1A               beq   _chkchn3                   >>
   3016
   3017  5     7F17 B6   81BF             lda   PSGChan2Volume
   3018  2     7F1A 84   0F               anda  #$0F
   3019  5     7F1C BB   81C4             adda  PSGMusicVolumeAttenuation
   3020  2     7F1F 81   10               cmpa  #$10                       >>
   3021  3     7F21 25   09               bcs   PSGRestoreVolumes3         >>
   3022  2     7F23 86   0F               lda   #$0F                       >>
   3023  3     7F25 20   05               bra   PSGRestoreVolumes3
   3024
   3025        7F27               _restoreSFX2
   3026  5     7F27 B6   81C7             lda   PSGSFXChan2Volume
   3027  4     7F2A 94   0F               anda  $0F
   3028        7F2C               PSGRestoreVolumes3
   3029  2     7F2C 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3030  5     7F2E B7   E7B0             sta   PSGDataPort                >>
   3031
   3032        7F31               _chkchn3
   3033  5     7F31 B6   81C6             lda   PSGChannel3SFX             >>
   3034  3     7F34 26   15               bne   _restoreSFX3
   3035                            
   3036  5     7F36 B6   81AF             lda   PSGMusicStatus             >>
   3037  3     7F39 27   1A               beq   _restoreSFX2_end           >>
   3038
   3039  5     7F3B B6   81C0             lda   PSGChan3Volume
   3040  2     7F3E 84   0F               anda  #$0F
   3041  5     7F40 BB   81C4             adda  PSGMusicVolumeAttenuation
   3042  2     7F43 81   10               cmpa  #$10                       >>
   3043  3     7F45 25   09               bcs   PSGRestoreVolumes4         >>
   3044  2     7F47 86   0F               lda   #$0F                       >>
   3045  3     7F49 20   05               bra   PSGRestoreVolumes4
   3046
   3047        7F4B               _restoreSFX3
   3048  5     7F4B B6   81C8             lda   PSGSFXChan3Volume
   3049  2     7F4E 84   0F               anda  #$0F
   3050        7F50               PSGRestoreVolumes4
   3051  2     7F50 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   3052  5     7F52 B7   E7B0             sta   PSGDataPort                >>
   3053        7F55               _restoreSFX2_end
   3054  5     7F55 39                    rts
   3055
   3056
   3057                           * ***************************************>>
   3058                           * receives in X the address of the SFX PS>>
   3059                           * receives in B the mask that indicates w>>
   3060                           * destroys A
   3061
   3062        7F56               PSGSFXPlayLoop *@globals
   3063  2     7F56 86   01               lda   #1                         >>
   3064  3     7F58 20   02               bra   PSGSFXPlay1
   3065        7F5A               PSGSFXPlay
   3066  2     7F5A 86   00               lda   #0                         >>
   3067        7F5C               PSGSFXPlay1
   3068  5     7F5C B7   81D2             sta   PSGSFXLoopFlag
   3069  7     7F5F 8D   41               bsr   PSGSFXStop                 >>
   3070
   3071  4+0   7F61 A6   84               lda   ,x
   3072  5     7F63 B7   81CA             sta   PSGSFXPage
   3073  5+1   7F66 AE   01               ldx   1,x
   3074  6     7F68 BF   81CB             stx   PSGSFXStart                >>
   3075  6     7F6B BF   81CD             stx   PSGSFXPointer              >>
   3076  6     7F6E BF   81CF             stx   PSGSFXLoopPoint            >>
   3077  2     7F71 86   00               lda   #0
   3078  5     7F73 B7   81D1             sta   PSGSFXSkipFrames           >>
   3079  5     7F76 B7   81D3             sta   PSGSFXSubstringLen         >>
   3080  2     7F79 C5   01               bitb  #SFX_CHANNEL2              >>
   3081  3     7F7B 27   05               beq   PSGSFXPlay2
   3082  2     7F7D 86   01               lda   #PSG_PLAYING
   3083  5     7F7F B7   81C5             sta   PSGChannel2SFX
   3084        7F82               PSGSFXPlay2
   3085  2     7F82 C5   02               bitb  #SFX_CHANNEL3              >>
   3086  3     7F84 27   05               beq   PSGSFXPlay3
   3087  2     7F86 86   01               lda   #PSG_PLAYING
   3088  5     7F88 B7   81C6             sta   PSGChannel3SFX
   3089        7F8B               PSGSFXPlay3
   3090  5     7F8B B7   81C9             sta   PSGSFXStatus               >>
   3091  5     7F8E B6   81C2             lda   PSGChan3LowTone            >>
   3092  2     7F91 84   03               anda  #SFX_CHANNELS2AND3
   3093  2     7F93 81   03               cmpa  #SFX_CHANNELS2AND3
   3094  3     7F95 26   0A               bne   PSGSFXPlayLoop_end         >>
   3095  2     7F97 86   01               lda   #PSG_PLAYING
   3096  5     7F99 B7   81C6             sta   PSGChannel3SFX             >>
   3097  2     7F9C 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3098  5     7F9E B7   E7B0             sta   PSGDataPort
   3099        7FA1               PSGSFXPlayLoop_end
   3100  5     7FA1 39                    rts
   3101
   3102
   3103                           * ***************************************>>
   3104                           * stops the SFX (leaving the music on, if>>
   3105                           * destroys A
   3106
   3107        7FA2               PSGSFXStop *@globals
   3108  5     7FA2 B6   81C9             lda   PSGSFXStatus               >>
   3109  3     7FA5 27   70               beq   PSGSFXStop_end             >>
   3110  5     7FA7 B6   81C5             lda   PSGChannel2SFX             >>
   3111  3     7FAA 27   05               beq   PSGSFXStop1
   3112  2     7FAC 86   DF               lda   #PSGLatch!PSGChannel2!PSGVo>>
   3113  5     7FAE B7   E7B0             sta   PSGDataPort
   3114        7FB1               PSGSFXStop1
   3115  5     7FB1 B6   81C6             lda   PSGChannel3SFX             >>
   3116  3     7FB4 27   05               beq   PSGSFXStop2
   3117  2     7FB6 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3118  5     7FB8 B7   E7B0             sta   PSGDataPort
   3119        7FBB               PSGSFXStop2
   3120  5     7FBB B6   81AF             lda   PSGMusicStatus             >>
   3121  3     7FBE 27   4E               beq   _skipRestore               >>
   3122  5     7FC0 B6   81C5             lda   PSGChannel2SFX             >>
   3123  3     7FC3 27   25               beq   _skip_chn2
   3124  5     7FC5 B6   81C1             lda   PSGChan2LowTone
   3125  2     7FC8 84   0F               anda  #$0F                       >>
   3126  2     7FCA 8A   80               ora   #PSGLatch|PSGChannel2      >>
   3127  5     7FCC B7   E7B0             sta   PSGDataPort
   3128  5     7FCF B6   81C3             lda   PSGChan2HighTone           >>
   3129  2     7FD2 84   3F               anda  #$3F                       >>
   3130  5     7FD4 B7   E7B0             sta   PSGDataPort
   3131  5     7FD7 B6   81BF             lda   PSGChan2Volume             >>
   3132  2     7FDA 84   0F               anda  #$0F                       >>
   3133  5     7FDC BB   81C4             adda  PSGMusicVolumeAttenuation
   3134  2     7FDF 81   10               cmpa  #$10                       >>
   3135  3     7FE1 25   02               bcs   PSGSFXStop3                >>
   3136  2     7FE3 86   0F               lda   #$0F                       >>
   3137        7FE5               PSGSFXStop3
   3138  2     7FE5 8A   D0               ora   #PSGLatch!PSGChannel2!PSGVo>>
   3139  5     7FE7 B7   E7B0             sta   PSGDataPort                >>
   3140        7FEA               _skip_chn2
   3141  5     7FEA B6   81C6             lda   PSGChannel3SFX             >>
   3142  3     7FED 27   1D               beq   _skip_chn3
   3143  5     7FEF B6   81C2             lda   PSGChan3LowTone
   3144  4     7FF2 94   07               anda  $07                        >>
   3145  2     7FF4 8A   E0               ora   #PSGLatch!PSGChannel3      >>
   3146  5     7FF6 B7   E7B0             sta   PSGDataPort
   3147  5     7FF9 B6   81C0             lda   PSGChan3Volume             >>
   3148  2     7FFC 84   0F               anda  #$0F                       >>
   3149  5     7FFE BB   81C4             adda  PSGMusicVolumeAttenuation
   3150  2     8001 81   10               cmpa  #$10                       >>
   3151  3     8003 25   02               bcs   PSGSFXStop4                >>
   3152  2     8005 86   0F               lda   #$0F                       >>
   3153        8007               PSGSFXStop4
   3154  2     8007 8A   F0               ora   #PSGLatch!PSGChannel3!PSGVo>>
   3155  5     8009 B7   E7B0             sta   PSGDataPort                >>
   3156
   3157        800C               _skip_chn3
   3158  2     800C 86   00               lda   #PSG_STOPPED               >>
   3159        800E               _skipRestore
   3160  5     800E B7   81C5             sta   PSGChannel2SFX
   3161  5     8011 B7   81C6             sta   PSGChannel3SFX
   3162  5     8014 B7   81C9             sta   PSGSFXStatus               >>
   3163        8017               PSGSFXStop_end
   3164  5     8017 39                    rts
   3165
   3166                           * ***************************************>>
   3167                           * sets the currently looping SFX to no mo>>
   3168                           * destroys A
   3169
   3170        8018               PSGSFXCancelLoop *@globals
   3171  7     8018 7F   81D2             clr   PSGSFXLoopFlag
   3172  5     801B 39                    rts
   3173
   3174
   3175                           * ***************************************>>
   3176                           * gets the current SFX status into regist>>
   3177
   3178        801C               PSGSFXGetStatus *@globals
   3179  5     801C B6   81C9             lda   PSGSFXStatus
   3180  5     801F 39                    rts
   3181
   3182
   3183                           * ***************************************>>
   3184                           * processes a music frame
   3185                           * destroys A,B,X
   3186
   3187        8020               PSGFrame_end
   3188  5     8020 39                    rts
   3189                            
   3190        8021               PSGFrame *@globals
   3191
   3192  5     8021 B6   81B0             lda   PSGMusicPage
   3193  5     8024 B7   E7E5             sta   $E7E5
   3194
   3195  5     8027 B6   81AF             lda   PSGMusicStatus             >>
   3196  3     802A 27   F4               beq   PSGFrame_end
   3197
   3198  5     802C B6   81B7             lda   PSGMusicSkipFrames         >>
   3199  3     802F 26   7F               bne   _skipFrame
   3200                            
   3201  6     8031 BE   81B3             ldx   PSGMusicPointer            >>
   3202
   3203        8034               _intLoop
   3204  4+2   8034 E6   80               ldb   ,x+                        >>
   3205  5     8036 B6   81BA             lda   PSGMusicSubstringLen       >>
   3206  3     8039 27   09               beq   _continue                  >>
   3207  2     803B 4A                    deca                             >>
   3208  5     803C B7   81BA             sta   PSGMusicSubstringLen       >>
   3209  3     803F 26   03               bne   _continue
   3210  6     8041 BE   81BB             ldx   PSGMusicSubstringRetAddr   >>
   3211
   3212        8044               _continue
   3213  2     8044 C1   80               cmpb  #PSGLatch                  >>
   3214  3     8046 25   6D               bcs   _noLatch                   >>
   3215  5     8048 F7   81B9             stb   PSGMusicLastLatch          >>
   3216                            
   3217  2     804B C5   04               bitb  #4                         >>
   3218  3     804D 26   32               bne   _latch_Volume              >>
   3219  2     804F C5   06               bitb  #6                         >>
   3220  3     8051 27   58               beq   _send2PSG                  >>
   3221
   3222  2     8053 C5   05               bitb  #5                         >>
   3223  3     8055 27   20               beq   _ifchn2                    >>
   3224  5     8057 F7   81C2             stb   PSGChan3LowTone            >>
   3225  5     805A B6   81C6             lda   PSGChannel3SFX             >>
   3226  3     805D 26   D5               bne   _intLoop
   3227  5     805F B6   81C2             lda   PSGChan3LowTone
   3228  2     8062 84   03               anda  #3                         >>
   3229  2     8064 81   03               cmpa  #3
   3230  3     8066 26   43               bne   _send2PSG                  >>
   3231  5     8068 B6   81C9             lda   PSGSFXStatus               >>
   3232  3     806B 27   3E               beq   _send2PSG                  >>
   3233  5     806D B7   81C6             sta   PSGChannel3SFX             >>
   3234  2     8070 86   FF               lda   #PSGLatch!PSGChannel3!PSGVo>>
   3235  5     8072 B7   E7B0             sta   PSGDataPort
   3236  3     8075 20   BD               bra   _intLoop
   3237
   3238        8077               _ifchn2
   3239  5     8077 F7   81C1             stb   PSGChan2LowTone            >>
   3240  5     807A B6   81C5             lda   PSGChannel2SFX             >>
   3241  3     807D 27   2C               beq   _send2PSG
   3242  3     807F 20   B3               bra   _intLoop
   3243                            
   3244        8081               _latch_Volume
   3245  2     8081 C5   06               bitb  #6                         >>
   3246  3     8083 26   0E               bne   _latch_Volume_23           >>
   3247  2     8085 C5   05               bitb  #5                         >>
   3248  3     8087 27   05               beq   _ifchn0                    >>
   3249  5     8089 F7   81BE             stb   PSGChan1Volume             >>
   3250  3     808C 20   4C               bra   _sendVolume2PSG
   3251                            
   3252        808E               _ifchn0
   3253  5     808E F7   81BD             stb   PSGChan0Volume             >>
   3254  3     8091 20   47               bra   _sendVolume2PSG
   3255
   3256        8093               _latch_Volume_23
   3257  2     8093 C5   05               bitb  #5                         >>
   3258  3     8095 27   0A               beq   _chn2                      >>
   3259  5     8097 F7   81C0             stb   PSGChan3Volume             >>
   3260  5     809A B6   81C6             lda   PSGChannel3SFX             >>
   3261  3     809D 27   3B               beq   _sendVolume2PSG
   3262  3     809F 20   93               bra   _intLoop
   3263
   3264        80A1               _chn2
   3265  5     80A1 F7   81BF             stb   PSGChan2Volume             >>
   3266  5     80A4 B6   81C5             lda   PSGChannel2SFX             >>
   3267  3     80A7 27   31               beq   _sendVolume2PSG
   3268  3     80A9 20   89               bra   _intLoop
   3269                            
   3270        80AB               _send2PSG
   3271  5     80AB F7   E7B0             stb   PSGDataPort                >>
   3272  3     80AE 20   84               bra   _intLoop
   3273                            
   3274        80B0               _skipFrame
   3275  2     80B0 4A                    deca
   3276  5     80B1 B7   81B7             sta   PSGMusicSkipFrames
   3277  5     80B4 39                    rts
   3278
   3279        80B5               _noLatch
   3280  2     80B5 C1   40               cmpb  #PSGData
   3281  3     80B7 25   05               bcs   _command                   >>
   3282                                                                    >>
   3283  5     80B9 B6   81B9             lda   PSGMusicLastLatch          >>
   3284  3     80BC 20   39               bra   _output_NoLatch
   3285
   3286        80BE               _command
   3287  2     80BE C1   38               cmpb  #PSGWait
   3288  3     80C0 27   07               beq   _done                      >>
   3289  3     80C2 25   09               bcs   _otherCommands             >>
   3290  2     80C4 C4   07               andb  #$07                       >>
   3291  5     80C6 F7   81B7             stb   PSGMusicSkipFrames         >>
   3292                            
   3293        80C9               _done
   3294  6     80C9 BF   81B3             stx   PSGMusicPointer            >>
   3295  5     80CC 39                    rts                              >>
   3296
   3297        80CD               _otherCommands
   3298  2     80CD C1   08               cmpb  #PSGSubString
   3299  3     80CF 24   3F               bcc   _substring
   3300  2     80D1 C1   00               cmpb  #PSGEnd
   3301  3     80D3 27   2E               beq   _musicLoop
   3302  2     80D5 C1   01               cmpb  #PSGLoop
   3303  3     80D7 27   24               beq   _setLoopPoint
   3304
   3305                             * *************************************>>
   3306                             * we should never get here!
   3307                             * if we do, it means the PSG file is pr>>
   3308                             * *************************************>>
   3309
   3310  5     80D9 39                    rts
   3311
   3312        80DA               _sendVolume2PSG *@globals
   3313  5     80DA F7   80E9             stb   _sendVolume2PSG1+1         >>
   3314  2     80DD C4   0F               andb  #$0F                       >>
   3315  5     80DF FB   81C4             addb  PSGMusicVolumeAttenuation  >>
   3316  2     80E2 C1   10               cmpb  #$10                       >>
   3317  3     80E4 25   02               bcs   _sendVolume2PSG1           >>
   3318  2     80E6 C6   0F               ldb   #$0F                       >>
   3319        80E8               _sendVolume2PSG1
   3320  2     80E8 86   00               lda   #0                         >>
   3321  5     80EA F7   80F0             stb   _sendVolume2PSG2+1
   3322  2     80ED 84   F0               anda  #$F0                       >>
   3323        80EF               _sendVolume2PSG2
   3324  2     80EF 8A   00               ora   #0                         >>
   3325  5     80F1 B7   E7B0             sta   PSGDataPort                >>
   3326  5     80F4 16   FF3D             lbra   _intLoop
   3327
   3328        80F7               _output_NoLatch
   3329                             * we got the last latch in A and the PS>>
   3330                             * and we have to check if the value sho>>
   3331                             * note that non-latch commands can be o>>
   3332                             * for channels 0,1,2 only (no noise)
   3333  2     80F7 85   06               bita  #6                         >>
   3334  3     80F9 26   27               bne   _high_part_Tone            >>
   3335  3     80FB 20   AE               bra   _send2PSG                  >>
   3336
   3337        80FD               _setLoopPoint
   3338  6     80FD BF   81B5             stx   PSGMusicLoopPoint
   3339  5     8100 16   FF31             lbra   _intLoop
   3340
   3341        8103               _musicLoop
   3342  5     8103 B6   81B8             lda   PSGLoopFlag                >>
   3343  6     8106 1027 FCE8             lbeq   PSGStop                   >>
   3344  6     810A BE   81B5             ldx   PSGMusicLoopPoint
   3345  5     810D 16   FF24             lbra   _intLoop
   3346
   3347        8110               _substring
   3348  2     8110 C0   04               subb  #PSGSubString-4            >>
   3349  5     8112 F7   81BA             stb   PSGMusicSubstringLen       >>
   3350  5+3   8115 EC   81               ldd   ,x++                       >>
   3351  6     8117 BF   81BB             stx   PSGMusicSubstringRetAddr   >>
   3352  6     811A BE   81B1             ldx   PSGMusicStart
   3353  4+4   811D 30   8B               leax  d,x                        >>
   3354  5     811F 16   FF12             lbra   _intLoop
   3355
   3356        8122               _high_part_Tone
   3357  5     8122 F7   81C3             stb   PSGChan2HighTone           >>
   3358  5     8125 B6   81C5             lda   PSGChannel2SFX             >>
   3359  3     8128 27   81               beq   _send2PSG
   3360  5     812A 16   FF07             lbra   _intLoop
   3361
   3362
   3363                           * ***************************************>>
   3364                           * processes a SFX frame
   3365                           * destroys A,B,X
   3366
   3367        812D               PSGSFXFrame *@globals
   3368
   3369  5     812D B6   81CA             lda   PSGSFXPage
   3370  5     8130 B7   E7E5             sta   $E7E5
   3371                            
   3372  5     8133 B6   81C9             lda   PSGSFXStatus               >>
   3373  3     8136 27   35               beq   PSGSFXFrame_end
   3374
   3375  5     8138 B6   81D1             lda   PSGSFXSkipFrames           >>
   3376  3     813B 26   2C               bne   _skipSFXFrame
   3377                            
   3378  6     813D BE   81CD             ldx   PSGSFXPointer              >>
   3379
   3380        8140               _intSFXLoop
   3381  4+2   8140 E6   80               ldb   ,x+                        >>
   3382  5     8142 B6   81D3             lda   PSGSFXSubstringLen         >>
   3383  3     8145 27   09               beq   _SFXcontinue               >>
   3384  2     8147 4A                    deca                             >>
   3385  5     8148 B7   81D3             sta   PSGSFXSubstringLen         >>
   3386  3     814B 26   03               bne   _SFXcontinue
   3387  6     814D BE   81D4             ldx   PSGSFXSubstringRetAddr     >>
   3388
   3389        8150               _SFXcontinue
   3390  2     8150 C1   40               cmpb   #PSGData
   3391  3     8152 25   1A               bcs    _SFXcommand               >>
   3392  2     8154 C5   04               bitb   #4                        >>
   3393  3     8156 27   0C               beq    _SFXoutbyte               >>
   3394  2     8158 C5   05               bitb   #5                        >>
   3395  3     815A 26   05               bne    _SFXvolumechn3
   3396  5     815C F7   81C7             stb    PSGSFXChan2Volume
   3397  3     815F 20   03               bra   _SFXoutbyte
   3398
   3399        8161               _SFXvolumechn3
   3400  5     8161 F7   81C8             stb   PSGSFXChan3Volume
   3401
   3402        8164               _SFXoutbyte
   3403  5     8164 F7   E7B0             stb   PSGDataPort                >>
   3404  3     8167 20   D7               bra   _intSFXLoop
   3405                            
   3406        8169               _skipSFXFrame
   3407  2     8169 4A                    deca
   3408  5     816A B7   81D1             sta   PSGSFXSkipFrames
   3409        816D               PSGSFXFrame_end
   3410  5     816D 39                    rts
   3411
   3412        816E               _SFXcommand
   3413  2     816E C1   38               cmpb   #PSGWait
   3414  3     8170 27   07               beq    _SFXdone                  >>
   3415  3     8172 25   09               bcs    _SFXotherCommands         >>
   3416  2     8174 C4   07               andb   #$07                      >>
   3417  5     8176 F7   81D1             stb    PSGSFXSkipFrames          >>
   3418        8179               _SFXdone
   3419  6     8179 BF   81CD             stx    PSGSFXPointer             >>
   3420  5     817C 39                    rts                              >>
   3421
   3422        817D               _SFXotherCommands
   3423  2     817D C1   08               cmpb   #PSGSubString
   3424  3     817F 24   1D               bcc    _SFXsubstring
   3425  2     8181 C1   00               cmpb   #PSGEnd
   3426  3     8183 27   0A               beq    _sfxLoop
   3427  2     8185 C1   01               cmpb   #PSGLoop
   3428  3     8187 27   01               beq    _SFXsetLoopPoint
   3429                            
   3430                             * *************************************>>
   3431                             * we should never get here!
   3432                             * if we do, it means the PSG SFX file i>>
   3433                             * *************************************>>
   3434
   3435  5     8189 39                    rts
   3436
   3437        818A               _SFXsetLoopPoint *@globals
   3438  6     818A BF   81CF             stx   PSGSFXLoopPoint
   3439  3     818D 20   B1               bra   _intSFXLoop
   3440                            
   3441        818F               _sfxLoop
   3442  5     818F B6   81D2             lda   PSGSFXLoopFlag             >>
   3443  6     8192 1027 FE0C             lbeq   PSGSFXStop                >>
   3444  6     8196 BE   81CF             ldx   PSGSFXLoopPoint
   3445  6     8199 BF   81CD             stx   PSGSFXPointer
   3446  3     819C 20   A2               bra   _intSFXLoop
   3447
   3448        819E               _SFXsubstring
   3449  2     819E C0   04               subb  #PSGSubString-4            >>
   3450  5     81A0 F7   81D3             stb   PSGSFXSubstringLen         >>
   3451  5+3   81A3 EC   81               ldd   ,x++                       >>
   3452  6     81A5 BF   81D4             stx   PSGSFXSubstringRetAddr     >>
   3453  6     81A8 BE   81CB             ldx   PSGSFXStart
   3454  4+4   81AB 30   8B               leax  d,x                        >>
   3455  3     81AD 20   91               bra   _intSFXLoop
   3456
   3457                             * fundamental vars
   3458        81AF               PSGMusicStatus             rmb 1,0 ; are >>
   3459        81B0               PSGMusicPage               rmb 1,0 ; Memo>>
   3460        81B1               PSGMusicStart              rmb 2,0 ; the >>
   3461        81B3               PSGMusicPointer            rmb 2,0 ; the >>
   3462        81B5               PSGMusicLoopPoint          rmb 2,0 ; the >>
   3463        81B7               PSGMusicSkipFrames         rmb 1,0 ; the >>
   3464        81B8               PSGLoopFlag                rmb 1,0 ; the >>
   3465        81B9               PSGMusicLastLatch          rmb 1,0 ; the >>
   3466
   3467                             * decompression vars
   3468        81BA               PSGMusicSubstringLen       rmb 1,0 ; leng>>
   3469        81BB               PSGMusicSubstringRetAddr   rmb 2,0 ; retu>>
   3470
   3471                             * command buffers
   3472        81BD               PSGChan0Volume             rmb 1,0 ; the >>
   3473        81BE               PSGChan1Volume             rmb 1,0 ; the >>
   3474        81BF               PSGChan2Volume             rmb 1,0 ; the >>
   3475        81C0               PSGChan3Volume             rmb 1,0 ; the >>
   3476        81C1               PSGChan2LowTone            rmb 1,0 ; the >>
   3477        81C2               PSGChan3LowTone            rmb 1,0 ; the >>
   3478        81C3               PSGChan2HighTone           rmb 1,0 ; the >>
   3479
   3480        81C4               PSGMusicVolumeAttenuation  rmb 1,0 ; the >>
   3481
   3482                             * ******* SFX *************
   3483
   3484                             * flags for channels 2-3 access
   3485        81C5               PSGChannel2SFX             rmb 1,0 ; !0 m>>
   3486        81C6               PSGChannel3SFX             rmb 1,0 ; !0 m>>
   3487
   3488                             * command buffers for SFX
   3489        81C7               PSGSFXChan2Volume          rmb 1,0 ; the >>
   3490        81C8               PSGSFXChan3Volume          rmb 1,0 ; the >>
   3491
   3492                             * fundamental vars for SFX
   3493        81C9               PSGSFXStatus               rmb 1,0 ; are >>
   3494        81CA               PSGSFXPage                 rmb 1,0 ; Memo>>
   3495        81CB               PSGSFXStart                rmb 2,0 ; the >>
   3496        81CD               PSGSFXPointer              rmb 2,0 ; the >>
   3497        81CF               PSGSFXLoopPoint            rmb 2,0 ; the >>
   3498        81D1               PSGSFXSkipFrames           rmb 1,0 ; the >>
   3499        81D2               PSGSFXLoopFlag             rmb 1,0 ; the >>
   3500
   3501                             * decompression vars for SFX
   3502        81D3               PSGSFXSubstringLen         rmb 1,0 ; leng>>
   3503        81D4               PSGSFXSubstringRetAddr     rmb 2,0 ; retu>>
   3504
   3505
   3506
    180                            
    181                           * =======================================>>
    182                           * Level Specific Generated Data
    183                           * IMG and ANI should be in first position>>
    184                           * =======================================>>
   3507                                   INCLUD IMAGEIDX
   3508                           * Generated Code
   3509
   3510        81D6               Img_star_4 *@globals
   3511        81D6 06 00 00 00           fcb   $06,$00,$00,$00,$0A,$16,$06>>
               81DA 0A 16 06 00
               81DE 00 00 FB F5
               81E2 05 DC
   3512        81E4 EF 05 DC 5A           fcb   $EF,$05,$DC,$5A,$01
               81E8 01
   3513        81E9               Img_star_3 *@globals
   3514        81E9 06 00 00 00           fcb   $06,$00,$00,$00,$06,$0E,$06>>
               81ED 06 0E 06 00
               81F1 00 00 FD F9
               81F5 05 DB
   3515        81F7 58 05 DA FA           fcb   $58,$05,$DA,$FA,$01
               81FB 01
   3516        81FC               Img_sonicHand *@globals
   3517        81FC 06 00 00 00           fcb   $06,$00,$00,$00,$0E,$2A,$06>>
               8200 0E 2A 06 0D
               8204 00 00 04 01
               8208 06 D7
   3518        820A F1 05 D9 29           fcb   $F1,$05,$D9,$29,$05,$05,$D5>>
               820E 05 05 D5 80
   3519        8212               Img_star_2 *@globals
   3520        8212 06 00 00 00           fcb   $06,$00,$00,$00,$02,$06,$06>>
               8216 02 06 06 00
               821A 0D 00 FF FD
               821E 05 D5
   3521        8220 0F 05 D4 E1           fcb   $0F,$05,$D4,$E1,$01,$05,$D4>>
               8224 01 05 D4 72
               8228 05 D4 44 01
   3522        822C               Img_star_1 *@globals
   3523        822C 06 00 00 00           fcb   $06,$00,$00,$00,$02,$04,$06>>
               8230 02 04 06 00
               8234 0D 00 FF FE
               8238 05 D3
   3524        823A F1 05 D3 CD           fcb   $F1,$05,$D3,$CD,$01,$05,$D3>>
               823E 01 05 D3 7C
               8242 05 D3 58 01
   3525        8246               Img_emblemBack08 *@globals
   3526        8246 06 00 00 00           fcb   $06,$00,$00,$00,$1F,$27,$00>>
               824A 1F 27 00 06
               824E 00 00 10 DD
               8252 05 CE
   3527        8254 CA                    fcb   $CA
   3528        8255               Img_emblemBack07 *@globals
   3529        8255 06 00 00 00           fcb   $06,$00,$00,$00,$1F,$1F,$00>>
               8259 1F 1F 00 06
               825D 00 00 10 BD
               8261 05 CB
   3530        8263 30                    fcb   $30
   3531        8264               Img_emblemBack09 *@globals
   3532        8264 06 00 00 00           fcb   $06,$00,$00,$00,$0F,$38,$00>>
               8268 0F 38 00 06
               826C 00 00 30 B3
               8270 05 C7
   3533        8272 C1                    fcb   $C1
   3534        8273               Img_emblemBack04 *@globals
   3535        8273 06 00 00 00           fcb   $06,$00,$00,$00,$24,$09,$00>>
               8277 24 09 00 06
               827B 00 00 EE B3
               827F 05 C6
   3536        8281 24                    fcb   $24
   3537        8282               Img_emblemBack03 *@globals
   3538        8282 06 00 00 00           fcb   $06,$00,$00,$00,$1F,$26,$00>>
               8286 1F 26 00 06
               828A 00 00 D0 DD
               828E 05 C2
   3539        8290 44                    fcb   $44
   3540        8291               Img_emblemBack06 *@globals
   3541        8291 06 00 00 00           fcb   $06,$00,$00,$00,$1F,$1C,$00>>
               8295 1F 1C 00 06
               8299 00 00 F0 DD
               829D 05 C0
   3542        829F 87                    fcb   $87
   3543        82A0               Img_emblemBack05 *@globals
   3544        82A0 06 00 00 00           fcb   $06,$00,$00,$00,$1F,$1F,$00>>
               82A4 1F 1F 00 06
               82A8 00 00 F0 BD
               82AC 05 BC
   3545        82AE CF                    fcb   $CF
   3546        82AF               Img_tails_5 *@globals
   3547        82AF 06 00 00 00           fcb   $06,$00,$00,$00,$2B,$3F,$06>>
               82B3 2B 3F 06 0D
               82B7 00 00 03 0D
               82BB 07 D0
   3548        82BD E2 05 B8 58           fcb   $E2,$05,$B8,$58,$10,$07,$C6>>
               82C1 10 07 C6 6D
   3549        82C5               Img_tails_4 *@globals
   3550        82C5 06 00 00 00           fcb   $06,$00,$00,$00,$2C,$3A,$06>>
               82C9 2C 3A 06 00
               82CD 00 00 03 12
               82D1 08 CD
   3551        82D3 83 05 B4 19           fcb   $83,$05,$B4,$19,$10
               82D7 10
   3552        82D8               Img_tails_3 *@globals
   3553        82D8 06 00 00 00           fcb   $06,$00,$00,$00,$2B,$3C,$06>>
               82DC 2B 3C 06 00
               82E0 00 00 04 11
               82E4 08 BF
   3554        82E6 25 06 D3 86           fcb   $25,$06,$D3,$86,$0F
               82EA 0F
   3555        82EB               Img_tails_2 *@globals
   3556        82EB 06 00 00 00           fcb   $06,$00,$00,$00,$2B,$37,$06>>
               82EF 2B 37 06 00
               82F3 00 00 02 16
               82F7 07 BA
   3557        82F9 08 05 B0 68           fcb   $08,$05,$B0,$68,$0F
               82FD 0F
   3558        82FE               Img_tails_1 *@globals
   3559        82FE 06 00 00 00           fcb   $06,$00,$00,$00,$1B,$3F,$06>>
               8302 1B 3F 06 00
               8306 00 00 0C 11
               830A 07 AE
   3560        830C 94 05 AC FA           fcb   $94,$05,$AC,$FA,$0D
               8310 0D
   3561        8311               Img_tailsHand *@globals
   3562        8311 06 00 00 00           fcb   $06,$00,$00,$00,$07,$12,$06>>
               8315 07 12 06 0D
               8319 00 00 04 06
               831D 05 AB
   3563        831F 66 05 AA C2           fcb   $66,$05,$AA,$C2,$01,$05,$A9>>
               8323 01 05 A9 BD
   3564        8327               Img_sonic_1 *@globals
   3565        8327 06 00 00 00           fcb   $06,$00,$00,$00,$23,$42,$06>>
               832B 23 42 06 00
               832F 00 00 02 0E
               8333 08 B0
   3566        8335 8A 06 CF 57           fcb   $8A,$06,$CF,$57,$13
               8339 13
   3567        833A               Img_sonic_2 *@globals
   3568        833A 06 00 00 00           fcb   $06,$00,$00,$00,$24,$53,$06>>
               833E 24 53 06 00
               8342 00 00 03 0D
               8346 08 A0
   3569        8348 00 06 CA AA           fcb   $00,$06,$CA,$AA,$17
               834C 17
   3570        834D               Img_emblemBack02 *@globals
   3571        834D 06 00 00 00           fcb   $06,$00,$00,$00,$1F,$1F,$00>>
               8351 1F 1F 00 06
               8355 00 00 D0 BD
               8359 05 A6
   3572        835B 1D                    fcb   $1D
   3573        835C               Img_emblemBack01 *@globals
   3574        835C 06 00 00 00           fcb   $06,$00,$00,$00,$0F,$37,$00>>
               8360 0F 37 00 06
               8364 00 00 C0 B3
               8368 05 A2
   3575        836A B7                    fcb   $B7
   3576        836B               Img_sonic_5 *@globals
   3577        836B 06 00 00 00           fcb   $06,$00,$00,$00,$23,$49,$06>>
               836F 23 49 06 0D
               8373 00 00 0C 0A
               8377 09 AE
   3578        8379 DF 06 C6 63           fcb   $DF,$06,$C6,$63,$14,$07,$A5>>
               837D 14 07 A5 40
   3579        8381               Img_sonic_3 *@globals
   3580        8381 06 00 00 00           fcb   $06,$00,$00,$00,$24,$46,$06>>
               8385 24 46 06 00
               8389 00 00 0B 0D
               838D 0B A0
   3581        838F 00 06 C1 FF           fcb   $00,$06,$C1,$FF,$14
               8393 14
   3582        8394               Img_sonic_4 *@globals
   3583        8394 06 00 00 00           fcb   $06,$00,$00,$00,$23,$49,$06>>
               8398 23 49 06 00
               839C 00 00 0C 0A
               83A0 09 A0
   3584        83A2 00 06 BD CA           fcb   $00,$06,$BD,$CA,$14
               83A6 14
   3585        83A7               Img_emblemFront07 *@globals
   3586        83A7 06 00 00 00           fcb   $06,$00,$00,$00,$12,$12,$00>>
               83AB 12 12 00 06
               83AF 00 00 F7 3D
               83B3 05 A0
   3587        83B5 B0                    fcb   $B0
   3588        83B6               Img_emblemFront08 *@globals
   3589        83B6 06 00 00 00           fcb   $06,$00,$00,$00,$26,$25,$00>>
               83BA 26 25 00 06
               83BE 00 00 10 1D
               83C2 06 B9
   3590        83C4 1F                    fcb   $1F
   3591        83C5               Img_emblemFront05 *@globals
   3592        83C5 06 00 00 00           fcb   $06,$00,$00,$00,$26,$25,$00>>
               83C9 26 25 00 06
               83CD 00 00 C9 1D
               83D1 06 B4
   3593        83D3 58                    fcb   $58
   3594        83D4               Img_emblemFront06 *@globals
   3595        83D4 06 00 00 00           fcb   $06,$00,$00,$00,$1F,$1F,$00>>
               83D8 1F 1F 00 06
               83DC 00 00 F0 1D
               83E0 06 B0
   3596        83E2 1F                    fcb   $1F
   3597        83E3               Img_emblemFront03 *@globals
   3598        83E3 06 00 00 00           fcb   $06,$00,$00,$00,$1F,$1F,$00>>
               83E7 1F 1F 00 06
               83EB 00 00 F0 FD
               83EF 06 AC
   3599        83F1 17                    fcb   $17
   3600        83F2               Img_emblemFront04 *@globals
   3601        83F2 06 00 00 00           fcb   $06,$00,$00,$00,$1B,$1F,$00>>
               83F6 1B 1F 00 06
               83FA 00 00 10 FD
               83FE 06 A9
   3602        8400 00                    fcb   $00
   3603        8401               Img_emblemFront01 *@globals
   3604        8401 06 00 00 00           fcb   $06,$00,$00,$00,$3D,$03,$00>>
               8405 3D 03 00 06
               8409 00 00 E1 F9
               840D 05 A0
   3605        840F 00                    fcb   $00
   3606        8410               Img_emblemFront02 *@globals
   3607        8410 06 00 00 00           fcb   $06,$00,$00,$00,$1A,$1F,$00>>
               8414 1A 1F 00 06
               8418 00 00 D5 FD
               841C 06 A6
   3608        841E 08                    fcb   $08
   3609
   3610                                   INCLUD ANIMSCPT
   3611                           * Generated Code
   3612
   3613        841F 03                    fcb   3
   3614        8420               Ani_smallStar *@globals
   3615        8420 8212                  fdb   Img_star_2
   3616        8422 822C                  fdb   Img_star_1
   3617        8424 FF                    fcb   _resetAnim
   3618        8425 01                    fcb   1
   3619        8426               Ani_largeStar *@globals
   3620        8426 822C                  fdb   Img_star_1
   3621        8428 8212                  fdb   Img_star_2
   3622        842A 81E9                  fdb   Img_star_3
   3623        842C 8212                  fdb   Img_star_2
   3624        842E 822C                  fdb   Img_star_1
   3625        8430 FA                    fcb   _nextSubRoutine
   3626        8431 01                    fcb   1
   3627        8432               Ani_tails *@globals
   3628        8432 82FE                  fdb   Img_tails_1
   3629        8434 82EB                  fdb   Img_tails_2
   3630        8436 82D8                  fdb   Img_tails_3
   3631        8438 82C5                  fdb   Img_tails_4
   3632        843A 82AF                  fdb   Img_tails_5
   3633        843C FA                    fcb   _nextSubRoutine
   3634        843D 01                    fcb   1
   3635        843E               Ani_sonic *@globals
   3636        843E 8327                  fdb   Img_sonic_1
   3637        8440 833A                  fdb   Img_sonic_2
   3638        8442 8381                  fdb   Img_sonic_3
   3639        8444 8394                  fdb   Img_sonic_4
   3640        8446 FA                    fcb   _nextSubRoutine
   3641
   3642                                   INCLUD OBJINDEX
   3643                           * Generated Code
   3644
   3645        8447               Obj_Index_Page
   3646        8447 00                    fcb   $00
   3647        8448 05                    fcb   $05
   3648        8449 05                    fcb   $05
   3649        844A 07                    fcb   $07
   3650        844B 00                    fcb   $00
   3651        844C 00                    fcb   $00
   3652        844D 00                    fcb   $00
   3653        844E 00                    fcb   $00
   3654        844F 00                    fcb   $00
   3655        8450 00                    fcb   $00
   3656        8451 00                    fcb   $00
   3657        8452 00                    fcb   $00
   3658        8453 00                    fcb   $00
   3659        8454 00                    fcb   $00
   3660        8455 00                    fcb   $00
   3661        8456 00                    fcb   $00
   3662        8457 00                    fcb   $00
   3663        8458 00                    fcb   $00
   3664        8459 00                    fcb   $00
   3665        845A 00                    fcb   $00
   3666        845B 00                    fcb   $00
   3667        845C 00                    fcb   $00
   3668        845D 00                    fcb   $00
   3669        845E 00                    fcb   $00
   3670        845F 00                    fcb   $00
   3671        8460 00                    fcb   $00
   3672        8461 00                    fcb   $00
   3673        8462 00                    fcb   $00
   3674        8463 00                    fcb   $00
   3675        8464 00                    fcb   $00
   3676        8465 00                    fcb   $00
   3677        8466 00                    fcb   $00
   3678        8467 00                    fcb   $00
   3679        8468 00                    fcb   $00
   3680        8469 00                    fcb   $00
   3681        846A 00                    fcb   $00
   3682        846B 00                    fcb   $00
   3683        846C 00                    fcb   $00
   3684        846D 00                    fcb   $00
   3685        846E 00                    fcb   $00
   3686        846F 00                    fcb   $00
   3687        8470 00                    fcb   $00
   3688        8471 00                    fcb   $00
   3689        8472 00                    fcb   $00
   3690        8473 00                    fcb   $00
   3691        8474 00                    fcb   $00
   3692        8475 00                    fcb   $00
   3693        8476 00                    fcb   $00
   3694        8477 00                    fcb   $00
   3695        8478 00                    fcb   $00
   3696        8479 00                    fcb   $00
   3697        847A 00                    fcb   $00
   3698        847B 00                    fcb   $00
   3699        847C 00                    fcb   $00
   3700        847D 00                    fcb   $00
   3701        847E 00                    fcb   $00
   3702        847F 00                    fcb   $00
   3703        8480 00                    fcb   $00
   3704        8481 00                    fcb   $00
   3705        8482 00                    fcb   $00
   3706        8483 00                    fcb   $00
   3707        8484 00                    fcb   $00
   3708        8485 00                    fcb   $00
   3709        8486 00                    fcb   $00
   3710        8487 00                    fcb   $00
   3711        8488 00                    fcb   $00
   3712        8489 00                    fcb   $00
   3713        848A 00                    fcb   $00
   3714        848B 00                    fcb   $00
   3715        848C 00                    fcb   $00
   3716        848D 00                    fcb   $00
   3717        848E 00                    fcb   $00
   3718        848F 00                    fcb   $00
   3719        8490 00                    fcb   $00
   3720        8491 00                    fcb   $00
   3721        8492 00                    fcb   $00
   3722        8493 00                    fcb   $00
   3723        8494 00                    fcb   $00
   3724        8495 00                    fcb   $00
   3725        8496 00                    fcb   $00
   3726        8497 00                    fcb   $00
   3727        8498 00                    fcb   $00
   3728        8499 00                    fcb   $00
   3729        849A 00                    fcb   $00
   3730        849B 00                    fcb   $00
   3731        849C 00                    fcb   $00
   3732        849D 00                    fcb   $00
   3733        849E 00                    fcb   $00
   3734        849F 00                    fcb   $00
   3735        84A0 00                    fcb   $00
   3736        84A1 00                    fcb   $00
   3737        84A2 00                    fcb   $00
   3738        84A3 00                    fcb   $00
   3739        84A4 00                    fcb   $00
   3740        84A5 00                    fcb   $00
   3741        84A6 00                    fcb   $00
   3742        84A7 00                    fcb   $00
   3743        84A8 00                    fcb   $00
   3744        84A9 00                    fcb   $00
   3745        84AA 00                    fcb   $00
   3746        84AB 00                    fcb   $00
   3747        84AC 00                    fcb   $00
   3748        84AD 00                    fcb   $00
   3749        84AE 00                    fcb   $00
   3750        84AF 00                    fcb   $00
   3751        84B0 00                    fcb   $00
   3752        84B1 00                    fcb   $00
   3753        84B2 00                    fcb   $00
   3754        84B3 00                    fcb   $00
   3755        84B4 00                    fcb   $00
   3756        84B5 00                    fcb   $00
   3757        84B6 00                    fcb   $00
   3758        84B7 00                    fcb   $00
   3759        84B8 00                    fcb   $00
   3760        84B9 00                    fcb   $00
   3761        84BA 00                    fcb   $00
   3762        84BB 00                    fcb   $00
   3763        84BC 00                    fcb   $00
   3764        84BD 00                    fcb   $00
   3765        84BE 00                    fcb   $00
   3766        84BF 00                    fcb   $00
   3767        84C0 00                    fcb   $00
   3768        84C1 00                    fcb   $00
   3769        84C2 00                    fcb   $00
   3770        84C3 00                    fcb   $00
   3771        84C4 00                    fcb   $00
   3772        84C5 00                    fcb   $00
   3773        84C6 00                    fcb   $00
   3774        84C7 00                    fcb   $00
   3775        84C8 00                    fcb   $00
   3776        84C9 00                    fcb   $00
   3777        84CA 00                    fcb   $00
   3778        84CB 00                    fcb   $00
   3779        84CC 00                    fcb   $00
   3780        84CD 00                    fcb   $00
   3781        84CE 00                    fcb   $00
   3782        84CF 00                    fcb   $00
   3783        84D0 00                    fcb   $00
   3784        84D1 00                    fcb   $00
   3785        84D2 00                    fcb   $00
   3786        84D3 00                    fcb   $00
   3787        84D4 00                    fcb   $00
   3788        84D5 00                    fcb   $00
   3789        84D6 00                    fcb   $00
   3790        84D7 00                    fcb   $00
   3791        84D8 00                    fcb   $00
   3792        84D9 00                    fcb   $00
   3793        84DA 00                    fcb   $00
   3794        84DB 00                    fcb   $00
   3795        84DC 00                    fcb   $00
   3796        84DD 00                    fcb   $00
   3797        84DE 00                    fcb   $00
   3798        84DF 00                    fcb   $00
   3799        84E0 00                    fcb   $00
   3800        84E1 00                    fcb   $00
   3801        84E2 00                    fcb   $00
   3802        84E3 00                    fcb   $00
   3803        84E4 00                    fcb   $00
   3804        84E5 00                    fcb   $00
   3805        84E6 00                    fcb   $00
   3806        84E7 00                    fcb   $00
   3807        84E8 00                    fcb   $00
   3808        84E9 00                    fcb   $00
   3809        84EA 00                    fcb   $00
   3810        84EB 00                    fcb   $00
   3811        84EC 00                    fcb   $00
   3812        84ED 00                    fcb   $00
   3813        84EE 00                    fcb   $00
   3814        84EF 00                    fcb   $00
   3815        84F0 00                    fcb   $00
   3816        84F1 00                    fcb   $00
   3817        84F2 00                    fcb   $00
   3818        84F3 00                    fcb   $00
   3819        84F4 00                    fcb   $00
   3820        84F5 00                    fcb   $00
   3821        84F6 00                    fcb   $00
   3822        84F7 00                    fcb   $00
   3823        84F8 00                    fcb   $00
   3824        84F9 00                    fcb   $00
   3825        84FA 00                    fcb   $00
   3826        84FB 00                    fcb   $00
   3827        84FC 00                    fcb   $00
   3828        84FD 00                    fcb   $00
   3829        84FE 00                    fcb   $00
   3830        84FF 00                    fcb   $00
   3831        8500 00                    fcb   $00
   3832        8501 00                    fcb   $00
   3833        8502 00                    fcb   $00
   3834        8503 00                    fcb   $00
   3835        8504 00                    fcb   $00
   3836        8505 00                    fcb   $00
   3837        8506 00                    fcb   $00
   3838        8507 00                    fcb   $00
   3839        8508 00                    fcb   $00
   3840        8509 00                    fcb   $00
   3841        850A 00                    fcb   $00
   3842        850B 00                    fcb   $00
   3843        850C 00                    fcb   $00
   3844        850D 00                    fcb   $00
   3845        850E 00                    fcb   $00
   3846        850F 00                    fcb   $00
   3847        8510 00                    fcb   $00
   3848        8511 00                    fcb   $00
   3849        8512 00                    fcb   $00
   3850        8513 00                    fcb   $00
   3851        8514 00                    fcb   $00
   3852        8515 00                    fcb   $00
   3853        8516 00                    fcb   $00
   3854        8517 00                    fcb   $00
   3855        8518 00                    fcb   $00
   3856        8519 00                    fcb   $00
   3857        851A 00                    fcb   $00
   3858        851B 00                    fcb   $00
   3859        851C 00                    fcb   $00
   3860        851D 00                    fcb   $00
   3861        851E 00                    fcb   $00
   3862        851F 00                    fcb   $00
   3863        8520 00                    fcb   $00
   3864        8521 00                    fcb   $00
   3865        8522 00                    fcb   $00
   3866        8523 00                    fcb   $00
   3867        8524 00                    fcb   $00
   3868        8525 00                    fcb   $00
   3869        8526 00                    fcb   $00
   3870        8527 00                    fcb   $00
   3871        8528 00                    fcb   $00
   3872        8529 00                    fcb   $00
   3873        852A 00                    fcb   $00
   3874        852B 00                    fcb   $00
   3875        852C 00                    fcb   $00
   3876        852D 00                    fcb   $00
   3877        852E 00                    fcb   $00
   3878        852F 00                    fcb   $00
   3879        8530 00                    fcb   $00
   3880        8531 00                    fcb   $00
   3881        8532 00                    fcb   $00
   3882        8533 00                    fcb   $00
   3883        8534 00                    fcb   $00
   3884        8535 00                    fcb   $00
   3885        8536 00                    fcb   $00
   3886        8537 00                    fcb   $00
   3887        8538 00                    fcb   $00
   3888        8539 00                    fcb   $00
   3889        853A 00                    fcb   $00
   3890        853B 00                    fcb   $00
   3891        853C 00                    fcb   $00
   3892        853D 00                    fcb   $00
   3893        853E 00                    fcb   $00
   3894        853F 00                    fcb   $00
   3895        8540 00                    fcb   $00
   3896        8541 00                    fcb   $00
   3897        8542 00                    fcb   $00
   3898        8543 00                    fcb   $00
   3899        8544 00                    fcb   $00
   3900        8545 00                    fcb   $00
   3901        8546 00                    fcb   $00
   3902        8547               Obj_Index_Address
   3903        8547 00 00                 fcb   $00,$00
   3904        8549 DF 83                 fcb   $DF,$83
   3905        854B DE A2                 fcb   $DE,$A2
   3906        854D A0 00                 fcb   $A0,$00
   3907        854F 00 00                 fcb   $00,$00
   3908        8551 00 00                 fcb   $00,$00
   3909        8553 00 00                 fcb   $00,$00
   3910        8555 00 00                 fcb   $00,$00
   3911        8557 00 00                 fcb   $00,$00
   3912        8559 00 00                 fcb   $00,$00
   3913        855B 00 00                 fcb   $00,$00
   3914        855D 00 00                 fcb   $00,$00
   3915        855F 00 00                 fcb   $00,$00
   3916        8561 00 00                 fcb   $00,$00
   3917        8563 00 00                 fcb   $00,$00
   3918        8565 00 00                 fcb   $00,$00
   3919        8567 00 00                 fcb   $00,$00
   3920        8569 00 00                 fcb   $00,$00
   3921        856B 00 00                 fcb   $00,$00
   3922        856D 00 00                 fcb   $00,$00
   3923        856F 00 00                 fcb   $00,$00
   3924        8571 00 00                 fcb   $00,$00
   3925        8573 00 00                 fcb   $00,$00
   3926        8575 00 00                 fcb   $00,$00
   3927        8577 00 00                 fcb   $00,$00
   3928        8579 00 00                 fcb   $00,$00
   3929        857B 00 00                 fcb   $00,$00
   3930        857D 00 00                 fcb   $00,$00
   3931        857F 00 00                 fcb   $00,$00
   3932        8581 00 00                 fcb   $00,$00
   3933        8583 00 00                 fcb   $00,$00
   3934        8585 00 00                 fcb   $00,$00
   3935        8587 00 00                 fcb   $00,$00
   3936        8589 00 00                 fcb   $00,$00
   3937        858B 00 00                 fcb   $00,$00
   3938        858D 00 00                 fcb   $00,$00
   3939        858F 00 00                 fcb   $00,$00
   3940        8591 00 00                 fcb   $00,$00
   3941        8593 00 00                 fcb   $00,$00
   3942        8595 00 00                 fcb   $00,$00
   3943        8597 00 00                 fcb   $00,$00
   3944        8599 00 00                 fcb   $00,$00
   3945        859B 00 00                 fcb   $00,$00
   3946        859D 00 00                 fcb   $00,$00
   3947        859F 00 00                 fcb   $00,$00
   3948        85A1 00 00                 fcb   $00,$00
   3949        85A3 00 00                 fcb   $00,$00
   3950        85A5 00 00                 fcb   $00,$00
   3951        85A7 00 00                 fcb   $00,$00
   3952        85A9 00 00                 fcb   $00,$00
   3953        85AB 00 00                 fcb   $00,$00
   3954        85AD 00 00                 fcb   $00,$00
   3955        85AF 00 00                 fcb   $00,$00
   3956        85B1 00 00                 fcb   $00,$00
   3957        85B3 00 00                 fcb   $00,$00
   3958        85B5 00 00                 fcb   $00,$00
   3959        85B7 00 00                 fcb   $00,$00
   3960        85B9 00 00                 fcb   $00,$00
   3961        85BB 00 00                 fcb   $00,$00
   3962        85BD 00 00                 fcb   $00,$00
   3963        85BF 00 00                 fcb   $00,$00
   3964        85C1 00 00                 fcb   $00,$00
   3965        85C3 00 00                 fcb   $00,$00
   3966        85C5 00 00                 fcb   $00,$00
   3967        85C7 00 00                 fcb   $00,$00
   3968        85C9 00 00                 fcb   $00,$00
   3969        85CB 00 00                 fcb   $00,$00
   3970        85CD 00 00                 fcb   $00,$00
   3971        85CF 00 00                 fcb   $00,$00
   3972        85D1 00 00                 fcb   $00,$00
   3973        85D3 00 00                 fcb   $00,$00
   3974        85D5 00 00                 fcb   $00,$00
   3975        85D7 00 00                 fcb   $00,$00
   3976        85D9 00 00                 fcb   $00,$00
   3977        85DB 00 00                 fcb   $00,$00
   3978        85DD 00 00                 fcb   $00,$00
   3979        85DF 00 00                 fcb   $00,$00
   3980        85E1 00 00                 fcb   $00,$00
   3981        85E3 00 00                 fcb   $00,$00
   3982        85E5 00 00                 fcb   $00,$00
   3983        85E7 00 00                 fcb   $00,$00
   3984        85E9 00 00                 fcb   $00,$00
   3985        85EB 00 00                 fcb   $00,$00
   3986        85ED 00 00                 fcb   $00,$00
   3987        85EF 00 00                 fcb   $00,$00
   3988        85F1 00 00                 fcb   $00,$00
   3989        85F3 00 00                 fcb   $00,$00
   3990        85F5 00 00                 fcb   $00,$00
   3991        85F7 00 00                 fcb   $00,$00
   3992        85F9 00 00                 fcb   $00,$00
   3993        85FB 00 00                 fcb   $00,$00
   3994        85FD 00 00                 fcb   $00,$00
   3995        85FF 00 00                 fcb   $00,$00
   3996        8601 00 00                 fcb   $00,$00
   3997        8603 00 00                 fcb   $00,$00
   3998        8605 00 00                 fcb   $00,$00
   3999        8607 00 00                 fcb   $00,$00
   4000        8609 00 00                 fcb   $00,$00
   4001        860B 00 00                 fcb   $00,$00
   4002        860D 00 00                 fcb   $00,$00
   4003        860F 00 00                 fcb   $00,$00
   4004        8611 00 00                 fcb   $00,$00
   4005        8613 00 00                 fcb   $00,$00
   4006        8615 00 00                 fcb   $00,$00
   4007        8617 00 00                 fcb   $00,$00
   4008        8619 00 00                 fcb   $00,$00
   4009        861B 00 00                 fcb   $00,$00
   4010        861D 00 00                 fcb   $00,$00
   4011        861F 00 00                 fcb   $00,$00
   4012        8621 00 00                 fcb   $00,$00
   4013        8623 00 00                 fcb   $00,$00
   4014        8625 00 00                 fcb   $00,$00
   4015        8627 00 00                 fcb   $00,$00
   4016        8629 00 00                 fcb   $00,$00
   4017        862B 00 00                 fcb   $00,$00
   4018        862D 00 00                 fcb   $00,$00
   4019        862F 00 00                 fcb   $00,$00
   4020        8631 00 00                 fcb   $00,$00
   4021        8633 00 00                 fcb   $00,$00
   4022        8635 00 00                 fcb   $00,$00
   4023        8637 00 00                 fcb   $00,$00
   4024        8639 00 00                 fcb   $00,$00
   4025        863B 00 00                 fcb   $00,$00
   4026        863D 00 00                 fcb   $00,$00
   4027        863F 00 00                 fcb   $00,$00
   4028        8641 00 00                 fcb   $00,$00
   4029        8643 00 00                 fcb   $00,$00
   4030        8645 00 00                 fcb   $00,$00
   4031        8647 00 00                 fcb   $00,$00
   4032        8649 00 00                 fcb   $00,$00
   4033        864B 00 00                 fcb   $00,$00
   4034        864D 00 00                 fcb   $00,$00
   4035        864F 00 00                 fcb   $00,$00
   4036        8651 00 00                 fcb   $00,$00
   4037        8653 00 00                 fcb   $00,$00
   4038        8655 00 00                 fcb   $00,$00
   4039        8657 00 00                 fcb   $00,$00
   4040        8659 00 00                 fcb   $00,$00
   4041        865B 00 00                 fcb   $00,$00
   4042        865D 00 00                 fcb   $00,$00
   4043        865F 00 00                 fcb   $00,$00
   4044        8661 00 00                 fcb   $00,$00
   4045        8663 00 00                 fcb   $00,$00
   4046        8665 00 00                 fcb   $00,$00
   4047        8667 00 00                 fcb   $00,$00
   4048        8669 00 00                 fcb   $00,$00
   4049        866B 00 00                 fcb   $00,$00
   4050        866D 00 00                 fcb   $00,$00
   4051        866F 00 00                 fcb   $00,$00
   4052        8671 00 00                 fcb   $00,$00
   4053        8673 00 00                 fcb   $00,$00
   4054        8675 00 00                 fcb   $00,$00
   4055        8677 00 00                 fcb   $00,$00
   4056        8679 00 00                 fcb   $00,$00
   4057        867B 00 00                 fcb   $00,$00
   4058        867D 00 00                 fcb   $00,$00
   4059        867F 00 00                 fcb   $00,$00
   4060        8681 00 00                 fcb   $00,$00
   4061        8683 00 00                 fcb   $00,$00
   4062        8685 00 00                 fcb   $00,$00
   4063        8687 00 00                 fcb   $00,$00
   4064        8689 00 00                 fcb   $00,$00
   4065        868B 00 00                 fcb   $00,$00
   4066        868D 00 00                 fcb   $00,$00
   4067        868F 00 00                 fcb   $00,$00
   4068        8691 00 00                 fcb   $00,$00
   4069        8693 00 00                 fcb   $00,$00
   4070        8695 00 00                 fcb   $00,$00
   4071        8697 00 00                 fcb   $00,$00
   4072        8699 00 00                 fcb   $00,$00
   4073        869B 00 00                 fcb   $00,$00
   4074        869D 00 00                 fcb   $00,$00
   4075        869F 00 00                 fcb   $00,$00
   4076        86A1 00 00                 fcb   $00,$00
   4077        86A3 00 00                 fcb   $00,$00
   4078        86A5 00 00                 fcb   $00,$00
   4079        86A7 00 00                 fcb   $00,$00
   4080        86A9 00 00                 fcb   $00,$00
   4081        86AB 00 00                 fcb   $00,$00
   4082        86AD 00 00                 fcb   $00,$00
   4083        86AF 00 00                 fcb   $00,$00
   4084        86B1 00 00                 fcb   $00,$00
   4085        86B3 00 00                 fcb   $00,$00
   4086        86B5 00 00                 fcb   $00,$00
   4087        86B7 00 00                 fcb   $00,$00
   4088        86B9 00 00                 fcb   $00,$00
   4089        86BB 00 00                 fcb   $00,$00
   4090        86BD 00 00                 fcb   $00,$00
   4091        86BF 00 00                 fcb   $00,$00
   4092        86C1 00 00                 fcb   $00,$00
   4093        86C3 00 00                 fcb   $00,$00
   4094        86C5 00 00                 fcb   $00,$00
   4095        86C7 00 00                 fcb   $00,$00
   4096        86C9 00 00                 fcb   $00,$00
   4097        86CB 00 00                 fcb   $00,$00
   4098        86CD 00 00                 fcb   $00,$00
   4099        86CF 00 00                 fcb   $00,$00
   4100        86D1 00 00                 fcb   $00,$00
   4101        86D3 00 00                 fcb   $00,$00
   4102        86D5 00 00                 fcb   $00,$00
   4103        86D7 00 00                 fcb   $00,$00
   4104        86D9 00 00                 fcb   $00,$00
   4105        86DB 00 00                 fcb   $00,$00
   4106        86DD 00 00                 fcb   $00,$00
   4107        86DF 00 00                 fcb   $00,$00
   4108        86E1 00 00                 fcb   $00,$00
   4109        86E3 00 00                 fcb   $00,$00
   4110        86E5 00 00                 fcb   $00,$00
   4111        86E7 00 00                 fcb   $00,$00
   4112        86E9 00 00                 fcb   $00,$00
   4113        86EB 00 00                 fcb   $00,$00
   4114        86ED 00 00                 fcb   $00,$00
   4115        86EF 00 00                 fcb   $00,$00
   4116        86F1 00 00                 fcb   $00,$00
   4117        86F3 00 00                 fcb   $00,$00
   4118        86F5 00 00                 fcb   $00,$00
   4119        86F7 00 00                 fcb   $00,$00
   4120        86F9 00 00                 fcb   $00,$00
   4121        86FB 00 00                 fcb   $00,$00
   4122        86FD 00 00                 fcb   $00,$00
   4123        86FF 00 00                 fcb   $00,$00
   4124        8701 00 00                 fcb   $00,$00
   4125        8703 00 00                 fcb   $00,$00
   4126        8705 00 00                 fcb   $00,$00
   4127        8707 00 00                 fcb   $00,$00
   4128        8709 00 00                 fcb   $00,$00
   4129        870B 00 00                 fcb   $00,$00
   4130        870D 00 00                 fcb   $00,$00
   4131        870F 00 00                 fcb   $00,$00
   4132        8711 00 00                 fcb   $00,$00
   4133        8713 00 00                 fcb   $00,$00
   4134        8715 00 00                 fcb   $00,$00
   4135        8717 00 00                 fcb   $00,$00
   4136        8719 00 00                 fcb   $00,$00
   4137        871B 00 00                 fcb   $00,$00
   4138        871D 00 00                 fcb   $00,$00
   4139        871F 00 00                 fcb   $00,$00
   4140        8721 00 00                 fcb   $00,$00
   4141        8723 00 00                 fcb   $00,$00
   4142        8725 00 00                 fcb   $00,$00
   4143        8727 00 00                 fcb   $00,$00
   4144        8729 00 00                 fcb   $00,$00
   4145        872B 00 00                 fcb   $00,$00
   4146        872D 00 00                 fcb   $00,$00
   4147        872F 00 00                 fcb   $00,$00
   4148        8731 00 00                 fcb   $00,$00
   4149        8733 00 00                 fcb   $00,$00
   4150        8735 00 00                 fcb   $00,$00
   4151        8737 00 00                 fcb   $00,$00
   4152        8739 00 00                 fcb   $00,$00
   4153        873B 00 00                 fcb   $00,$00
   4154        873D 00 00                 fcb   $00,$00
   4155        873F 00 00                 fcb   $00,$00
   4156        8741 00 00                 fcb   $00,$00
   4157        8743 00 00                 fcb   $00,$00
   4158        8745 00 00                 fcb   $00,$00
   4159
   4160                                   INCLUD SOUNDIDX
   4161                           * Generated Code
   4162
   4163        8747               Pcm_SEGA *@globals
   4164        8747 0A A0 00 DF           fcb   $0A,$A0,$00,$DF,$F6
               874B F6
   4165        874C 09 BD F6 DF           fcb   $09,$BD,$F6,$DF,$74
               8750 74
   4166        8751 FF                    fcb   $FF
   4167        8752               Psg_TitleScreen *@globals
   4168        8752 06 A0 00 A6           fcb   $06,$A0,$00,$A6,$08
               8756 08
   4169        8757 FF                    fcb   $FF
   4170
   4171                                   INCLUD LOADACT
   4172                           * Generated Code
   4173
   4174        8758               LoadAct
   4175  3     8758 CC   87EC             ldd   #Black_palette
   4176  6     875B FD   87EA             std   Ptr_palette
   4177  8     875E BD   882C             jsr   UpdatePalette
   4178  3     8761 8E   1111             ldx   #$1111                   * >>
   4179  2     8764 C6   62               ldb   #$62                     * >>
   4180  5     8766 F7   E7E6             stb   $E7E6                    * >>
   4181  8     8769 BD   8795             jsr   ClearCartMem
   4182  5     876C B6   E7DD             lda   $E7DD                    * >>
   4183  2     876F 84   F0               anda  #$F0
   4184  2     8771 8B   01               adda  #$01                     * >>
   4185  5     8773 B7   E7DD             sta   $E7DD
   4186  2     8776 84   0F               anda  #$0F
   4187  2     8778 8B   80               adda  #$80
   4188  5     877A B7   728A             sta   screen_border_color+1    * >>
   4189  8     877D BD   7271             jsr   WaitVBL
   4190  3     8780 8E   1111             ldx   #$1111                   * >>
   4191  2     8783 C6   63               ldb   #$63                     * >>
   4192  5     8785 F7   E7E6             stb   $E7E6                    * >>
   4193  8     8788 BD   8795             jsr   ClearCartMem
   4194  3     878B CC   87C9             ldd   #Pal_TitleScreen
   4195  6     878E FD   87EA             std   Ptr_palette
   4196  8     8791 BD   882C             jsr   UpdatePalette
   4197  5     8794 39                    rts
   4198
    190                            
    191
   4199                                   INCLUD CLRCARTM
   4200                           *****************************************>>
   4201                           * Clear memory in cardtridge area
   4202                           *****************************************>>
   4203
   4204        8795               ClearCartMem
   4205  5+3   8795 34   48               pshs  u,dp
   4206  7     8797 10FF 87C5             sts   ClearCartMem_3+2
   4207  4     879B 10CE 4000             lds   #$4000
   4208  4+0   879F 33   84               leau  ,x
   4209  4+0   87A1 31   84               leay  ,x
   4210  6     87A3 1F   10               tfr   x,d
   4211  6     87A5 1F   8B               tfr   a,dp
   4212        87A7               ClearCartMem_2
   4213  5+9   87A7 34   7E               pshs  u,y,x,dp,b,a
   4214  5+9   87A9 34   7E               pshs  u,y,x,dp,b,a
   4215  5+9   87AB 34   7E               pshs  u,y,x,dp,b,a
   4216  5+9   87AD 34   7E               pshs  u,y,x,dp,b,a
   4217  5+9   87AF 34   7E               pshs  u,y,x,dp,b,a
   4218  5+9   87B1 34   7E               pshs  u,y,x,dp,b,a
   4219  5+9   87B3 34   7E               pshs  u,y,x,dp,b,a
   4220  5+9   87B5 34   7E               pshs  u,y,x,dp,b,a
   4221  5+9   87B7 34   7E               pshs  u,y,x,dp,b,a
   4222  5+9   87B9 34   7E               pshs  u,y,x,dp,b,a
   4223  5     87BB 118C 0004             cmps  #$0004
   4224  3     87BF 26   E6               bne   ClearCartMem_2
   4225  5+4   87C1 34   60               pshs  u,y
   4226        87C3               ClearCartMem_3
   4227  4     87C3 10CE 0000             lds   #$0000
   4228  5+5   87C7 35   C8               puls  dp,u,pc
   4229
   4230
   4231                                   INCLUD PALETTE
   4232                           * Generated Code
   4233
   4234        87C9               Pal_TitleScreen * @globals
   4235        87C9 FF0F                  fdb   $ff0f
   4236        87CB 0000                  fdb   $0000
   4237        87CD 0800                  fdb   $0800
   4238        87CF 0200                  fdb   $0200
   4239        87D1 5D03                  fdb   $5d03
   4240        87D3 1600                  fdb   $1600
   4241        87D5 4F00                  fdb   $4f00
   4242        87D7 2700                  fdb   $2700
   4243        87D9 FF00                  fdb   $ff00
   4244        87DB F300                  fdb   $f300
   4245        87DD F80F                  fdb   $f80f
   4246        87DF 750C                  fdb   $750c
   4247        87E1 530E                  fdb   $530e
   4248        87E3 2205                  fdb   $2205
   4249        87E5 000E                  fdb   $000e
   4250        87E7 0100                  fdb   $0100
   4251
   4252
   4253                                   INCLUD UPDTPAL
   4254                           *****************************************>>
   4255                           * Mise a jour de la palette
   4256                           *****************************************>>
   4257                           * TODO ajout systeme de refresh pour ne p>>
   4258                           * ou integrer le refresh palette en debut>>
   4259                           * palette doit etre refresh avant le trac>>
   4260
   4261        87E9 00            cpt            fcb   $00
   4262        87EA 87EC          Ptr_palette    fdb   Black_palette  *@glo>>
   4263        87EC               Black_palette  rmb   $20,0          *@glo>>
   4264        880C               White_palette  rmb   $20,$FF        *@glo>>
   4265
   4266        882C               UpdatePalette
   4267  6     882C BE   87EA            ldx   Ptr_palette
   4268  7     882F 7F   87E9            clr   cpt                      * c>>
   4269  5     8832 B6   87E9             lda   cpt                        >>
   4270        8835               SetColor
   4271  2     8835 48                   asla                              >>
   4272  5     8836 B7   E7DB            sta   $E7DB                       >>
   4273  5+3   8839 EC   81              ldd   ,x++                        >>
   4274  5     883B B7   E7DA            sta   $E7DA                       >>
   4275  5     883E F7   E7DA            stb   $E7DA                    * s>>
   4276  7     8841 7C   87E9            inc   cpt                         >>
   4277  5     8844 B6   87E9            lda   cpt
   4278  2     8847 81   10              cmpa  #$10                     * t>>
   4279  3     8849 26   EA              bne   SetColor                 * o>>
   4280  5     884B 39                    rts
    195
    196

000000 Total Errors

000647 Total Symbols
     1x          Label 742B am_ObjectMove_01
     1x          Label 7441 am_ObjectMove_02
     3x          Label 72F3 am_RunNextObject
     2x          Label 7291 am_SwapVideoPage
     2x          Equ   0004 anim
     0x          Label 7398 AnimateSprite
     1x          Label 73C7 Anim_dyn
     1x          Label 741A Anim_End
     1x          Label 740F Anim_End_FA
     1x          Label 7404 Anim_End_FB
     1x          Label 73F2 Anim_End_FC
     1x          Label 73EA Anim_End_FD
     1x          Label 73D9 Anim_End_FE
     1x          Label 73E1 Anim_End_FE_dyn
     1x          Label 73CE Anim_End_FF
     8x          Equ   0008 anim_frame
     4x          Equ   0009 anim_frame_duration
     2x          Label 73B9 Anim_Next
     1x          Label 73A6 Anim_Run
     1x          Label 73CD Anim_Wait
     0x          Label 8426 Ani_largeStar
     0x          Label 8420 Ani_smallStar
     0x          Label 843E Ani_sonic
     0x          Label 8432 Ani_tails
     0x          Label 7C7B BBA0
     1x          Label 7C84 BBA1
     1x          Label 7CA5 BBA_DivideCell
     1x          Label 7CAA BBA_dyn
     1x          Label 7C9A BBA_FitCell
     2x          Label 7C8B BBA_Next
     2x          Label 7CC5 BBA_rts
     0x          Label 7CD4 BBF0
     1x          Label 7CEA BBF1
     1x          Label 7D13 BBF_AddNewEntry
     3x          Label 7D16 BBF_AddNewEntryAtEnd
     1x          Label 7D53 BBF_ExpandAtEnd
     1x          Label 7D32 BBF_ExpandAtStart
     1x          Label 7D19 BBF_FindFreeSlot
     0x          Label 7D3D BBF_Join
     2x          Label 7CFE BBF_Next
     4x          Label 7D5E BBF_rts
     1x          Label 7D21 BBF_SetNewEntry
     2x          Label 7D28 BBF_SetNewEntryNextentry
     3x          Label 7D2D BBF_SetNewEntryPrevLink
     2x          Label 7C74 BgBufferAlloc
     2x          Label 7CC7 BgBufferFree
     2x          Label 87EC Black_palette
     0x          Equ   0009 buf_bgdata
     2x          Equ   0024 buf_Lst_Priority_Unset
     1x          Equ   0007 buf_prev_mapping_frame
     4x          Equ   0011 buf_prev_render_flags
     0x          Equ   000D buf_prev_x1_pixel
     0x          Equ   000F buf_prev_x2_pixel
     0x          Equ   000D buf_prev_xy1_pixel
     0x          Equ   000F buf_prev_xy2_pixel
     1x          Equ   000B buf_prev_xy_pixel
     0x          Equ   000B buf_prev_x_pixel
     0x          Equ   000E buf_prev_y1_pixel
     0x          Equ   0010 buf_prev_y2_pixel
     0x          Equ   000C buf_prev_y_pixel
     5x          Equ   0000 buf_priority
     4x          Equ   0003 buf_priority_next_obj
     1x          Equ   0001 buf_priority_prev_obj
    33x          Equ   0000 buf_Tbl_Priority_First_Entry
    18x          Equ   0012 buf_Tbl_Priority_Last_Entry
     0x          Equ   0040 c1_button_A_mask
     0x          Equ   0002 c1_button_down_mask
     0x          Equ   0004 c1_button_left_mask
     0x          Equ   0008 c1_button_right_mask
     0x          Equ   0001 c1_button_up_mask
     0x          Equ   0080 c2_button_A_mask
     0x          Equ   0020 c2_button_down_mask
     0x          Equ   0040 c2_button_left_mask
     0x          Equ   0080 c2_button_right_mask
     0x          Equ   0010 c2_button_up_mask
     7x          Equ   0003 cell_end
     1x          Label 7CC1 cell_end_return
     5x          Equ   0040 cell_size
     5x          Equ   0001 cell_start
     4x          Equ   6000 cell_start_adr
     1x          Label 755F CheckSpritesRefresh
     2x          Label 8795 ClearCartMem
     1x          Label 87A7 ClearCartMem_2
     1x          Label 87C3 ClearCartMem_3
     4x          Label 7525 ClearObj
     1x          Label 7551 CLO_1
     1x          Label 7555 CLO_2
     4x          Label 87E9 cpt
     0x          Label 764F CSR_CheckDelHide
     3x          Label 77E9 CSR_CheckDraw
     2x          Label 7716 CSR_CheckErase
     0x          Label 7675 CSR_CheckPlayFieldCoord
     0x          Label 7655 CSR_CheckRefresh
     1x          Label 76A5 CSR_CheckVerticalPosition
     2x          Label 76D4 CSR_CVP_Continue
     1x          Label 767B CSR_DoNotDisplaySprite
     3x          Label 769E CSR_NextObject
     1x          Label 76BE CSR_NoDefinedFrame
     1x          Label 76CC CSR_NoFrameFound
     1x          Label 76B2 CSR_NoOverlay
     1x          Label 75D0 CSR_P1B0
     1x          Label 763E CSR_P1B1
     1x          Label 75C3 CSR_P2B0
     1x          Label 7631 CSR_P2B1
     1x          Label 75B6 CSR_P3B0
     1x          Label 7624 CSR_P3B1
     1x          Label 75A9 CSR_P4B0
     1x          Label 7617 CSR_P4B1
     1x          Label 759C CSR_P5B0
     1x          Label 760A CSR_P5B1
     1x          Label 758F CSR_P6B0
     1x          Label 75FD CSR_P6B1
     1x          Label 7582 CSR_P7B0
     1x          Label 75F0 CSR_P7B1
     0x          Label 7575 CSR_P8B0
     0x          Label 75E3 CSR_P8B1
    21x          Label 764C CSR_ProcessEachPriorityLevel
     1x          Label 75DD CSR_rtsB0
     1x          Label 764B CSR_rtsB1
     1x          Label 781A CSR_SDT1
     1x          Label 7821 CSR_SDT2
     1x          Label 7826 CSR_SDT3
     0x          Label 7570 CSR_SetBuffer0
     1x          Label 75DE CSR_SetBuffer1
     3x          Label 7839 CSR_SetDrawFalse
     0x          Label 780C CSR_SetDrawTrue
     2x          Label 77E1 CSR_SetEraseFalse
     6x          Label 7747 CSR_SetEraseTrue
     2x          Label 782C CSR_SetHide
     2x          Label 770E CSR_SetOutOfRange
     0x          Label 755F CSR_Start
     0x          Label 77C0 CSR_SubDrawCheckCollision
     4x          Label 77B7 CSR_SubDrawSearch
     2x          Label 77B3 CSR_SubDrawSpriteSearchInit
     0x          Label 776A CSR_SubEraseCheckCollisionB0
     0x          Label 7793 CSR_SubEraseCheckCollisionB1
     4x          Label 7761 CSR_SubEraseSearchB0
     5x          Label 778A CSR_SubEraseSearchB1
     1x          Label 7758 CSR_SubEraseSpriteSearchInit
     0x          Label 765E CSR_UpdSpriteImageBasedOnMirror
    19x          Label 7559 cur_priority
     4x          Label 755D cur_ptr_sub_obj_draw
     9x          Label 755B cur_ptr_sub_obj_erase
     0x          Label 7463 DeleteObject
     0x          Label 745D DeleteObject_x
     1x          Label 731F DisplaySprite
     0x          Label 7319 DisplaySprite_x
     0x          Equ   604F dk_destination
     0x          Equ   6049 dk_lecteur
     0x          Equ   604A dk_piste
     0x          Equ   604B dk_pisteL
     0x          Equ   604C dk_secteur
     1x          Label 74C7 DOB_ChainNextB0
     1x          Label 7511 DOB_ChainNextB1
     1x          Label 74A7 DOB_ChainPrevB0
     1x          Label 74E9 DOB_ChainPrevB1
     1x          Label 74B1 DOB_CheckPrioNextB0
     1x          Label 74F3 DOB_CheckPrioNextB1
     1x          Label 7491 DOB_RemoveFromDPSB0
     1x          Label 74D3 DOB_RemoveFromDPSB1
     2x          Label 750F DOB_rts
     1x          Label 7465 DOB_Start
     2x          Label 747A DOB_TestOnscreen1
     0x          Label 746A DOB_ToDeleteFlag0
     0x          Label 747F DOB_ToDeleteFlag1
     0x          Label 7470 DOB_Unset0
     0x          Label 7485 DOB_Unset1
     0x          Label 72AA Dpad_Held
     0x          Label 72AC Dpad_Press
     2x          Label 72A8 Dpad_Read
    27x          Label 64E4 DPS_buffer_0
    25x          Label 658A DPS_buffer_1
     1x          Label 7A9A DrawSprites
     4x          Equ   0001 draw_routine
     1x          Label 7B93 DRS_DrawWithoutBackupB0
     1x          Label 7C53 DRS_DrawWithoutBackupB1
     1x          Label 7BC2 DRS_dyn1
     1x          Label 7BD4 DRS_dyn2
     3x          Label 7B62 DRS_dyn3B0
     3x          Label 7C22 DRS_dyn3B1
     3x          Label 7B8B DRS_NextObjectB0
     3x          Label 7C4B DRS_NextObjectB1
     1x          Label 7B88 DRS_NoOverlayB0
     1x          Label 7C48 DRS_NoOverlayB1
     1x          Label 7AD7 DRS_P1B0
     1x          Label 7B18 DRS_P1B1
     1x          Label 7ACF DRS_P2B0
     1x          Label 7B10 DRS_P2B1
     1x          Label 7AC7 DRS_P3B0
     1x          Label 7B08 DRS_P3B1
     1x          Label 7ABF DRS_P4B0
     1x          Label 7B00 DRS_P4B1
     1x          Label 7AB7 DRS_P5B0
     1x          Label 7AF8 DRS_P5B1
     1x          Label 7AAF DRS_P6B0
     1x          Label 7AF0 DRS_P6B1
     1x          Label 7AA7 DRS_P7B0
     1x          Label 7AE8 DRS_P7B1
     0x          Label 7A9F DRS_P8B0
     1x          Label 7AE0 DRS_P8B1
     9x          Label 7B21 DRS_ProcessEachPriorityLevelB0
     9x          Label 7BE1 DRS_ProcessEachPriorityLevelB1
     1x          Label 7ADF DRS_rtsB0
     1x          Label 7B20 DRS_rtsB1
     0x          Label 7A9A DRS_Start
     4x          Label 7BB4 DRS_XYToAddress
     0x          Label 7BBC DRS_XYToAddressRAMAFirst
     1x          Label 7BCE DRS_XYToAddressRAMBFirst
     0x          Label 7350 DSP_addFirstNode
     1x          Label 7360 DSP_addToExistingNode
     1x          Label 733C DSP_BufferPositionned
     1x          Label 7385 DSP_ChangePriority
     1x          Label 7349 DSP_CheckLastEntry
     0x          Label 7346 DSP_InitPriority
     1x          Label 7375 DSP_LinkBuffer1
     1x          Label 7381 DSP_LinkCurWithPrev
     1x          Label 735E DSP_rts
     0x          Label 732C DSP_SetBuffer0
     1x          Label 7335 DSP_SetBuffer1
     1x          Label 7321 DSP_Start
     0x          Label 67E4 Dynamic_Object_RAM
     2x          Label 7162 Dynamic_Object_RAM_End
     3x          Equ   0007 entry_size
     1x          Label 7848 EraseSprites
     4x          Equ   0006 erase_nb_cell
     2x          Equ   0004 erase_routine
     0x          Label 793F ESP_CallEraseRoutineB0
     1x          Label 7952 ESP_CallEraseRoutineB0_00
     0x          Label 798D ESP_CallEraseRoutineB1
     1x          Label 79A0 ESP_CallEraseRoutineB1_00
     1x          Label 7934 ESP_CheckEraseB0
     1x          Label 7982 ESP_CheckEraseB1
     8x          Label 7922 ESP_CheckPriorityB0
     8x          Label 7970 ESP_CheckPriorityB1
     0x          Label 795C ESP_FreeEraseBufferB0
     0x          Label 79AA ESP_FreeEraseBufferB1
     2x          Label 7967 ESP_NextObjectB0
     2x          Label 79B5 ESP_NextObjectB1
     0x          Label 784D ESP_P1B0
     1x          Label 78B6 ESP_P1B1
     1x          Label 785A ESP_P2B0
     1x          Label 78C3 ESP_P2B1
     1x          Label 7867 ESP_P3B0
     1x          Label 78D0 ESP_P3B1
     1x          Label 7874 ESP_P4B0
     1x          Label 78DD ESP_P4B1
     1x          Label 7881 ESP_P5B0
     1x          Label 78EA ESP_P5B1
     1x          Label 788E ESP_P6B0
     1x          Label 78F7 ESP_P6B1
     1x          Label 789B ESP_P7B0
     1x          Label 7904 ESP_P7B1
     1x          Label 78A8 ESP_P8B0
     1x          Label 7911 ESP_P8B1
     9x          Label 791F ESP_ProcessEachPriorityLevelB0
     9x          Label 796D ESP_ProcessEachPriorityLevelB1
     1x          Label 78B5 ESP_rtsB0
     1x          Label 791E ESP_rtsB1
     0x          Label 7848 ESP_Start
     0x          Label 7926 ESP_UnsetCheckRefreshB0
     0x          Label 7974 ESP_UnsetCheckRefreshB1
     1x          Label 795F ESP_UnsetOnScreenFlagB0
     1x          Label 79AD ESP_UnsetOnScreenFlagB1
     0x          Equ   001B ext_variables
     0x          Label 72AB Fire_Held
     0x          Label 72AD Fire_Press
     2x          Label 72A9 Fire_Read
     0x          Label 613E Glb_Camera_X_Pos
     0x          Label 6140 Glb_Camera_Y_Pos
    10x          Label 613D Glb_Cur_Wrk_Screen_Id
     1x          Label 7270 Glb_MainCharacter_Is_Dead
     6x          Label 6142 Glb_Sprite_Screen_Pos_PartA
     6x          Label 6144 Glb_Sprite_Screen_Pos_PartB
     0x          Equ   00FE goBackNFrames
     0x          Equ   00FD goToAnimation
     0x          Equ   0038 gravity
     0x          Equ   0000 id
     4x          Equ   000A image_set
     1x          Equ   0004 image_subset_x1_offset
     1x          Equ   0005 image_subset_y1_offset
     1x          Equ   0004 image_x_size
     1x          Equ   0005 image_y_size
     0x          Label 835C Img_emblemBack01
     0x          Label 834D Img_emblemBack02
     0x          Label 8282 Img_emblemBack03
     0x          Label 8273 Img_emblemBack04
     0x          Label 82A0 Img_emblemBack05
     0x          Label 8291 Img_emblemBack06
     0x          Label 8255 Img_emblemBack07
     0x          Label 8246 Img_emblemBack08
     0x          Label 8264 Img_emblemBack09
     0x          Label 8401 Img_emblemFront01
     0x          Label 8410 Img_emblemFront02
     0x          Label 83E3 Img_emblemFront03
     0x          Label 83F2 Img_emblemFront04
     0x          Label 83C5 Img_emblemFront05
     0x          Label 83D4 Img_emblemFront06
     0x          Label 83A7 Img_emblemFront07
     0x          Label 83B6 Img_emblemFront08
     0x          Label 81FC Img_sonicHand
     1x          Label 8327 Img_sonic_1
     1x          Label 833A Img_sonic_2
     1x          Label 8381 Img_sonic_3
     1x          Label 8394 Img_sonic_4
     0x          Label 836B Img_sonic_5
     3x          Label 822C Img_star_1
     3x          Label 8212 Img_star_2
     1x          Label 81E9 Img_star_3
     0x          Label 81D6 Img_star_4
     0x          Label 8311 Img_tailsHand
     1x          Label 82FE Img_tails_1
     1x          Label 82EB Img_tails_2
     1x          Label 82D8 Img_tails_3
     1x          Label 82C5 Img_tails_4
     1x          Label 82AF Img_tails_5
     0x          Label 6106 InitIRQ
     0x          Label 72AA Joypads
     2x          Label 72AA Joypads_Held
     1x          Label 72AC Joypads_Press
     2x          Label 72A8 Joypads_Read
     1x          Label 6112 LevelMainLoop
     1x          Label 7162 LevelOnly_Object_RAM
     1x          Label 7270 LevelOnly_Object_RAM_End
     1x          Label 8758 LoadAct
     4x          Label 6146 Lst_FreeCellFirstEntry_0
     4x          Label 6315 Lst_FreeCellFirstEntry_1
     2x          Label 6148 Lst_FreeCell_0
     2x          Label 6317 Lst_FreeCell_1
     8x          Label 6508 Lst_Priority_Unset_0
     7x          Label 65AE Lst_Priority_Unset_1
     0x          Label 7317 MarkObjGone
    14x          Equ   0000 nb_cells
     1x          Equ   001B nb_dynamic_objects
     6x          Equ   0082 nb_free_cells
     0x          Equ   0003 nb_level_objects
     4x          Equ   0040 nb_objects
     4x          Equ   0008 nb_priority_levels
     0x          Equ   0002 nb_reserved_objects
     0x          Equ   00FC nextRoutine
     0x          Equ   00FA nextSubRoutine
     9x          Equ   0005 next_entry
     3x          Equ   005A next_object
     0x          Label 741B ObjectMove
     1x          Label 6730 Object_RAM
     2x          Label 7270 Object_RAM_End
     8x          Equ   005A object_size
     1x          Label 8547 Obj_Index_Address
     1x          Label 8447 Obj_Index_Page
     0x          Label 6730 Obj_MainCharacter
     0x          Label 678A Obj_Sidekick
     0x          Label 71BC Obj_SonicDust
     0x          Label 7216 Obj_TailsDust
     0x          Label 7162 Obj_TailsTails
     4x          Equ   0000 page_draw_routine
     2x          Equ   0003 page_erase_routine
     1x          Label 87C9 Pal_TitleScreen
     1x          Equ   0003 pcm_end_addr
     1x          Equ   0005 pcm_meta_size
     1x          Equ   0000 pcm_page
     0x          Label 8747 Pcm_SEGA
     1x          Equ   0001 pcm_start_addr
     0x          Label 7D60 PlayPCM
     1x          Label 7D98 PlayPCM_End
     1x          Label 7D82 PlayPCM_Loop
     1x          Label 7D92 PlayPCM_NextChunk
     1x          Label 7D77 PlayPCM_ReadChunk
     1x          Label 7DAC PlayPCM_RestorePage
     2x          Equ   0006 prev_anim
     6x          Equ   0003 priority
     0x          Label 7E66 PSGCancelLoop
     4x          Label 81BD PSGChan0Volume
     4x          Label 81BE PSGChan1Volume
     3x          Label 81C3 PSGChan2HighTone
     3x          Label 81C1 PSGChan2LowTone
     5x          Label 81BF PSGChan2Volume
     5x          Label 81C2 PSGChan3LowTone
     5x          Label 81C0 PSGChan3Volume
     6x          Equ   0000 PSGChannel0
     5x          Equ   0020 PSGChannel1
     9x          Equ   0040 PSGChannel2
    12x          Label 81C5 PSGChannel2SFX
    10x          Equ   0060 PSGChannel3
    13x          Label 81C6 PSGChannel3SFX
     2x          Equ   0040 PSGData
    35x          Equ   E7B0 PSGDataPort
     2x          Equ   0000 PSGEnd
     1x          Label 8021 PSGFrame
     1x          Label 8020 PSGFrame_end
     0x          Label 7E6A PSGGetStatus
     1x          Label 7DB2 PSGInit
    32x          Equ   0080 PSGLatch
     2x          Equ   0001 PSGLoop
     3x          Label 81B8 PSGLoopFlag
     3x          Label 81B9 PSGMusicLastLatch
     3x          Label 81B5 PSGMusicLoopPoint
     2x          Label 81B0 PSGMusicPage
     3x          Label 81B3 PSGMusicPointer
     4x          Label 81B7 PSGMusicSkipFrames
     2x          Label 81B1 PSGMusicStart
    13x          Label 81AF PSGMusicStatus
     4x          Label 81BA PSGMusicSubstringLen
     2x          Label 81BB PSGMusicSubstringRetAddr
    13x          Label 81C4 PSGMusicVolumeAttenuation
     0x          Label 7DC8 PSGPlay
     1x          Label 7DCA PSGPlay1
     0x          Label 7DC4 PSGPlayNoRepeat
     0x          Label 7EE2 PSGRestoreVolumes
     1x          Label 7EF5 PSGRestoreVolumes1
     1x          Label 7F08 PSGRestoreVolumes2
     2x          Label 7F2C PSGRestoreVolumes3
     2x          Label 7F50 PSGRestoreVolumes4
     0x          Label 7E1B PSGResume
     1x          Label 7E4B PSGResume1
     1x          Label 7E60 PSGResume2
     1x          Label 7E65 PSGResume_end
     0x          Label 7E6E PSGSetMusicVolumeAttenuation
     1x          Label 7E84 PSGSetMusicVolumeAttenuation1
     1x          Label 7E97 PSGSetMusicVolumeAttenuation2
     1x          Label 7EAF PSGSetMusicVolumeAttenuation3
     1x          Label 7EC7 PSGSetMusicVolumeAttenuation4
     2x          Label 7ECC PSGSetMusicVolumeAttenuation_end
     0x          Label 8018 PSGSFXCancelLoop
     2x          Label 81C7 PSGSFXChan2Volume
     2x          Label 81C8 PSGSFXChan3Volume
     1x          Label 812D PSGSFXFrame
     1x          Label 816D PSGSFXFrame_end
     0x          Label 801C PSGSFXGetStatus
     3x          Label 81D2 PSGSFXLoopFlag
     3x          Label 81CF PSGSFXLoopPoint
     2x          Label 81CA PSGSFXPage
     0x          Label 7F5A PSGSFXPlay
     1x          Label 7F5C PSGSFXPlay1
     1x          Label 7F82 PSGSFXPlay2
     1x          Label 7F8B PSGSFXPlay3
     0x          Label 7F56 PSGSFXPlayLoop
     1x          Label 7FA1 PSGSFXPlayLoop_end
     4x          Label 81CD PSGSFXPointer
     4x          Label 81D1 PSGSFXSkipFrames
     2x          Label 81CB PSGSFXStart
     7x          Label 81C9 PSGSFXStatus
     2x          Label 7FA2 PSGSFXStop
     1x          Label 7FB1 PSGSFXStop1
     1x          Label 7FBB PSGSFXStop2
     1x          Label 7FE5 PSGSFXStop3
     1x          Label 8007 PSGSFXStop4
     1x          Label 8017 PSGSFXStop_end
     4x          Label 81D3 PSGSFXSubstringLen
     2x          Label 81D4 PSGSFXSubstringRetAddr
     0x          Label 7ECD PSGSilenceChannels
     2x          Label 7DF2 PSGStop
     1x          Label 7E0B PSGStop2
     1x          Label 7E15 PSGStop3
     1x          Label 7E1A PSGStop_end
     4x          Equ   0008 PSGSubString
    27x          Equ   0010 PSGVolumeData
     2x          Equ   0038 PSGWait
     5x          Equ   0001 PSG_PLAYING
     3x          Equ   0000 PSG_STOPPED
     0x          Label 8752 Psg_TitleScreen
     3x          Label 87EA Ptr_palette
     1x          Label 72AE ReadJoypads
    23x          Equ   0002 render_flags
     0x          Equ   0080 render_free3_mask
     4x          Equ   0020 render_hide_mask
     2x          Equ   0008 render_motionless_mask
     5x          Equ   0004 render_overlay_mask
     1x          Equ   0010 render_playfieldcoord_mask
     5x          Equ   0040 render_todelete_mask
     2x          Equ   0001 render_xmirror_mask
     2x          Equ   0002 render_ymirror_mask
     1x          Label 6730 Reserved_Object_RAM
     1x          Label 67E4 Reserved_Object_RAM_End
     0x          Equ   00FF resetAnim
     0x          Equ   00FB resetAnimAndSubRoutine
     2x          Equ   0018 routine
     3x          Equ   0019 routine_secondary
     3x          Equ   003F rsv_bgdata_0
     3x          Equ   0051 rsv_bgdata_1
     2x          Equ   0036 rsv_buffer_0
     2x          Equ   0048 rsv_buffer_1
     3x          Equ   002E rsv_image_subset
    11x          Equ   0030 rsv_mapping_frame
     0x          Equ   002A rsv_prev_anim
     4x          Equ   003D rsv_prev_mapping_frame_0
     4x          Equ   004F rsv_prev_mapping_frame_1
    11x          Equ   0047 rsv_prev_render_flags_0
     9x          Equ   0059 rsv_prev_render_flags_1
     4x          Equ   0080 rsv_prev_render_onscreen_mask
     4x          Equ   0001 rsv_prev_render_overlay_mask
     0x          Equ   0043 rsv_prev_x1_pixel_0
     0x          Equ   0055 rsv_prev_x1_pixel_1
     0x          Equ   0045 rsv_prev_x2_pixel_0
     0x          Equ   0057 rsv_prev_x2_pixel_1
     2x          Equ   0043 rsv_prev_xy1_pixel_0
     2x          Equ   0055 rsv_prev_xy1_pixel_1
     2x          Equ   0045 rsv_prev_xy2_pixel_0
     2x          Equ   0057 rsv_prev_xy2_pixel_1
     1x          Equ   0041 rsv_prev_xy_pixel_0
     1x          Equ   0053 rsv_prev_xy_pixel_1
     0x          Equ   0041 rsv_prev_x_pixel_0
     0x          Equ   0053 rsv_prev_x_pixel_1
     0x          Equ   0044 rsv_prev_y1_pixel_0
     0x          Equ   0056 rsv_prev_y1_pixel_1
     0x          Equ   0046 rsv_prev_y2_pixel_0
     0x          Equ   0058 rsv_prev_y2_pixel_1
     0x          Equ   0042 rsv_prev_y_pixel_0
     0x          Equ   0054 rsv_prev_y_pixel_1
     6x          Equ   0036 rsv_priority_0
     6x          Equ   0048 rsv_priority_1
    14x          Equ   0039 rsv_priority_next_obj_0
    14x          Equ   004B rsv_priority_next_obj_1
    12x          Equ   0037 rsv_priority_prev_obj_0
    12x          Equ   0049 rsv_priority_prev_obj_1
     4x          Equ   0001 rsv_render_checkrefresh_mask
     5x          Equ   0004 rsv_render_displaysprite_mask
     7x          Equ   0002 rsv_render_erasesprite_mask
    25x          Equ   0029 rsv_render_flags
     3x          Equ   0008 rsv_render_outofrange_mask
     4x          Equ   0032 rsv_x1_pixel
     4x          Equ   0034 rsv_x2_pixel
     3x          Equ   0032 rsv_xy1_pixel
     3x          Equ   0034 rsv_xy2_pixel
     4x          Equ   0033 rsv_y1_pixel
     4x          Equ   0035 rsv_y2_pixel
     1x          Label 72F0 RunNextObject
     3x          Label 72D7 RunObject
     1x          Label 72CF RunObjects
     1x          Label 72FA RunObjectsWhenPlayerIsDead
     0x          Label 72D2 RunObjects_01
     0x          Label 72F9 RunObjects_End
     1x          Label 7289 screen_border_color
     1x          Equ   00E4 screen_bottom
     1x          Equ   001C screen_top
     0x          Equ   00A0 screen_width
     1x          Label 8835 SetColor
     2x          Equ   0001 SFX_CHANNEL2
     2x          Equ   0002 SFX_CHANNEL3
     2x          Equ   0003 SFX_CHANNELS2AND3
     0x          Label 7446 SingleObjLoad2
     1x          Label 7450 SingleObjLoad2_01
     2x          Label 745C SingleObjLoad2_02
     1x          Equ   001A status
     0x          Equ   0004 status_bit2
     0x          Equ   0080 status_bit7
     0x          Equ   0002 status_inair
     0x          Equ   0010 status_jumpingafterrolling
     0x          Equ   0004 status_jumporroll
     0x          Equ   0020 status_mainchar_pushing
     0x          Equ   0008 status_mainchar_standing
     0x          Equ   0008 status_norgroundnorfall
     0x          Equ   0020 status_pushing
     0x          Equ   0040 status_sidekick_pushing
     0x          Equ   0010 status_sidekick_standing
     0x          Equ   0040 status_underwater
     1x          Equ   0001 status_x_orientation
     1x          Equ   0002 status_y_orientation
     0x          Equ   0001 subtype
     0x          Label 7284 SwapVideoPage
     2x          Label 64E4 Tbl_Priority_First_Entry_0
     2x          Label 658A Tbl_Priority_First_Entry_1
     3x          Label 64F6 Tbl_Priority_Last_Entry_0
     2x          Label 659C Tbl_Priority_Last_Entry_1
     2x          Label 66B0 Tbl_Sub_Object_Draw
     3x          Label 6630 Tbl_Sub_Object_Erase
     0x          Label 79C0 UDP_B0
     1x          Label 7A2D UDP_B1
     1x          Label 7A07 UDP_ChainNextB0
     1x          Label 7A74 UDP_ChainNextB1
     1x          Label 79E7 UDP_ChainPrevB0
     1x          Label 7A54 UDP_ChainPrevB1
     1x          Label 7A11 UDP_CheckDeleteB0
     1x          Label 7A7E UDP_CheckDeleteB1
     2x          Label 79C3 UDP_CheckEndB0
     2x          Label 7A30 UDP_CheckEndB1
     1x          Label 79F1 UDP_CheckPrioNextB0
     1x          Label 7A5E UDP_CheckPrioNextB1
     1x          Label 79CF UDP_CheckPrioPrevB0
     1x          Label 7A3C UDP_CheckPrioPrevB1
     0x          Label 79C8 UDP_InitListB0
     0x          Label 7A35 UDP_InitListB1
     3x          Label 7A26 UDP_SetNewPrioB0
     3x          Label 7A93 UDP_SetNewPrioB1
     0x          Label 79BB UDP_Start
     1x          Label 79BB UnsetDisplayPriority
     2x          Label 882C UpdatePalette
     2x          Label 72A6 Vint_runcount
     3x          Label 7271 WaitVBL
     1x          Label 7276 WaitVBL_01
     0x          Label 880C White_palette
     7x          Equ   0012 xy_pixel
     2x          Equ   0012 x_pixel
     4x          Equ   000C x_pos
     0x          Equ   000E x_sub
     2x          Equ   0014 x_vel
     1x          Equ   0013 y_pixel
     4x          Equ   000F y_pos
     0x          Equ   0011 y_sub
     2x          Equ   0016 y_vel
     1x          Label 7F0D _chkchn2
     1x          Label 7F31 _chkchn3
     1x          Label 80A1 _chn2
     1x          Label 80BE _command
     2x          Label 8044 _continue
     1x          Label 80C9 _done
     0x          Equ   00FE _goBackNFrames
     0x          Equ   00FD _goToAnimation
     1x          Label 8122 _high_part_Tone
     1x          Label 808E _ifchn0
     1x          Label 8077 _ifchn2
    11x          Label 8034 _intLoop
     4x          Label 8140 _intSFXLoop
     1x          Label 6129 _IRQ
     1x          Label 6135 _IRQ_end
     1x          Label 8081 _latch_Volume
     1x          Label 8093 _latch_Volume_23
     1x          Label 8103 _musicLoop
     0x          Equ   00FC _nextRoutine
     3x          Equ   00FA _nextSubRoutine
     1x          Label 80B5 _noLatch
     1x          Label 80CD _otherCommands
     1x          Label 80F7 _output_NoLatch
     1x          Equ   00FF _resetAnim
     0x          Equ   00FB _resetAnimAndSubRoutine
     1x          Label 7F27 _restoreSFX2
     1x          Label 7F55 _restoreSFX2_end
     1x          Label 7F4B _restoreSFX3
     1x          Label 7EB4 _restore_channel3
     6x          Label 80AB _send2PSG
     4x          Label 80DA _sendVolume2PSG
     2x          Label 80E8 _sendVolume2PSG1
     1x          Label 80EF _sendVolume2PSG2
     1x          Label 80FD _setLoopPoint
     1x          Label 816E _SFXcommand
     2x          Label 8150 _SFXcontinue
     1x          Label 8179 _SFXdone
     1x          Label 818F _sfxLoop
     1x          Label 817D _SFXotherCommands
     2x          Label 8164 _SFXoutbyte
     1x          Label 818A _SFXsetLoopPoint
     1x          Label 819E _SFXsubstring
     1x          Label 8161 _SFXvolumechn3
     1x          Label 80B0 _skipFrame
     1x          Label 800E _skipRestore
     1x          Label 8169 _skipSFXFrame
     1x          Label 7FEA _skip_chn2
     1x          Label 800C _skip_chn3
     1x          Label 8110 _substring

