/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : .\Sonic2\GeneratedCode\GameModeEngine.asm
 * Fichier destination : .\Sonic2\GeneratedCode\TMP.BIN
 * Contenu :
 *     Main     0:GMENGINE.ASM 1088
 *     Include  0:CONSTANT.ASM 4697
 *     Include  0:EXOMIZER.ASM 2111
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
     95                                   INCLUD CONSTANT
     96                           * --------------------------------------->>
     97                           * Constants
     98                           *
     99                           * Naming convention
    100                           * -----------------
    101                           * - lower case
    102                           * - underscore-separated names
    103                           *
    104                           * --------------------------------------->>
    105
    106                           * =======================================>>
    107                           * TO8 Registers
    108                           * =======================================>>
    109
    110                  6049     dk_lecteur                    equ $6049
    111                  604A     dk_piste                      equ $604A
    112                  604B     dk_pisteL                     equ $604B
    113                  604C     dk_secteur                    equ $604C
    114                  604F     dk_destination                equ $604F
    115
    116                           * =======================================>>
    117                           * Display Constants
    118                           * =======================================>>
    119
    120                  00A0     screen_width                  equ 160 ; s>>
    121                  00C8     screen_height                 equ 200 ; s>>
    122                  0008     nb_priority_levels            equ 8   ; n>>
    123
    124                           * =======================================>>
    125                           * Physics Constants
    126                           * =======================================>>
    127
    128                  0038     gravity                       equ $38 ; G>>
    129
    130                           * =======================================>>
    131                           * Animation Constants
    132                           * =======================================>>
    133
    134                  00FF     _resetAnim                    equ $FF
    135                  00FE     _goBackNFrames                equ $FE
    136                  00FD     _goToAnimation                equ $FD
    137                  00FC     _nextRoutine                  equ $FC
    138                  00FB     _resetAnimAndSubRoutine       equ $FB
    139                  00FA     _nextSubRoutine               equ $FA
    140
    141                           * =======================================>>
    142                           * Images Constants
    143                           * =======================================>>
    144
    145                  0000     page_bckdraw_routine          equ 0
    146                  0001     bckdraw_routine               equ 1
    147                  0003     page_draw_routine             equ 3
    148                  0004     draw_routine                  equ 4
    149                  0006     page_erase_routine            equ 6
    150                  0007     erase_routine                 equ 7
    151                  0009     erase_nb_cell                 equ 9
    152                  000A     image_x_offset                equ 10
    153                  000C     image_y_offset                equ 12
    154                  000E     image_x_size                  equ 14
    155                  000F     image_y_size                  equ 15 ; mu>>
    156                  0010     image_meta_size               equ 16 ; nu>>
    157
    158                           * =======================================>>
    159                           * Object Constants
    160                           * =======================================>>
    161
    162                  0002     nb_reserved_objects           equ 2
    163                  003B     nb_dynamic_objects            equ 59
    164                  0003     nb_level_objects              equ 3
    165                  003D     nb_objects                    equ (nb_res>>
    166
    167                           * --------------------------------------->>
    168                           * Object Status Table offsets
    169                           * --------------------------------------->>
    170
    171                  0050     object_size                   equ 80 ; th>>
    172                  0050     next_object                   equ object_>>
    173
    174                  0000     id                            equ 0      >>
    175                  0001     subtype                       equ 1      >>
    176                  0002     render_flags                  equ 2
    177
    178                           * --- render_flags bitfield variables --->>
    179                  0001     render_xmirror_mask           equ $01 ; (>>
    180                  0002     render_ymirror_mask           equ $02 ; (>>
    181                  0004     render_playfieldcoord_mask    equ $04 ; (>>
    182                  0008     render_hide_mask              equ $08 ; (>>
    183                  0010     render_fixedoverlay_mask      equ $10 ; (>>
    184                  0020     render_todelete_mask          equ $20 ; (>>
    185                  0040     render_free2_mask             equ $40 ; (>>
    186                  0080     render_free3_mask             equ $80 ; (>>
    187                            
    188                  0003     priority                      equ 3      >>
    189                  0004     anim                          equ 4  ; an>>
    190                  0006     prev_anim                     equ 6  ; an>>
    191                  0008     anim_frame                    equ 8      >>
    192                  0009     anim_frame_duration           equ 9      >>
    193                  000A     mapping_frame                 equ 10 ; an>>
    194                  000C     x_pos                         equ 12 ; an>>
    195                  000E     x_sub                         equ 14     >>
    196                  000F     y_pos                         equ 15 ; an>>
    197                  0011     y_sub                         equ 17     >>
    198                  0012     x_pixel                       equ 18     >>
    199                  0013     y_pixel                       equ 19     >>
    200                  0014     x_vel                         equ 20 ; an>>
    201                  0016     y_vel                         equ 22 ; an>>
    202                  0018     routine                       equ 24     >>
    203                  0019     routine_secondary             equ 25     >>
    204                  001A     status                        equ 26
    205
    206                           * --- status bitfield variables for objec>>
    207                  0001     status_x_orientation          equ   $01 ;>>
    208                  0002     status_y_orientation          equ   $02 ;>>
    209                  0004     status_bit2                   equ   $04 ;>>
    210                  0008     status_mainchar_standing      equ   $08 ;>>
    211                  0010     status_sidekick_standing      equ   $10 ;>>
    212                  0020     status_mainchar_pushing       equ   $20 ;>>
    213                  0040     status_sidekick_pushing       equ   $40 ;>>
    214                  0080     status_bit7                   equ   $80 ;>>
    215
    216                           * --- status bitfield variables for Main >>
    217                  0002     status_inair                  equ   $02 ;>>
    218                  0004     status_jumporroll             equ   $04 ;>>
    219                  0008     status_norgroundnorfall       equ   $08 ;>>
    220                  0010     status_jumpingafterrolling    equ   $10 ;>>
    221                  0020     status_pushing                equ   $20 ;>>
    222                  0040     status_underwater             equ   $40 ;>>
    223
    224                  001B     ext_variables                 equ 27 ; to>>
    225
    226                           * --------------------------------------->>
    227                           * reserved variables (engine)
    228
    229                  0029     rsv_render_flags              equ 41
    230
    231                           * --- rsv_render_flags bitfield variables>>
    232                  0001     rsv_render_checkrefresh_mask  equ $01 ; (>>
    233                  0002     rsv_render_erasesprite_mask   equ $02 ; (>>
    234                  0004     rsv_render_displaysprite_mask equ $04 ; (>>
    235                  0008     rsv_render_outofrange_mask    equ $08 ; (>>
    236
    237                  002A     rsv_prev_anim                 equ 42 ; an>>
    238                  002C     rsv_curr_mapping_frame        equ 44 ; an>>
    239                  002E     rsv_ptr_sub_object_erase      equ 46 ; an>>
    240                  0030     rsv_ptr_sub_object_draw       equ 48 ; an>>
    241                  0032     rsv_x2_pixel                  equ 50     >>
    242                  0033     rsv_y2_pixel                  equ 51     >>
    243
    244                           * --------------------------------------->>
    245                           * reserved variables (engine) - buffer sp>>
    246
    247                  0034     rsv_buffer_0                  equ 52 ; St>>
    248                  0034     rsv_priority_0                equ 52 ; in>>
    249                  0035     rsv_priority_prev_obj_0       equ 53 ; an>>
    250                  0037     rsv_priority_next_obj_0       equ 55 ; an>>
    251                  0039     rsv_prev_mapping_frame_0      equ 57 ; an>>
    252                  003B     rsv_bgdata_0                  equ 59 ; an>>
    253                  003D     rsv_prev_x_pixel_0            equ 61 ; pr>>
    254                  003E     rsv_prev_y_pixel_0            equ 62 ; pr>>
    255                  003F     rsv_prev_x2_pixel_0           equ 63 ; pr>>
    256                  0040     rsv_prev_y2_pixel_0           equ 64 ; pr>>
    257                  0041     rsv_onscreen_0                equ 65 ; ha>>
    258
    259                  0042     rsv_buffer_1                  equ 66 ; St>>
    260                  0042     rsv_priority_1                equ 66 ; in>>
    261                  0043     rsv_priority_prev_obj_1       equ 67 ; an>>
    262                  0045     rsv_priority_next_obj_1       equ 69 ; an>>
    263                  0047     rsv_prev_mapping_frame_1      equ 71 ; an>>
    264                  0049     rsv_bgdata_1                  equ 73 ; an>>
    265                  004B     rsv_prev_x_pixel_1            equ 75 ; pr>>
    266                  004C     rsv_prev_y_pixel_1            equ 76 ; pr>>
    267                  004D     rsv_prev_x2_pixel_1           equ 77 ; pr>>
    268                  004E     rsv_prev_y2_pixel_1           equ 78 ; pr>>
    269                  004F     rsv_onscreen_1                equ 79 ; ha>>
    270
    271                  0000     buf_priority                  equ 0  ; of>>
    272                  0001     buf_priority_prev_obj         equ 1  ;
    273                  0003     buf_priority_next_obj         equ 3  ;
    274                  0005     buf_prev_mapping_frame        equ 5  ;
    275                  0007     buf_bgdata                    equ 7  ;
    276                  0009     buf_prev_x_pixel              equ 9  ;
    277                  000A     buf_prev_y_pixel              equ 10 ;
    278                  000B     buf_prev_x2_pixel             equ 11 ;
    279                  000C     buf_prev_y2_pixel             equ 12 ;
    280                  000D     buf_onscreen                  equ 13 ;
    281
     22        4000                       org   $4000
     23                  40               setdp $40
    282                                   INCLUD EXOMIZER
    283                           * Exomizer2 algorithm, backward with litt>>
    284                           * by Fool-DupleX, PrehisTO and Sam from P>>
    285                           *
    286                           * This routine decrunches data compressed>>
    287                           * backward with litterals.
    288                           * This routine was developed and tested o>>
    289
    290                            
    291                           * The Exomizer2 decruncher starts here.
    292                           * call with a JSR exo2 or equivalent.
    293                           *
    294                           * Input    : U = pointer to end of compre>>
    295                           *            Y = pointer to end of output>>
    296                           * Output   : Y = pointer to first byte of>>
    297                           * Modifies : Y.
    298                           *
    299                           * All registers are preserved except Y.
    300                           * This code self modifies and cannot be r>>
    301                           * This code must be contained within a si>>
    302                           * be located anywhere in RAM.
    303
    304  5+10  4000 34   7F       exo2    pshs    u,y,x,dp,d,cc           *>>
    305  6     4002 1F   50               tfr     pc,d                    *>>
    306  6     4004 1F   8B               tfr     a,dp
    307  4+5   4006 31   8D 00A9          leay    biba,pcr                *>>
    308  2     400A 5F                    clrb
    309  4     400B D7   8D               stb     <bitbuf+1               *>>
    310
    311  2     400D 4F            nxt     clra
    312  5+2   400E 34   06               pshs    a,b
    313  2     4010 C5   0F               bitb    #$0f                    *>>
    314  3     4012 26   03               bne     skp
    315  3     4014 8E   0001             ldx     #$0001                  *>>
    316  2     4017 C6   04       skp     ldb     #4                      *>>
    317  7     4019 8D   6D               bsr     getbits
    318  4+2   401B E7   A0               stb     ,y+                     *>>
    319  2     401D 53                    comb                            *>>
    320  6+0   401E 69   E4       roll    rol     ,s
    321  2     4020 49                    rola
    322  2     4021 5C                    incb
    323  3     4022 2B   FA               bmi     roll
    324  4+0   4024 E6   E4               ldb     ,s
    325  5+3   4026 AF   A1               stx     ,y++                    *>>
    326  4+4   4028 30   8B               leax    d,x                     *>>
    327  5+2   402A 35   06               puls    a,b
    328  2     402C 5C                    incb
    329  2     402D C1   34               cmpb    #52                     *>>
    330  3     402F 26   DC               bne     nxt
    331                            
    332  6+1   4031 10AE 66       go      ldy     6,s                     *>>
    333  2     4034 C6   01       mloop   ldb     #1                      *>>
    334  7     4036 8D   50               bsr     getbits                 *>>
    335  3     4038 26   15               bne     cpy                     *>>
    336  4     403A D7   45               stb     <idx+1                  *>>
    337        403C 8C                    fcb     $8c                     *>>
    338  6     403D 0C   45       rbl     inc     <idx+1                  *>>
    339  2     403F 5C                    incb
    340  7     4040 8D   46               bsr     getbits
    341  3     4042 27   F9               beq     rbl
    342
    343  2     4044 C6   00       idx     ldb     #$00                    *>>
    344  2     4046 C1   10               cmpb    #$10                    *>>
    345  3     4048 27   37               beq     endr
    346  3     404A 25   0F               blo     coffs                   *>>
    347  2     404C 5A                    decb                            *>>
    348  7     404D 8D   39               bsr     getbits                 *>>
    349
    350  6     404F 1F   01       cpy     tfr     d,x                     *>>
    351  4+2   4051 A6   C2       cpyl    lda     ,-u
    352  4+2   4053 A7   A2               sta     ,-y
    353  4+1   4055 30   1F               leax    -1,x
    354  3     4057 26   F8               bne     cpyl
    355  3     4059 20   D9               bra     mloop
    356
    357  7     405B 8D   44       coffs   bsr     cook                    *>>
    358  5+2   405D 34   06               pshs    d
    359  4+1   405F 30   8C 4B            leax    <tab1,pcr
    360  5     4062 1083 0003             cmpd    #$03
    361  3     4066 24   01               bhs     scof
    362  3     4068 3A                    abx
    363  7     4069 8D   1B       scof    bsr     getbix
    364  4+1   406B EB   03               addb    3,x
    365  7     406D 8D   32               bsr     cook
    366  5     406F DD   77               std     <offs+2
    367  5+2   4071 35   10               puls    x
    368
    369  4+1   4073 31   3F       cpy2    leay    -1,y                    *>>
    370  4+4   4075 A6   A9 1234  offs    lda     $1234,y                 *>>
    371  4+0   4079 A7   A4               sta     ,y
    372  4+1   407B 30   1F               leax    -1,x
    373  3     407D 26   F4               bne     cpy2
    374  3     407F 20   B3               bra     mloop
    375
    376  6+1   4081 10AF 66       endr    sty     6,s                     *>>
    377  5+12  4084 35   FF               puls    cc,d,dp,x,y,u,pc        *>>
    378
    379                           * getbits  : get 0 to 16 bits from input >>
    380                           * Input    : B = bit count, U points to i>>
    381                           * Output   : D = bits
    382                           * Modifies : D,U.
    383
    384  4+0   4086 E6   84       getbix  ldb     ,x
    385  6+2   4088 6F   E2       getbits clr     ,-s                     *>>
    386  6+2   408A 6F   E2               clr     ,-s
    387  2     408C 86   12       bitbuf  lda     #$12                    *>>
    388  3     408E 20   09               bra     get3
    389  4+2   4090 A6   C2       get1    lda     ,-u
    390  2     4092 46            get2    rora
    391  3     4093 27   FB               beq     get1                    *>>
    392  6+1   4095 69   61               rol     1,s
    393  6+0   4097 69   E4               rol     ,s
    394  2     4099 5A            get3    decb
    395  3     409A 2A   F6               bpl     get2
    396  4     409C 97   8D               sta     <bitbuf+1               *>>
    397  5+3   409E EC   E1               ldd     ,s++
    398  5     40A0 39                    rts                             *>>
    399                            
    400                           * cook     : computes base[index] + readb>>
    401                           * Input    : B = index
    402                           * Output   : D = base[index] + readbits(&>>
    403                           * Modifies : D,X,U.
    404
    405  4+5   40A1 30   8D 000E  cook    leax    biba,pcr
    406  3     40A5 3A                    abx                             *>>
    407  2     40A6 58                    aslb                            *>>
    408  3     40A7 3A                    abx
    409  7     40A8 8D   DC               bsr     getbix                  *>>
    410  6+1   40AA E3   01               addd    1,x                     *>>
    411  5     40AC 39                    rts
    412
    413                           * Values used in the switch (index)
    414        40AD 04 02 04      tab1    fcb     4,2,4
    415        40B0 10 30 20              fcb     16,48,32
    416
    417        40B3               biba    rmb     156,0                   *>>
     25
     26  3     414F CE   41C7             ldu   #current_game_mode_data+7 *>>
     27  5+2   4152 34   40               pshs  u
     28                            
     29        4154               GameModeEngine
     30                  60               setdp $60
     31  2     4154 86   60               lda   #$60
     32  6     4156 1F   8B               tfr   a,dp                     * >>
     33                            
     34  4+2   4158 E6   C0               ldb   ,u+                      * >>
     35  2     415A 1D                    sex                            * >>
     36  2     415B 84   01               anda  #$01                     * >>
     37  2     415D C4   80               andb  #$80                     * >>
     38  4     415F 97   49               sta   <dk_lecteur
     39  2     4161 86   00               lda   #$00
     40  5     4163 DD   4A               std   <dk_piste
     41                            
     42  2     4165 C6   00               ldb   #$00                     * >>
     43  5     4167 DD   4F               std   <dk_destination
     44                            
     45  5+3   4169 EC   C1               ldd   ,u++
     46  3     416B 2A   07               bpl   GMEContinue              * >>
     47  7     416D 10FE 9FFF             lds   $9FFF                    * >>
     48  4     4171 7E   6100             jmp   $6100                    * >>
     49        4174               GMEContinue
     50  4     4174 97   4C               sta   <dk_secteur              * >>
     51  5     4176 F7   41A8             stb   DKDernierBloc+2          * >>
     52                            
     53  5+4   4179 37   26               pulu  d,y                      * >>
     54  5     417B B7   41AE             sta   NegOffset+2              * >>
     55  5     417E F7   41B1             stb   Page+1
     56                            
     57  5+2   4181 34   40               pshs  u
     58
     59        4183               DKLecture
     60  2     4183 86   02               lda   #$02
     61  4     4185 97   48               sta   <$6048                   * >>
     62        4187               DKCO
     63  8     4187 BD   E82A             jsr   $E82A                    * >>
     64  6     418A 0C   4C               inc   <dk_secteur              * >>
     65  4     418C 96   4C               lda   <dk_secteur              * >>
     66  2     418E 81   10               cmpa  #$10                     * >>
     67  3     4190 23   10               bls   DKContinue               * >>
     68  2     4192 86   01               lda   #$01                     * >>
     69  4     4194 97   4C               sta   <dk_secteur              * >>
     70  6     4196 0C   4B               inc   <dk_pisteL               * >>
     71  4     4198 96   4B               lda   <dk_pisteL
     72  2     419A 81   4F               cmpa  #$4F                     * >>
     73  3     419C 23   04               bls   DKContinue               * >>
     74  6     419E 0F   4B               clr   <dk_pisteL               * >>
     75  6     41A0 0C   49               inc   <dk_lecteur              * >>
     76        41A2               DKContinue
     77  6     41A2 0C   4F               inc   <$604F                   * >>
     78  5     41A4 DE   4F               ldu   <$604F                   * >>
     79        41A6               DKDernierBloc
     80  5     41A6 1183 0000             cmpu  #0                       * >>
     81  3     41AA 23   DB               bls   DKCO                     * >>
     82        41AC               NegOffset
     83  4+4   41AC 33   C9 FF00          leau  $FF00,u                  * >>
     84        41B0               Page
     85  2     41B0 86   00               lda   #0                       * >>
     86  5     41B2 B7   E7E5             sta   $E7E5                    * >>
     87  8     41B5 BD   4000             jsr   exo2                     * >>
     88  5+2   41B8 35   40               puls  u
     89  3     41BA 20   98               bra   GameModeEngine
     90        41BC               fill
     91        41BC                       rmb   7-((fill-exo2)%7),0      * >>
     92                            
     93        41C0               current_game_mode_data *@globals
     94

000000 Total Errors

000153 Total Symbols
     0x          Equ   0004 anim
     0x          Equ   0008 anim_frame
     0x          Equ   0009 anim_frame_duration
     0x          Equ   0001 bckdraw_routine
     2x          Label 40B3 biba
     2x          Label 408C bitbuf
     0x          Equ   0007 buf_bgdata
     0x          Equ   000D buf_onscreen
     0x          Equ   0005 buf_prev_mapping_frame
     0x          Equ   000B buf_prev_x2_pixel
     0x          Equ   0009 buf_prev_x_pixel
     0x          Equ   000C buf_prev_y2_pixel
     0x          Equ   000A buf_prev_y_pixel
     0x          Equ   0000 buf_priority
     0x          Equ   0003 buf_priority_next_obj
     0x          Equ   0001 buf_priority_prev_obj
     1x          Label 405B coffs
     2x          Label 40A1 cook
     1x          Label 404F cpy
     1x          Label 4073 cpy2
     1x          Label 4051 cpyl
     1x          Label 41C0 current_game_mode_data
     1x          Label 4187 DKCO
     2x          Label 41A2 DKContinue
     1x          Label 41A6 DKDernierBloc
     0x          Label 4183 DKLecture
     1x          Equ   604F dk_destination
     2x          Equ   6049 dk_lecteur
     1x          Equ   604A dk_piste
     3x          Equ   604B dk_pisteL
     4x          Equ   604C dk_secteur
     0x          Equ   0004 draw_routine
     1x          Label 4081 endr
     0x          Equ   0009 erase_nb_cell
     0x          Equ   0007 erase_routine
     2x          Label 4000 exo2
     0x          Equ   001B ext_variables
     1x          Label 41BC fill
     1x          Label 4154 GameModeEngine
     1x          Label 4090 get1
     1x          Label 4092 get2
     1x          Label 4099 get3
     4x          Label 4088 getbits
     2x          Label 4086 getbix
     1x          Label 4174 GMEContinue
     0x          Label 4031 go
     0x          Equ   0038 gravity
     0x          Equ   0000 id
     2x          Label 4044 idx
     0x          Equ   0010 image_meta_size
     0x          Equ   000A image_x_offset
     0x          Equ   000E image_x_size
     0x          Equ   000C image_y_offset
     0x          Equ   000F image_y_size
     0x          Equ   000A mapping_frame
     2x          Label 4034 mloop
     1x          Equ   003B nb_dynamic_objects
     0x          Equ   0003 nb_level_objects
     0x          Equ   003D nb_objects
     0x          Equ   0008 nb_priority_levels
     1x          Equ   0002 nb_reserved_objects
     1x          Label 41AC NegOffset
     0x          Equ   0050 next_object
     1x          Label 400D nxt
     1x          Equ   0050 object_size
     1x          Label 4075 offs
     1x          Label 41B0 Page
     0x          Equ   0000 page_bckdraw_routine
     0x          Equ   0003 page_draw_routine
     0x          Equ   0006 page_erase_routine
     0x          Equ   0006 prev_anim
     0x          Equ   0003 priority
     1x          Label 403D rbl
     0x          Equ   0010 render_fixedoverlay_mask
     0x          Equ   0002 render_flags
     0x          Equ   0040 render_free2_mask
     0x          Equ   0080 render_free3_mask
     0x          Equ   0008 render_hide_mask
     0x          Equ   0004 render_playfieldcoord_mask
     0x          Equ   0020 render_todelete_mask
     0x          Equ   0001 render_xmirror_mask
     0x          Equ   0002 render_ymirror_mask
     1x          Label 401E roll
     0x          Equ   0018 routine
     0x          Equ   0019 routine_secondary
     0x          Equ   003B rsv_bgdata_0
     0x          Equ   0049 rsv_bgdata_1
     0x          Equ   0034 rsv_buffer_0
     0x          Equ   0042 rsv_buffer_1
     0x          Equ   002C rsv_curr_mapping_frame
     0x          Equ   0041 rsv_onscreen_0
     0x          Equ   004F rsv_onscreen_1
     0x          Equ   002A rsv_prev_anim
     0x          Equ   0039 rsv_prev_mapping_frame_0
     0x          Equ   0047 rsv_prev_mapping_frame_1
     0x          Equ   003F rsv_prev_x2_pixel_0
     0x          Equ   004D rsv_prev_x2_pixel_1
     0x          Equ   003D rsv_prev_x_pixel_0
     0x          Equ   004B rsv_prev_x_pixel_1
     0x          Equ   0040 rsv_prev_y2_pixel_0
     0x          Equ   004E rsv_prev_y2_pixel_1
     0x          Equ   003E rsv_prev_y_pixel_0
     0x          Equ   004C rsv_prev_y_pixel_1
     0x          Equ   0034 rsv_priority_0
     0x          Equ   0042 rsv_priority_1
     0x          Equ   0037 rsv_priority_next_obj_0
     0x          Equ   0045 rsv_priority_next_obj_1
     0x          Equ   0035 rsv_priority_prev_obj_0
     0x          Equ   0043 rsv_priority_prev_obj_1
     0x          Equ   0030 rsv_ptr_sub_object_draw
     0x          Equ   002E rsv_ptr_sub_object_erase
     0x          Equ   0001 rsv_render_checkrefresh_mask
     0x          Equ   0004 rsv_render_displaysprite_mask
     0x          Equ   0002 rsv_render_erasesprite_mask
     0x          Equ   0029 rsv_render_flags
     0x          Equ   0008 rsv_render_outofrange_mask
     0x          Equ   0032 rsv_x2_pixel
     0x          Equ   0033 rsv_y2_pixel
     1x          Label 4069 scof
     0x          Equ   00C8 screen_height
     0x          Equ   00A0 screen_width
     1x          Label 4017 skp
     0x          Equ   001A status
     0x          Equ   0004 status_bit2
     0x          Equ   0080 status_bit7
     0x          Equ   0002 status_inair
     0x          Equ   0010 status_jumpingafterrolling
     0x          Equ   0004 status_jumporroll
     0x          Equ   0020 status_mainchar_pushing
     0x          Equ   0008 status_mainchar_standing
     0x          Equ   0008 status_norgroundnorfall
     0x          Equ   0020 status_pushing
     0x          Equ   0040 status_sidekick_pushing
     0x          Equ   0010 status_sidekick_standing
     0x          Equ   0040 status_underwater
     0x          Equ   0001 status_x_orientation
     0x          Equ   0002 status_y_orientation
     0x          Equ   0001 subtype
     1x          Label 40AD tab1
     0x          Equ   0012 x_pixel
     0x          Equ   000C x_pos
     0x          Equ   000E x_sub
     0x          Equ   0014 x_vel
     0x          Equ   0013 y_pixel
     0x          Equ   000F y_pos
     0x          Equ   0011 y_sub
     0x          Equ   0016 y_vel
     0x          Equ   00FE _goBackNFrames
     0x          Equ   00FD _goToAnimation
     0x          Equ   00FC _nextRoutine
     0x          Equ   00FA _nextSubRoutine
     0x          Equ   00FF _resetAnim
     0x          Equ   00FB _resetAnimAndSubRoutine

