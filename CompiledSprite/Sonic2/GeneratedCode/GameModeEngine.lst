/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : .\Sonic2\GeneratedCode\GameModeEngine.asm
 * Fichier destination : .\Sonic2\GeneratedCode\TMP.BIN
 * Contenu :
 *     Main     0:GMENGINE.ASM 978
 *     Include  0:CONSTANT.ASM 4674
 *     Include  0:EXOMIZER.ASM 2111
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
     90                                   INCLUD CONSTANT
     91                           * --------------------------------------->>
     92                           * Constants
     93                           *
     94                           * Naming convention
     95                           * -----------------
     96                           * - lower case
     97                           * - underscore-separated names
     98                           *
     99                           * --------------------------------------->>
    100
    101                           * =======================================>>
    102                           * TO8 Registers
    103                           * =======================================>>
    104
    105                  6049     dk_lecteur                    equ $6049
    106                  604A     dk_piste                      equ $604A
    107                  604C     dk_secteur                    equ $604C
    108                  604F     dk_destination                equ $604F
    109
    110                           * =======================================>>
    111                           * Display Constants
    112                           * =======================================>>
    113
    114                  00A0     screen_width                  equ 160 ; s>>
    115                  00C8     screen_height                 equ 200 ; s>>
    116                  0008     nb_priority_levels            equ 8   ; n>>
    117
    118                           * =======================================>>
    119                           * Physics Constants
    120                           * =======================================>>
    121
    122                  0038     gravity                       equ $38 ; G>>
    123
    124                           * =======================================>>
    125                           * Animation Constants
    126                           * =======================================>>
    127
    128                  00FF     _resetAnim                    equ $FF
    129                  00FE     _goBackNFrames                equ $FE
    130                  00FD     _goToAnimation                equ $FD
    131                  00FC     _nextRoutine                  equ $FC
    132                  00FB     _resetAnimAndSubRoutine       equ $FB
    133                  00FA     _nextSubRoutine               equ $FA
    134
    135                           * =======================================>>
    136                           * Images Constants
    137                           * =======================================>>
    138
    139                  0000     page_bckdraw_routine          equ 0
    140                  0001     bckdraw_routine               equ 1
    141                  0003     page_draw_routine             equ 3
    142                  0004     draw_routine                  equ 4
    143                  0006     page_erase_routine            equ 6
    144                  0007     erase_routine                 equ 7
    145                  0009     erase_nb_cell                 equ 9
    146                  000A     image_x_offset                equ 10
    147                  000C     image_y_offset                equ 12
    148                  000E     image_x_size                  equ 14
    149                  000F     image_y_size                  equ 15 ; mu>>
    150                  0010     image_meta_size               equ 16 ; nu>>
    151
    152                           * =======================================>>
    153                           * Object Constants
    154                           * =======================================>>
    155
    156                  0002     nb_reserved_objects           equ 2
    157                  003B     nb_dynamic_objects            equ 59
    158                  0003     nb_level_objects              equ 3
    159                  003D     nb_objects                    equ (nb_res>>
    160
    161                           * --------------------------------------->>
    162                           * Object Status Table offsets
    163                           * --------------------------------------->>
    164
    165                  0050     object_size                   equ 80 ; th>>
    166                  0050     next_object                   equ object_>>
    167
    168                  0000     id                            equ 0      >>
    169                  0001     subtype                       equ 1      >>
    170                  0002     render_flags                  equ 2
    171
    172                           * --- render_flags bitfield variables --->>
    173                  0001     render_xmirror_mask           equ $01 ; (>>
    174                  0002     render_ymirror_mask           equ $02 ; (>>
    175                  0004     render_playfieldcoord_mask    equ $04 ; (>>
    176                  0008     render_hide_mask              equ $08 ; (>>
    177                  0010     render_fixedoverlay_mask      equ $10 ; (>>
    178                  0020     render_todelete_mask          equ $20 ; (>>
    179                  0040     render_free2_mask             equ $40 ; (>>
    180                  0080     render_free3_mask             equ $80 ; (>>
    181                            
    182                  0003     priority                      equ 3      >>
    183                  0004     anim                          equ 4  ; an>>
    184                  0006     prev_anim                     equ 6  ; an>>
    185                  0008     anim_frame                    equ 8      >>
    186                  0009     anim_frame_duration           equ 9      >>
    187                  000A     mapping_frame                 equ 10 ; an>>
    188                  000C     x_pos                         equ 12 ; an>>
    189                  000E     x_sub                         equ 14     >>
    190                  000F     y_pos                         equ 15 ; an>>
    191                  0011     y_sub                         equ 17     >>
    192                  0012     x_pixel                       equ 18     >>
    193                  0013     y_pixel                       equ 19     >>
    194                  0014     x_vel                         equ 20 ; an>>
    195                  0016     y_vel                         equ 22 ; an>>
    196                  0018     routine                       equ 24     >>
    197                  0019     routine_secondary             equ 25     >>
    198                  001A     status                        equ 26
    199
    200                           * --- status bitfield variables for objec>>
    201                  0001     status_x_orientation          equ   $01 ;>>
    202                  0002     status_y_orientation          equ   $02 ;>>
    203                  0004     status_bit2                   equ   $04 ;>>
    204                  0008     status_mainchar_standing      equ   $08 ;>>
    205                  0010     status_sidekick_standing      equ   $10 ;>>
    206                  0020     status_mainchar_pushing       equ   $20 ;>>
    207                  0040     status_sidekick_pushing       equ   $40 ;>>
    208                  0080     status_bit7                   equ   $80 ;>>
    209
    210                           * --- status bitfield variables for Main >>
    211                  0002     status_inair                  equ   $02 ;>>
    212                  0004     status_jumporroll             equ   $04 ;>>
    213                  0008     status_norgroundnorfall       equ   $08 ;>>
    214                  0010     status_jumpingafterrolling    equ   $10 ;>>
    215                  0020     status_pushing                equ   $20 ;>>
    216                  0040     status_underwater             equ   $40 ;>>
    217
    218                  001B     ext_variables                 equ 27 ; to>>
    219
    220                           * --------------------------------------->>
    221                           * reserved variables (engine)
    222
    223                  0029     rsv_render_flags              equ 41
    224
    225                           * --- rsv_render_flags bitfield variables>>
    226                  0001     rsv_render_checkrefresh_mask  equ $01 ; (>>
    227                  0002     rsv_render_erasesprite_mask   equ $02 ; (>>
    228                  0004     rsv_render_displaysprite_mask equ $04 ; (>>
    229                  0008     rsv_render_outofrange_mask    equ $08 ; (>>
    230
    231                  002A     rsv_prev_anim                 equ 42 ; an>>
    232                  002C     rsv_curr_mapping_frame        equ 44 ; an>>
    233                  002E     rsv_ptr_sub_object_erase      equ 46 ; an>>
    234                  0030     rsv_ptr_sub_object_draw       equ 48 ; an>>
    235                  0032     rsv_x2_pixel                  equ 50     >>
    236                  0033     rsv_y2_pixel                  equ 51     >>
    237
    238                           * --------------------------------------->>
    239                           * reserved variables (engine) - buffer sp>>
    240
    241                  0034     rsv_buffer_0                  equ 52 ; St>>
    242                  0034     rsv_priority_0                equ 52 ; in>>
    243                  0035     rsv_priority_prev_obj_0       equ 53 ; an>>
    244                  0037     rsv_priority_next_obj_0       equ 55 ; an>>
    245                  0039     rsv_prev_mapping_frame_0      equ 57 ; an>>
    246                  003B     rsv_bgdata_0                  equ 59 ; an>>
    247                  003D     rsv_prev_x_pixel_0            equ 61 ; pr>>
    248                  003E     rsv_prev_y_pixel_0            equ 62 ; pr>>
    249                  003F     rsv_prev_x2_pixel_0           equ 63 ; pr>>
    250                  0040     rsv_prev_y2_pixel_0           equ 64 ; pr>>
    251                  0041     rsv_onscreen_0                equ 65 ; ha>>
    252
    253                  0042     rsv_buffer_1                  equ 66 ; St>>
    254                  0042     rsv_priority_1                equ 66 ; in>>
    255                  0043     rsv_priority_prev_obj_1       equ 67 ; an>>
    256                  0045     rsv_priority_next_obj_1       equ 69 ; an>>
    257                  0047     rsv_prev_mapping_frame_1      equ 71 ; an>>
    258                  0049     rsv_bgdata_1                  equ 73 ; an>>
    259                  004B     rsv_prev_x_pixel_1            equ 75 ; pr>>
    260                  004C     rsv_prev_y_pixel_1            equ 76 ; pr>>
    261                  004D     rsv_prev_x2_pixel_1           equ 77 ; pr>>
    262                  004E     rsv_prev_y2_pixel_1           equ 78 ; pr>>
    263                  004F     rsv_onscreen_1                equ 79 ; ha>>
    264
    265                  0000     buf_priority                  equ 0  ; of>>
    266                  0001     buf_priority_prev_obj         equ 1  ;
    267                  0003     buf_priority_next_obj         equ 3  ;
    268                  0005     buf_prev_mapping_frame        equ 5  ;
    269                  0007     buf_bgdata                    equ 7  ;
    270                  0009     buf_prev_x_pixel              equ 9  ;
    271                  000A     buf_prev_y_pixel              equ 10 ;
    272                  000B     buf_prev_x2_pixel             equ 11 ;
    273                  000C     buf_prev_y2_pixel             equ 12 ;
    274                  000D     buf_onscreen                  equ 13 ;
    275
     22        4000                       org   $4000
     23                  40               setdp $40
    276                                   INCLUD EXOMIZER
    277                           * Exomizer2 algorithm, backward with litt>>
    278                           * by Fool-DupleX, PrehisTO and Sam from P>>
    279                           *
    280                           * This routine decrunches data compressed>>
    281                           * backward with litterals.
    282                           * This routine was developed and tested o>>
    283
    284                            
    285                           * The Exomizer2 decruncher starts here.
    286                           * call with a JSR exo2 or equivalent.
    287                           *
    288                           * Input    : U = pointer to end of compre>>
    289                           *            Y = pointer to end of output>>
    290                           * Output   : Y = pointer to first byte of>>
    291                           * Modifies : Y.
    292                           *
    293                           * All registers are preserved except Y.
    294                           * This code self modifies and cannot be r>>
    295                           * This code must be contained within a si>>
    296                           * be located anywhere in RAM.
    297
    298  5+10  4000 34   7F       exo2    pshs    u,y,x,dp,d,cc           *>>
    299  6     4002 1F   50               tfr     pc,d                    *>>
    300  6     4004 1F   8B               tfr     a,dp
    301  4+5   4006 31   8D 00A9          leay    biba,pcr                *>>
    302  2     400A 5F                    clrb
    303  4     400B D7   8D               stb     <bitbuf+1               *>>
    304
    305  2     400D 4F            nxt     clra
    306  5+2   400E 34   06               pshs    a,b
    307  2     4010 C5   0F               bitb    #$0f                    *>>
    308  3     4012 26   03               bne     skp
    309  3     4014 8E   0001             ldx     #$0001                  *>>
    310  2     4017 C6   04       skp     ldb     #4                      *>>
    311  7     4019 8D   6D               bsr     getbits
    312  4+2   401B E7   A0               stb     ,y+                     *>>
    313  2     401D 53                    comb                            *>>
    314  6+0   401E 69   E4       roll    rol     ,s
    315  2     4020 49                    rola
    316  2     4021 5C                    incb
    317  3     4022 2B   FA               bmi     roll
    318  4+0   4024 E6   E4               ldb     ,s
    319  5+3   4026 AF   A1               stx     ,y++                    *>>
    320  4+4   4028 30   8B               leax    d,x                     *>>
    321  5+2   402A 35   06               puls    a,b
    322  2     402C 5C                    incb
    323  2     402D C1   34               cmpb    #52                     *>>
    324  3     402F 26   DC               bne     nxt
    325                            
    326  6+1   4031 10AE 66       go      ldy     6,s                     *>>
    327  2     4034 C6   01       mloop   ldb     #1                      *>>
    328  7     4036 8D   50               bsr     getbits                 *>>
    329  3     4038 26   15               bne     cpy                     *>>
    330  4     403A D7   45               stb     <idx+1                  *>>
    331        403C 8C                    fcb     $8c                     *>>
    332  6     403D 0C   45       rbl     inc     <idx+1                  *>>
    333  2     403F 5C                    incb
    334  7     4040 8D   46               bsr     getbits
    335  3     4042 27   F9               beq     rbl
    336
    337  2     4044 C6   00       idx     ldb     #$00                    *>>
    338  2     4046 C1   10               cmpb    #$10                    *>>
    339  3     4048 27   37               beq     endr
    340  3     404A 25   0F               blo     coffs                   *>>
    341  2     404C 5A                    decb                            *>>
    342  7     404D 8D   39               bsr     getbits                 *>>
    343
    344  6     404F 1F   01       cpy     tfr     d,x                     *>>
    345  4+2   4051 A6   C2       cpyl    lda     ,-u
    346  4+2   4053 A7   A2               sta     ,-y
    347  4+1   4055 30   1F               leax    -1,x
    348  3     4057 26   F8               bne     cpyl
    349  3     4059 20   D9               bra     mloop
    350
    351  7     405B 8D   44       coffs   bsr     cook                    *>>
    352  5+2   405D 34   06               pshs    d
    353  4+1   405F 30   8C 4B            leax    <tab1,pcr
    354  5     4062 1083 0003             cmpd    #$03
    355  3     4066 24   01               bhs     scof
    356  3     4068 3A                    abx
    357  7     4069 8D   1B       scof    bsr     getbix
    358  4+1   406B EB   03               addb    3,x
    359  7     406D 8D   32               bsr     cook
    360  5     406F DD   77               std     <offs+2
    361  5+2   4071 35   10               puls    x
    362
    363  4+1   4073 31   3F       cpy2    leay    -1,y                    *>>
    364  4+4   4075 A6   A9 1234  offs    lda     $1234,y                 *>>
    365  4+0   4079 A7   A4               sta     ,y
    366  4+1   407B 30   1F               leax    -1,x
    367  3     407D 26   F4               bne     cpy2
    368  3     407F 20   B3               bra     mloop
    369
    370  6+1   4081 10AF 66       endr    sty     6,s                     *>>
    371  5+12  4084 35   FF               puls    cc,d,dp,x,y,u,pc        *>>
    372
    373                           * getbits  : get 0 to 16 bits from input >>
    374                           * Input    : B = bit count, U points to i>>
    375                           * Output   : D = bits
    376                           * Modifies : D,U.
    377
    378  4+0   4086 E6   84       getbix  ldb     ,x
    379  6+2   4088 6F   E2       getbits clr     ,-s                     *>>
    380  6+2   408A 6F   E2               clr     ,-s
    381  2     408C 86   12       bitbuf  lda     #$12                    *>>
    382  3     408E 20   09               bra     get3
    383  4+2   4090 A6   C2       get1    lda     ,-u
    384  2     4092 46            get2    rora
    385  3     4093 27   FB               beq     get1                    *>>
    386  6+1   4095 69   61               rol     1,s
    387  6+0   4097 69   E4               rol     ,s
    388  2     4099 5A            get3    decb
    389  3     409A 2A   F6               bpl     get2
    390  4     409C 97   8D               sta     <bitbuf+1               *>>
    391  5+3   409E EC   E1               ldd     ,s++
    392  5     40A0 39                    rts                             *>>
    393                            
    394                           * cook     : computes base[index] + readb>>
    395                           * Input    : B = index
    396                           * Output   : D = base[index] + readbits(&>>
    397                           * Modifies : D,X,U.
    398
    399  4+5   40A1 30   8D 000E  cook    leax    biba,pcr
    400  3     40A5 3A                    abx                             *>>
    401  2     40A6 58                    aslb                            *>>
    402  3     40A7 3A                    abx
    403  7     40A8 8D   DC               bsr     getbix                  *>>
    404  6+1   40AA E3   01               addd    1,x                     *>>
    405  5     40AC 39                    rts
    406
    407                           * Values used in the switch (index)
    408        40AD 04 02 04      tab1    fcb     4,2,4
    409        40B0 10 30 20              fcb     16,48,32
    410
    411        40B3               biba    rmb     156,0                   *>>
     25
     26  3     414F CE   41C0             ldu   #current_game_mode_data+7 *>>
     27  5+2   4152 34   40               pshs  u
     28                            
     29        4154               GameModeEngine
     30                  60               setdp $60
     31  2     4154 86   60               lda   #$60
     32  6     4156 1F   8B               tfr   a,dp                     * >>
     33                            
     34  4+2   4158 E6   C0               ldb   ,u+                      * >>
     35  2     415A 1D                    sex                            * >>
     36  2     415B 84   01               anda  #$01                     * >>
     37  2     415D C4   80               andb  #$80                     * >>
     38  4     415F 97   49               sta   <dk_lecteur
     39  2     4161 86   00               lda   #$00
     40  5     4163 DD   4A               std   <dk_piste
     41                            
     42  2     4165 C6   00               ldb   #$00                     * >>
     43  5     4167 DD   4F               std   <dk_destination
     44                            
     45  5+3   4169 EC   C1               ldd   ,u++
     46  3     416B 2A   07               bpl   GMEContinue              * >>
     47  7     416D 10FE 9FFF             lds   $9FFF                    * >>
     48  4     4171 7E   6100             jmp   $6100                    * >>
     49        4174               GMEContinue
     50  4     4174 97   4C               sta   <dk_secteur              * >>
     51  5     4176 F7   419E             stb   DKDernierBloc+2          * >>
     52                            
     53  5+4   4179 37   26               pulu  d,y                      * >>
     54  5     417B B7   41A4             sta   NegOffset+2              * >>
     55  5     417E F7   41A7             stb   Page+1
     56                            
     57  5+2   4181 34   40               pshs  u
     58
     59        4183               DKLecture
     60  2     4183 86   02               lda   #$02
     61  4     4185 97   48               sta   <$6048                   * >>
     62        4187               DKCO
     63  8     4187 BD   E82A             jsr   $E82A                    * >>
     64  6     418A 0C   4C               inc   <$604C                   * >>
     65  4     418C 96   4C               lda   <$604C                   * >>
     66  2     418E 81   10               cmpa  #$10                     * >>
     67  3     4190 23   06               bls   DKContinue               * >>
     68  2     4192 86   01               lda   #$01                     * >>
     69  4     4194 97   4C               sta   <$604C                   * >>
     70  6     4196 0C   4B               inc   <$604B                   * >>
     71        4198               DKContinue
     72  6     4198 0C   4F               inc   <$604F                   * >>
     73  5     419A DE   4F               ldu   <$604F                   * >>
     74        419C               DKDernierBloc
     75  5     419C 1183 0000             cmpu  #0                       * >>
     76  3     41A0 23   E5               bls   DKCO                     * >>
     77        41A2               NegOffset
     78  4+4   41A2 33   C9 FF00          leau  $FF00,u                  * >>
     79        41A6               Page
     80  2     41A6 86   00               lda   #0                       * >>
     81  5     41A8 B7   E7E5             sta   $E7E5                    * >>
     82  8     41AB BD   4000             jsr   exo2                     * >>
     83  5+2   41AE 35   40               puls  u
     84  3     41B0 20   A2               bra   GameModeEngine
     85        41B2               fill
     86        41B2                       rmb   7-((fill-exo2)%7),0      * >>
     87                            
     88        41B9               current_game_mode_data *@globals
     89

000000 Total Errors

000152 Total Symbols
     0x          Equ   0004 anim
     0x          Equ   0008 anim_frame
     0x          Equ   0009 anim_frame_duration
     0x          Equ   0001 bckdraw_routine
     2x          Label 40B3 biba
     2x          Label 408C bitbuf
     0x          Equ   0007 buf_bgdata
     0x          Equ   000D buf_onscreen
     0x          Equ   0005 buf_prev_mapping_frame
     0x          Equ   000B buf_prev_x2_pixel
     0x          Equ   0009 buf_prev_x_pixel
     0x          Equ   000C buf_prev_y2_pixel
     0x          Equ   000A buf_prev_y_pixel
     0x          Equ   0000 buf_priority
     0x          Equ   0003 buf_priority_next_obj
     0x          Equ   0001 buf_priority_prev_obj
     1x          Label 405B coffs
     2x          Label 40A1 cook
     1x          Label 404F cpy
     1x          Label 4073 cpy2
     1x          Label 4051 cpyl
     1x          Label 41B9 current_game_mode_data
     1x          Label 4187 DKCO
     1x          Label 4198 DKContinue
     1x          Label 419C DKDernierBloc
     0x          Label 4183 DKLecture
     1x          Equ   604F dk_destination
     1x          Equ   6049 dk_lecteur
     1x          Equ   604A dk_piste
     1x          Equ   604C dk_secteur
     0x          Equ   0004 draw_routine
     1x          Label 4081 endr
     0x          Equ   0009 erase_nb_cell
     0x          Equ   0007 erase_routine
     2x          Label 4000 exo2
     0x          Equ   001B ext_variables
     1x          Label 41B2 fill
     1x          Label 4154 GameModeEngine
     1x          Label 4090 get1
     1x          Label 4092 get2
     1x          Label 4099 get3
     4x          Label 4088 getbits
     2x          Label 4086 getbix
     1x          Label 4174 GMEContinue
     0x          Label 4031 go
     0x          Equ   0038 gravity
     0x          Equ   0000 id
     2x          Label 4044 idx
     0x          Equ   0010 image_meta_size
     0x          Equ   000A image_x_offset
     0x          Equ   000E image_x_size
     0x          Equ   000C image_y_offset
     0x          Equ   000F image_y_size
     0x          Equ   000A mapping_frame
     2x          Label 4034 mloop
     1x          Equ   003B nb_dynamic_objects
     0x          Equ   0003 nb_level_objects
     0x          Equ   003D nb_objects
     0x          Equ   0008 nb_priority_levels
     1x          Equ   0002 nb_reserved_objects
     1x          Label 41A2 NegOffset
     0x          Equ   0050 next_object
     1x          Label 400D nxt
     1x          Equ   0050 object_size
     1x          Label 4075 offs
     1x          Label 41A6 Page
     0x          Equ   0000 page_bckdraw_routine
     0x          Equ   0003 page_draw_routine
     0x          Equ   0006 page_erase_routine
     0x          Equ   0006 prev_anim
     0x          Equ   0003 priority
     1x          Label 403D rbl
     0x          Equ   0010 render_fixedoverlay_mask
     0x          Equ   0002 render_flags
     0x          Equ   0040 render_free2_mask
     0x          Equ   0080 render_free3_mask
     0x          Equ   0008 render_hide_mask
     0x          Equ   0004 render_playfieldcoord_mask
     0x          Equ   0020 render_todelete_mask
     0x          Equ   0001 render_xmirror_mask
     0x          Equ   0002 render_ymirror_mask
     1x          Label 401E roll
     0x          Equ   0018 routine
     0x          Equ   0019 routine_secondary
     0x          Equ   003B rsv_bgdata_0
     0x          Equ   0049 rsv_bgdata_1
     0x          Equ   0034 rsv_buffer_0
     0x          Equ   0042 rsv_buffer_1
     0x          Equ   002C rsv_curr_mapping_frame
     0x          Equ   0041 rsv_onscreen_0
     0x          Equ   004F rsv_onscreen_1
     0x          Equ   002A rsv_prev_anim
     0x          Equ   0039 rsv_prev_mapping_frame_0
     0x          Equ   0047 rsv_prev_mapping_frame_1
     0x          Equ   003F rsv_prev_x2_pixel_0
     0x          Equ   004D rsv_prev_x2_pixel_1
     0x          Equ   003D rsv_prev_x_pixel_0
     0x          Equ   004B rsv_prev_x_pixel_1
     0x          Equ   0040 rsv_prev_y2_pixel_0
     0x          Equ   004E rsv_prev_y2_pixel_1
     0x          Equ   003E rsv_prev_y_pixel_0
     0x          Equ   004C rsv_prev_y_pixel_1
     0x          Equ   0034 rsv_priority_0
     0x          Equ   0042 rsv_priority_1
     0x          Equ   0037 rsv_priority_next_obj_0
     0x          Equ   0045 rsv_priority_next_obj_1
     0x          Equ   0035 rsv_priority_prev_obj_0
     0x          Equ   0043 rsv_priority_prev_obj_1
     0x          Equ   0030 rsv_ptr_sub_object_draw
     0x          Equ   002E rsv_ptr_sub_object_erase
     0x          Equ   0001 rsv_render_checkrefresh_mask
     0x          Equ   0004 rsv_render_displaysprite_mask
     0x          Equ   0002 rsv_render_erasesprite_mask
     0x          Equ   0029 rsv_render_flags
     0x          Equ   0008 rsv_render_outofrange_mask
     0x          Equ   0032 rsv_x2_pixel
     0x          Equ   0033 rsv_y2_pixel
     1x          Label 4069 scof
     0x          Equ   00C8 screen_height
     0x          Equ   00A0 screen_width
     1x          Label 4017 skp
     0x          Equ   001A status
     0x          Equ   0004 status_bit2
     0x          Equ   0080 status_bit7
     0x          Equ   0002 status_inair
     0x          Equ   0010 status_jumpingafterrolling
     0x          Equ   0004 status_jumporroll
     0x          Equ   0020 status_mainchar_pushing
     0x          Equ   0008 status_mainchar_standing
     0x          Equ   0008 status_norgroundnorfall
     0x          Equ   0020 status_pushing
     0x          Equ   0040 status_sidekick_pushing
     0x          Equ   0010 status_sidekick_standing
     0x          Equ   0040 status_underwater
     0x          Equ   0001 status_x_orientation
     0x          Equ   0002 status_y_orientation
     0x          Equ   0001 subtype
     1x          Label 40AD tab1
     0x          Equ   0012 x_pixel
     0x          Equ   000C x_pos
     0x          Equ   000E x_sub
     0x          Equ   0014 x_vel
     0x          Equ   0013 y_pixel
     0x          Equ   000F y_pos
     0x          Equ   0011 y_sub
     0x          Equ   0016 y_vel
     0x          Equ   00FE _goBackNFrames
     0x          Equ   00FD _goToAnimation
     0x          Equ   00FC _nextRoutine
     0x          Equ   00FA _nextSubRoutine
     0x          Equ   00FF _resetAnim
     0x          Equ   00FB _resetAnimAndSubRoutine

