/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : .\Sonic2\GeneratedCode\GameModeEngine.asm
 * Fichier destination : .\Sonic2\GeneratedCode\TMP.BIN
 * Contenu :
 *     Main     0:GMENGINE.ASM 953
 *     Include  0:CONSTANT.ASM 2436
 *     Include  0:EXOMIZER.ASM 2111
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
     86                                   INCLUD CONSTANT
     87                           * =======================================>>
     88                           * TO8 Registers
     89                           * =======================================>>
     90
     91                  6049     dk_lecteur           equ   $6049
     92                  604A     dk_piste             equ   $604A
     93                  604C     dk_secteur           equ   $604C
     94                  604F     dk_destination       equ   $604F
     95
     96                           * =======================================>>
     97                           * Physics Constants
     98                           * =======================================>>
     99
    100                  0038     gravity                       equ $38 ; G>>
    101
    102                           * =======================================>>
    103                           * Object Constants
    104                           * =======================================>>
    105
    106                  0002     number_of_reserved_objects       equ 2
    107                  002D     number_of_dynamic_objects        equ 45
    108                  0003     number_of_level_objects          equ 3
    109
    110                           * --------------------------------------->>
    111                           * Object Status Table offsets
    112                           * --------------------------------------->>
    113
    114                  001F     object_size                   equ $1F ; t>>
    115                  001F     next_object                   equ object_>>
    116                            
    117                  0000     id                            equ $00 ; o>>
    118                  0002     render_flags                  equ $02 ; b>>
    119                  0003     x_pos                         equ $03 ; a>>
    120                  0005     x_sub                         equ $05 ; s>>
    121                  0005     y_pos                         equ $05 ; a>>
    122                  0007     y_sub                         equ $07 ; s>>
    123                  0003     x_pixel                       equ x_pos
    124                  0005     y_pixel                       equ x_pos+2>>
    125                  0008     priority                      equ $08 ; $>>
    126                  000A     width_pixels                  equ $0A
    127                  000B     x_vel                         equ $0B ; a>>
    128                  000D     y_vel                         equ $0D ; a>>
    129                  000F     y_radius                      equ $0F ; c>>
    130                  0010     x_radius                      equ $10 ; c>>
    131                  0012     anim                          equ $12 ; e>>
    132                  0013     prev_anim                     equ $13 ; e>>
    133                  0014     anim_frame_duration           equ $14 ; d>>
    134                  0011     anim_frame                    equ $11 ; i>>
    135                  000B     mapping_frame                 equ $0B ; $>>
    136                  0015     status                        equ $15 ; n>>
    137                  0016     routine                       equ $16
    138                  0017     routine_secondary             equ $17
    139                  0018     objoff_01                     equ $18 ; v>>
    140                  0019     objoff_02                     equ $19
    141                  001A     objoff_03                     equ $1A
    142                  001B     objoff_04                     equ $1B
    143                  001C     objoff_05                     equ $1C
    144                  001D     collision_flags               equ $1D
    145                  001E     subtype                       equ $1E
    146
    147                           * --------------------------------------->>
    148                           * render_flags bitfield variables
    149                  0001     render_xmirror_mask           equ $01 ; b>>
    150                  0002     render_ymirror_mask           equ $02 ; b>>
    151                  0004     render_coordinate1_mask       equ $04 ; b>>
    152                  0008     render_coordinate2_mask       equ $08 ;
    153                  0010     render_ycheckonscreen_mask    equ $10 ; b>>
    154                  0020     render_staticmappings_mask    equ $20 ; b>>
    155                  0040     render_subobjects_mask        equ $40 ; b>>
    156                  0080     render_onscreen_mask          equ $80 ; b>>
    157
    158                           * --------------------------------------->>
    159                           * status bitfield variables
    160                  0001     status_leftfacing_mask        equ $01 ; b>>
    161                  0002     status_inair_mask             equ $02 ; b>>
    162                  0004     status_spinning_mask          equ $04 ; b>>
    163                  0008     status_onobject_mask          equ $08 ; b>>
    164                  0010     status_rolljumping_mask       equ $10 ; b>>
    165                  0020     status_pushing_mask           equ $20 ; b>>
    166                  0040     status_underwater_mask        equ $40 ; b>>
    167                  0080     status_tobedeleted_mask       equ $80 ; b>>
    168
    169                           * --------------------------------------->>
    170                           * status_secondary bitfield variables
    171                  0001     status_sec_hasShield_mask     equ $01 ; b>>
    172                  0002     status_sec_isInvincible_mask  equ $02 ; b>>
    173                  0004     status_sec_hasSpeedShoes_mask equ $04 ; b>>
    174                  0008     status_sec_3_mask             equ $08 ; b>>
    175                  0010     status_sec_4_mask             equ $10 ; b>>
    176                  0020     status_sec_5_mask             equ $20 ; b>>
    177                  0040     status_sec_6_mask             equ $40 ; b>>
    178                  0080     status_sec_isSliding_mask     equ $80 ; b>>
    179
     19        4000                       org $4000
     20                  40               setdp $40
    180                                   INCLUD EXOMIZER
    181                           * Exomizer2 algorithm, backward with litt>>
    182                           * by Fool-DupleX, PrehisTO and Sam from P>>
    183                           *
    184                           * This routine decrunches data compressed>>
    185                           * backward with litterals.
    186                           * This routine was developed and tested o>>
    187
    188                            
    189                           * The Exomizer2 decruncher starts here.
    190                           * call with a JSR exo2 or equivalent.
    191                           *
    192                           * Input    : U = pointer to end of compre>>
    193                           *            Y = pointer to end of output>>
    194                           * Output   : Y = pointer to first byte of>>
    195                           * Modifies : Y.
    196                           *
    197                           * All registers are preserved except Y.
    198                           * This code self modifies and cannot be r>>
    199                           * This code must be contained within a si>>
    200                           * be located anywhere in RAM.
    201
    202  5+10  4000 34   7F       exo2    pshs    u,y,x,dp,d,cc           *>>
    203  6     4002 1F   50               tfr     pc,d                    *>>
    204  6     4004 1F   8B               tfr     a,dp
    205  4+5   4006 31   8D 00A9          leay    biba,pcr                *>>
    206  2     400A 5F                    clrb
    207  4     400B D7   8D               stb     <bitbuf+1               *>>
    208
    209  2     400D 4F            nxt     clra
    210  5+2   400E 34   06               pshs    a,b
    211  2     4010 C5   0F               bitb    #$0f                    *>>
    212  3     4012 26   03               bne     skp
    213  3     4014 8E   0001             ldx     #$0001                  *>>
    214  2     4017 C6   04       skp     ldb     #4                      *>>
    215  7     4019 8D   6D               bsr     getbits
    216  4+2   401B E7   A0               stb     ,y+                     *>>
    217  2     401D 53                    comb                            *>>
    218  6+0   401E 69   E4       roll    rol     ,s
    219  2     4020 49                    rola
    220  2     4021 5C                    incb
    221  3     4022 2B   FA               bmi     roll
    222  4+0   4024 E6   E4               ldb     ,s
    223  5+3   4026 AF   A1               stx     ,y++                    *>>
    224  4+4   4028 30   8B               leax    d,x                     *>>
    225  5+2   402A 35   06               puls    a,b
    226  2     402C 5C                    incb
    227  2     402D C1   34               cmpb    #52                     *>>
    228  3     402F 26   DC               bne     nxt
    229                            
    230  6+1   4031 10AE 66       go      ldy     6,s                     *>>
    231  2     4034 C6   01       mloop   ldb     #1                      *>>
    232  7     4036 8D   50               bsr     getbits                 *>>
    233  3     4038 26   15               bne     cpy                     *>>
    234  4     403A D7   45               stb     <idx+1                  *>>
    235        403C 8C                    fcb     $8c                     *>>
    236  6     403D 0C   45       rbl     inc     <idx+1                  *>>
    237  2     403F 5C                    incb
    238  7     4040 8D   46               bsr     getbits
    239  3     4042 27   F9               beq     rbl
    240
    241  2     4044 C6   00       idx     ldb     #$00                    *>>
    242  2     4046 C1   10               cmpb    #$10                    *>>
    243  3     4048 27   37               beq     endr
    244  3     404A 25   0F               blo     coffs                   *>>
    245  2     404C 5A                    decb                            *>>
    246  7     404D 8D   39               bsr     getbits                 *>>
    247
    248  6     404F 1F   01       cpy     tfr     d,x                     *>>
    249  4+2   4051 A6   C2       cpyl    lda     ,-u
    250  4+2   4053 A7   A2               sta     ,-y
    251  4+1   4055 30   1F               leax    -1,x
    252  3     4057 26   F8               bne     cpyl
    253  3     4059 20   D9               bra     mloop
    254
    255  7     405B 8D   44       coffs   bsr     cook                    *>>
    256  5+2   405D 34   06               pshs    d
    257  4+1   405F 30   8C 4B            leax    <tab1,pcr
    258  5     4062 1083 0003             cmpd    #$03
    259  3     4066 24   01               bhs     scof
    260  3     4068 3A                    abx
    261  7     4069 8D   1B       scof    bsr     getbix
    262  4+1   406B EB   03               addb    3,x
    263  7     406D 8D   32               bsr     cook
    264  5     406F DD   77               std     <offs+2
    265  5+2   4071 35   10               puls    x
    266
    267  4+1   4073 31   3F       cpy2    leay    -1,y                    *>>
    268  4+4   4075 A6   A9 1234  offs    lda     $1234,y                 *>>
    269  4+0   4079 A7   A4               sta     ,y
    270  4+1   407B 30   1F               leax    -1,x
    271  3     407D 26   F4               bne     cpy2
    272  3     407F 20   B3               bra     mloop
    273
    274  6+1   4081 10AF 66       endr    sty     6,s                     *>>
    275  5+12  4084 35   FF               puls    cc,d,dp,x,y,u,pc        *>>
    276
    277                           * getbits  : get 0 to 16 bits from input >>
    278                           * Input    : B = bit count, U points to i>>
    279                           * Output   : D = bits
    280                           * Modifies : D,U.
    281
    282  4+0   4086 E6   84       getbix  ldb     ,x
    283  6+2   4088 6F   E2       getbits clr     ,-s                     *>>
    284  6+2   408A 6F   E2               clr     ,-s
    285  2     408C 86   12       bitbuf  lda     #$12                    *>>
    286  3     408E 20   09               bra     get3
    287  4+2   4090 A6   C2       get1    lda     ,-u
    288  2     4092 46            get2    rora
    289  3     4093 27   FB               beq     get1                    *>>
    290  6+1   4095 69   61               rol     1,s
    291  6+0   4097 69   E4               rol     ,s
    292  2     4099 5A            get3    decb
    293  3     409A 2A   F6               bpl     get2
    294  4     409C 97   8D               sta     <bitbuf+1               *>>
    295  5+3   409E EC   E1               ldd     ,s++
    296  5     40A0 39                    rts                             *>>
    297                            
    298                           * cook     : computes base[index] + readb>>
    299                           * Input    : B = index
    300                           * Output   : D = base[index] + readbits(&>>
    301                           * Modifies : D,X,U.
    302
    303  4+5   40A1 30   8D 000E  cook    leax    biba,pcr
    304  3     40A5 3A                    abx                             *>>
    305  2     40A6 58                    aslb                            *>>
    306  3     40A7 3A                    abx
    307  7     40A8 8D   DC               bsr     getbix                  *>>
    308  6+1   40AA E3   01               addd    1,x                     *>>
    309  5     40AC 39                    rts
    310
    311                           * Values used in the switch (index)
    312        40AD 04 02 04      tab1    fcb     4,2,4
    313        40B0 10 30 20              fcb     16,48,32
    314
    315        40B3               biba    rmb     156,0                   *>>
     22
     23  3     414F CE   41B2             ldu   #current_game_mode_data
     24  5+2   4152 34   40               pshs  u
     25                            
     26        4154               GameModeEngine
     27                  60               setdp $60
     28  2     4154 86   60               lda   #$60
     29  6     4156 1F   8B               tfr   a,dp                     * >>
     30                            
     31  4+2   4158 E6   C0               ldb   ,u+                      * >>
     32  2     415A 1D                    sex                            * >>
     33  2     415B 84   01               anda  #$01                     * >>
     34  2     415D C4   80               andb  #$80                     * >>
     35  4     415F 97   49               sta   <dk_lecteur
     36  2     4161 86   00               lda   #$00
     37  5     4163 DD   4A               std   <dk_piste
     38                            
     39  2     4165 C6   00               ldb   #$00                     * >>
     40  5     4167 DD   4F               std   <dk_destination
     41                            
     42  5+3   4169 EC   C1               ldd   ,u++
     43  3     416B 2A   02               bpl   GMEContinue              * >>
     44  3     416D 0E   00               jmp   $6000                    * >>
     45        416F               GMEContinue
     46  4     416F 97   4C               sta   <dk_secteur              * >>
     47  5     4171 F7   4199             stb   DKDernierBloc+2          * >>
     48                            
     49  5+4   4174 37   26               pulu  d,y                      * >>
     50  5     4176 B7   419F             sta   NegOffset+2              * >>
     51  5     4179 F7   41A2             stb   Page+1
     52                            
     53  5+2   417C 34   40               pshs  u
     54
     55        417E               DKLecture
     56  2     417E 86   02               lda   #$02
     57  4     4180 97   48               sta   <$6048                   * >>
     58        4182               DKCO
     59  8     4182 BD   E82A             jsr   $E82A                    * >>
     60  6     4185 0C   4C               inc   <$604C                   * >>
     61  4     4187 96   4C               lda   <$604C                   * >>
     62  2     4189 81   10               cmpa  #$10                     * >>
     63  3     418B 23   06               bls   DKContinue               * >>
     64  2     418D 86   01               lda   #$01                     * >>
     65  4     418F 97   4C               sta   <$604C                   * >>
     66  6     4191 0C   4B               inc   <$604B                   * >>
     67        4193               DKContinue
     68  6     4193 0C   4F               inc   <$604F                   * >>
     69  5     4195 DE   4F               ldu   <$604F                   * >>
     70        4197               DKDernierBloc
     71  5     4197 1183 0000             cmpu  #0                       * >>
     72  3     419B 23   E5               bls   DKCO                     * >>
     73        419D               NegOffset
     74  4+4   419D 33   C9 FF00          leau  $FF00,u                  * >>
     75        41A1               Page
     76  2     41A1 86   00               lda   #0                       * >>
     77  5     41A3 B7   E7E5             sta   $E7E5                    * >>
     78  8     41A6 BD   4000             jsr   exo2                     * >>
     79  5+2   41A9 35   40               puls  u
     80  3     41AB 20   A7               bra   GameModeEngine
     81        41AD               fill
     82        41AD                       rmb   7-((fill-exo2)%7),0      * >>
     83                            
     84        41B2               current_game_mode_data                 * >>
     85

000000 Total Errors

000097 Total Symbols
     0x          Equ   0012 anim
     0x          Equ   0011 anim_frame
     0x          Equ   0014 anim_frame_duration
     2x          Label 40B3 biba
     2x          Label 408C bitbuf
     1x          Label 405B coffs
     0x          Equ   001D collision_flags
     2x          Label 40A1 cook
     1x          Label 404F cpy
     1x          Label 4073 cpy2
     1x          Label 4051 cpyl
     1x          Label 41B2 current_game_mode_data
     1x          Label 4182 DKCO
     1x          Label 4193 DKContinue
     1x          Label 4197 DKDernierBloc
     0x          Label 417E DKLecture
     1x          Equ   604F dk_destination
     1x          Equ   6049 dk_lecteur
     1x          Equ   604A dk_piste
     1x          Equ   604C dk_secteur
     1x          Label 4081 endr
     2x          Label 4000 exo2
     1x          Label 41AD fill
     1x          Label 4154 GameModeEngine
     1x          Label 4090 get1
     1x          Label 4092 get2
     1x          Label 4099 get3
     4x          Label 4088 getbits
     2x          Label 4086 getbix
     1x          Label 416F GMEContinue
     0x          Label 4031 go
     0x          Equ   0038 gravity
     0x          Equ   0000 id
     2x          Label 4044 idx
     0x          Equ   000B mapping_frame
     2x          Label 4034 mloop
     1x          Label 419D NegOffset
     0x          Equ   001F next_object
     0x          Equ   002D number_of_dynamic_objects
     0x          Equ   0003 number_of_level_objects
     0x          Equ   0002 number_of_reserved_objects
     1x          Label 400D nxt
     1x          Equ   001F object_size
     0x          Equ   0018 objoff_01
     0x          Equ   0019 objoff_02
     0x          Equ   001A objoff_03
     0x          Equ   001B objoff_04
     0x          Equ   001C objoff_05
     1x          Label 4075 offs
     1x          Label 41A1 Page
     0x          Equ   0013 prev_anim
     0x          Equ   0008 priority
     1x          Label 403D rbl
     0x          Equ   0004 render_coordinate1_mask
     0x          Equ   0008 render_coordinate2_mask
     0x          Equ   0002 render_flags
     0x          Equ   0080 render_onscreen_mask
     0x          Equ   0020 render_staticmappings_mask
     0x          Equ   0040 render_subobjects_mask
     0x          Equ   0001 render_xmirror_mask
     0x          Equ   0010 render_ycheckonscreen_mask
     0x          Equ   0002 render_ymirror_mask
     1x          Label 401E roll
     0x          Equ   0016 routine
     0x          Equ   0017 routine_secondary
     1x          Label 4069 scof
     1x          Label 4017 skp
     0x          Equ   0015 status
     0x          Equ   0002 status_inair_mask
     0x          Equ   0001 status_leftfacing_mask
     0x          Equ   0008 status_onobject_mask
     0x          Equ   0020 status_pushing_mask
     0x          Equ   0010 status_rolljumping_mask
     0x          Equ   0008 status_sec_3_mask
     0x          Equ   0010 status_sec_4_mask
     0x          Equ   0020 status_sec_5_mask
     0x          Equ   0040 status_sec_6_mask
     0x          Equ   0001 status_sec_hasShield_mask
     0x          Equ   0004 status_sec_hasSpeedShoes_mask
     0x          Equ   0002 status_sec_isInvincible_mask
     0x          Equ   0080 status_sec_isSliding_mask
     0x          Equ   0004 status_spinning_mask
     0x          Equ   0080 status_tobedeleted_mask
     0x          Equ   0040 status_underwater_mask
     0x          Equ   001E subtype
     1x          Label 40AD tab1
     0x          Equ   000A width_pixels
     0x          Equ   0003 x_pixel
     2x          Equ   0003 x_pos
     0x          Equ   0010 x_radius
     0x          Equ   0005 x_sub
     0x          Equ   000B x_vel
     0x          Equ   0005 y_pixel
     0x          Equ   0005 y_pos
     0x          Equ   000F y_radius
     0x          Equ   0007 y_sub
     0x          Equ   000D y_vel

