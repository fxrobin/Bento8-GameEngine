/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : TO-ale.ass
 * Fichier destination : TO-ale.BIN
 * Contenu :
 *     Main     0:TO-ale.ASM   6653
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
      2                           ***************************************
      3                           * Une araignee loufoque d'ecran (ALE)
      4                           * du genre TO 8pattes^w bits.
      5                           * ==> TO-ALE <== (se prononce toile)
      6                           *
      7                           * Elle se balade a l'ecran avec un fil
      8                           * a la patte et laisse trainer de
      9                           * jolies toiles un peu partout.
     10                           *
     11                           * Sortie par ctrl-c.
     12                           *
     13                           * Compilation avec:
     14                           * - c6809 (-c -am -oOP)
     15                           *   http://www.pulsdemos.com/c6809.html
     16                           * - macro assembler 3.6 (A/IM)
     17                           *   http://tinyurl.com/btqz57a
     18                           *
     19                           * Samuel Devulder Mars 2012
     20                           ***************************************
     21        6300                      org    $6300
     22
     23                  603D     PLOTX  equ    $603D
     24                  603F     PLOTY  equ    $603F
     25                  6019     STATUS equ    $6019
     26
     27                           * profondeur maxi historique
     28                  0014     HISTORY       equ    20
     29
     30                           ***************************************
     31                           * boucle:
     32                           *       REPEAT
     33                           *       ....
     34                           *       WHILE   condition
     35                           ***************************************
     36                           REPEAT macro
     37                           loop   set    *
     38                                  endm
     39                           WHILE  macro
     40                                  b\0    loop
     41                                  endm
     42                            
     43                           ***************************************
     44                           * Filtrage:
     45                           *       FILTER  <lbl>
     46                           *
     47                           * Defini:
     48                           *      F<lbl> = valeur filtree sur 2
     49                           *                octets
     50                           * Calcule:
     51                           *       F<lbl> = (3*F<lbl> + D)/4
     52                           ***************************************
     53                           FILTR  macro
     54                                  jsr    <filtr
     55                           F\0    fdb    0
     56                                  endm
     57
     58                           ***************************************
     59                           * Mouvement physique:
     60                           *       PHYS  symbol,val,max
     61                           *
     62                           * Defini:
     63                           *      P<symbol> = position (2 octet)
     64                           *      V<symbol> = vitesse (1 octet)
     65                           *      A<symbol> = accel. (1 octet)
     66                           *
     67                           * Calcule:
     68                           * Mise a jour la position en fonction
     69                           * de la vitesse et de l'acceleration.
     70                           * Si la position depasse max, alors
     71                           * l'acceleration est stopee et la vit.
     72                           * est inversee (et doublee).
     73                           *
     74                           * La vitesse et l'acceleration sont
     75                           * definies au format signe 5.3 avec
     76                           * saturation pour la vitesse.
     77                           ***************************************
     78                           PHYS   macro
     79                                  jsr    <phys
     80                           V\0    fcb    0
     81                           A\0    fcb    0
     82                           P\0    fdb    \1,\2
     83                                  endm
     84                            
     85                           ***************************************
     86                           * Generateur aleatoire:
     87                           *
     88                           *      RND    offset,max
     89                           *
     90                           * Calcule:
     91                           * A = nb aleatoire entre offset et
     92                           *     offset+max-1.
     93                           ***************************************
     94                           RND    macro
     95                                  jsr    <rnd
     96                                  fcb    \0,\1
     97                                  endm
     98
     99                           ***************************************
    100                           * Point d'entree
    101                           ***************************************
    102                  63              setdp  *<-8
    103  5+9   6300 34   7E       ini    pshs   d,x,y,u,dp
    104  2     6302 C6   63              ldb    #*<-8
    105  6     6304 1F   9B              tfr    b,dp
    106                           ***************************************
    107                           * initialisation du generateur rnd
    108                           ***************************************
    109  6     6306 BE   E7C6            ldx    $E7C6  ! timer
     37                  6309     loop   set    *
     95  7     6309 9D   C6              jsr    <rnd
     96        630B 00 00                fcb    0,0
    112  4+1   630D 30   1F              leax   -1,x
     40  3     630F 26   F8              bne    loop
    114                           ***************************************
    115                           * nouveau dessin
    116                           ***************************************
    117  6     6311 0F   64       start  clr    <PV    ! reset traj
    118  5     6313 9E   7E              ldx    <PX    ! init FX,FY
    119  5     6315 9F   8E              stx    <FX
    120  6     6317 109E 86              ldy    <PY
    121  6     631A 109F 97              sty    <FY
     95  7     631D 9D   C6              jsr    <rnd
     96        631F 08 0C                fcb    8,HISTORY-8
    123  3     6321 CE   644C            ldu    #HFIN  ! init histo.
     37                  6324     loop   set    *
    125  5+4   6324 36   30              pshu   x,y
    126  2     6326 4A                   deca
     40  3     6327 26   FB              bne    loop
    128  5     6329 DF   AE              stu    <HDEB
    129  5     632B DF   9D              stu    <HPTR
    130                           ***************************************
    131                           * affichage dessin
    132                           ***************************************
     95  7     632D 9D   C6              jsr    <rnd
     96        632F 32 C8                fcb    50,200
    134  7     6331 9D   52              jsr    <cls   ! eff. ecran
     37                  6333     loop   set    *
    136  7     6333 9D   61              jsr    <draw
    137  2     6335 4A                   deca
     40  3     6336 26   FB              bne    loop
    139                           ***************************************
    140                           * fin trace combine a l'attente
    141                           ***************************************
    142  2     6338 5F                   clrb          ! fin trace
    143  5     6339 DD   7C              std    <VX    ! zero vitesse
    144  5     633B DD   84              std    <VY    ! zero accel
    145  2     633D 86   14       wait   lda    #HISTORY
    146  4     633F 97   64              sta    <PV
     37                  6341     loop   set    *
    148  7     6341 9D   61              jsr    <draw
    149  2     6343 4A                   deca
     40  3     6344 26   FB              bne    loop
    151  2     6346 5A                   decb
    152  3     6347 26   F4              bne    wait
    153                           ***************************************
    154                           * lecture clavier, detection BREAK.
    155                           ***************************************
    156  7+1   6349 AD   46              jsr    6,u    ! GETC
    157  2     634B C1   03              cmpb   #3     ! ctrl-c
    158  3     634D 26   C2              bne    start
    159  5+9   634F 35   7E              puls   d,x,y,u,dp
    160                           ***************************************
    161                           * SWI est transparent pour le basic.
    162                           * On passe donc sur le cls si on est
    163                           * lance depuis le basic. Sinon sous
    164                           * Assembler on s'arrete la.
    165                           ***************************************
    166  19    6351 3F                   swi           ! rts
    167                           ***************************************
    168                           * Effacement ecran + forme seule +
    169                           * curseur eteint.
    170                           *
    171                           * Retourne U=$E800 B=ecrase
    172                           ***************************************
    173  3     6352 CE   E800     cls    ldu    #$E800
    174  7+0   6355 AD   C4              jsr    ,u     ! reset
    175  2     6357 C6   0C              ldb    #12
    176  7+1   6359 AD   43              jsr    3,u    ! PUTC
    177  2     635B C6   58              ldb    #88
    178  5     635D F7   6019            stb    STATUS ! forme seule
    179  5     6360 39                   rts           ! curs eteint
    180                           ***************************************
    181                           * Affiche une ligne:
    182                           * - bouge PX, PY en fonction de la
    183                           *   vitesse et l'acceleration.
    184                           * - effecture un filtre passe bas
    185                           *   (FX, FY)
    186                           * - depile dans (X,Y) la 1ere coord de
    187                           *   l'historique et empile la nouvelle.
    188                           * - tracage de ligne (FX,FY)-(X,Y)
    189                           * - si fin de traj determine une
    190                           *   nouvelle acceleration et duree
    191                           *
    192                           * En entree: U=$E800.
    193                           * En sortie: X et Y coord extremite
    194                           *            ligne tracee.
    195                           ***************************************
    196  5+4   6361 34   46       draw   pshs   d,u
    197  2     6363 86   7B              lda    #123
    198                  6364     PV     set    *-1    ! fin traj ?
    199  2     6365 4A                   deca
    200  3     6366 2C   10              bge    draw1  ! non => phys
     95  7     6368 9D   C6              jsr    <rnd
     96        636A F8 10                fcb    -8,16
    202  4     636C 97   7D              sta    <AX    ! acceleration
     95  7     636E 9D   C6              jsr    <rnd
     96        6370 F8 10                fcb    -8,16
    204  4     6372 97   85              sta    <AY
     95  7     6374 9D   C6              jsr    <rnd
     96        6376 0A 14                fcb    10,20
    206  4     6378 97   64       draw1  sta    <PV
     79  7     637A 9D   DA              jsr    <phys
     80        637C 00            VX    fcb    0
     81        637D 00            AX    fcb    0
     82        637E 00A0 013F     PX    fdb    160,319
     79  7     6382 9D   DA              jsr    <phys
     80        6384 00            VY    fcb    0
     81        6385 00            AY    fcb    0
     82        6386 0064 00C7     PY    fdb    100,199
    209  5     638A DC   7E              ldd    <PX    ! filtre passe
     54  7     638C 9D   B6              jsr    <filtr
     55        638E 0000          FX    fdb    0
    211  6     6390 FD   603D            std    PLOTX  ! lisser la
    212  5     6393 DC   86              ldd    <PY    ! trajectoire
     54  7     6395 9D   B6              jsr    <filtr
     55        6397 0000          FY    fdb    0
    214  6     6399 FD   603F            std    PLOTY
    215  3     639C CE   0000            ldu    #0     ! depilage
    216                  639D     HPTR   set    *-2    ! old coord
    217  5+4   639F 37   30              pulu   x,y    ! empilage
    218  5+1   63A1 ED   5E              std    -2,u   ! new coord
    219  5     63A3 DC   8E              ldd    <FX
    220  5+1   63A5 ED   5C              std    -4,u
    221  5     63A7 1183 644C            cmpu   #HFIN  ! buf. circul.
    222  3     63AB 26   03              bne    main1
    223  3     63AD CE   0000            ldu    #0
    224                  63AE     HDEB   set    *-2
    225  5     63B0 DF   9D       main1  stu    <HPTR
    226  5+4   63B2 35   46              puls   d,u
    227  3+1   63B4 6E   4C              jmp    12,u   ! DRAW
    228                           ***************************************
    229                           * filtrage: FX = (D + 3*FX)/4
    230                           * entree: D contient PX, S pointe sur
    231                           *         l'adresse de FX.
    232                           * sortie: U ecrase
    233                           ***************************************
    234  5+2   63B6 35   40       filtr  puls   u
    235  6+0   63B8 E3   C4              addd   ,u     ! D+FX
    236  6+0   63BA E3   C4              addd   ,u     ! D+2*FX
    237  6+0   63BC E3   C4              addd   ,u     ! D+3*FX
    238  2     63BE 47                   asra
    239  2     63BF 56                   rorb
    240  2     63C0 47                   asra
    241  2     63C1 56                   rorb          ! D=(D+3*FX)/4
    242  5+0   63C2 ED   C4              std    ,u     ! FX=D
    243  3+1   63C4 6E   42              jmp    2,u    ! retour
    244                           ***************************************
    245                           * Genere un nombre pseudo aleatoire sur
    246                           * 8 bit. C'est une version modifiee
    247                           * du multiply with carry. La periode
    248                           * de la sequence est 31870. Compact
    249                           * et rapide, que demander de plus?
    250                           *
    251                           * en entree: S pointe sur (offset,max)
    252                           * en sortie: A=un nombre random entre
    253                           *              offset et offset+max-1
    254                           *            B, U ecrase
    255                           ***************************************
    256  5+2   63C6 35   40       rnd    puls   u
    257  3     63C8 CC   03F9            ldd    #3*256+249
    258  11    63CB 3D                   mul
    259  4     63CC C3   0000     rnd1   addd   #0
    260  4     63CF 97   CE              sta    <rnd1+2
    261  4     63D1 D7   C9              stb    <rnd+1+2
    262  4+1   63D3 A6   41              lda    1,u
    263  11    63D5 3D                   mul
    264  4+0   63D6 AB   C4              adda   ,u
    265  3+1   63D8 6E   42              jmp    2,u
    266                           ***************************************
    267                           * Mise a jour d'une position via la
    268                           * loi physique.
    269                           *
    270                           * entree : S pointe sur l'adresse de
    271                           *          fcb VIT,ACC
    272                           *          fdb POS,MAX
    273                           * sortie : POS, VIT mis a jour
    274                           *          U, X, D ecrase
    275                           ***************************************
    276  5+2   63DA 35   40       phys   puls   u
    277  5+4   63DC 37   16              pulu   d,x    ! A=vit B=acc
    278  2     63DE 47                   asra          ! X=pos
    279  2     63DF 47                   asra
    280  2     63E0 47                   asra
    281  4+1   63E1 30   86              leax   a,x    ! X=pos+vit/8
    282  4+1   63E3 A6   5C              lda    -4,u
    283  6+0   63E5 AC   C4              cmpx   ,u     ! X<0 ou X>MAX?
    284  3     63E7 23   09              bls    phys1
    285  5+1   63E9 AE   5E              ldx    -2,u   ! oui=>rebond
    286  2     63EB 58                   aslb          ! accel*=2
    287  3     63EC 28   02              bvc    phys0
    288  4+1   63EE E6   5D              ldb    -3,u
    289  2     63F0 50            phys0  negb          ! accel=-accel
    290  2     63F1 4F                   clra          ! vit=0
    291  5+4   63F2 36   16       phys1  pshu   d,x
    292  4+0   63F4 EB   C4              addb   ,u     ! vit=vit+acc
    293  3     63F6 29   02              bvs    phys2  ! satur?
    294  4+0   63F8 E7   C4              stb    ,u
    295  3+1   63FA 6E   46       phys2  jmp    6,u    ! retour
    296                           ***************************************
    297                           * historique
    298                           ***************************************
    299        63FC                      rmb    4*HISTORY
    300                  644C     HFIN   set    *
    301                  6300            end    ini

000000 Total Errors

000036 Total Symbols
     1x          Label 637D AX
     1x          Label 6385 AY
     1x          Label 6352 cls
     2x          Label 6361 draw
     1x          Label 6378 draw1
     2x          Macro 0003 FILTR
     2x          Label 63B6 filtr
     2x          Label 638E FX
     1x          Label 6397 FY
     1x          Set   63AE HDEB
     2x          Set   644C HFIN
     3x          Equ   0014 HISTORY
     2x          Set   639D HPTR
     1x          Label 6300 ini
     4x          Set   6341 loop
     1x          Label 63B0 main1
     2x          Macro 0004 PHYS
     2x          Label 63DA phys
     1x          Label 63F0 phys0
     1x          Label 63F2 phys1
     1x          Label 63FA phys2
     1x          Equ   603D PLOTX
     1x          Equ   603F PLOTY
     3x          Set   6364 PV
     2x          Label 637E PX
     2x          Label 6386 PY
     4x          Macro 0001 REPEAT
     6x          Macro 0005 RND
     7x          Label 63C6 rnd
     1x          Label 63CC rnd1
     1x          Label 6311 start
     1x          Equ   6019 STATUS
     1x          Label 637C VX
     1x          Label 6384 VY
     1x          Label 633D wait
     4x          Macro 0002 WHILE

