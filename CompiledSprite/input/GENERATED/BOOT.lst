/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : .\input\GENERATED\BOOT.ASM
 * Fichier destination : .\input\GENERATED\TMP.BIN
 * Contenu :
 *     Main     0:BOOT.ASM     5451
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
     43        6200                  ORG    $6200
     44
     45                  6100     EXOMIZER  EQU    $6100
     46                  6300     MAIN      EQU    $6300
     47
     48  2     6200 1A   50          ORCC   #$50              * désactive l>>
     49  3     6202 20   51          BRA    INIT              * appelle le >>
     50                            
     51                           *****************************************>>
     52                           * Lecture des données depuis la disquette>>
     53                           *****************************************>>
     54        6204               DK_LECTURE                  * point d'ent>>
     55                  60          SETDP  $60
     56  2     6204 C6   60          LDB    #$60
     57  6     6206 1F   9B          TFR    B,DP              * positionne >>
     58  3     6208 CE   604D        LDU    #$604D            * positionne >>
     59  5+4   620B 36   30          PSHU   X,Y               * écrit DK.DR>>
     60  5     620D B7   6239        STA    DK_DERNIER_BLOC+2 * auto-modif >>
     61  2     6210 86   02          LDA    #$02              * DK.OPC $02 >>
     62  4     6212 97   48          STA    <$6048            * valorise le>>
     63  5     6214 F6   E7E5        LDB    $E7E5             * identie la >>
     64  5     6217 F7   6241        STB    DK_RESTORE_PAGE+1 * sauvegarde >>
     65  5     621A B7   E7E5        STA    $E7E5             * selection d>>
     66  3     621D CC   A000        LDD    #$A000            * DK.BUF Dest>>
     67  5     6220 DD   4F          STD    <$604F            * valorise le>>
     68        6222               DKCO
     69  8     6222 BD   E82A        JSR    $E82A             * DKCO Appel >>
     70  6     6225 0C   4C          INC    <$604C            * incrément d>>
     71  4     6227 96   4C          LDA    <$604C            * chargement >>
     72  2     6229 81   10          CMPA   #$10              * si DK.SEC e>>
     73  3     622B 23   06          BLS    DK_CONTINUE       * on continue>>
     74  2     622D 86   01          LDA    #$01              * sinon on a >>
     75  4     622F 97   4C          STA    <$604C            * positionnem>>
     76  6     6231 0C   4B          INC    <$604B            * incrément d>>
     77        6233               DK_CONTINUE
     78  6     6233 0C   4F          INC    <$604F            * increment d>>
     79  5     6235 DC   4F          LDD    <$604F            * chargement >>
     80        6237               DK_DERNIER_BLOC
     81  5     6237 1083 A000        CMPD   #$A000            * test debut >>
     82  3     623B 23   E5          BLS    DKCO              * si DK.BUF i>>
     83        623D               DYN_JSR_EXO
     84  8     623D BD   6246        JSR    LOAD_EXOMIZE      * fin chargem>>
     85        6240               DK_RESTORE_PAGE
     86  2     6240 86   00          LDA    #$00              * numéro de p>>
     87  5     6242 B7   E7E5        STA    $E7E5             * restauratio>>
     88  5     6245 39               RTS
     89        6246               LOAD_EXOMIZE
     90  3     6246 8E   6100        LDX    #EXOMIZER         * adresse d'i>>
     91  6     6249 BF   623E        STX    DYN_JSR_EXO+1     * auto-modif >>
     92  5     624C 9F   4F          STX    <$604F            * chargement >>
     93  8     624E BD   E82A        JSR    $E82A             * DKCO Appel >>
     94  8     6251 BD   6100        JSR    EXOMIZER          * Appel de l'>>
     95  5     6254 39               RTS
     96
     97                           *---------------------------------------->>
     98                           * A partir de ce point le code sera effac>>
     99                           * l'effacement à lieu à partir de la posi>>
    100                           *---------------------------------------->>
    101
    102                           *****************************************>>
    103                           * Initialisation de la commutation de pag>>
    104                           *****************************************>>
    105        6255               INIT
    106  4     6255 D6   81          LDB    $6081             * $6081 est l>>
    107  2     6257 CA   10          ORB    #$10              * positionne >>
    108  4     6259 D7   81          STB    $6081             * maintient u>>
    109  5     625B F7   E7E7        STB    $E7E7             * bit d4 à 1 >>
    110                  62          SETDP  $62
    111  6     625E 1F   50          TFR    PC,D
    112  6     6260 1F   8B          TFR    A,DP              * positionne >>
    113  3     6262 20   1C          BRA    PAL_INIT          * saut par de>>
    114
    115                           * données pour le fondu de palette
    116                           *****************************************>>
    117
    118        6264               PAL_FROM
    119        6264 0000             FDB    $0000             * couleur $00>>
    120        6266 F00F             FDB    $F00F             * couleur $0C>>
    121        6268 FF0F             FDB    $FF0F             * couleur $0E>>
    122        626A 7707             FDB    $7707             * couleur $10>>
    123        626C AA03             FDB    $AA03             * couleur $16>>
    124        626E 330A             FDB    $330A             * couleur $18>>
    125                            
    126        6270               PAL_LEN
    127        6270 0C               FCB    $0C               * pour chaque>>
    128        6271 0E               FCB    $0E               * (exclu) de >>
    129        6272 10               FCB    $10               * la première>>
    130        6273 16               FCB    $16               * pour les co>>
    131        6274 18               FCB    $18               * la seconde >>
    132        6275 20               FCB    $20               * pour la cou>>
    133        6276               END_PAL_LEN
    134                            
    135        6276               PAL_CYCLES
    136        6276 0F               FCB    $0F               * nombre de f>>
    137                            
    138        6277               PAL_MASK
    139        6277 0F               FCB    $0F               * masque pour>>
    140                            
    141        6278               PAL_BUFFER
    142        6278 42               FCB    $42               * B et buffer>>
    143        6279 41               FCB    $41               * A et buffer>>
    144        627A 53               FCB    $53               * S
    145        627B 49               FCB    $49               * I
    146        627C 43               FCB    $43               * C
    147        627D 32               FCB    $32               * 2
    148
    149        627E               PAL_IDX
    150        627E 00               FCB    $00               * index de la>>
    151        627F 00               FCB    $00               * espace rése>>
    152
    153                           *---------------------------------------->>
    154                           * A partir de ce point le code doit comme>>
    155                           *---------------------------------------->>
    156
    157                           *****************************************>>
    158                           * Animation de la palette: fondu vers une>>
    159                           *****************************************>>
    160                           * Ecriture en $E7DB de l'adresse ou sera >>
    161                           *
    162                           * les adresses vont de deux en deux car i>>
    163                           * couleur: 0, adresse: 00
    164                           * couleur: 1, adresse: 02
    165                           * couleur: 2, adresse: 04
    166                           * ...
    167                           *
    168                           * Deux ecritures en $E7DA (auto-increment>>
    169                           *                          positionnee en>>
    170                           *
    171                           *                             V V V V    >>
    172                           * Premiere adresse        fondamentale V >>
    173                           *
    174                           * Deuxieme adresse            X X X M    >>
    175                           * auto-incrementee        bit de marquage>>
    176                           *                       (incrustation vid>>
    177                           *
    178                           * Attention: les instructions suivantes e>>
    179                           * ASL, ASR, CLR, COM, DEL, INC, LSL, LSR,>>
    180                           * un seul appel sur $E7DA va lire $E7DA p>>
    181                           * Sur $E7DA il faut donc utiliser l'instr>>
    182                           *****************************************>>
    183
    184        6280               PAL_INIT
    185  3     6280 8E   6270        LDX    #PAL_LEN          * index limit>>
    186  4     6283 108E 6264        LDY    #PAL_FROM         * chargement >>
    187        6287               PAL_RUN
    188  4+0   6287 A6   A4          LDA    ,Y                    * chargem>>
    189  4     6289 94   77          ANDA   PAL_MASK          * on efface l>>
    190  2     628B C6   FF          LDB    #$FF              * composante >>
    191  4     628D D4   77          ANDB   PAL_MASK          * on efface l>>
    192  4     628F D7   78          STB    PAL_BUFFER        * on stocke l>>
    193  2     6291 C6   11          LDB    #$11              * préparation>>
    194  4     6293 D4   77          ANDB   PAL_MASK          * on efface l>>
    195  4     6295 D7   79          STB    PAL_BUFFER+1      * on stocke l>>
    196  4     6297 91   78          CMPA   PAL_BUFFER        * comparaison>>
    197  3     6299 27   0E          BEQ    PAL_VR_SUIVANTE   * si composan>>
    198  3     629B 22   06          BHI    PAL_VR_DEC        * si la compo>>
    199  4+0   629D A6   A4          LDA    ,Y                * on recharge>>
    200  4     629F 9B   79          ADDA   PAL_BUFFER+1      * on incrémen>>
    201  3     62A1 20   04          BRA    PAL_VR_SAVE       * on branche >>
    202        62A3               PAL_VR_DEC
    203  4+0   62A3 A6   A4          LDA    ,Y                * on recharge>>
    204  4     62A5 90   79          SUBA   PAL_BUFFER+1      * on décrémen>>
    205        62A7               PAL_VR_SAVE
    206  4+0   62A7 A7   A4          STA    ,Y                * sauvegarde >>
    207        62A9               PAL_VR_SUIVANTE
    208  6     62A9 03   77          COM    PAL_MASK          * inversion d>>
    209  3     62AB 2B   DA          BMI    PAL_RUN           * si on trait>>
    210                            
    211        62AD               SETPALBLEU
    212  4+1   62AD E6   21          LDB    1,Y                   * chargem>>
    213  2     62AF C1   0F          CMPB   #$0F              * comparaison>>
    214  3     62B1 27   08          BEQ    SETPALNEXT        * si composan>>
    215  3     62B3 22   03          BHI    SETPALBLEUDEC     * si la compo>>
    216  2     62B5 5C               INCB                     * on incrémen>>
    217  3     62B6 20   01          BRA    SETPALSAVEBLEU    * on branche >>
    218        62B8               SETPALBLEUDEC
    219  2     62B8 5A               DECB                     * on décrémen>>
    220        62B9               SETPALSAVEBLEU
    221  4+1   62B9 E7   21          STB    1,Y               * sauvegarde >>
    222                            
    223        62BB               SETPALNEXT
    224  4     62BB 96   7E          LDA    PAL_IDX           * Lecture ind>>
    225  5     62BD B7   E7DB        STA    $E7DB             * sélectionne>>
    226  2     62C0 8B   02          ADDA   #$02              * increment d>>
    227  4     62C2 97   7E          STA    PAL_IDX           * stockage du>>
    228  4+0   62C4 A6   A4          LDA    ,Y                * chargement >>
    229  5     62C6 B7   E7DA        STA    $E7DA             * positionne >>
    230  5     62C9 F7   E7DA        STB    $E7DA             * positionne >>
    231  4     62CC 96   7E          LDA    PAL_IDX           * rechargemen>>
    232  4+0   62CE A1   84          CMPA   ,X                * comparaison>>
    233  3     62D0 26   E9          BNE    SETPALNEXT        * si inferieu>>
    234  4+1   62D2 31   22          LEAY   2,Y               * on avance l>>
    235  4+1   62D4 30   01          LEAX   1,X               * on avance l>>
    236  4     62D6 8C   6276        CMPX   #END_PAL_LEN      * test de fin>>
    237  3     62D9 26   AC          BNE    PAL_RUN           * on reboucle>>
    238                            
    239        62DB               VSYNC_1
    240  7     62DB 7D   E7E7        TST    $E7E7             * le faisceau>>
    241  3     62DE 2A   FB          BPL    VSYNC_1           * tant que le>>
    242        62E0               VSYNC_2
    243  7     62E0 7D   E7E7        TST    $E7E7             * le faisceau>>
    244  3     62E3 2B   FB          BMI    VSYNC_2           * tant que le>>
    245
    246  6     62E5 0A   76          DEC    PAL_CYCLES        * décrémente >>
    247  3     62E7 26   97          BNE    PAL_INIT          * on reboucle>>
    248                            
    249                           *****************************************>>
    250                           * Initialisation du mode video
    251                           *****************************************>>
    252  2     62E9 86   7B          LDA    #$7B              * passage en >>
    253  5     62EB B7   E7DC        STA    $E7DC
    254                            
    255                           *****************************************>>
    256                           * Initialisation des paramètres pour le c>>
    257                           *****************************************>>
    258  3     62EE CC   6300        LDD    #MAIN             * adresse d'i>>
    259  5+0   62F1 ED   E4          STD    ,S                * ajoute l'ad>>
    260  3     62F3 CE   62FB        LDU    #DK_DATA          * chargement >>
    261  5+5   62F6 37   32          PULU   A,X,Y             * du code pri>>
    262  5     62F8 16   FF09        LBRA   DK_LECTURE        * lecture dis>>
    263
    264                           * Données d'initialisation des paramètres>>
    265                           *****************************************>>
    266        62FB               DK_DATA
    267        62FB A0               FCB    $A0   * adresse poids fort du d>>
    268        62FC 00               FCB    $00               * DK.DRV
    269        62FD 0000             FDB    $0000             * DK.TRK
    270        62FF 02               FCB    $02               * DK.SEC
----------------
419 cycle(s)
256 byte(s)
----------------

000000 Total Errors

000029 Total Symbols
     1x          Label 6222 DKCO
     1x          Label 6233 DK_CONTINUE
     1x          Label 62FB DK_DATA
     1x          Label 6237 DK_DERNIER_BLOC
     1x          Label 6204 DK_LECTURE
     1x          Label 6240 DK_RESTORE_PAGE
     1x          Label 623D DYN_JSR_EXO
     1x          Label 6276 END_PAL_LEN
     2x          Equ   6100 EXOMIZER
     1x          Label 6255 INIT
     1x          Label 6246 LOAD_EXOMIZE
     1x          Equ   6300 MAIN
     5x          Label 6278 PAL_BUFFER
     1x          Label 6276 PAL_CYCLES
     1x          Label 6264 PAL_FROM
     3x          Label 627E PAL_IDX
     2x          Label 6280 PAL_INIT
     1x          Label 6270 PAL_LEN
     4x          Label 6277 PAL_MASK
     2x          Label 6287 PAL_RUN
     1x          Label 62A3 PAL_VR_DEC
     1x          Label 62A7 PAL_VR_SAVE
     1x          Label 62A9 PAL_VR_SUIVANTE
     0x          Label 62AD SETPALBLEU
     1x          Label 62B8 SETPALBLEUDEC
     2x          Label 62BB SETPALNEXT
     1x          Label 62B9 SETPALSAVEBLEU
     1x          Label 62DB VSYNC_1
     1x          Label 62E0 VSYNC_2

