Lecture du fichier de configuration: config.properties
Planche:HIL image:0
RAM 0 (val hex 00 à 10 par pixel, 00 Transparent):
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
....cc..........................................................................
....cc..........................................................................
...dccc.........................................................................
....ddac........................................................................
....ddaa........................................................................
....ddaa........................................................................
....cdaa........................................................................
....dcca........................................................................
....dcbc........................................................................
...cdcba........................................................................
...ddcbb........................................................................
..dddcbb........................................................................
....dcbb........................................................................
....dcbb........................................................................
....ddab0.......................................................................
....dd2b0.......................................................................
....dd22........................................................................
....d022........................................................................
...cdd33........................................................................
....dd0e........................................................................
.....d32........................................................................
....c222........................................................................
....2322........................................................................
....2d22........................................................................
....3b13........................................................................
....eadd........................................................................
....d9d0........................................................................
.....a.d........................................................................
.....9.d........................................................................
.......d........................................................................
.......d........................................................................
.......d........................................................................
.....a9a........................................................................
.....909........................................................................
.....0aa........................................................................
.....1b0........................................................................
....e1f21.......................................................................
....e1ffe1......................................................................
....e0ee00..
Recherche de motifs, lecture vers l'avant.

Noeud: 0
(index:position:offset:pattern)
(0:362:-120:Pattern_11)
(1:402:-80:Pattern_11)
(2:441:-41:Pattern_0111)
(3:443:-39:Pattern_10)
(4:482:0:Pattern_1111)
(5:522:40:Pattern_1111)
(6:562:80:Pattern_1111)
(7:602:120:Pattern_1111)

Noeud: 8
(index:position:offset:pattern)
(8:642:0:Pattern_1111)

Noeud: 9
(index:position:offset:pattern)
(9:682:-119:Pattern_1111)
(10:721:-80:Pattern_0111)
(11:723:-78:Pattern_11)
(12:761:-40:Pattern_0111)
(13:763:-38:Pattern_11)
(14:801:0:Pattern_111111)
(15:842:41:Pattern_1111)
(16:882:81:Pattern_1111)
(17:922:121:Pattern_1111)
(18:924:123:Pattern_10)

Noeud: 19
(index:position:offset:pattern)
(19:962:-120:Pattern_1111)
(20:964:-118:Pattern_10)
(21:1002:-80:Pattern_1111)
(22:1042:-40:Pattern_1111)
(23:1081:-1:Pattern_0111)
(24:1083:1:Pattern_11)
(25:1122:40:Pattern_1111)
(26:1162:80:Pattern_0111)
(27:1202:120:Pattern_1111)

Noeud: 28
(index:position:offset:pattern)
(28:1242:-120:Pattern_1111)
(29:1282:-80:Pattern_1111)
(30:1322:-40:Pattern_1111)
(31:1362:0:Pattern_1111)
(32:1402:40:Pattern_1111)
(33:1442:80:Pattern_0101)
(34:1482:120:Pattern_0101)

Noeud: 35
(index:position:offset:pattern)
(35:1523:-80:Pattern_01)
(36:1563:-40:Pattern_01)
(37:1603:0:Pattern_01)
(38:1642:39:Pattern_0111)
(39:1682:79:Pattern_0111)

Noeud: 40
(index:position:offset:pattern)
(40:1722:-120:Pattern_0111)
(41:1762:-80:Pattern_0111)
(42:1802:-40:Pattern_1111)
(43:1804:-38:Pattern_10)
(44:1842:0:Pattern_111111)

Noeud: 45
(index:position:offset:pattern)
(45:1882:0:Pattern_111111)

LEAS: (noeud=offset) {0=482, 19=281, 35=241, 40=239, 8=160, 9=159, 28=280, 45=40}

Code ASM:
patternGrp1: [2, 3]
patternGrp2: []
patternGrp3: [0, 1, 4, 5, 6, 7]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:- Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:0c B:- D:000d X:- Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:0c B:- D:000d X:- Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:0c B:- D:000d X:- Y:- U:- S:-
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:0c B:- D:0d0d X:- Y:- U:- S:-
cout:4
cout:0
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:0c B:- D:0d0d X:- Y:- U:- S:-
cout:4
cout:0
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:0c B:- D:0d0d X:- Y:- U:- S:-
cout:2
cout:3
cout:3
cout:3
Combinaison: 0
selectedReg: [0, 1]
selectedloadMask: [false, true, false, false, false, false, false]
Registres:  A:0c B:0c D:0d0d X:- Y:- U:- S:-
cout:0
cout:0
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:0
cout:0
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:4
cout:0
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, false, false, false, false, false]
cout:4
cout:0
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, false, false, false, false, false]
cout:4
cout:0
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, false, false, false, false, false]
cout:0
cout:3
cout:3
cout:3
Combinaison: 0
selectedReg: [0, 1]
selectedloadMask: [false, false, false, false, false, false, false]
patternGrp1: []
patternGrp2: []
patternGrp3: [8]
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:0c B:0c D:0d0c X:- Y:- U:- S:-
cout:4
cout:0
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, false, false, false, false, false]
patternGrp1: [10, 12, 18]
patternGrp2: [14]
patternGrp3: [9, 11, 13, 15, 16, 17]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:- Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:- Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:00 B:- D:000d X:- Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:5
cout:5
cout:5
cout:5
Combinaison: 0
selectedReg: [0, 3]
selectedloadMask: [true, false, false, true, false, false, false]
Registres:  A:0d B:- D:000d X:0d0d Y:- U:- S:-
cout:0
cout:3
cout:2
cout:5
Combinaison: 0
selectedReg: [0, 3]
selectedloadMask: [false, false, false, false, false, false, false]
cout:2
cout:3
cout:3
cout:3
Combinaison: 0
selectedReg: [0, 1]
selectedloadMask: [false, true, false, false, false, false, false]
Registres:  A:0d B:0d D:000d X:0d0d Y:- U:- S:-
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:0b B:0d D:000d X:0d0d Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:0b B:0d D:000d X:0d0d Y:- U:- S:-
cout:2
cout:3
cout:3
cout:3
Combinaison: 0
selectedReg: [0, 1]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:0d B:0d D:000d X:0d0d Y:- U:- S:-
cout:0
cout:3
cout:3
cout:3
Combinaison: 0
selectedReg: [0, 1]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:0d B:0d D:000d X:0d0d Y:- U:- S:-
cout:0
cout:3
cout:0
cout:3
Combinaison: 0
selectedReg: [0, 1]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:0d B:0d D:000d X:0d0d Y:- U:- S:-
cout:0
cout:3
cout:3
cout:3
Combinaison: 0
selectedReg: [0, 1]
selectedloadMask: [false, false, false, false, false, false, false]
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:2
cout:3
cout:3
cout:3
Combinaison: 0
selectedReg: [0, 1]
selectedloadMask: [true, false, false, false, false, false, false]
cout:0
cout:3
cout:3
cout:3
Combinaison: 0
selectedReg: [0, 1]
selectedloadMask: [false, false, false, false, false, false, false]
cout:0
cout:3
cout:0
cout:3
Combinaison: 0
selectedReg: [0, 1]
selectedloadMask: [false, false, false, false, false, false, false]
patternGrp1: [20, 23, 26]
patternGrp2: []
patternGrp3: [19, 21, 22, 24, 25, 27]
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:00 B:0d D:000d X:0d0d Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0d0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0d0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:4
cout:3
cout:0
cout:3
Combinaison: 2
selectedReg: [3]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:- B:- D:000d X:0d0d Y:- U:- S:-
cout:4
cout:3
cout:0
cout:3
Combinaison: 2
selectedReg: [3]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:- B:- D:000d X:0d0d Y:- U:- S:-
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:0d00 X:0d0d Y:- U:- S:-
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:03 B:- D:0d00 X:0d0d Y:- U:- S:-
cout:4
cout:3
cout:0
cout:3
Combinaison: 2
selectedReg: [3]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:03 B:- D:0d00 X:0d0d Y:- U:- S:-
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:03 B:- D:0c02 X:0d0d Y:- U:- S:-
cout:4
cout:3
cout:0
cout:3
Combinaison: 2
selectedReg: [3]
selectedloadMask: [false, false, false, false, false, false, false]
cout:4
cout:3
cout:0
cout:3
Combinaison: 2
selectedReg: [3]
selectedloadMask: [false, false, false, false, false, false, false]
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:4
cout:3
cout:0
cout:3
Combinaison: 2
selectedReg: [3]
selectedloadMask: [false, false, false, false, false, false, false]
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
patternGrp1: [33, 34]
patternGrp2: []
patternGrp3: [28, 29, 30, 31, 32]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0d0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0d0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:0203 X:0d0d Y:- U:- S:-
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:020d X:0d0d Y:- U:- S:-
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:030b X:0d0d Y:- U:- S:-
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:0e0a X:0d0d Y:- U:- S:-
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:0d09 X:0d0d Y:- U:- S:-
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
patternGrp1: [35, 36, 37, 38, 39]
patternGrp2: []
patternGrp3: []
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:00 B:- D:0d09 X:0d0d Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:00 B:- D:0d09 X:0d0d Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:00 B:- D:0d09 X:0d0d Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0d0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0d0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
patternGrp1: [40, 41, 43]
patternGrp2: [44]
patternGrp3: [42]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0d0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0d0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:01 B:- D:0001 X:0d0d Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:5
cout:5
cout:5
cout:5
Combinaison: 0
selectedReg: [0, 3]
selectedloadMask: [true, false, false, true, false, false, false]
Registres:  A:0e B:- D:0001 X:0e01 Y:- U:- S:-
cout:0
cout:3
cout:2
cout:5
Combinaison: 0
selectedReg: [0, 3]
selectedloadMask: [false, false, false, false, false, false, false]
cout:2
cout:3
cout:0
cout:3
Combinaison: 2
selectedReg: [3]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:0e B:- D:0001 X:0e01 Y:- U:- S:-
cout:2
cout:3
cout:0
cout:3
Combinaison: 2
selectedReg: [3]
selectedloadMask: [false, false, false, false, false, false, false]
patternGrp1: []
patternGrp2: [45]
patternGrp3: []
	LEAS 482,S
* n:2 Sauvegarde Fond
	LDD -41,S
	PSHU D
* n:2 x: 3 y: 12 Ecriture sprite
	ANDA #$F0
	ORA #$0d
	LDB #$cc
	STD -41,S

* n:3 Sauvegarde Fond
	LDA -39,S
	PSHU A
* n:3 x: 7 y: 12 Ecriture sprite
	ANDA #$0F
	ORA #$c0
	STA -39,S

* n:0 Sauvegarde Fond
	LDA -120,S
	PSHU A

* n:1 Sauvegarde Fond
	LDA -80,S
	PSHU A

* n:4 Sauvegarde Fond
	LDD 0,S
	PSHU D

* n:5 Sauvegarde Fond
	LDD 40,S
	PSHU D

* n:6 Sauvegarde Fond
	LDD 80,S
	PSHU D

* n:7 Sauvegarde Fond
	LDA 120,S
	PSHU A

* n:0 x: 5 y: 10 Ecriture sprite
	STA -120,S

* n:1 x: 5 y: 11 Ecriture sprite
	STA -80,S

* n:4 x: 5 y: 13 Ecriture sprite
	STD 0,S

* n:5 x: 5 y: 14 Ecriture sprite
	STD 40,S

* n:6 x: 5 y: 15 Ecriture sprite
	STD 80,S

* n:7 x: 5 y: 16 Ecriture sprite
	STA 120,S

	LEAS 160,S
* n:8 Sauvegarde Fond
	LDD 0,S
	PSHU D

* n:8 x: 5 y: 17 Ecriture sprite
	STD 0,S

	LEAS 159,S
* n:10 Sauvegarde Fond
	LDD -80,S
	PSHU D
* n:10 x: 3 y: 19 Ecriture sprite
	ANDA #$F0
	ORA #$0c
	LDB #$dc
	STD -80,S

* n:12 Sauvegarde Fond
	LDD -40,S
	PSHU D
* n:12 x: 3 y: 20 Ecriture sprite
	ANDA #$F0
	ORA #$0d
	LDB #$dc
	STD -40,S

* n:18 Sauvegarde Fond
	LDA 123,S
	PSHU A
* n:18 x: 9 y: 24 Ecriture sprite
	ANDA #$0F
	ORA #$00
	STA 123,S

* n:14 Sauvegarde Fond
	PULS A,X
	PSHU A,X
* n:14 x: 3 y: 21 Ecriture sprite
	PSHS A,X

* n:9 Sauvegarde Fond
	LDA -119,S
	PSHU A

* n:11 Sauvegarde Fond
	LDA -78,S
	PSHU A

* n:13 Sauvegarde Fond
	LDA -38,S
	PSHU A

* n:15 Sauvegarde Fond
	LDA 41,S
	PSHU A

* n:16 Sauvegarde Fond
	LDA 81,S
	PSHU A

* n:17 Sauvegarde Fond
	LDA 121,S
	PSHU A

* n:9 x: 5 y: 18 Ecriture sprite
	STA -119,S

* n:11 x: 7 y: 19 Ecriture sprite
	LDA #$ba
	STA -78,S

* n:13 x: 7 y: 20 Ecriture sprite
	STA -38,S

* n:15 x: 5 y: 22 Ecriture sprite
	LDA #$dc
	STA 41,S

* n:16 x: 5 y: 23 Ecriture sprite
	STA 81,S

* n:17 x: 5 y: 24 Ecriture sprite
	STA 121,S

	LEAS 281,S
* n:20 Sauvegarde Fond
	LDA -118,S
	PSHU A
* n:20 x: 9 y: 25 Ecriture sprite
	ANDA #$0F
	ORA #$00
	STA -118,S

* n:23 Sauvegarde Fond
	LDD -1,S
	PSHU D
* n:23 x: 3 y: 28 Ecriture sprite
	ANDA #$F0
	ORA #$0c
	LDB #$dd
	STD -1,S

* n:26 Sauvegarde Fond
	LDD 80,S
	PSHU D
* n:26 x: 5 y: 30 Ecriture sprite
	ANDA #$F0
	ORA #$0d
	LDB #$32
	STD 80,S

* n:19 Sauvegarde Fond
	LDX -120,S
	PSHU X

* n:21 Sauvegarde Fond
	LDX -80,S
	PSHU X

* n:22 Sauvegarde Fond
	LDD -40,S
	PSHU D

* n:24 Sauvegarde Fond
	LDA 1,S
	PSHU A

* n:25 Sauvegarde Fond
	LDX 40,S
	PSHU X

* n:27 Sauvegarde Fond
	LDD 120,S
	PSHU D

* n:19 x: 5 y: 25 Ecriture sprite
	STX -120,S

* n:21 x: 5 y: 26 Ecriture sprite
	STX -80,S

* n:22 x: 5 y: 27 Ecriture sprite
	STD -40,S

* n:24 x: 7 y: 28 Ecriture sprite
	STA 1,S

* n:25 x: 5 y: 29 Ecriture sprite
	STX 40,S

* n:27 x: 5 y: 31 Ecriture sprite
	STD 120,S

	LEAS 280,S
* n:33 Sauvegarde Fond
	LDD 80,S
	PSHU D
* n:33 x: 5 y: 37 Ecriture sprite
	ANDA #$F0
	ANDB #$F0
	ADDD #$0a0d
	STD 80,S

* n:34 Sauvegarde Fond
	LDD 120,S
	PSHU D
* n:34 x: 5 y: 38 Ecriture sprite
	ANDA #$F0
	ANDB #$F0
	ADDD #$090d
	STD 120,S

* n:28 Sauvegarde Fond
	LDD -120,S
	PSHU D

* n:29 Sauvegarde Fond
	LDD -80,S
	PSHU D

* n:30 Sauvegarde Fond
	LDD -40,S
	PSHU D

* n:31 Sauvegarde Fond
	LDD 0,S
	PSHU D

* n:32 Sauvegarde Fond
	LDD 40,S
	PSHU D

* n:28 x: 5 y: 32 Ecriture sprite
	STD -120,S

* n:29 x: 5 y: 33 Ecriture sprite
	STD -80,S

* n:30 x: 5 y: 34 Ecriture sprite
	STD -40,S

* n:31 x: 5 y: 35 Ecriture sprite
	STD 0,S

* n:32 x: 5 y: 36 Ecriture sprite
	STD 40,S

	LEAS 241,S
* n:35 Sauvegarde Fond
	LDA -80,S
	PSHU A
* n:35 x: 7 y: 39 Ecriture sprite
	ANDA #$F0
	ORA #$0d
	STA -80,S

* n:36 Sauvegarde Fond
	LDA -40,S
	PSHU A
* n:36 x: 7 y: 40 Ecriture sprite
	ANDA #$F0
	ORA #$0d
	STA -40,S

* n:37 Sauvegarde Fond
	LDA 0,S
	PSHU A
* n:37 x: 7 y: 41 Ecriture sprite
	ANDA #$F0
	ORA #$0d
	STA 0,S

* n:38 Sauvegarde Fond
	LDD 39,S
	PSHU D
* n:38 x: 5 y: 42 Ecriture sprite
	ANDA #$F0
	ORA #$0a
	LDB #$9a
	STD 39,S

* n:39 Sauvegarde Fond
	LDD 79,S
	PSHU D
* n:39 x: 5 y: 43 Ecriture sprite
	ANDA #$F0
	ORA #$09
	LDB #$09
	STD 79,S

	LEAS 239,S
* n:40 Sauvegarde Fond
	LDD -120,S
	PSHU D
* n:40 x: 5 y: 44 Ecriture sprite
	ANDA #$F0
	ORA #$00
	LDB #$aa
	STD -120,S

* n:41 Sauvegarde Fond
	LDD -80,S
	PSHU D
* n:41 x: 5 y: 45 Ecriture sprite
	ANDA #$F0
	ORA #$01
	LDB #$b0
	STD -80,S

* n:43 Sauvegarde Fond
	LDA -38,S
	PSHU A
* n:43 x: 9 y: 46 Ecriture sprite
	ANDA #$0F
	ORA #$10
	STA -38,S

* n:44 Sauvegarde Fond
	PULS A,X
	PSHU A,X
* n:44 x: 5 y: 47 Ecriture sprite
	PSHS A,X

* n:42 Sauvegarde Fond
	LDX -40,S
	PSHU X

* n:42 x: 5 y: 46 Ecriture sprite
	STX -40,S

	LEAS 40,S
RAM 1 (val hex 00 à 10 par pixel, 00 Transparent):
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
....c...........................................................................
..ccac..........................................................................
..ddda.d........................................................................
..dd3a.d........................................................................
....2dcd........................................................................
....21ad........................................................................
....2aac........................................................................
...caaac........................................................................
..ccaaaa........................................................................
..ddaaaa........................................................................
..ddaacc........................................................................
..ddaa0c........................................................................
...dca00........................................................................
....cc00........................................................................
...cc2ba........................................................................
..cc3220........................................................................
..cd3221........................................................................
..ddd23.........................................................................
..ddd11.........................................................................
....0d..........................................................................
....211.........................................................................
....1d3.........................................................................
....0d2.........................................................................
....ad3.........................................................................
...cbb0.........................................................................
...dbb9a........................................................................
...dba9a........................................................................
...daaa9........................................................................
....ad9.........................................................................
....9d9.........................................................................
....d...........................................................................
....d...........................................................................
....bba.........................................................................
....aaa.........................................................................
....a11.........................................................................
....1a9a........................................................................
....aa0e........................................................................
....aff1........................................................................
....0eee....
Recherche de motifs, lecture vers l'avant.

Noeud: 0
(index:position:offset:pattern)
(0:362:-80:Pattern_10)
(1:401:-41:Pattern_1111)
(2:441:-1:Pattern_1111)
(3:443:1:Pattern_01)
(4:481:39:Pattern_1111)
(5:483:41:Pattern_01)
(6:522:80:Pattern_1111)

Noeud: 7
(index:position:offset:pattern)
(7:562:-119:Pattern_1111)
(8:602:-79:Pattern_1111)
(9:641:-40:Pattern_0111)
(10:643:-38:Pattern_11)
(11:681:0:Pattern_111111)

Noeud: 12
(index:position:offset:pattern)
(12:721:0:Pattern_111111)

Noeud: 13
(index:position:offset:pattern)
(13:761:0:Pattern_111111)

Noeud: 14
(index:position:offset:pattern)
(14:801:0:Pattern_111111)
(15:841:40:Pattern_0111)
(16:843:42:Pattern_11)
(17:882:81:Pattern_1111)
(18:921:120:Pattern_0111)
(19:923:122:Pattern_11)

Noeud: 20
(index:position:offset:pattern)
(20:961:0:Pattern_111111)

Noeud: 21
(index:position:offset:pattern)
(21:1001:0:Pattern_111111)
(22:1041:40:Pattern_1111)
(23:1043:42:Pattern_10)
(24:1081:80:Pattern_1111)
(25:1083:82:Pattern_10)
(26:1122:121:Pattern_11)

Noeud: 27
(index:position:offset:pattern)
(27:1162:-121:Pattern_1110)
(28:1202:-81:Pattern_1110)
(29:1242:-41:Pattern_1110)
(30:1282:-1:Pattern_1110)
(31:1321:38:Pattern_0111)
(32:1323:40:Pattern_10)
(33:1361:78:Pattern_0111)
(34:1363:80:Pattern_11)
(35:1401:118:Pattern_0111)
(36:1403:120:Pattern_11)

Noeud: 37
(index:position:offset:pattern)
(37:1441:-121:Pattern_0111)
(38:1443:-119:Pattern_11)
(39:1482:-80:Pattern_1110)
(40:1522:-40:Pattern_1110)
(41:1562:0:Pattern_10)
(42:1602:40:Pattern_10)
(43:1642:80:Pattern_1110)
(44:1682:120:Pattern_1110)

Noeud: 45
(index:position:offset:pattern)
(45:1722:-80:Pattern_1110)
(46:1762:-40:Pattern_1111)
(47:1802:0:Pattern_1111)
(48:1842:40:Pattern_1111)
(49:1882:80:Pattern_1111)

LEAS: (noeud=offset) {0=442, 20=160, 21=40, 37=279, 7=239, 27=282, 12=40, 13=40, 45=240, 14=40}

Code ASM:
patternGrp1: [0, 3, 5]
patternGrp2: []
patternGrp3: [1, 2, 4, 6]
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:0c B:- D:- X:- Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:00 B:- D:- X:- Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:00 B:- D:- X:- Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:00 B:- D:0c0c X:- Y:- U:- S:-
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:00 B:- D:0d0d X:- Y:- U:- S:-
cout:4
cout:0
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:00 B:- D:0d0d X:- Y:- U:- S:-
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:00 B:- D:020d X:- Y:- U:- S:-
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:4
cout:0
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, false, false, false, false, false]
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
patternGrp1: [9]
patternGrp2: [11]
patternGrp3: [7, 8, 10]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:- Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:5
cout:5
cout:5
cout:5
Combinaison: 0
selectedReg: [0, 3]
selectedloadMask: [true, false, false, true, false, false, false]
Registres:  A:0c B:- D:000c X:0c0c Y:- U:- S:-
cout:0
cout:3
cout:2
cout:5
Combinaison: 0
selectedReg: [0, 3]
selectedloadMask: [false, false, false, false, false, false, false]
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:0c B:- D:0201 X:0c0c Y:- U:- S:-
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:0c B:- D:020a X:0c0c Y:- U:- S:-
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:0a B:- D:020a X:0c0c Y:- U:- S:-
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
patternGrp1: []
patternGrp2: [12]
patternGrp3: []
cout:5
cout:5
cout:5
cout:5
Combinaison: 0
selectedReg: [0, 3]
selectedloadMask: [true, false, false, true, false, false, false]
Registres:  A:0d B:- D:020a X:0d0d Y:- U:- S:-
cout:0
cout:3
cout:2
cout:5
Combinaison: 0
selectedReg: [0, 3]
selectedloadMask: [false, false, false, false, false, false, false]
patternGrp1: []
patternGrp2: [13]
patternGrp3: []
cout:0
cout:3
cout:2
cout:5
Combinaison: 0
selectedReg: [0, 3]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:0d B:- D:020a X:0d0d Y:- U:- S:-
cout:0
cout:3
cout:2
cout:5
Combinaison: 0
selectedReg: [0, 3]
selectedloadMask: [false, false, false, false, false, false, false]
patternGrp1: [15, 18]
patternGrp2: [14]
patternGrp3: [16, 17, 19]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0d0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0d0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:2
cout:5
cout:2
cout:5
Combinaison: 0
selectedReg: [0, 3]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:0d B:- D:000c X:0d0d Y:- U:- S:-
cout:0
cout:3
cout:2
cout:5
Combinaison: 0
selectedReg: [0, 3]
selectedloadMask: [false, false, false, false, false, false, false]
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:00 B:- D:000c X:0d0d Y:- U:- S:-
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:00 B:- D:0c0c X:0d0d Y:- U:- S:-
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:0b B:- D:0c0c X:0d0d Y:- U:- S:-
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
cout:4
cout:0
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, false, false, false, false, false]
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
patternGrp1: []
patternGrp2: [20]
patternGrp3: []
cout:5
cout:5
cout:5
cout:5
Combinaison: 0
selectedReg: [0, 3]
selectedloadMask: [true, false, false, true, false, false, false]
Registres:  A:0c B:- D:0c0c X:0c0c Y:- U:- S:-
cout:0
cout:3
cout:2
cout:5
Combinaison: 0
selectedReg: [0, 3]
selectedloadMask: [false, false, false, false, false, false, false]
patternGrp1: [23, 25]
patternGrp2: [21]
patternGrp3: [22, 24, 26]
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:03 B:- D:0c0c X:0c0c Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:01 B:- D:0c0c X:0c0c Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:5
cout:5
cout:5
cout:5
Combinaison: 0
selectedReg: [0, 3]
selectedloadMask: [true, false, false, true, false, false, false]
Registres:  A:0c B:- D:0c0c X:0c0d Y:- U:- S:-
cout:0
cout:3
cout:2
cout:5
Combinaison: 0
selectedReg: [0, 3]
selectedloadMask: [false, false, false, false, false, false, false]
cout:4
cout:3
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:0c B:- D:0d0d X:0c0d Y:- U:- S:-
cout:4
cout:0
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:0c B:- D:0d0d X:0c0d Y:- U:- S:-
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:00 B:- D:0d0d X:0c0d Y:- U:- S:-
cout:4
cout:0
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, false, false, false, false, false]
cout:4
cout:0
cout:3
cout:3
Combinaison: 1
selectedReg: [2]
selectedloadMask: [false, false, false, false, false, false, false]
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
patternGrp1: [27, 28, 29, 30, 31, 32, 33, 35]
patternGrp2: []
patternGrp3: [34, 36]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0c0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0c0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0c0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0c0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0c0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:00 B:- D:000c X:0c0d Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0c0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:0
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:- B:- D:- X:0c0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:09 B:- D:000d X:0c0d Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:09 B:- D:000d X:0c0d Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
patternGrp1: [37, 39, 40, 41, 42, 43, 44]
patternGrp2: []
patternGrp3: [38]
cout:0
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:- B:- D:- X:0c0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0c0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0c0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:0d B:- D:090d X:0c0d Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
Registres:  A:0d B:- D:090d X:0c0d Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0c0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
Registres:  A:- B:- D:- X:0c0d Y:- U:- S:-
cout:3
Combinaison: 0
selectedReg: [2]
selectedloadMask: [false, false, true, false, false, false, false]
cout:2
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [true, false, false, false, false, false, false]
Registres:  A:0a B:- D:0a0a X:0c0d Y:- U:- S:-
cout:0
cout:2
Combinaison: 0
selectedReg: [0]
selectedloadMask: [false, false, false, false, false, false, false]
patternGrp1: [45]
patternGrp2: []
patternGrp3: [46, 47, 48, 49]
	LEAS 442,S
* n:0 Sauvegarde Fond
	LDA -80,S
	PSHU A
* n:0 x: 5 y: 10 Ecriture sprite
	ANDA #$0F
	ORA #$c0
	STA -80,S

* n:3 Sauvegarde Fond
	LDA 1,S
	PSHU A
* n:3 x: 7 y: 12 Ecriture sprite
	ANDA #$F0
	ORA #$0d
	STA 1,S

* n:5 Sauvegarde Fond
	LDA 41,S
	PSHU A
* n:5 x: 7 y: 13 Ecriture sprite
	ANDA #$F0
	ORA #$0d
	STA 41,S

* n:1 Sauvegarde Fond
	LDD -41,S
	PSHU D

* n:2 Sauvegarde Fond
	LDD -1,S
	PSHU D

* n:4 Sauvegarde Fond
	LDD 39,S
	PSHU D

* n:6 Sauvegarde Fond
	LDD 80,S
	PSHU D

* n:1 x: 3 y: 11 Ecriture sprite
	STD -41,S

* n:2 x: 3 y: 12 Ecriture sprite
	STD -1,S

* n:4 x: 3 y: 13 Ecriture sprite
	STD 39,S

* n:6 x: 5 y: 14 Ecriture sprite
	STD 80,S

	LEAS 239,S
* n:9 Sauvegarde Fond
	LDD -40,S
	PSHU D
* n:9 x: 3 y: 17 Ecriture sprite
	ANDA #$F0
	ORA #$0c
	LDB #$aa
	STD -40,S

* n:11 Sauvegarde Fond
	PULS A,X
	PSHU A,X
* n:11 x: 3 y: 18 Ecriture sprite
	PSHS A,X

* n:7 Sauvegarde Fond
	LDD -119,S
	PSHU D

* n:8 Sauvegarde Fond
	LDD -79,S
	PSHU D

* n:10 Sauvegarde Fond
	LDA -38,S
	PSHU A

* n:7 x: 5 y: 15 Ecriture sprite
	STD -119,S

* n:8 x: 5 y: 16 Ecriture sprite
	STD -79,S

* n:10 x: 7 y: 17 Ecriture sprite
	STA -38,S

	LEAS 40,S
* n:12 Sauvegarde Fond
	PULS A,X
	PSHU A,X
* n:12 x: 3 y: 19 Ecriture sprite
	PSHS A,X

	LEAS 40,S
* n:13 Sauvegarde Fond
	PULS A,X
	PSHU A,X
* n:13 x: 3 y: 20 Ecriture sprite
	PSHS A,X

	LEAS 40,S
* n:15 Sauvegarde Fond
	LDD 40,S
	PSHU D
* n:15 x: 3 y: 22 Ecriture sprite
	ANDA #$F0
	ORA #$0d
	LDB #$ca
	STD 40,S

* n:18 Sauvegarde Fond
	LDD 120,S
	PSHU D
* n:18 x: 3 y: 24 Ecriture sprite
	ANDA #$F0
	ORA #$0c
	LDB #$c2
	STD 120,S

* n:14 Sauvegarde Fond
	PULS A,X
	PSHU A,X
* n:14 x: 3 y: 21 Ecriture sprite
	PSHS A,X

* n:16 Sauvegarde Fond
	LDA 42,S
	PSHU A

* n:17 Sauvegarde Fond
	LDD 81,S
	PSHU D

* n:19 Sauvegarde Fond
	LDA 122,S
	PSHU A

* n:16 x: 7 y: 22 Ecriture sprite
	LDA #$00
	STA 42,S

* n:17 x: 5 y: 23 Ecriture sprite
	STD 81,S

* n:19 x: 7 y: 24 Ecriture sprite
	LDA #$ba
	STA 122,S

	LEAS 160,S
* n:20 Sauvegarde Fond
	PULS A,X
	PSHU A,X
* n:20 x: 3 y: 25 Ecriture sprite
	PSHS A,X

	LEAS 40,S
* n:23 Sauvegarde Fond
	LDA 42,S
	PSHU A
* n:23 x: 7 y: 27 Ecriture sprite
	ANDA #$0F
	ORA #$30
	STA 42,S

* n:25 Sauvegarde Fond
	LDA 82,S
	PSHU A
* n:25 x: 7 y: 28 Ecriture sprite
	ANDA #$0F
	ORA #$10
	STA 82,S

* n:21 Sauvegarde Fond
	PULS A,X
	PSHU A,X
* n:21 x: 3 y: 26 Ecriture sprite
	PSHS A,X

* n:22 Sauvegarde Fond
	LDD 40,S
	PSHU D

* n:24 Sauvegarde Fond
	LDD 80,S
	PSHU D

* n:26 Sauvegarde Fond
	LDA 121,S
	PSHU A

* n:22 x: 3 y: 27 Ecriture sprite
	STD 40,S

* n:24 x: 3 y: 28 Ecriture sprite
	STD 80,S

* n:26 x: 5 y: 29 Ecriture sprite
	STA 121,S

	LEAS 282,S
* n:27 Sauvegarde Fond
	LDD -121,S
	PSHU D
* n:27 x: 5 y: 30 Ecriture sprite
	LDA #$21
	ANDB #$0F
	ORB #$10
	STD -121,S

* n:28 Sauvegarde Fond
	LDD -81,S
	PSHU D
* n:28 x: 5 y: 31 Ecriture sprite
	LDA #$1d
	ANDB #$0F
	ORB #$30
	STD -81,S

* n:29 Sauvegarde Fond
	LDD -41,S
	PSHU D
* n:29 x: 5 y: 32 Ecriture sprite
	LDA #$0d
	ANDB #$0F
	ORB #$20
	STD -41,S

* n:30 Sauvegarde Fond
	LDD -1,S
	PSHU D
* n:30 x: 5 y: 33 Ecriture sprite
	LDA #$ad
	ANDB #$0F
	ORB #$30
	STD -1,S

* n:31 Sauvegarde Fond
	LDD 38,S
	PSHU D
* n:31 x: 3 y: 34 Ecriture sprite
	ANDA #$F0
	ORA #$0c
	LDB #$bb
	STD 38,S

* n:32 Sauvegarde Fond
	LDA 40,S
	PSHU A
* n:32 x: 7 y: 34 Ecriture sprite
	ANDA #$0F
	ORA #$00
	STA 40,S

* n:33 Sauvegarde Fond
	LDD 78,S
	PSHU D
* n:33 x: 3 y: 35 Ecriture sprite
	ANDA #$F0
	ORA #$0d
	LDB #$bb
	STD 78,S

* n:35 Sauvegarde Fond
	LDD 118,S
	PSHU D
* n:35 x: 3 y: 36 Ecriture sprite
	ANDA #$F0
	ORA #$0d
	LDB #$ba
	STD 118,S

* n:34 Sauvegarde Fond
	LDA 80,S
	PSHU A

* n:36 Sauvegarde Fond
	LDA 120,S
	PSHU A

* n:34 x: 7 y: 35 Ecriture sprite
	STA 80,S

* n:36 x: 7 y: 36 Ecriture sprite
	STA 120,S

	LEAS 279,S
* n:37 Sauvegarde Fond
	LDD -121,S
	PSHU D
* n:37 x: 3 y: 37 Ecriture sprite
	ANDA #$F0
	ORA #$0d
	LDB #$aa
	STD -121,S

* n:39 Sauvegarde Fond
	LDD -80,S
	PSHU D
* n:39 x: 5 y: 38 Ecriture sprite
	LDA #$ad
	ANDB #$0F
	ORB #$90
	STD -80,S

* n:40 Sauvegarde Fond
	LDD -40,S
	PSHU D
* n:40 x: 5 y: 39 Ecriture sprite
	LDA #$9d
	ANDB #$0F
	ORB #$90
	STD -40,S

* n:41 Sauvegarde Fond
	LDA 0,S
	PSHU A
* n:41 x: 5 y: 40 Ecriture sprite
	ANDA #$0F
	ORA #$d0
	STA 0,S

* n:42 Sauvegarde Fond
	LDA 40,S
	PSHU A
* n:42 x: 5 y: 41 Ecriture sprite
	ANDA #$0F
	ORA #$d0
	STA 40,S

* n:43 Sauvegarde Fond
	LDD 80,S
	PSHU D
* n:43 x: 5 y: 42 Ecriture sprite
	LDA #$bb
	ANDB #$0F
	ORB #$a0
	STD 80,S

* n:44 Sauvegarde Fond
	LDD 120,S
	PSHU D
* n:44 x: 5 y: 43 Ecriture sprite
	LDA #$aa
	ANDB #$0F
	ORB #$a0
	STD 120,S

* n:38 Sauvegarde Fond
	LDA -119,S
	PSHU A

* n:38 x: 7 y: 37 Ecriture sprite
	STA -119,S

	LEAS 240,S
