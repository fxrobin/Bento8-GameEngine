/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : TEST1X10.asm
 * Fichier destination : TEST1X10.BIN
 * Contenu :
 *     Main     0:TEST1X10.asm 7639
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
     12        8000                      ORG $8000
     13
     14                           *****************************************>>
     15                           * Constantes et variables
     16                           *****************************************>>
     17                  0014     DEBUTECRANA EQU $0014       * test pour f>>
     18                  1F40     FINECRANA EQU $1F40  * fin de la RAM A vi>>
     19                  2014     DEBUTECRANB EQU $2014       * test pour f>>
     20                  3F40     FINECRANB EQU $3F40  * fin de la RAM B vi>>
     21
     22        8000 0000          SSAVE FDB $0000
     23
     24                           *****************************************>>
     25                           * Debut du programme
     26                           *****************************************>>
     27  2     8002 1A   50              ORCC #$50     * a documenter (inte>>
     28                            
     29  2     8004 86   7B              LDA #$7B      * passage en mode 16>>
     30  5     8006 B7   E7DC            STA $E7DC
     31
     32                           *****************************************>>
     33                           * Initialisation de la palette de couleur>>
     34                           *****************************************>>
     35  4     8009 108E 820B            LDY #TABPALETTE
     36  2     800D 4F                   CLRA
     37        800E               SETPALETTE
     38  5+1   800E 34   02              PSHS A
     39  2     8010 48                   ASLA
     40  5     8011 B7   E7DB            STA $E7DB
     41  5+3   8014 EC   A1              LDD ,Y++
     42  5     8016 F7   E7DA            STB $E7DA
     43  5     8019 B7   E7DA            STA $E7DA
     44  5+1   801C 35   02              PULS A
     45  2     801E 4C                   INCA
     46  5     801F 108C 822B            CMPY #FINTABPALETTE
     47  3     8023 26   E9              BNE    SETPALETTE
     48                            
     49                           *****************************************>>
     50                           * Initialisation de la routine de commuta>>
     51                           *****************************************>>
     52  5     8025 F6   6081            LDB $6081 * A documenter
     53  2     8028 CA   10              ORB #$10  * mettre le bit d4 a 1
     54  5     802A F7   6081            STB $6081
     55  5     802D F7   E7E7            STB $E7E7
     56  8     8030 BD   806E            JSR SCRC * On monte la page 2 en R>>
     57                                           * On monte la page 0 en R>>
     58                            
     59                           *---------------------------------------->>
     60                           * Initialisation des deux pages videos av>>
     61                           *---------------------------------------->>
     62  2     8033 C6   03              LDB #$03  * On monte la page 3
     63  5     8035 F7   E7E5            STB $E7E5 * en RAM Donnees (A000-D>>
     64                            
     65  8     8038 BD   80A1            JSR DRAW_RAM_DATA_TO_CART_160x200
     66  8     803B BD   806E            JSR SCRC
     67  8     803E BD   80A1            JSR DRAW_RAM_DATA_TO_CART_160x200
     68  8     8041 BD   806E            JSR SCRC
     69
     70  8     8044 BD   8110            JSR DRAW_TEST1X100000 * Init Sprit>>
     71  8     8047 BD   806E            JSR SCRC              * Positionne>>
     72  8     804A BD   8110            JSR DRAW_TEST1X100000 * sprites su>>
     73  8     804D BD   806E            JSR SCRC              * arriere pl>>
     74                            
     75                           *---------------------------------------->>
     76                           * Boucle principale
     77                           *---------------------------------------->>
     78        8050               MAIN
     79                                  * Effacement et affichage des spri>>
     80  7+3   8050 AD   9F 8176         JSR [DRAW_EREF_TEST1X100000_1] * T>>
     81  8     8054 BD   8110            JSR DRAW_TEST1X100000 * TODO boulc>>
     82                            
     83                                  * Gestion des deplacements
     84  8     8057 BD   81DC            JSR JOY_READ
     85  6     805A BE   8172            LDX POS_TEST1X100000 * avance de 2>>
     86  6     805D FC   8174            LDD POS_TEST1X100000+2
     87  6     8060 BF   8174            STX POS_TEST1X100000+2
     88  7     8063 B3   81F9            SUBD JOY_STATUS
     89  6     8066 FD   8172            STD POS_TEST1X100000
     90
     91  8     8069 BD   806E            JSR SCRC        * changement de pa>>
     92  3     806C 20   E2              BRA MAIN
     93
     94                           *****************************************>>
     95                           * Changement de page ESPACE ECRAN (affich>>
     96                           *      $E7DD determine la page affichee d>>
     97                           *      D7=0 D6=0 D5=0 D4=0 (#$0_) : page >>
     98                           *      D7=0 D6=1 D5=0 D4=0 (#$4_) : page >>
     99                           *      D7=1 D6=0 D5=0 D4=0 (#$8_) : page >>
    100                           *      D7=1 D6=1 D5=0 D4=0 (#$C_) : page >>
    101                           *   D3 D2 D1 D0  (#$_0 a #$_F) : couleur >>
    102                           *   Remarque : D5 et D4 utilisable unique>>
    103                           *
    104                           * Changement de page ESPACE CARTOUCHE (ec>>
    105                           *      $E7E6 determine la page affichee d>>
    106                           *   D5 : 1 = espace cartouche recouvert p>>
    107                           *   D4 : 0 = CAS1N valide : banques 0-15 >>
    108                           *      D5=1 D4=0 D3=0 D2=0 D1=0 D0=0 (#$6>>
    109                           *   ...
    110                           *      D5=1 D4=0 D3=1 D2=1 D1=1 D0=1 (#$6>>
    111                           *      D5=1 D4=1 D3=0 D2=0 D1=0 D0=0 (#$7>>
    112                           *   ...
    113                           *      D5=1 D4=1 D3=1 D2=1 D1=1 D0=1 (#$7>>
    114                           *****************************************>>
    115        806E               SCRC
    116  8     806E BD   8096            JSR VSYNC
    117                            
    118  6     8071 BE   8176            LDX DRAW_EREF_TEST1X100000_1      >>
    119  7     8074 10BE 8178            LDY DRAW_EREF_TEST1X100000_1+2  * >>
    120  7     8078 10BF 8176            STY DRAW_EREF_TEST1X100000_1    * >>
    121  6     807C BF   8178            STX DRAW_EREF_TEST1X100000_1+2  * >>
    122                            
    123  5     807F F6   808D            LDB SCRC0+1   * charge la valeur d>>
    124  2     8082 C4   80              ANDB #$80     * permute #$00 ou #$>>
    125  2     8084 CA   0F              ORB #$0F      * recharger la coule>>
    126  5     8086 F7   E7DD            STB $E7DD     * changement page da>>
    127  7     8089 73   808D            COM SCRC0+1   * modification du co>>
    128        808C               SCRC0
    129  2     808C C6   00              LDB #$00
    130  2     808E C4   02              ANDB #$02     * permute #$60 ou #$>>
    131  2     8090 CA   60              ORB #$60      * espace cartouche r>>
    132  5     8092 F7   E7E6            STB $E7E6     * changement page da>>
    133  5     8095 39                   RTS                  * E7E6 D5=1 p>>
    134                                                       * CAS1N : ban>>
    135
    136                           *****************************************>>
    137                           * Attente VBL
    138                           *****************************************>>
    139        8096               VSYNC
    140        8096               VSYNC_1
    141  7     8096 7D   E7E7            TST    $E7E7
    142  3     8099 2A   FB              BPL    VSYNC_1
    143        809B               VSYNC_2
    144  7     809B 7D   E7E7            TST    $E7E7
    145  3     809E 2B   FB              BMI    VSYNC_2
    146  5     80A0 39                   RTS
    147
    148                           *****************************************>>
    149                           * Affichage de l arriere plan xxx cycles
    150                           *****************************************>>
    151        80A1               DRAW_RAM_DATA_TO_CART_160x200
    152  5+3   80A1 34   48              PSHS U,DP            * sauvegarde >>
    153  7     80A3 10FF 8000            STS >SSAVE
    154                            
    155  4     80A7 10CE 1F40            LDS #FINECRANA       * init pointe>>
    156  3     80AB CE   A000            LDU #$A000
    157
    158        80AE               DRAW_RAM_DATA_TO_CART_160x200A
    159  5+7   80AE 37   3E              PULU A,B,DP,X,Y
    160  5+7   80B0 34   3E              PSHS Y,X,DP,B,A
    161  5+7   80B2 37   3E              PULU A,B,DP,X,Y
    162  5+7   80B4 34   3E              PSHS Y,X,DP,B,A
    163  5+7   80B6 37   3E              PULU A,B,DP,X,Y
    164  5+7   80B8 34   3E              PSHS Y,X,DP,B,A
    165  5+7   80BA 37   3E              PULU A,B,DP,X,Y
    166  5+7   80BC 34   3E              PSHS Y,X,DP,B,A
    167  5+7   80BE 37   3E              PULU A,B,DP,X,Y
    168  5+7   80C0 34   3E              PSHS Y,X,DP,B,A
    169  5+7   80C2 37   3E              PULU A,B,DP,X,Y
    170  5+7   80C4 34   3E              PSHS Y,X,DP,B,A
    171  5     80C6 118C 0014            CMPS #DEBUTECRANA
    172  3     80CA 26   E2              BNE DRAW_RAM_DATA_TO_CART_160x200A>>
    173  5+7   80CC 37   3E              PULU A,B,DP,X,Y
    174  5+7   80CE 34   3E              PSHS Y,X,DP,B,A
    175  5+7   80D0 37   3E              PULU A,B,DP,X,Y
    176  5+7   80D2 34   3E              PSHS Y,X,DP,B,A
    177  5+6   80D4 37   3C              PULU B,DP,X,Y
    178  5+6   80D6 34   3C              PSHS Y,X,DP,B
    179
    180  4     80D8 10CE 3F40            LDS #FINECRANB       * init pointe>>
    181  3     80DC CE   C000            LDU #$C000
    182
    183        80DF               DRAW_RAM_DATA_TO_CART_160x200B
    184  5+7   80DF 37   3E              PULU A,B,DP,X,Y
    185  5+7   80E1 34   3E              PSHS Y,X,DP,B,A
    186  5+7   80E3 37   3E              PULU A,B,DP,X,Y
    187  5+7   80E5 34   3E              PSHS Y,X,DP,B,A
    188  5+7   80E7 37   3E              PULU A,B,DP,X,Y
    189  5+7   80E9 34   3E              PSHS Y,X,DP,B,A
    190  5+7   80EB 37   3E              PULU A,B,DP,X,Y
    191  5+7   80ED 34   3E              PSHS Y,X,DP,B,A
    192  5+7   80EF 37   3E              PULU A,B,DP,X,Y
    193  5+7   80F1 34   3E              PSHS Y,X,DP,B,A
    194  5+7   80F3 37   3E              PULU A,B,DP,X,Y
    195  5+7   80F5 34   3E              PSHS Y,X,DP,B,A
    196  5     80F7 118C 2014            CMPS #DEBUTECRANB
    197  3     80FB 26   E2              BNE DRAW_RAM_DATA_TO_CART_160x200B>>
    198  5+7   80FD 37   3E              PULU A,B,DP,X,Y
    199  5+7   80FF 34   3E              PSHS Y,X,DP,B,A
    200  5+7   8101 37   3E              PULU A,B,DP,X,Y
    201  5+7   8103 34   3E              PSHS Y,X,DP,B,A
    202  5+6   8105 37   3C              PULU B,DP,X,Y
    203  5+6   8107 34   3C              PSHS Y,X,DP,B
    204
    205  7     8109 10FE 8000            LDS  >SSAVE          * rechargemen>>
    206  5+3   810D 35   48              PULS U,DP
    207  5     810F 39                   RTS
    208
    209                           *****************************************>>
    210                           * Affiche un computed sprite en xxx cycle>>
    211                           *****************************************>>
    212        8110               DRAW_TEST1X100000
    213  5+3   8110 34   48              PSHS U,DP
    214  7     8112 10FF 8000            STS >SSAVE
    215
    216  7     8116 10FE 8172            LDS POS_TEST1X100000
    217  3     811A CE   8172            LDU #DATA_TEST1X100000_1
    218
    219  4+1   811D A6   7F              LDA -1,S
    220  6     811F BE   8176            LDX DRAW_EREF_TEST1X100000_1
    221  4+1   8122 A7   0E              STA 14,X
    222  2     8124 86   98              LDA #$98
    223  4+1   8126 A7   7F              STA -1,S
    224  4+1   8128 A6   E8 D7           LDA -41,S
    225  6     812B BE   8176            LDX DRAW_EREF_TEST1X100000_1
    226  4+1   812E A7   88 12           STA 18,X
    227  2     8131 86   89              LDA #$89
    228  4+1   8133 A7   E8 D7           STA -41,S
    229
    230  7     8136 10FE 8174            LDS POS_TEST1X100000+2
    231  3     813A CE   8172            LDU #DATA_TEST1X100000_2
    232
    233  4+1   813D A6   7F              LDA -1,S
    234  6     813F BE   8176            LDX DRAW_EREF_TEST1X100000_1
    235  4+1   8142 A7   88 1E           STA 30,X
    236  2     8145 86   89              LDA #$89
    237  4+1   8147 A7   7F              STA -1,S
    238  4+1   8149 A6   E8 D7           LDA -41,S
    239  6     814C BE   8176            LDX DRAW_EREF_TEST1X100000_1
    240  4+1   814F A7   88 22           STA 34,X
    241  2     8152 86   98              LDA #$98
    242  4+1   8154 A7   E8 D7           STA -41,S
    243
    244  6     8157 BE   8172            LDX POS_TEST1X100000 * save des po>>
    245  7     815A 10BE 8176            LDY DRAW_EREF_TEST1X100000_1
    246  5+1   815E AF   A8 2D           STX 45,Y
    247  6     8161 BE   8174            LDX POS_TEST1X100000+2
    248  7     8164 10BE 8176            LDY DRAW_EREF_TEST1X100000_1
    249  5+1   8168 AF   A8 2F           STX 47,Y
    250
    251  7     816B 10FE 8000            LDS  >SSAVE
    252  5+3   816F 35   48              PULS U,DP
    253  5     8171 39                   RTS
    254
    255        8172               DATA_TEST1X100000_1
    256        8172               DATA_TEST1X100000_2
    257        8172               POS_TEST1X100000
    258        8172 1F40                 FDB $1F40
    259        8174 3F40                 FDB $3F40
    260        8176               DRAW_EREF_TEST1X100000_1
    261        8176 817A                 FDB E1DRAW_TEST1X100000
    262        8178 81AB                 FDB E2DRAW_TEST1X100000
    263
    264        817A               E1DRAW_TEST1X100000
    265  5+3   817A 34   48              PSHS U,DP
    266  7     817C 10FF 8000            STS >SSAVE
    267
    268  7     8180 10FE 81A7            LDS E1POS_TEST1X100000
    269  3     8184 CE   81A7            LDU #E1DATA_TEST1X100000_1
    270
    271  2     8187 86   98              LDA #$98
    272  4+1   8189 A7   7F              STA -1,S
    273  2     818B 86   89              LDA #$89
    274  4+1   818D A7   E8 D7           STA -41,S
    275
    276  7     8190 10FE 81A9            LDS E1POS_TEST1X100000+2
    277  3     8194 CE   81A7            LDU #E1DATA_TEST1X100000_2
    278
    279  2     8197 86   89              LDA #$89
    280  4+1   8199 A7   7F              STA -1,S
    281  2     819B 86   98              LDA #$98
    282  4+1   819D A7   E8 D7           STA -41,S
    283
    284  7     81A0 10FE 8000            LDS  >SSAVE
    285  5+3   81A4 35   48              PULS U,DP
    286  5     81A6 39                   RTS
    287
    288        81A7               E1DATA_TEST1X100000_1
    289        81A7               E1DATA_TEST1X100000_2
    290        81A7               E1POS_TEST1X100000
    291        81A7 1F40                 FDB $1F40
    292        81A9 3F40                 FDB $3F40
    293
    294        81AB               E2DRAW_TEST1X100000
    295  5+3   81AB 34   48              PSHS U,DP
    296  7     81AD 10FF 8000            STS >SSAVE
    297
    298  7     81B1 10FE 81D8            LDS E2POS_TEST1X100000
    299  3     81B5 CE   81D8            LDU #E2DATA_TEST1X100000_1
    300
    301  2     81B8 86   98              LDA #$98
    302  4+1   81BA A7   7F              STA -1,S
    303  2     81BC 86   89              LDA #$89
    304  4+1   81BE A7   E8 D7           STA -41,S
    305
    306  7     81C1 10FE 81DA            LDS E2POS_TEST1X100000+2
    307  3     81C5 CE   81D8            LDU #E2DATA_TEST1X100000_2
    308
    309  2     81C8 86   89              LDA #$89
    310  4+1   81CA A7   7F              STA -1,S
    311  2     81CC 86   98              LDA #$98
    312  4+1   81CE A7   E8 D7           STA -41,S
    313
    314  7     81D1 10FE 8000            LDS  >SSAVE
    315  5+3   81D5 35   48              PULS U,DP
    316  5     81D7 39                   RTS
    317
    318        81D8               E2DATA_TEST1X100000_1
    319        81D8               E2DATA_TEST1X100000_2
    320        81D8               E2POS_TEST1X100000
    321        81D8 1F40                 FDB $1F40
    322        81DA 3F40                 FDB $3F40
    323                            
    324                           *---------------------------------------
    325                           * Get joystick parameters
    326                           *---------------------------------------
    327        81DC               JOY_READ
    328  3     81DC 8E   E7CF            ldx    #$e7cf
    329  4     81DF 108E E7CD            ldy    #$e7cd
    330  3     81E3 CE   81FB            ldu    #JOY_TABLE
    331  3     81E6 CC   400F            ldd    #$400f
    332  5     81E9 F4   E7CC            andb   >$e7cc  * Read position
    333  4+1   81EC E6   C5              ldb    b,u     * Read orientation
    334  5     81EE F7   81F9            stb    JOY_STATUS * Orientation
    335  4+0   81F1 A4   A4              anda   ,y      * Read button
    336  2     81F3 88   40              eora   #$40    * status
    337  5     81F5 B7   81FA            sta    JOY_STATUS+1 * Boutton
    338  5     81F8 39                   RTS
    339        81F9               JOY_STATUS
    340        81F9 00                   FCB $00 * Pos Joystick
    341        81FA 00                   FCB $00 * 40 Bouton A enfonce
    342        81FB               JOY_TABLE * Utilise pour orientation a vo>>
    343        81FB 0000                 FDB $0000
    344        81FD 0000                 FDB $0000
    345        81FF 0005                 FDB $0005 * 05 Bas Droite
    346        8201 0607                 FDB $0607 * 06 Haut Droite 07 Droi>>
    347        8203 0009                 FDB $0009 * 09 Bas Gauche
    348        8205 0A01                 FDB $0A01 * 0A Haut Gauche 0B Gauc>>
    349        8207 000D                 FDB $000D * 0D Bas
    350        8209 0E00                 FDB $0E00 * 0E Haut 0F Rien
    351
    352        820B               TABPALETTE
    353        820B 0111                 FDB $0111     * index:0  R:51  V:5>>
    354        820D 0143                 FDB $0143     * index:1  R:108 V:1>>
    355        820F 0113                 FDB $0113     * index:2  R:107 V:5>>
    356        8211 0484                 FDB $0484     * index:3  R:132 V:1>>
    357        8213 0112                 FDB $0112     * index:4  R:92  V:6>>
    358        8215 0247                 FDB $0247     * index:5  R:180 V:1>>
    359        8217 0233                 FDB $0233     * index:6  R:116 V:1>>
    360        8219 0177                 FDB $0177     * index:7  R:172 V:1>>
    361        821B 0111                 FDB $0111     * index:8  R:60  V:5>>
    362        821D 0016                 FDB $0016     * index:9  R:164 V:6>>
    363        821F 0698                 FDB $0698     * index:10 R:187 V:1>>
    364        8221 0344                 FDB $0344     * index:11 R:132 V:1>>
    365        8223 0221                 FDB $0221     * index:12 R:68  V:9>>
    366        8225 0452                 FDB $0452     * index:13 R:92  V:1>>
    367        8227 0356                 FDB $0356     * index:14 R:164 V:1>>
    368        8229 0125                 FDB $0125     * index:15 R:140 V:1>>
    369        822B               FINTABPALETTE

000000 Total Errors

000033 Total Symbols
     1x          Label 8172 DATA_TEST1X100000_1
     1x          Label 8172 DATA_TEST1X100000_2
     1x          Equ   0014 DEBUTECRANA
     1x          Equ   2014 DEBUTECRANB
    11x          Label 8176 DRAW_EREF_TEST1X100000_1
     2x          Label 80A1 DRAW_RAM_DATA_TO_CART_160x200
     1x          Label 80AE DRAW_RAM_DATA_TO_CART_160x200A
     1x          Label 80DF DRAW_RAM_DATA_TO_CART_160x200B
     3x          Label 8110 DRAW_TEST1X100000
     1x          Label 81A7 E1DATA_TEST1X100000_1
     1x          Label 81A7 E1DATA_TEST1X100000_2
     1x          Label 817A E1DRAW_TEST1X100000
     2x          Label 81A7 E1POS_TEST1X100000
     1x          Label 81D8 E2DATA_TEST1X100000_1
     1x          Label 81D8 E2DATA_TEST1X100000_2
     1x          Label 81AB E2DRAW_TEST1X100000
     2x          Label 81D8 E2POS_TEST1X100000
     1x          Equ   1F40 FINECRANA
     1x          Equ   3F40 FINECRANB
     1x          Label 822B FINTABPALETTE
     1x          Label 81DC JOY_READ
     3x          Label 81F9 JOY_STATUS
     1x          Label 81FB JOY_TABLE
     1x          Label 8050 MAIN
     8x          Label 8172 POS_TEST1X100000
     6x          Label 806E SCRC
     2x          Label 808C SCRC0
     1x          Label 800E SETPALETTE
     8x          Label 8000 SSAVE
     1x          Label 820B TABPALETTE
     1x          Label 8096 VSYNC
     1x          Label 8096 VSYNC_1
     1x          Label 809B VSYNC_2

