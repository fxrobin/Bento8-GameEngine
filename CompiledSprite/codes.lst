/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : ./input/CODE/MAIN.ASS
 * Fichier destination : TMP.BIN
 * Contenu :
 *     Main     0:MAIN.ASM     14551
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
     12        6300                      ORG $6300
     13
     14                           *****************************************>>
     15                           * Constantes et variables
     16                           *****************************************>>
     17                  0014     DEBUTECRANA EQU $0014       * test pour f>>
     18                  1F40     FINECRANA   EQU $1F40       * fin de la R>>
     19                  2014     DEBUTECRANB EQU $2014       * test pour f>>
     20                  3F40     FINECRANB   EQU $3F40       * fin de la R>>
     21                  0005     JOY_BD EQU $05       * Bas Droite
     22                  0006     JOY_HD EQU $06       * Haut Droite
     23                  0007     JOY_D  EQU $07       * Droite
     24                  0009     JOY_BG EQU $09       * Bas Gauche
     25                  000A     JOY_HG EQU $0A       * Haut Gauche
     26                  000B     JOY_G  EQU $0B       * Gauche
     27                  000D     JOY_B  EQU $0D       * Bas
     28                  000E     JOY_H  EQU $0E       * Haut
     29                  000F     JOY_C  EQU $0F       * Centre
     30
     31  8     6300 BD   6315            JSR BEGIN
     32
     33                           *<ANIMATION_TABLE>
     34                           * Limite a 128 images par animations
     35        6303               SSAVE
     36        6303 0000                 FDB $0000 * BUFFER for S when usin>>
     37        6305               HERO_POS
     38        6305 1F40                 FDB FINECRANA
     39        6307 3F40                 FDB FINECRANB
     40
     41        6309 0001                 FDB $0001
     42        630B               HERO_IDLE_L
     43        630B               HERO_IDLE_R
     44        630B               HERO_IDLE_L2
     45        630B               HERO_SUBIDLE_B
     46        630B               HERO_WALK_L
     47        630B               HERO_WALK_R
     48        630B               HERO_RUN_L
     49        630B               HERO_RUN_R
     50        630B 04                   FCB $04
     51        630C A000                 FDB $A000
     52        630E A000                 FDB $A000
     53        6310 FF                   FCB $FF
     54        6311 630B                 FDB HERO_RUN_R
     55        6313 0000                 FDB $0000
     56
     57                           *****************************************>>
     58                           * Debut du programme
     59                           *****************************************>>
     60        6315               BEGIN
     61  2     6315 1A   50              ORCC #$50     * a documenter (inte>>
     62                            
     63  2     6317 86   7B              LDA #$7B      * passage en mode 16>>
     64  5     6319 B7   E7DC            STA $E7DC
     65
     66                           *****************************************>>
     67                           * Initialisation de la palette de couleur>>
     68                           *****************************************>>
     69  4     631C 108E 65F5            LDY #TABPALETTE
     70  2     6320 4F                   CLRA
     71        6321               SETPALETTE
     72  5+1   6321 34   02              PSHS A
     73  2     6323 48                   ASLA
     74  5     6324 B7   E7DB            STA $E7DB
     75  5+3   6327 EC   A1              LDD ,Y++
     76  5     6329 F7   E7DA            STB $E7DA
     77  5     632C B7   E7DA            STA $E7DA
     78  5+1   632F 35   02              PULS A
     79  2     6331 4C                   INCA
     80  5     6332 108C 6615            CMPY #FINTABPALETTE
     81  3     6336 26   E9              BNE    SETPALETTE
     82
     83                           *****************************************>>
     84                           * Chargement des pages memoire
     85                           *****************************************>>
     86                  60              SETDP $60
     87  2     6338 86   60              LDA #$60
     88  6     633A 1F   8B              TFR A,DP
     89  2     633C C6   04              LDB #$04                          >>
     90  5     633E F7   E7E5            STB $E7E5                         >>
     91  2     6341 86   01           lda #$01
     92  4     6343 97   48           sta <$6048 * DK.OPC $02 Operation - L>>
     93  4     6345 97   4C           sta <$604C * DK.SEC $02 Secteur a lir>>
     94  3     6347 CC   0004         ldd #$0004
     95  5     634A DD   4A           std <$604A * DK.TRK $04 Secteur a lir>>
     96  3     634C CC   A000         ldd #$A000 * Destination des donnees >>
     97        634F               read
     98  5     634F DD   4F          std <$604F * DK.BUF Destination des do>>
     99  8     6351 BD   E82A        jsr $E82A  * DKFORM Appel
    100  4     6354 C3   0100        addd #$0100
    101  5     6357 1083 E000        cmpd #$E000
    102  3     635B 2D   F2          blt read
    103
    104  2     635D C6   05              LDB #$05                          >>
    105  5     635F F7   E7E5            STB $E7E5                         >>
    106  2     6362 86   01           lda #$01
    107  4     6364 97   48           sta <$6048 * DK.OPC $02 Operation - L>>
    108  4     6366 97   4C           sta <$604C * DK.SEC $02 Secteur a lir>>
    109  3     6368 CC   0004         ldd #$0004
    110  5     636B DD   4A           std <$604A * DK.TRK $04 Secteur a lir>>
    111  3     636D CC   A000         ldd #$A000 * Destination des donnees >>
    112        6370               read2
    113  5     6370 DD   4F          std <$604F * DK.BUF Destination des do>>
    114  8     6372 BD   E82A        jsr $E82A  * DKFORM Appel
    115  4     6375 C3   0100        addd #$0100
    116  5     6378 1083 E000        cmpd #$E000
    117  3     637C 2D   F2          blt read2
    118
    119                           *****************************************>>
    120                           * Initialisation de la routine de commuta>>
    121                           *****************************************>>
    122  4     637E D6   81              LDB $6081 * A documenter
    123  2     6380 CA   10              ORB #$10  * mettre le bit d4 a 1
    124  4     6382 D7   81              STB $6081
    125  5     6384 F7   E7E7            STB $E7E7
    126  8     6387 BD   63C7            JSR SCRC * page 2 en RAM Cartouche>>
    127
    128                           *****************************************>>
    129                           * Initialisation des deux pages videos av>>
    130                           *****************************************>>
    131  3     638A 8E   630B            LDX #HERO_IDLE_R
    132  8     638D BD   6615            JSR HERO_ANIMATION_LOAD
    133
    134        6390 01                   FCB $01
    135        6391               INIT_SCREEN
    136  2     6391 C6   03              LDB #$03                          >>
    137  5     6393 F7   E7E5            STB $E7E5                         >>
    138                           *      JSR DRAW_RAM_DATA_TO_CART_160x200
    139                            
    140  5     6396 F6   6693            LDB HERO_ANIMATION_PAG            >>
    141  5     6399 F7   E7E5            STB $E7E5                         >>
    142  7+3   639C AD   9F 6696         JSR [HERO_ANIMATION_DRW]          >>
    143                            
    144  8     63A0 BD   63C7            JSR SCRC                          >>
    145                                                                    >>
    146  7     63A3 7A   6390            DEC INIT_SCREEN-1
    147  3     63A6 24   E9              BCC INIT_SCREEN
    148
    149                           *****************************************>>
    150                           * Boucle principale
    151                           *****************************************>>
    152        63A8               MAIN
    153                                  * Effacement et affichage des spri>>
    154  5     63A8 F6   6693            LDB HERO_ANIMATION_PAG            >>
    155  5     63AB F7   E7E5            STB $E7E5                         >>
    156  7+3   63AE AD   9F 6694         JSR [HERO_ANIMATION_DEL]          >>
    157  7+3   63B2 AD   9F 6696         JSR [HERO_ANIMATION_DRW]          >>
    158
    159                                  * Gestion des deplacements
    160  8     63B6 BD   63F7            JSR JOY_READ
    161  8     63B9 BD   6411            JSR Hero_Move
    162  8     63BC BD   654D            JSR Compute_Position
    163                            
    164  8     63BF BD   666B            JSR HERO_ANIMATION_NEXT
    165
    166  8     63C2 BD   63C7            JSR SCRC                          >>
    167  3     63C5 20   E1              BRA MAIN
    168
    169                           *****************************************>>
    170                           * Changement de page ESPACE ECRAN (affich>>
    171                           *      $E7DD determine la page affichee d>>
    172                           *      D7=0 D6=0 D5=0 D4=0 (#$0_) : page >>
    173                           *      D7=0 D6=1 D5=0 D4=0 (#$4_) : page >>
    174                           *      D7=1 D6=0 D5=0 D4=0 (#$8_) : page >>
    175                           *      D7=1 D6=1 D5=0 D4=0 (#$C_) : page >>
    176                           *   D3 D2 D1 D0  (#$_0 a #$_F) : couleur >>
    177                           *   Remarque : D5 et D4 utilisable unique>>
    178                           *
    179                           * Changement de page ESPACE CARTOUCHE (ec>>
    180                           *      $E7E6 determine la page affichee d>>
    181                           *   D5 : 1 = espace cartouche recouvert p>>
    182                           *   D4 : 0 = CAS1N valide : banques 0-15 >>
    183                           *      D5=1 D4=0 D3=0 D2=0 D1=0 D0=0 (#$6>>
    184                           *   ...
    185                           *      D5=1 D4=0 D3=1 D2=1 D1=1 D0=1 (#$6>>
    186                           *      D5=1 D4=1 D3=0 D2=0 D1=0 D0=0 (#$7>>
    187                           *   ...
    188                           *      D5=1 D4=1 D3=1 D2=1 D1=1 D0=1 (#$7>>
    189                           *****************************************>>
    190        63C7               SCRC
    191  8     63C7 BD   63EC            JSR VSYNC
    192
    193  5     63CA F6   63E3            LDB SCRC0+1
    194  2     63CD C4   01              ANDB #$01
    195  5     63CF FB   6693            ADDB HERO_ANIMATION_PAG
    196  5     63D2 F7   6693            STB HERO_ANIMATION_PAG
    197                            
    198  5     63D5 F6   63E3            LDB SCRC0+1   * charge la valeur d>>
    199  2     63D8 C4   80              ANDB #$80     * permute #$00 ou #$>>
    200  2     63DA CA   0F              ORB #$0F      * recharger la coule>>
    201  5     63DC F7   E7DD            STB $E7DD     * changement page da>>
    202  7     63DF 73   63E3            COM SCRC0+1   * modification du co>>
    203        63E2               SCRC0
    204  2     63E2 C6   00              LDB #$00
    205  2     63E4 C4   02              ANDB #$02     * permute #$60 ou #$>>
    206  2     63E6 CA   60              ORB #$60      * espace cartouche r>>
    207  5     63E8 F7   E7E6            STB $E7E6     * changement page da>>
    208  5     63EB 39                   RTS                  * E7E6 D5=1 p>>
    209                                                       * CAS1N : ban>>
    210
    211                           *****************************************>>
    212                           * Attente VBL
    213                           *****************************************>>
    214        63EC               VSYNC
    215        63EC               VSYNC_1
    216  7     63EC 7D   E7E7            TST    $E7E7
    217  3     63EF 2A   FB              BPL    VSYNC_1
    218        63F1               VSYNC_2
    219  7     63F1 7D   E7E7            TST    $E7E7
    220  3     63F4 2B   FB              BMI    VSYNC_2
    221  5     63F6 39                   RTS
    222
    223                           ****************************************
    224                           * Get joystick parameters
    225                           ****************************************
    226        63F7               JOY_READ
    227  3     63F7 8E   E7CF            ldx    #$e7cf
    228  4     63FA 108E E7CD            ldy    #$e7cd
    229  3     63FE CC   400F            ldd    #$400f
    230  5     6401 F4   E7CC            andb   >$e7cc     * Read position
    231  5     6404 F7   640F            stb    JOY_DIR_STATUS
    232  4+0   6407 A4   A4              anda   ,y         * Read button
    233  2     6409 88   40              eora   #$40
    234  5     640B B7   6410            sta    JOY_BTN_STATUS
    235  5     640E 39                   RTS
    236        640F               JOY_DIR_STATUS
    237        640F 00                   FCB $00 * Position Pad
    238        6410               JOY_BTN_STATUS
    239        6410 00                   FCB $00 * 40 Bouton A enfonce
    240
    241                           *****************************************>>
    242                           * Subroutine to      make HERO walk/run
    243                           *****************************************>>
    244        6411               Hero_Move
    245  5     6411 B6   640F            LDA JOY_DIR_STATUS
    246  2     6414 81   0B              CMPA #JOY_G
    247  3     6416 26   02              BNE Hero_NotLeft
    248  3     6418 20   69              BRA Hero_MoveLeft
    249
    250        641A               Hero_NotLeft                   * XREF: He>>
    251  2     641A 81   07              CMPA #JOY_D
    252  3     641C 26   03              BNE Hero_NotLeftOrRight
    253  5     641E 16   00A6            LBRA Hero_MoveRight
    254
    255        6421               Hero_NotLeftOrRight            * XREF: He>>
    256  6     6421 FC   667B            LDD HERO_G_SPEED
    257  5     6424 1083 0000            CMPD #$0000
    258  3     6428 2D   2E              BLT Hero_NotLeftOrRight_00 * se de>>
    259  7     642A B3   668D            SUBD HERO_FRICTION     * se deplac>>
    260  3     642D 24   12              BCC Hero_NotLeftOrRight_01 * si on>>
    261  3     642F CC   0000            LDD #$0000
    262  6     6432 FD   667B            STD HERO_G_SPEED
    263  6     6435 FD   667F            STD HERO_X_SPS
    264  3     6438 8E   630B            LDX #HERO_IDLE_R        * Charge a>>
    265  6     643B BF   668F            STX HERO_ANIMATION_ADR      * Sauv>>
    266  5     643E 16   00C4            LBRA Hero_MoveUpdatePos
    267        6441               Hero_NotLeftOrRight_01
    268  5     6441 1083 0600            CMPD #HERO_JOG_SPD_LIMIT
    269  3     6445 2C   0B              BGE Hero_NotLeftOrRight_02
    270  6     6447 FD   667B            STD HERO_G_SPEED
    271  3     644A 8E   630B            LDX #HERO_WALK_R        * Charge a>>
    272  6     644D BF   668F            STX HERO_ANIMATION_ADR      * Sauv>>
    273  3     6450 20   03              BRA Hero_NotLeftOrRight_03
    274        6452               Hero_NotLeftOrRight_02
    275  6     6452 FD   667B            STD HERO_G_SPEED
    276        6455               Hero_NotLeftOrRight_03
    277  5     6455 16   00AD            LBRA Hero_MoveUpdatePos
    278        6458               Hero_NotLeftOrRight_00
    279  7     6458 F3   668D            ADDD HERO_FRICTION     * se deplac>>
    280  3     645B 24   0F              BCC Hero_NotLeftOrRight_11 * si on>>
    281  3     645D CC   0000            LDD #$0000
    282  6     6460 FD   667B            STD HERO_G_SPEED
    283  3     6463 8E   630B            LDX #HERO_IDLE_L        * Charge a>>
    284  6     6466 BF   668F            STX HERO_ANIMATION_ADR      * Sauv>>
    285  5     6469 16   0099            LBRA Hero_MoveUpdatePos
    286        646C               Hero_NotLeftOrRight_11
    287  5     646C 1083 0600            CMPD #HERO_JOG_SPD_LIMIT
    288  3     6470 2F   0B              BLE Hero_NotLeftOrRight_12
    289  6     6472 FD   667B            STD HERO_G_SPEED
    290  3     6475 8E   630B            LDX #HERO_WALK_L        * Charge a>>
    291  6     6478 BF   668F            STX HERO_ANIMATION_ADR      * Sauv>>
    292  3     647B 20   03              BRA Hero_NotLeftOrRight_13
    293        647D               Hero_NotLeftOrRight_12
    294  6     647D FD   667B            STD HERO_G_SPEED
    295        6480               Hero_NotLeftOrRight_13
    296  5     6480 16   0082            LBRA Hero_MoveUpdatePos
    297
    298        6483               Hero_MoveLeft                      * XREF>>
    299  6     6483 FC   667B            LDD HERO_G_SPEED            * Char>>
    300  5     6486 1083 0000            CMPD #$0000                 * Test>>
    301  3     648A 2F   11              BLE Hero_MoveLeft_00        * BRAN>>
    302  7     648C B3   668B            SUBD HERO_DECELERATION      * orie>>
    303  3     648F 24   06              BCC Hero_MoveLeft_03        * BRAN>>
    304  3     6491 CC   0000            LDD #$0000
    305  7     6494 B3   668B            SUBD HERO_DECELERATION      * si l>>
    306        6497               Hero_MoveLeft_03
    307  6     6497 FD   667B            STD HERO_G_SPEED            * On s>>
    308  5     649A 16   0068            LBRA Hero_MoveUpdatePos           >>
    309        649D               Hero_MoveLeft_00                         >>
    310                           *      CMPD #$0000                       >>
    311                           *      BNE Hero_MoveLeft_02        * BRAN>>
    312                           *      LDD #$FEFF                        >>
    313                           *Hero_MoveLeft_02
    314  8     649D 10B3 6687            CMPD HERO_NEG_TOP_SPEED     * Comp>>
    315  3     64A1 27   62              BEQ Hero_MoveUpdatePos      * vite>>
    316  7     64A3 B3   6689            SUBD HERO_ACCELERATION      * acce>>
    317  8     64A6 10B3 6687            CMPD HERO_NEG_TOP_SPEED     * Comp>>
    318  3     64AA 2E   0F              BGT Hero_MoveLeft_01        * BRAN>>
    319  3     64AC 8E   630B            LDX #HERO_RUN_L        * Charge an>>
    320  6     64AF BF   668F            STX HERO_ANIMATION_ADR      * Sauv>>
    321  6     64B2 FC   6687            LDD HERO_NEG_TOP_SPEED      * Limi>>
    322  6     64B5 FD   667B            STD HERO_G_SPEED            * Enre>>
    323  5     64B8 16   004A            LBRA Hero_MoveUpdatePos     * Mise>>
    324        64BB               Hero_MoveLeft_01
    325  6     64BB FD   667B            STD HERO_G_SPEED            * Enre>>
    326  3     64BE 8E   630B            LDX #HERO_WALK_L        * Charge a>>
    327  6     64C1 BF   668F            STX HERO_ANIMATION_ADR      * Sauv>>
    328  5     64C4 16   003E            LBRA Hero_MoveUpdatePos
    329
    330        64C7               Hero_MoveRight                  * XREF: H>>
    331  6     64C7 FC   667B            LDD HERO_G_SPEED        * Chargeme>>
    332  5     64CA 1083 0000            CMPD #$0000                 * Test>>
    333  3     64CE 2C   0E              BGE Hero_MoveRight_00       * BRAN>>
    334  7     64D0 F3   668B            ADDD HERO_DECELERATION      * orie>>
    335  3     64D3 24   03              BCC Hero_MoveRight_03       * BRAN>>
    336  6     64D5 FC   668B            LDD HERO_DECELERATION   * si la vi>>
    337        64D8               Hero_MoveRight_03
    338  6     64D8 FD   667B            STD HERO_G_SPEED        * On stock>>
    339  5     64DB 16   0027            LBRA Hero_MoveUpdatePos           >>
    340        64DE               Hero_MoveRight_00                  * Orie>>
    341                           *      CMPD #$0000                       >>
    342                           *      BNE Hero_MoveRight_02       * BRAN>>
    343                           *      LDD #$0100                        >>
    344                           *Hero_MoveRight_02
    345  8     64DE 10B3 6685            CMPD HERO_TOP_SPEED         * Comp>>
    346  3     64E2 27   21              BEQ Hero_MoveUpdatePos      * vite>>
    347  7     64E4 F3   6689            ADDD HERO_ACCELERATION      * acce>>
    348  8     64E7 10B3 6685            CMPD HERO_TOP_SPEED         * Comp>>
    349  3     64EB 2D   0F              BLT Hero_MoveRight_01       * BRAN>>
    350  3     64ED 8E   630B            LDX #HERO_RUN_R                   >>
    351  6     64F0 BF   668F            STX HERO_ANIMATION_ADR      * Sauv>>
    352  6     64F3 FC   6685            LDD HERO_TOP_SPEED          * Limi>>
    353  6     64F6 FD   667B            STD HERO_G_SPEED            * Enre>>
    354  5     64F9 16   0009            LBRA Hero_MoveUpdatePos           >>
    355        64FC               Hero_MoveRight_01
    356  6     64FC FD   667B            STD HERO_G_SPEED            * Enre>>
    357  3     64FF 8E   630B            LDX #HERO_WALK_R        * Charge a>>
    358  6     6502 BF   668F            STX HERO_ANIMATION_ADR      * Sauv>>
    359
    360        6505               Hero_MoveUpdatePos
    361  6     6505 FC   667B            LDD HERO_G_SPEED            * Char>>
    362  6     6508 FD   667D            STD HERO_X_SPEED        * Stockage>>
    363  5     650B 1083 0000            CMPD #$0000                 * Test>>
    364  3     650F 2D   0E              BLT Hero_MoveUpdatePos_00   * BRAN>>
    365  7     6511 F3   667F            ADDD HERO_X_SPS         * Ajout du>>
    366  5     6514 F7   6680            STB HERO_X_SPS+1            * sauv>>
    367  6     6517 1F   89              TFR A,B                     * Divi>>
    368  5     6519 FB   6679            ADDB HERO_X_POS                   >>
    369  3     651C 20   18              BRA Hero_MoveUpdatePos_01
    370        651E               Hero_MoveUpdatePos_V00
    371        651E 00                   FCB $00
    372        651F               Hero_MoveUpdatePos_00
    373  3     651F CC   0000            LDD #$0000
    374  7     6522 B3   667D            SUBD HERO_X_SPEED           * La v>>
    375  7     6525 F3   667F            ADDD HERO_X_SPS         * Ajout du>>
    376  5     6528 F7   6680            STB HERO_X_SPS+1            * sauv>>
    377  6     652B 1F   89              TFR A,B                     * Divi>>
    378  5     652D F7   651E            STB Hero_MoveUpdatePos_V00
    379  5     6530 F6   6679            LDB HERO_X_POS
    380  5     6533 F0   651E            SUBB Hero_MoveUpdatePos_V00 * Ajou>>
    381        6536               Hero_MoveUpdatePos_01
    382                           *      CMPB #$50                         >>
    383                           *      BLE Hero_MoveUpdatePos_02   * Bute>>
    384                           *      LDB #$50                          >>
    385                           *Hero_MoveUpdatePos_02
    386                           *    CMPB #$0C                           >>
    387                           *      BGE Hero_MoveUpdatePos_03   * Bute>>
    388                           *      LDB #$0C                          >>
    389        6536               Hero_MoveUpdatePos_03
    390  5     6536 F7   6679            STB HERO_X_POS
    391  2     6539 C6   00              LDB #$00
    392  5     653B F7   667F            STB HERO_X_SPS                    >>
    393  3     653E CC   0000            LDD #$0000                  * TODO>>
    394  6     6541 FD   6681            STD HERO_Y_SPEED
    395  6     6544 1F   89              TFR A,B                     * divi>>
    396  5     6546 FB   667A            ADDB HERO_Y_POS
    397  5     6549 F7   667A            STB HERO_Y_POS
    398  5     654C 39                   RTS
    399
    400                           * TODO : Braking Animation
    401                           * Sonic enters his braking animation when>>
    402                           * In Sonic 1 and Sonic CD, he then stays >>
    403                           * In the other 3 games, Sonic returns to >>
    404
    405        654D               Compute_Position
    406  5     654D B6   6679            LDA HERO_X_POS
    407  2     6550 44                   LSRA
    408  3     6551 25   17              BCS Compute_Position_01
    409  5     6553 B7   6585            STA Compute_Position_02+1
    410  2     6556 86   28              LDA #$28
    411  5     6558 F6   667A            LDB HERO_Y_POS
    412  2     655B 5A                   DECB
    413  11    655C 3D                   MUL
    414  7     655D F3   6584            ADDD Compute_Position_02
    415  6     6560 FD   6305            STD HERO_POS
    416  4     6563 C3   2000            ADDD #$2000
    417  6     6566 FD   6307            STD HERO_POS+2
    418  5     6569 39                   RTS
    419        656A               Compute_Position_01
    420  5     656A B7   6585            STA Compute_Position_02+1
    421  2     656D 86   28              LDA #$28
    422  5     656F F6   667A            LDB HERO_Y_POS
    423  2     6572 5A                   DECB
    424  11    6573 3D                   MUL
    425  7     6574 F3   6584            ADDD Compute_Position_02
    426  4     6577 C3   2000            ADDD #$2000
    427  6     657A FD   6305            STD HERO_POS
    428  4     657D 83   1FFF            SUBD #$1FFF
    429  6     6580 FD   6307            STD HERO_POS+2
    430  5     6583 39                   RTS
    431        6584               Compute_Position_02
    432        6584 0000                 FDB $0000
    433                            
    434                           *****************************************>>
    435                           * Affichage de l arriere plan xxx cycles
    436                           *****************************************>>
    437        6586               DRAW_RAM_DATA_TO_CART_160x200
    438  5+3   6586 34   48              PSHS U,DP            * sauvegarde >>
    439  7     6588 10FF 6303            STS >SSAVE
    440                            
    441  4     658C 10CE 1F40            LDS #FINECRANA       * init pointe>>
    442  3     6590 CE   A000            LDU #$A000
    443
    444        6593               DRAW_RAM_DATA_TO_CART_160x200A
    445  5+7   6593 37   3E              PULU A,B,DP,X,Y
    446  5+7   6595 34   3E              PSHS Y,X,DP,B,A
    447  5+7   6597 37   3E              PULU A,B,DP,X,Y
    448  5+7   6599 34   3E              PSHS Y,X,DP,B,A
    449  5+7   659B 37   3E              PULU A,B,DP,X,Y
    450  5+7   659D 34   3E              PSHS Y,X,DP,B,A
    451  5+7   659F 37   3E              PULU A,B,DP,X,Y
    452  5+7   65A1 34   3E              PSHS Y,X,DP,B,A
    453  5+7   65A3 37   3E              PULU A,B,DP,X,Y
    454  5+7   65A5 34   3E              PSHS Y,X,DP,B,A
    455  5+7   65A7 37   3E              PULU A,B,DP,X,Y
    456  5+7   65A9 34   3E              PSHS Y,X,DP,B,A
    457  5     65AB 118C 0014            CMPS #DEBUTECRANA
    458  3     65AF 26   E2              BNE DRAW_RAM_DATA_TO_CART_160x200A>>
    459  5+7   65B1 37   3E              PULU A,B,DP,X,Y
    460  5+7   65B3 34   3E              PSHS Y,X,DP,B,A
    461  5+7   65B5 37   3E              PULU A,B,DP,X,Y
    462  5+7   65B7 34   3E              PSHS Y,X,DP,B,A
    463  5+6   65B9 37   3C              PULU B,DP,X,Y
    464  5+6   65BB 34   3C              PSHS Y,X,DP,B
    465
    466  4     65BD 10CE 3F40            LDS #FINECRANB       * init pointe>>
    467  3     65C1 CE   C000            LDU #$C000
    468
    469        65C4               DRAW_RAM_DATA_TO_CART_160x200B
    470  5+7   65C4 37   3E              PULU A,B,DP,X,Y
    471  5+7   65C6 34   3E              PSHS Y,X,DP,B,A
    472  5+7   65C8 37   3E              PULU A,B,DP,X,Y
    473  5+7   65CA 34   3E              PSHS Y,X,DP,B,A
    474  5+7   65CC 37   3E              PULU A,B,DP,X,Y
    475  5+7   65CE 34   3E              PSHS Y,X,DP,B,A
    476  5+7   65D0 37   3E              PULU A,B,DP,X,Y
    477  5+7   65D2 34   3E              PSHS Y,X,DP,B,A
    478  5+7   65D4 37   3E              PULU A,B,DP,X,Y
    479  5+7   65D6 34   3E              PSHS Y,X,DP,B,A
    480  5+7   65D8 37   3E              PULU A,B,DP,X,Y
    481  5+7   65DA 34   3E              PSHS Y,X,DP,B,A
    482  5     65DC 118C 2014            CMPS #DEBUTECRANB
    483  3     65E0 26   E2              BNE DRAW_RAM_DATA_TO_CART_160x200B>>
    484  5+7   65E2 37   3E              PULU A,B,DP,X,Y
    485  5+7   65E4 34   3E              PSHS Y,X,DP,B,A
    486  5+7   65E6 37   3E              PULU A,B,DP,X,Y
    487  5+7   65E8 34   3E              PSHS Y,X,DP,B,A
    488  5+6   65EA 37   3C              PULU B,DP,X,Y
    489  5+6   65EC 34   3C              PSHS Y,X,DP,B
    490
    491  7     65EE 10FE 6303            LDS  >SSAVE          * rechargemen>>
    492  5+3   65F2 35   48              PULS U,DP
    493  5     65F4 39                   RTS
    494                            
    495                           *****************************************>>
    496                           * Palette de 16 couleurs
    497                           *****************************************>>
    498        65F5               TABPALETTE
    499        65F5 0111                 FDB $0111     * index:0  R:51  V:5>>
    500        65F7 0143                 FDB $0143     * index:1  R:108 V:1>>
    501        65F9 0113                 FDB $0113     * index:2  R:107 V:5>>
    502        65FB 0484                 FDB $0484     * index:3  R:132 V:1>>
    503        65FD 0112                 FDB $0112     * index:4  R:92  V:6>>
    504        65FF 0247                 FDB $0247     * index:5  R:180 V:1>>
    505        6601 0233                 FDB $0233     * index:6  R:116 V:1>>
    506        6603 0177                 FDB $0177     * index:7  R:172 V:1>>
    507        6605 0111                 FDB $0111     * index:8  R:60  V:5>>
    508        6607 0016                 FDB $0016     * index:9  R:164 V:6>>
    509        6609 0698                 FDB $0698     * index:10 R:187 V:1>>
    510        660B 0344                 FDB $0344     * index:11 R:132 V:1>>
    511        660D 0221                 FDB $0221     * index:12 R:68  V:9>>
    512        660F 0452                 FDB $0452     * index:13 R:92  V:1>>
    513        6611 0356                 FDB $0356     * index:14 R:164 V:1>>
    514        6613 0125                 FDB $0125     * index:15 R:140 V:1>>
    515        6615               FINTABPALETTE
    516
    517                           *****************************************>>
    518                           * HERO Animations
    519                           * ---------------
    520                           * Note: Speed abs +0, rel +8, rel cap +10>>
    521                           *
    522                           * Chargement nouvelle animation
    523                           *    nouvelle frame = 109 a 119
    524                           *
    525                           * Chargement frame suivante
    526                           *    frame identique = 15
    527                           * ou frame suivante  = 116 a 126
    528                           *
    529                           * Chargement frame suivante avec branchem>>
    530                           *    nouvelle frame = 165 a 175
    531                           * ou frame suivante = 172 a 182
    532                           *
    533                           * Chargement frame suivante avec retour s>>
    534                           *    nouvelle frame = 167 a 177
    535                           * ou frame suivante = 174 a 184
    536                           *****************************************>>
    537
    538        6615               HERO_ANIMATION_LOAD                      >>
    539  6     6615 BF   668F            STX HERO_ANIMATION_ADR
    540  6     6618 BF   6691            STX HERO_ANIMATION_RTN_ADR
    541  7     661B 7F   6698            CLR HERO_ANIMATION_IMC            >>
    542        661E               HERO_ANIMATION_LOAD_00
    543  5+1   661E EC   1E              LDD -2,X                          >>
    544  2     6620 81   00              CMPA #$00                         >>
    545  3     6622 27   07              BEQ HERO_ANIMATION_LOAD_01
    546  5     6624 F0   667B            SUBB HERO_G_SPEED                 >>
    547  3     6627 24   02              BCC HERO_ANIMATION_LOAD_01
    548  2     6629 C6   01              LDB #$01                          >>
    549        662B               HERO_ANIMATION_LOAD_01
    550  5     662B F7   669A            STB HERO_ANIMATION_FRR            >>
    551  5     662E B6   6698            LDA HERO_ANIMATION_IMC
    552  2     6631 C6   05              LDB #$05
    553  11    6633 3D                   MUL
    554  7     6634 F3   668F            ADDD HERO_ANIMATION_ADR
    555  6     6637 1F   02              TFR D,Y
    556  4+0   6639 E6   A4              LDB ,Y
    557  2     663B C1   1F              CMPB #$1F                         >>
    558  3     663D 22   0E              BHI HERO_ANIMATION_LOAD_NOPAGE
    559  5     663F F7   6693            STB HERO_ANIMATION_PAG            >>
    560  5+1   6642 AE   21              LDX 1,Y
    561  6     6644 BF   6696            STX HERO_ANIMATION_DRW
    562  5+1   6647 AE   23              LDX 3,Y
    563  6     6649 BF   6694            STX HERO_ANIMATION_DEL
    564  5     664C 39                   RTS
    565        664D               HERO_ANIMATION_LOAD_NOPAGE
    566  2     664D C1   FF              CMPB #$FF
    567  3     664F 26   0C              BNE HERO_ANIMATION_LOAD_FE
    568  5+1   6651 AE   23              LDX 3,Y
    569  6     6653 BF   6698            STX HERO_ANIMATION_IMC            >>
    570  5+1   6656 AE   21              LDX 1,Y
    571  6     6658 BF   668F            STX HERO_ANIMATION_ADR
    572  3     665B 20   C1              BRA HERO_ANIMATION_LOAD_00  * Outp>>
    573        665D               HERO_ANIMATION_LOAD_FE
    574  6     665D BE   6691            LDX HERO_ANIMATION_RTN_ADR  * RETU>>
    575  6     6660 BF   668F            STX HERO_ANIMATION_ADR
    576  5     6663 F6   6699            LDB HERO_ANIMATION_RTN_IMC
    577  5     6666 F7   6698            STB HERO_ANIMATION_IMC
    578  3     6669 20   B3              BRA HERO_ANIMATION_LOAD_00  * Outp>>
    579
    580        666B               HERO_ANIMATION_NEXT
    581  7     666B 7A   669A            DEC HERO_ANIMATION_FRR
    582  3     666E 27   01              BEQ HERO_ANIMATION_NEXT_00  * BRAN>>
    583  5     6670 39                   RTS
    584        6671               HERO_ANIMATION_NEXT_00
    585  7     6671 7C   6698            INC HERO_ANIMATION_IMC
    586  6     6674 BE   668F            LDX HERO_ANIMATION_ADR
    587  3     6677 20   A5              BRA HERO_ANIMATION_LOAD_00  * Outp>>
    588                            
    589                           *   SAMPLE CODE ANIMATION
    590                           *      ---------------------
    591                           *      FDB $0018            * 00 Absolute>>
    592                           *HERO_IDLE_L
    593                           *      FCB $01                     * Page>>
    594                           *      FDB $A000            * Adresse drw>>
    595                           *      FDB $A000            * Adresse del>>
    596                           *
    597                           *      FCB $FF                     * FF S>>
    598                           *      FDB HERO_IDLE-C * adresse animatio>>
    599                           *      FDB $0301            * 03 image ci>>
    600                           *
    601                           *      FCB $FE                     * FE R>>
    602                           *
    603                           *      LDX #HERO_IDLE_R
    604                           *      JSR HERO_ANIMATION_LOAD
    605                           *
    606                           *      JSR HERO_ANIMATION_NEXT
    607
    608                           *****************************************>>
    609                           * HERO Variables
    610                           *****************************************>>
    611                  0400     HERO_WALK_SPD_LIMIT EQU $0400
    612                  0600     HERO_JOG_SPD_LIMIT  EQU $0600
    613        6679               HERO_X_POS
    614        6679 50                   FCB $50                     * Hori>>
    615        667A               HERO_Y_POS
    616        667A C8                   FCB $C8                     * Vert>>
    617        667B               HERO_G_SPEED         * Ground Speed
    618        667B 0000                 FDB $0000            * First byte >>
    619        667D               HERO_X_SPEED
    620        667D 0000                 FDB $0000            * Horizontal >>
    621        667F               HERO_X_SPS
    622        667F 0000                 FDB $0000            * Subpixel X >>
    623        6681               HERO_Y_SPEED
    624        6681 0000                 FDB $0000            * Vertical Sp>>
    625        6683               HERO_Y_SPS
    626        6683 0000                 FDB $0000            * Subpixel Y >>
    627        6685               HERO_TOP_SPEED
    628        6685 0600                 FDB $0600        * vitesse maximum>>
    629        6687               HERO_NEG_TOP_SPEED
    630        6687 FA00                 FDB $FA00        * vitesse maximum>>
    631        6689               HERO_ACCELERATION
    632        6689 000C                 FDB $000C        * constante accel>>
    633        668B               HERO_DECELERATION
    634        668B 0080                 FDB $0080        * constante decel>>
    635        668D               HERO_FRICTION
    636        668D 000C                 FDB $000C        * constante de fr>>
    637        668F               HERO_ANIMATION_ADR
    638        668F 0000                 FDB $0000        * Animation coura>>
    639        6691               HERO_ANIMATION_RTN_ADR
    640        6691 0000                 FDB $0000        * Animation coura>>
    641        6693               HERO_ANIMATION_PAG
    642        6693 00                   FCB $00          * Animation coura>>
    643        6694               HERO_ANIMATION_DEL
    644        6694 0000                 FDB $0000        * Animation coura>>
    645        6696               HERO_ANIMATION_DRW
    646        6696 0000                 FDB $0000        * Animation coura>>
    647        6698               HERO_ANIMATION_IMC
    648        6698 00                   FCB $00          * Animation coura>>
    649        6699               HERO_ANIMATION_RTN_IMC
    650        6699 00                   FCB $00          * Animation coura>>
    651        669A               HERO_ANIMATION_FRR
    652        669A 00                   FCB $00          * Animation coura>>

000000 Total Errors

000097 Total Symbols
     1x          Label 6315 BEGIN
     1x          Label 654D Compute_Position
     1x          Label 656A Compute_Position_01
     4x          Label 6584 Compute_Position_02
     1x          Equ   0014 DEBUTECRANA
     1x          Equ   2014 DEBUTECRANB
     0x          Label 6586 DRAW_RAM_DATA_TO_CART_160x200
     1x          Label 6593 DRAW_RAM_DATA_TO_CART_160x200A
     1x          Label 65C4 DRAW_RAM_DATA_TO_CART_160x200B
     2x          Equ   1F40 FINECRANA
     2x          Equ   3F40 FINECRANB
     1x          Label 6615 FINTABPALETTE
     2x          Label 6689 HERO_ACCELERATION
    13x          Label 668F HERO_ANIMATION_ADR
     2x          Label 6694 HERO_ANIMATION_DEL
     3x          Label 6696 HERO_ANIMATION_DRW
     2x          Label 669A HERO_ANIMATION_FRR
     5x          Label 6698 HERO_ANIMATION_IMC
     1x          Label 6615 HERO_ANIMATION_LOAD
     3x          Label 661E HERO_ANIMATION_LOAD_00
     2x          Label 662B HERO_ANIMATION_LOAD_01
     1x          Label 665D HERO_ANIMATION_LOAD_FE
     1x          Label 664D HERO_ANIMATION_LOAD_NOPAGE
     1x          Label 666B HERO_ANIMATION_NEXT
     1x          Label 6671 HERO_ANIMATION_NEXT_00
     5x          Label 6693 HERO_ANIMATION_PAG
     2x          Label 6691 HERO_ANIMATION_RTN_ADR
     1x          Label 6699 HERO_ANIMATION_RTN_IMC
     4x          Label 668B HERO_DECELERATION
     2x          Label 668D HERO_FRICTION
    17x          Label 667B HERO_G_SPEED
     1x          Label 630B HERO_IDLE_L
     0x          Label 630B HERO_IDLE_L2
     2x          Label 630B HERO_IDLE_R
     2x          Equ   0600 HERO_JOG_SPD_LIMIT
     1x          Label 6411 Hero_Move
     1x          Label 6483 Hero_MoveLeft
     1x          Label 649D Hero_MoveLeft_00
     1x          Label 64BB Hero_MoveLeft_01
     1x          Label 6497 Hero_MoveLeft_03
     1x          Label 64C7 Hero_MoveRight
     1x          Label 64DE Hero_MoveRight_00
     1x          Label 64FC Hero_MoveRight_01
     1x          Label 64D8 Hero_MoveRight_03
    11x          Label 6505 Hero_MoveUpdatePos
     1x          Label 651F Hero_MoveUpdatePos_00
     1x          Label 6536 Hero_MoveUpdatePos_01
     0x          Label 6536 Hero_MoveUpdatePos_03
     2x          Label 651E Hero_MoveUpdatePos_V00
     3x          Label 6687 HERO_NEG_TOP_SPEED
     1x          Label 641A Hero_NotLeft
     1x          Label 6421 Hero_NotLeftOrRight
     1x          Label 6458 Hero_NotLeftOrRight_00
     1x          Label 6441 Hero_NotLeftOrRight_01
     1x          Label 6452 Hero_NotLeftOrRight_02
     1x          Label 6455 Hero_NotLeftOrRight_03
     1x          Label 646C Hero_NotLeftOrRight_11
     1x          Label 647D Hero_NotLeftOrRight_12
     1x          Label 6480 Hero_NotLeftOrRight_13
     4x          Label 6305 HERO_POS
     1x          Label 630B HERO_RUN_L
     2x          Label 630B HERO_RUN_R
     0x          Label 630B HERO_SUBIDLE_B
     3x          Label 6685 HERO_TOP_SPEED
     2x          Label 630B HERO_WALK_L
     2x          Label 630B HERO_WALK_R
     0x          Equ   0400 HERO_WALK_SPD_LIMIT
     4x          Label 6679 HERO_X_POS
     2x          Label 667D HERO_X_SPEED
     6x          Label 667F HERO_X_SPS
     4x          Label 667A HERO_Y_POS
     1x          Label 6681 HERO_Y_SPEED
     0x          Label 6683 HERO_Y_SPS
     2x          Label 6391 INIT_SCREEN
     0x          Equ   000D JOY_B
     0x          Equ   0005 JOY_BD
     0x          Equ   0009 JOY_BG
     1x          Label 6410 JOY_BTN_STATUS
     0x          Equ   000F JOY_C
     1x          Equ   0007 JOY_D
     2x          Label 640F JOY_DIR_STATUS
     1x          Equ   000B JOY_G
     0x          Equ   000E JOY_H
     0x          Equ   0006 JOY_HD
     0x          Equ   000A JOY_HG
     1x          Label 63F7 JOY_READ
     1x          Label 63A8 MAIN
     1x          Label 634F read
     1x          Label 6370 read2
     3x          Label 63C7 SCRC
     3x          Label 63E2 SCRC0
     1x          Label 6321 SETPALETTE
     2x          Label 6303 SSAVE
     1x          Label 65F5 TABPALETTE
     1x          Label 63EC VSYNC
     1x          Label 63EC VSYNC_1
     1x          Label 63F1 VSYNC_2

