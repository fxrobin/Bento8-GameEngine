/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : ./input/CODE/MAIN.ASS
 * Fichier destination : TMP.BIN
 * Contenu :
 *     Main     0:MAIN.ASM     14527
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
     12        6300                      ORG $6300
     13
     14                           *****************************************>>
     15                           * Constantes et variables
     16                           *****************************************>>
     17                  0014     DEBUTECRANA EQU $0014       * test pour f>>
     18                  1F40     FINECRANA   EQU $1F40       * fin de la R>>
     19                  2014     DEBUTECRANB EQU $2014       * test pour f>>
     20                  3F40     FINECRANB   EQU $3F40       * fin de la R>>
     21                  0005     JOY_BD EQU $05       * Bas Droite
     22                  0006     JOY_HD EQU $06       * Haut Droite
     23                  0007     JOY_D  EQU $07       * Droite
     24                  0009     JOY_BG EQU $09       * Bas Gauche
     25                  000A     JOY_HG EQU $0A       * Haut Gauche
     26                  000B     JOY_G  EQU $0B       * Gauche
     27                  000D     JOY_B  EQU $0D       * Bas
     28                  000E     JOY_H  EQU $0E       * Haut
     29                  000F     JOY_C  EQU $0F       * Centre
     30
     31                           *<ANIMATION_TABLE>
     32                           * Limite a 128 images par animations
     33        6300               SSAVE
     34        6300 0000                 FDB $0000 * BUFFER for S when usin>>
     35        6302               HERO_POS
     36        6302 1F40                 FDB FINECRANA
     37        6304 3F40                 FDB FINECRANB
     38
     39        6306 0001                 FDB $0001
     40        6308               HERO_IDLE_L
     41        6308               HERO_IDLE_R
     42        6308               HERO_IDLE_L2
     43        6308               HERO_SUBIDLE_B
     44        6308               HERO_WALK_L
     45        6308               HERO_WALK_R
     46        6308               HERO_RUN_L
     47        6308               HERO_RUN_R
     48        6308 04                   FCB $04
     49        6309 A000                 FDB $A000
     50        630B A000                 FDB $A000
     51        630D FF                   FCB $FF
     52        630E 6308                 FDB HERO_RUN_R
     53        6310 0000                 FDB $0000
     54
     55                           *****************************************>>
     56                           * Debut du programme
     57                           *****************************************>>
     58  2     6312 1A   50              ORCC #$50     * a documenter (inte>>
     59                            
     60  2     6314 86   7B              LDA #$7B      * passage en mode 16>>
     61  5     6316 B7   E7DC            STA $E7DC
     62
     63                           *****************************************>>
     64                           * Initialisation de la palette de couleur>>
     65                           *****************************************>>
     66  4     6319 108E 65F2            LDY #TABPALETTE
     67  2     631D 4F                   CLRA
     68        631E               SETPALETTE
     69  5+1   631E 34   02              PSHS A
     70  2     6320 48                   ASLA
     71  5     6321 B7   E7DB            STA $E7DB
     72  5+3   6324 EC   A1              LDD ,Y++
     73  5     6326 F7   E7DA            STB $E7DA
     74  5     6329 B7   E7DA            STA $E7DA
     75  5+1   632C 35   02              PULS A
     76  2     632E 4C                   INCA
     77  5     632F 108C 6612            CMPY #FINTABPALETTE
     78  3     6333 26   E9              BNE    SETPALETTE
     79
     80                           *****************************************>>
     81                           * Chargement des pages memoire
     82                           *****************************************>>
     83                  60              SETDP $60
     84  2     6335 86   60              LDA #$60
     85  6     6337 1F   8B              TFR A,DP
     86  2     6339 C6   04              LDB #$04                          >>
     87  5     633B F7   E7E5            STB $E7E5                         >>
     88  2     633E 86   01           lda #$01
     89  4     6340 97   48           sta <$6048 * DK.OPC $02 Operation - L>>
     90  4     6342 97   4C           sta <$604C * DK.SEC $02 Secteur a lir>>
     91  3     6344 CC   0004         ldd #$0004
     92  5     6347 DD   4A           std <$604A * DK.TRK $04 Secteur a lir>>
     93  3     6349 CC   A000         ldd #$A000 * Destination des donnees >>
     94        634C               read
     95  5     634C DD   4F          std <$604F * DK.BUF Destination des do>>
     96  8     634E BD   E82A        jsr $E82A  * DKFORM Appel
     97  4     6351 C3   0100        addd #$0100
     98  5     6354 1083 E000        cmpd #$E000
     99  3     6358 2D   F2          blt read
    100
    101  2     635A C6   05              LDB #$05                          >>
    102  5     635C F7   E7E5            STB $E7E5                         >>
    103  2     635F 86   01           lda #$01
    104  4     6361 97   48           sta <$6048 * DK.OPC $02 Operation - L>>
    105  4     6363 97   4C           sta <$604C * DK.SEC $02 Secteur a lir>>
    106  3     6365 CC   0004         ldd #$0004
    107  5     6368 DD   4A           std <$604A * DK.TRK $04 Secteur a lir>>
    108  3     636A CC   A000         ldd #$A000 * Destination des donnees >>
    109        636D               read2
    110  5     636D DD   4F          std <$604F * DK.BUF Destination des do>>
    111  8     636F BD   E82A        jsr $E82A  * DKFORM Appel
    112  4     6372 C3   0100        addd #$0100
    113  5     6375 1083 E000        cmpd #$E000
    114  3     6379 2D   F2          blt read2
    115
    116                           *****************************************>>
    117                           * Initialisation de la routine de commuta>>
    118                           *****************************************>>
    119  4     637B D6   81              LDB $6081 * A documenter
    120  2     637D CA   10              ORB #$10  * mettre le bit d4 a 1
    121  4     637F D7   81              STB $6081
    122  5     6381 F7   E7E7            STB $E7E7
    123  8     6384 BD   63C4            JSR SCRC * page 2 en RAM Cartouche>>
    124
    125                           *****************************************>>
    126                           * Initialisation des deux pages videos av>>
    127                           *****************************************>>
    128  3     6387 8E   6308            LDX #HERO_IDLE_R
    129  8     638A BD   6612            JSR HERO_ANIMATION_LOAD
    130
    131        638D 01                   FCB $01
    132        638E               INIT_SCREEN
    133  2     638E C6   03              LDB #$03                          >>
    134  5     6390 F7   E7E5            STB $E7E5                         >>
    135                           *      JSR DRAW_RAM_DATA_TO_CART_160x200
    136                            
    137  5     6393 F6   6690            LDB HERO_ANIMATION_PAG            >>
    138  5     6396 F7   E7E5            STB $E7E5                         >>
    139  7+3   6399 AD   9F 6693         JSR [HERO_ANIMATION_DRW]          >>
    140                            
    141  8     639D BD   63C4            JSR SCRC                          >>
    142                                                                    >>
    143  7     63A0 7A   638D            DEC INIT_SCREEN-1
    144  3     63A3 24   E9              BCC INIT_SCREEN
    145
    146                           *****************************************>>
    147                           * Boucle principale
    148                           *****************************************>>
    149        63A5               MAIN
    150                                  * Effacement et affichage des spri>>
    151  5     63A5 F6   6690            LDB HERO_ANIMATION_PAG            >>
    152  5     63A8 F7   E7E5            STB $E7E5                         >>
    153  7+3   63AB AD   9F 6691         JSR [HERO_ANIMATION_DEL]          >>
    154  7+3   63AF AD   9F 6693         JSR [HERO_ANIMATION_DRW]          >>
    155
    156                                  * Gestion des deplacements
    157  8     63B3 BD   63F4            JSR JOY_READ
    158  8     63B6 BD   640E            JSR Hero_Move
    159  8     63B9 BD   654A            JSR Compute_Position
    160                            
    161  8     63BC BD   6668            JSR HERO_ANIMATION_NEXT
    162
    163  8     63BF BD   63C4            JSR SCRC                          >>
    164  3     63C2 20   E1              BRA MAIN
    165
    166                           *****************************************>>
    167                           * Changement de page ESPACE ECRAN (affich>>
    168                           *      $E7DD determine la page affichee d>>
    169                           *      D7=0 D6=0 D5=0 D4=0 (#$0_) : page >>
    170                           *      D7=0 D6=1 D5=0 D4=0 (#$4_) : page >>
    171                           *      D7=1 D6=0 D5=0 D4=0 (#$8_) : page >>
    172                           *      D7=1 D6=1 D5=0 D4=0 (#$C_) : page >>
    173                           *   D3 D2 D1 D0  (#$_0 a #$_F) : couleur >>
    174                           *   Remarque : D5 et D4 utilisable unique>>
    175                           *
    176                           * Changement de page ESPACE CARTOUCHE (ec>>
    177                           *      $E7E6 determine la page affichee d>>
    178                           *   D5 : 1 = espace cartouche recouvert p>>
    179                           *   D4 : 0 = CAS1N valide : banques 0-15 >>
    180                           *      D5=1 D4=0 D3=0 D2=0 D1=0 D0=0 (#$6>>
    181                           *   ...
    182                           *      D5=1 D4=0 D3=1 D2=1 D1=1 D0=1 (#$6>>
    183                           *      D5=1 D4=1 D3=0 D2=0 D1=0 D0=0 (#$7>>
    184                           *   ...
    185                           *      D5=1 D4=1 D3=1 D2=1 D1=1 D0=1 (#$7>>
    186                           *****************************************>>
    187        63C4               SCRC
    188  8     63C4 BD   63E9            JSR VSYNC
    189
    190  5     63C7 F6   63E0            LDB SCRC0+1
    191  2     63CA C4   01              ANDB #$01
    192  5     63CC FB   6690            ADDB HERO_ANIMATION_PAG
    193  5     63CF F7   6690            STB HERO_ANIMATION_PAG
    194                            
    195  5     63D2 F6   63E0            LDB SCRC0+1   * charge la valeur d>>
    196  2     63D5 C4   80              ANDB #$80     * permute #$00 ou #$>>
    197  2     63D7 CA   0F              ORB #$0F      * recharger la coule>>
    198  5     63D9 F7   E7DD            STB $E7DD     * changement page da>>
    199  7     63DC 73   63E0            COM SCRC0+1   * modification du co>>
    200        63DF               SCRC0
    201  2     63DF C6   00              LDB #$00
    202  2     63E1 C4   02              ANDB #$02     * permute #$60 ou #$>>
    203  2     63E3 CA   60              ORB #$60      * espace cartouche r>>
    204  5     63E5 F7   E7E6            STB $E7E6     * changement page da>>
    205  5     63E8 39                   RTS                  * E7E6 D5=1 p>>
    206                                                       * CAS1N : ban>>
    207
    208                           *****************************************>>
    209                           * Attente VBL
    210                           *****************************************>>
    211        63E9               VSYNC
    212        63E9               VSYNC_1
    213  7     63E9 7D   E7E7            TST    $E7E7
    214  3     63EC 2A   FB              BPL    VSYNC_1
    215        63EE               VSYNC_2
    216  7     63EE 7D   E7E7            TST    $E7E7
    217  3     63F1 2B   FB              BMI    VSYNC_2
    218  5     63F3 39                   RTS
    219
    220                           ****************************************
    221                           * Get joystick parameters
    222                           ****************************************
    223        63F4               JOY_READ
    224  3     63F4 8E   E7CF            ldx    #$e7cf
    225  4     63F7 108E E7CD            ldy    #$e7cd
    226  3     63FB CC   400F            ldd    #$400f
    227  5     63FE F4   E7CC            andb   >$e7cc     * Read position
    228  5     6401 F7   640C            stb    JOY_DIR_STATUS
    229  4+0   6404 A4   A4              anda   ,y         * Read button
    230  2     6406 88   40              eora   #$40
    231  5     6408 B7   640D            sta    JOY_BTN_STATUS
    232  5     640B 39                   RTS
    233        640C               JOY_DIR_STATUS
    234        640C 00                   FCB $00 * Position Pad
    235        640D               JOY_BTN_STATUS
    236        640D 00                   FCB $00 * 40 Bouton A enfonce
    237
    238                           *****************************************>>
    239                           * Subroutine to      make HERO walk/run
    240                           *****************************************>>
    241        640E               Hero_Move
    242  5     640E B6   640C            LDA JOY_DIR_STATUS
    243  2     6411 81   0B              CMPA #JOY_G
    244  3     6413 26   02              BNE Hero_NotLeft
    245  3     6415 20   69              BRA Hero_MoveLeft
    246
    247        6417               Hero_NotLeft                   * XREF: He>>
    248  2     6417 81   07              CMPA #JOY_D
    249  3     6419 26   03              BNE Hero_NotLeftOrRight
    250  5     641B 16   00A6            LBRA Hero_MoveRight
    251
    252        641E               Hero_NotLeftOrRight            * XREF: He>>
    253  6     641E FC   6678            LDD HERO_G_SPEED
    254  5     6421 1083 0000            CMPD #$0000
    255  3     6425 2D   2E              BLT Hero_NotLeftOrRight_00 * se de>>
    256  7     6427 B3   668A            SUBD HERO_FRICTION     * se deplac>>
    257  3     642A 24   12              BCC Hero_NotLeftOrRight_01 * si on>>
    258  3     642C CC   0000            LDD #$0000
    259  6     642F FD   6678            STD HERO_G_SPEED
    260  6     6432 FD   667C            STD HERO_X_SPS
    261  3     6435 8E   6308            LDX #HERO_IDLE_R        * Charge a>>
    262  6     6438 BF   668C            STX HERO_ANIMATION_ADR      * Sauv>>
    263  5     643B 16   00C4            LBRA Hero_MoveUpdatePos
    264        643E               Hero_NotLeftOrRight_01
    265  5     643E 1083 0600            CMPD #HERO_JOG_SPD_LIMIT
    266  3     6442 2C   0B              BGE Hero_NotLeftOrRight_02
    267  6     6444 FD   6678            STD HERO_G_SPEED
    268  3     6447 8E   6308            LDX #HERO_WALK_R        * Charge a>>
    269  6     644A BF   668C            STX HERO_ANIMATION_ADR      * Sauv>>
    270  3     644D 20   03              BRA Hero_NotLeftOrRight_03
    271        644F               Hero_NotLeftOrRight_02
    272  6     644F FD   6678            STD HERO_G_SPEED
    273        6452               Hero_NotLeftOrRight_03
    274  5     6452 16   00AD            LBRA Hero_MoveUpdatePos
    275        6455               Hero_NotLeftOrRight_00
    276  7     6455 F3   668A            ADDD HERO_FRICTION     * se deplac>>
    277  3     6458 24   0F              BCC Hero_NotLeftOrRight_11 * si on>>
    278  3     645A CC   0000            LDD #$0000
    279  6     645D FD   6678            STD HERO_G_SPEED
    280  3     6460 8E   6308            LDX #HERO_IDLE_L        * Charge a>>
    281  6     6463 BF   668C            STX HERO_ANIMATION_ADR      * Sauv>>
    282  5     6466 16   0099            LBRA Hero_MoveUpdatePos
    283        6469               Hero_NotLeftOrRight_11
    284  5     6469 1083 0600            CMPD #HERO_JOG_SPD_LIMIT
    285  3     646D 2F   0B              BLE Hero_NotLeftOrRight_12
    286  6     646F FD   6678            STD HERO_G_SPEED
    287  3     6472 8E   6308            LDX #HERO_WALK_L        * Charge a>>
    288  6     6475 BF   668C            STX HERO_ANIMATION_ADR      * Sauv>>
    289  3     6478 20   03              BRA Hero_NotLeftOrRight_13
    290        647A               Hero_NotLeftOrRight_12
    291  6     647A FD   6678            STD HERO_G_SPEED
    292        647D               Hero_NotLeftOrRight_13
    293  5     647D 16   0082            LBRA Hero_MoveUpdatePos
    294
    295        6480               Hero_MoveLeft                      * XREF>>
    296  6     6480 FC   6678            LDD HERO_G_SPEED            * Char>>
    297  5     6483 1083 0000            CMPD #$0000                 * Test>>
    298  3     6487 2F   11              BLE Hero_MoveLeft_00        * BRAN>>
    299  7     6489 B3   6688            SUBD HERO_DECELERATION      * orie>>
    300  3     648C 24   06              BCC Hero_MoveLeft_03        * BRAN>>
    301  3     648E CC   0000            LDD #$0000
    302  7     6491 B3   6688            SUBD HERO_DECELERATION      * si l>>
    303        6494               Hero_MoveLeft_03
    304  6     6494 FD   6678            STD HERO_G_SPEED            * On s>>
    305  5     6497 16   0068            LBRA Hero_MoveUpdatePos           >>
    306        649A               Hero_MoveLeft_00                         >>
    307                           *      CMPD #$0000                       >>
    308                           *      BNE Hero_MoveLeft_02        * BRAN>>
    309                           *      LDD #$FEFF                        >>
    310                           *Hero_MoveLeft_02
    311  8     649A 10B3 6684            CMPD HERO_NEG_TOP_SPEED     * Comp>>
    312  3     649E 27   62              BEQ Hero_MoveUpdatePos      * vite>>
    313  7     64A0 B3   6686            SUBD HERO_ACCELERATION      * acce>>
    314  8     64A3 10B3 6684            CMPD HERO_NEG_TOP_SPEED     * Comp>>
    315  3     64A7 2E   0F              BGT Hero_MoveLeft_01        * BRAN>>
    316  3     64A9 8E   6308            LDX #HERO_RUN_L        * Charge an>>
    317  6     64AC BF   668C            STX HERO_ANIMATION_ADR      * Sauv>>
    318  6     64AF FC   6684            LDD HERO_NEG_TOP_SPEED      * Limi>>
    319  6     64B2 FD   6678            STD HERO_G_SPEED            * Enre>>
    320  5     64B5 16   004A            LBRA Hero_MoveUpdatePos     * Mise>>
    321        64B8               Hero_MoveLeft_01
    322  6     64B8 FD   6678            STD HERO_G_SPEED            * Enre>>
    323  3     64BB 8E   6308            LDX #HERO_WALK_L        * Charge a>>
    324  6     64BE BF   668C            STX HERO_ANIMATION_ADR      * Sauv>>
    325  5     64C1 16   003E            LBRA Hero_MoveUpdatePos
    326
    327        64C4               Hero_MoveRight                  * XREF: H>>
    328  6     64C4 FC   6678            LDD HERO_G_SPEED        * Chargeme>>
    329  5     64C7 1083 0000            CMPD #$0000                 * Test>>
    330  3     64CB 2C   0E              BGE Hero_MoveRight_00       * BRAN>>
    331  7     64CD F3   6688            ADDD HERO_DECELERATION      * orie>>
    332  3     64D0 24   03              BCC Hero_MoveRight_03       * BRAN>>
    333  6     64D2 FC   6688            LDD HERO_DECELERATION   * si la vi>>
    334        64D5               Hero_MoveRight_03
    335  6     64D5 FD   6678            STD HERO_G_SPEED        * On stock>>
    336  5     64D8 16   0027            LBRA Hero_MoveUpdatePos           >>
    337        64DB               Hero_MoveRight_00                  * Orie>>
    338                           *      CMPD #$0000                       >>
    339                           *      BNE Hero_MoveRight_02       * BRAN>>
    340                           *      LDD #$0100                        >>
    341                           *Hero_MoveRight_02
    342  8     64DB 10B3 6682            CMPD HERO_TOP_SPEED         * Comp>>
    343  3     64DF 27   21              BEQ Hero_MoveUpdatePos      * vite>>
    344  7     64E1 F3   6686            ADDD HERO_ACCELERATION      * acce>>
    345  8     64E4 10B3 6682            CMPD HERO_TOP_SPEED         * Comp>>
    346  3     64E8 2D   0F              BLT Hero_MoveRight_01       * BRAN>>
    347  3     64EA 8E   6308            LDX #HERO_RUN_R                   >>
    348  6     64ED BF   668C            STX HERO_ANIMATION_ADR      * Sauv>>
    349  6     64F0 FC   6682            LDD HERO_TOP_SPEED          * Limi>>
    350  6     64F3 FD   6678            STD HERO_G_SPEED            * Enre>>
    351  5     64F6 16   0009            LBRA Hero_MoveUpdatePos           >>
    352        64F9               Hero_MoveRight_01
    353  6     64F9 FD   6678            STD HERO_G_SPEED            * Enre>>
    354  3     64FC 8E   6308            LDX #HERO_WALK_R        * Charge a>>
    355  6     64FF BF   668C            STX HERO_ANIMATION_ADR      * Sauv>>
    356
    357        6502               Hero_MoveUpdatePos
    358  6     6502 FC   6678            LDD HERO_G_SPEED            * Char>>
    359  6     6505 FD   667A            STD HERO_X_SPEED        * Stockage>>
    360  5     6508 1083 0000            CMPD #$0000                 * Test>>
    361  3     650C 2D   0E              BLT Hero_MoveUpdatePos_00   * BRAN>>
    362  7     650E F3   667C            ADDD HERO_X_SPS         * Ajout du>>
    363  5     6511 F7   667D            STB HERO_X_SPS+1            * sauv>>
    364  6     6514 1F   89              TFR A,B                     * Divi>>
    365  5     6516 FB   6676            ADDB HERO_X_POS                   >>
    366  3     6519 20   18              BRA Hero_MoveUpdatePos_01
    367        651B               Hero_MoveUpdatePos_V00
    368        651B 00                   FCB $00
    369        651C               Hero_MoveUpdatePos_00
    370  3     651C CC   0000            LDD #$0000
    371  7     651F B3   667A            SUBD HERO_X_SPEED           * La v>>
    372  7     6522 F3   667C            ADDD HERO_X_SPS         * Ajout du>>
    373  5     6525 F7   667D            STB HERO_X_SPS+1            * sauv>>
    374  6     6528 1F   89              TFR A,B                     * Divi>>
    375  5     652A F7   651B            STB Hero_MoveUpdatePos_V00
    376  5     652D F6   6676            LDB HERO_X_POS
    377  5     6530 F0   651B            SUBB Hero_MoveUpdatePos_V00 * Ajou>>
    378        6533               Hero_MoveUpdatePos_01
    379                           *      CMPB #$50                         >>
    380                           *      BLE Hero_MoveUpdatePos_02   * Bute>>
    381                           *      LDB #$50                          >>
    382                           *Hero_MoveUpdatePos_02
    383                           *    CMPB #$0C                           >>
    384                           *      BGE Hero_MoveUpdatePos_03   * Bute>>
    385                           *      LDB #$0C                          >>
    386        6533               Hero_MoveUpdatePos_03
    387  5     6533 F7   6676            STB HERO_X_POS
    388  2     6536 C6   00              LDB #$00
    389  5     6538 F7   667C            STB HERO_X_SPS                    >>
    390  3     653B CC   0000            LDD #$0000                  * TODO>>
    391  6     653E FD   667E            STD HERO_Y_SPEED
    392  6     6541 1F   89              TFR A,B                     * divi>>
    393  5     6543 FB   6677            ADDB HERO_Y_POS
    394  5     6546 F7   6677            STB HERO_Y_POS
    395  5     6549 39                   RTS
    396
    397                           * TODO : Braking Animation
    398                           * Sonic enters his braking animation when>>
    399                           * In Sonic 1 and Sonic CD, he then stays >>
    400                           * In the other 3 games, Sonic returns to >>
    401
    402        654A               Compute_Position
    403  5     654A B6   6676            LDA HERO_X_POS
    404  2     654D 44                   LSRA
    405  3     654E 25   17              BCS Compute_Position_01
    406  5     6550 B7   6582            STA Compute_Position_02+1
    407  2     6553 86   28              LDA #$28
    408  5     6555 F6   6677            LDB HERO_Y_POS
    409  2     6558 5A                   DECB
    410  11    6559 3D                   MUL
    411  7     655A F3   6581            ADDD Compute_Position_02
    412  6     655D FD   6302            STD HERO_POS
    413  4     6560 C3   2000            ADDD #$2000
    414  6     6563 FD   6304            STD HERO_POS+2
    415  5     6566 39                   RTS
    416        6567               Compute_Position_01
    417  5     6567 B7   6582            STA Compute_Position_02+1
    418  2     656A 86   28              LDA #$28
    419  5     656C F6   6677            LDB HERO_Y_POS
    420  2     656F 5A                   DECB
    421  11    6570 3D                   MUL
    422  7     6571 F3   6581            ADDD Compute_Position_02
    423  4     6574 C3   2000            ADDD #$2000
    424  6     6577 FD   6302            STD HERO_POS
    425  4     657A 83   1FFF            SUBD #$1FFF
    426  6     657D FD   6304            STD HERO_POS+2
    427  5     6580 39                   RTS
    428        6581               Compute_Position_02
    429        6581 0000                 FDB $0000
    430                            
    431                           *****************************************>>
    432                           * Affichage de l arriere plan xxx cycles
    433                           *****************************************>>
    434        6583               DRAW_RAM_DATA_TO_CART_160x200
    435  5+3   6583 34   48              PSHS U,DP            * sauvegarde >>
    436  7     6585 10FF 6300            STS >SSAVE
    437                            
    438  4     6589 10CE 1F40            LDS #FINECRANA       * init pointe>>
    439  3     658D CE   A000            LDU #$A000
    440
    441        6590               DRAW_RAM_DATA_TO_CART_160x200A
    442  5+7   6590 37   3E              PULU A,B,DP,X,Y
    443  5+7   6592 34   3E              PSHS Y,X,DP,B,A
    444  5+7   6594 37   3E              PULU A,B,DP,X,Y
    445  5+7   6596 34   3E              PSHS Y,X,DP,B,A
    446  5+7   6598 37   3E              PULU A,B,DP,X,Y
    447  5+7   659A 34   3E              PSHS Y,X,DP,B,A
    448  5+7   659C 37   3E              PULU A,B,DP,X,Y
    449  5+7   659E 34   3E              PSHS Y,X,DP,B,A
    450  5+7   65A0 37   3E              PULU A,B,DP,X,Y
    451  5+7   65A2 34   3E              PSHS Y,X,DP,B,A
    452  5+7   65A4 37   3E              PULU A,B,DP,X,Y
    453  5+7   65A6 34   3E              PSHS Y,X,DP,B,A
    454  5     65A8 118C 0014            CMPS #DEBUTECRANA
    455  3     65AC 26   E2              BNE DRAW_RAM_DATA_TO_CART_160x200A>>
    456  5+7   65AE 37   3E              PULU A,B,DP,X,Y
    457  5+7   65B0 34   3E              PSHS Y,X,DP,B,A
    458  5+7   65B2 37   3E              PULU A,B,DP,X,Y
    459  5+7   65B4 34   3E              PSHS Y,X,DP,B,A
    460  5+6   65B6 37   3C              PULU B,DP,X,Y
    461  5+6   65B8 34   3C              PSHS Y,X,DP,B
    462
    463  4     65BA 10CE 3F40            LDS #FINECRANB       * init pointe>>
    464  3     65BE CE   C000            LDU #$C000
    465
    466        65C1               DRAW_RAM_DATA_TO_CART_160x200B
    467  5+7   65C1 37   3E              PULU A,B,DP,X,Y
    468  5+7   65C3 34   3E              PSHS Y,X,DP,B,A
    469  5+7   65C5 37   3E              PULU A,B,DP,X,Y
    470  5+7   65C7 34   3E              PSHS Y,X,DP,B,A
    471  5+7   65C9 37   3E              PULU A,B,DP,X,Y
    472  5+7   65CB 34   3E              PSHS Y,X,DP,B,A
    473  5+7   65CD 37   3E              PULU A,B,DP,X,Y
    474  5+7   65CF 34   3E              PSHS Y,X,DP,B,A
    475  5+7   65D1 37   3E              PULU A,B,DP,X,Y
    476  5+7   65D3 34   3E              PSHS Y,X,DP,B,A
    477  5+7   65D5 37   3E              PULU A,B,DP,X,Y
    478  5+7   65D7 34   3E              PSHS Y,X,DP,B,A
    479  5     65D9 118C 2014            CMPS #DEBUTECRANB
    480  3     65DD 26   E2              BNE DRAW_RAM_DATA_TO_CART_160x200B>>
    481  5+7   65DF 37   3E              PULU A,B,DP,X,Y
    482  5+7   65E1 34   3E              PSHS Y,X,DP,B,A
    483  5+7   65E3 37   3E              PULU A,B,DP,X,Y
    484  5+7   65E5 34   3E              PSHS Y,X,DP,B,A
    485  5+6   65E7 37   3C              PULU B,DP,X,Y
    486  5+6   65E9 34   3C              PSHS Y,X,DP,B
    487
    488  7     65EB 10FE 6300            LDS  >SSAVE          * rechargemen>>
    489  5+3   65EF 35   48              PULS U,DP
    490  5     65F1 39                   RTS
    491                            
    492                           *****************************************>>
    493                           * Palette de 16 couleurs
    494                           *****************************************>>
    495        65F2               TABPALETTE
    496        65F2 0111                 FDB $0111     * index:0  R:51  V:5>>
    497        65F4 0143                 FDB $0143     * index:1  R:108 V:1>>
    498        65F6 0113                 FDB $0113     * index:2  R:107 V:5>>
    499        65F8 0484                 FDB $0484     * index:3  R:132 V:1>>
    500        65FA 0112                 FDB $0112     * index:4  R:92  V:6>>
    501        65FC 0247                 FDB $0247     * index:5  R:180 V:1>>
    502        65FE 0233                 FDB $0233     * index:6  R:116 V:1>>
    503        6600 0177                 FDB $0177     * index:7  R:172 V:1>>
    504        6602 0111                 FDB $0111     * index:8  R:60  V:5>>
    505        6604 0016                 FDB $0016     * index:9  R:164 V:6>>
    506        6606 0698                 FDB $0698     * index:10 R:187 V:1>>
    507        6608 0344                 FDB $0344     * index:11 R:132 V:1>>
    508        660A 0221                 FDB $0221     * index:12 R:68  V:9>>
    509        660C 0452                 FDB $0452     * index:13 R:92  V:1>>
    510        660E 0356                 FDB $0356     * index:14 R:164 V:1>>
    511        6610 0125                 FDB $0125     * index:15 R:140 V:1>>
    512        6612               FINTABPALETTE
    513
    514                           *****************************************>>
    515                           * HERO Animations
    516                           * ---------------
    517                           * Note: Speed abs +0, rel +8, rel cap +10>>
    518                           *
    519                           * Chargement nouvelle animation
    520                           *    nouvelle frame = 109 a 119
    521                           *
    522                           * Chargement frame suivante
    523                           *    frame identique = 15
    524                           * ou frame suivante  = 116 a 126
    525                           *
    526                           * Chargement frame suivante avec branchem>>
    527                           *    nouvelle frame = 165 a 175
    528                           * ou frame suivante = 172 a 182
    529                           *
    530                           * Chargement frame suivante avec retour s>>
    531                           *    nouvelle frame = 167 a 177
    532                           * ou frame suivante = 174 a 184
    533                           *****************************************>>
    534
    535        6612               HERO_ANIMATION_LOAD                      >>
    536  6     6612 BF   668C            STX HERO_ANIMATION_ADR
    537  6     6615 BF   668E            STX HERO_ANIMATION_RTN_ADR
    538  7     6618 7F   6695            CLR HERO_ANIMATION_IMC            >>
    539        661B               HERO_ANIMATION_LOAD_00
    540  5+1   661B EC   1E              LDD -2,X                          >>
    541  2     661D 81   00              CMPA #$00                         >>
    542  3     661F 27   07              BEQ HERO_ANIMATION_LOAD_01
    543  5     6621 F0   6678            SUBB HERO_G_SPEED                 >>
    544  3     6624 24   02              BCC HERO_ANIMATION_LOAD_01
    545  2     6626 C6   01              LDB #$01                          >>
    546        6628               HERO_ANIMATION_LOAD_01
    547  5     6628 F7   6697            STB HERO_ANIMATION_FRR            >>
    548  5     662B B6   6695            LDA HERO_ANIMATION_IMC
    549  2     662E C6   05              LDB #$05
    550  11    6630 3D                   MUL
    551  7     6631 F3   668C            ADDD HERO_ANIMATION_ADR
    552  6     6634 1F   02              TFR D,Y
    553  4+0   6636 E6   A4              LDB ,Y
    554  2     6638 C1   1F              CMPB #$1F                         >>
    555  3     663A 22   0E              BHI HERO_ANIMATION_LOAD_NOPAGE
    556  5     663C F7   6690            STB HERO_ANIMATION_PAG            >>
    557  5+1   663F AE   21              LDX 1,Y
    558  6     6641 BF   6693            STX HERO_ANIMATION_DRW
    559  5+1   6644 AE   23              LDX 3,Y
    560  6     6646 BF   6691            STX HERO_ANIMATION_DEL
    561  5     6649 39                   RTS
    562        664A               HERO_ANIMATION_LOAD_NOPAGE
    563  2     664A C1   FF              CMPB #$FF
    564  3     664C 26   0C              BNE HERO_ANIMATION_LOAD_FE
    565  5+1   664E AE   23              LDX 3,Y
    566  6     6650 BF   6695            STX HERO_ANIMATION_IMC            >>
    567  5+1   6653 AE   21              LDX 1,Y
    568  6     6655 BF   668C            STX HERO_ANIMATION_ADR
    569  3     6658 20   C1              BRA HERO_ANIMATION_LOAD_00  * Outp>>
    570        665A               HERO_ANIMATION_LOAD_FE
    571  6     665A BE   668E            LDX HERO_ANIMATION_RTN_ADR  * RETU>>
    572  6     665D BF   668C            STX HERO_ANIMATION_ADR
    573  5     6660 F6   6696            LDB HERO_ANIMATION_RTN_IMC
    574  5     6663 F7   6695            STB HERO_ANIMATION_IMC
    575  3     6666 20   B3              BRA HERO_ANIMATION_LOAD_00  * Outp>>
    576
    577        6668               HERO_ANIMATION_NEXT
    578  7     6668 7A   6697            DEC HERO_ANIMATION_FRR
    579  3     666B 27   01              BEQ HERO_ANIMATION_NEXT_00  * BRAN>>
    580  5     666D 39                   RTS
    581        666E               HERO_ANIMATION_NEXT_00
    582  7     666E 7C   6695            INC HERO_ANIMATION_IMC
    583  6     6671 BE   668C            LDX HERO_ANIMATION_ADR
    584  3     6674 20   A5              BRA HERO_ANIMATION_LOAD_00  * Outp>>
    585                            
    586                           *   SAMPLE CODE ANIMATION
    587                           *      ---------------------
    588                           *      FDB $0018            * 00 Absolute>>
    589                           *HERO_IDLE_L
    590                           *      FCB $01                     * Page>>
    591                           *      FDB $A000            * Adresse drw>>
    592                           *      FDB $A000            * Adresse del>>
    593                           *
    594                           *      FCB $FF                     * FF S>>
    595                           *      FDB HERO_IDLE-C * adresse animatio>>
    596                           *      FDB $0301            * 03 image ci>>
    597                           *
    598                           *      FCB $FE                     * FE R>>
    599                           *
    600                           *      LDX #HERO_IDLE_R
    601                           *      JSR HERO_ANIMATION_LOAD
    602                           *
    603                           *      JSR HERO_ANIMATION_NEXT
    604
    605                           *****************************************>>
    606                           * HERO Variables
    607                           *****************************************>>
    608                  0400     HERO_WALK_SPD_LIMIT EQU $0400
    609                  0600     HERO_JOG_SPD_LIMIT  EQU $0600
    610        6676               HERO_X_POS
    611        6676 50                   FCB $50                     * Hori>>
    612        6677               HERO_Y_POS
    613        6677 C8                   FCB $C8                     * Vert>>
    614        6678               HERO_G_SPEED         * Ground Speed
    615        6678 0000                 FDB $0000            * First byte >>
    616        667A               HERO_X_SPEED
    617        667A 0000                 FDB $0000            * Horizontal >>
    618        667C               HERO_X_SPS
    619        667C 0000                 FDB $0000            * Subpixel X >>
    620        667E               HERO_Y_SPEED
    621        667E 0000                 FDB $0000            * Vertical Sp>>
    622        6680               HERO_Y_SPS
    623        6680 0000                 FDB $0000            * Subpixel Y >>
    624        6682               HERO_TOP_SPEED
    625        6682 0600                 FDB $0600        * vitesse maximum>>
    626        6684               HERO_NEG_TOP_SPEED
    627        6684 FA00                 FDB $FA00        * vitesse maximum>>
    628        6686               HERO_ACCELERATION
    629        6686 000C                 FDB $000C        * constante accel>>
    630        6688               HERO_DECELERATION
    631        6688 0080                 FDB $0080        * constante decel>>
    632        668A               HERO_FRICTION
    633        668A 000C                 FDB $000C        * constante de fr>>
    634        668C               HERO_ANIMATION_ADR
    635        668C 0000                 FDB $0000        * Animation coura>>
    636        668E               HERO_ANIMATION_RTN_ADR
    637        668E 0000                 FDB $0000        * Animation coura>>
    638        6690               HERO_ANIMATION_PAG
    639        6690 00                   FCB $00          * Animation coura>>
    640        6691               HERO_ANIMATION_DEL
    641        6691 0000                 FDB $0000        * Animation coura>>
    642        6693               HERO_ANIMATION_DRW
    643        6693 0000                 FDB $0000        * Animation coura>>
    644        6695               HERO_ANIMATION_IMC
    645        6695 00                   FCB $00          * Animation coura>>
    646        6696               HERO_ANIMATION_RTN_IMC
    647        6696 00                   FCB $00          * Animation coura>>
    648        6697               HERO_ANIMATION_FRR
    649        6697 00                   FCB $00          * Animation coura>>

000000 Total Errors

000096 Total Symbols
     1x          Label 654A Compute_Position
     1x          Label 6567 Compute_Position_01
     4x          Label 6581 Compute_Position_02
     1x          Equ   0014 DEBUTECRANA
     1x          Equ   2014 DEBUTECRANB
     0x          Label 6583 DRAW_RAM_DATA_TO_CART_160x200
     1x          Label 6590 DRAW_RAM_DATA_TO_CART_160x200A
     1x          Label 65C1 DRAW_RAM_DATA_TO_CART_160x200B
     2x          Equ   1F40 FINECRANA
     2x          Equ   3F40 FINECRANB
     1x          Label 6612 FINTABPALETTE
     2x          Label 6686 HERO_ACCELERATION
    13x          Label 668C HERO_ANIMATION_ADR
     2x          Label 6691 HERO_ANIMATION_DEL
     3x          Label 6693 HERO_ANIMATION_DRW
     2x          Label 6697 HERO_ANIMATION_FRR
     5x          Label 6695 HERO_ANIMATION_IMC
     1x          Label 6612 HERO_ANIMATION_LOAD
     3x          Label 661B HERO_ANIMATION_LOAD_00
     2x          Label 6628 HERO_ANIMATION_LOAD_01
     1x          Label 665A HERO_ANIMATION_LOAD_FE
     1x          Label 664A HERO_ANIMATION_LOAD_NOPAGE
     1x          Label 6668 HERO_ANIMATION_NEXT
     1x          Label 666E HERO_ANIMATION_NEXT_00
     5x          Label 6690 HERO_ANIMATION_PAG
     2x          Label 668E HERO_ANIMATION_RTN_ADR
     1x          Label 6696 HERO_ANIMATION_RTN_IMC
     4x          Label 6688 HERO_DECELERATION
     2x          Label 668A HERO_FRICTION
    17x          Label 6678 HERO_G_SPEED
     1x          Label 6308 HERO_IDLE_L
     0x          Label 6308 HERO_IDLE_L2
     2x          Label 6308 HERO_IDLE_R
     2x          Equ   0600 HERO_JOG_SPD_LIMIT
     1x          Label 640E Hero_Move
     1x          Label 6480 Hero_MoveLeft
     1x          Label 649A Hero_MoveLeft_00
     1x          Label 64B8 Hero_MoveLeft_01
     1x          Label 6494 Hero_MoveLeft_03
     1x          Label 64C4 Hero_MoveRight
     1x          Label 64DB Hero_MoveRight_00
     1x          Label 64F9 Hero_MoveRight_01
     1x          Label 64D5 Hero_MoveRight_03
    11x          Label 6502 Hero_MoveUpdatePos
     1x          Label 651C Hero_MoveUpdatePos_00
     1x          Label 6533 Hero_MoveUpdatePos_01
     0x          Label 6533 Hero_MoveUpdatePos_03
     2x          Label 651B Hero_MoveUpdatePos_V00
     3x          Label 6684 HERO_NEG_TOP_SPEED
     1x          Label 6417 Hero_NotLeft
     1x          Label 641E Hero_NotLeftOrRight
     1x          Label 6455 Hero_NotLeftOrRight_00
     1x          Label 643E Hero_NotLeftOrRight_01
     1x          Label 644F Hero_NotLeftOrRight_02
     1x          Label 6452 Hero_NotLeftOrRight_03
     1x          Label 6469 Hero_NotLeftOrRight_11
     1x          Label 647A Hero_NotLeftOrRight_12
     1x          Label 647D Hero_NotLeftOrRight_13
     4x          Label 6302 HERO_POS
     1x          Label 6308 HERO_RUN_L
     2x          Label 6308 HERO_RUN_R
     0x          Label 6308 HERO_SUBIDLE_B
     3x          Label 6682 HERO_TOP_SPEED
     2x          Label 6308 HERO_WALK_L
     2x          Label 6308 HERO_WALK_R
     0x          Equ   0400 HERO_WALK_SPD_LIMIT
     4x          Label 6676 HERO_X_POS
     2x          Label 667A HERO_X_SPEED
     6x          Label 667C HERO_X_SPS
     4x          Label 6677 HERO_Y_POS
     1x          Label 667E HERO_Y_SPEED
     0x          Label 6680 HERO_Y_SPS
     2x          Label 638E INIT_SCREEN
     0x          Equ   000D JOY_B
     0x          Equ   0005 JOY_BD
     0x          Equ   0009 JOY_BG
     1x          Label 640D JOY_BTN_STATUS
     0x          Equ   000F JOY_C
     1x          Equ   0007 JOY_D
     2x          Label 640C JOY_DIR_STATUS
     1x          Equ   000B JOY_G
     0x          Equ   000E JOY_H
     0x          Equ   0006 JOY_HD
     0x          Equ   000A JOY_HG
     1x          Label 63F4 JOY_READ
     1x          Label 63A5 MAIN
     1x          Label 634C read
     1x          Label 636D read2
     3x          Label 63C4 SCRC
     3x          Label 63DF SCRC0
     1x          Label 631E SETPALETTE
     2x          Label 6300 SSAVE
     1x          Label 65F2 TABPALETTE
     1x          Label 63E9 VSYNC
     1x          Label 63E9 VSYNC_1
     1x          Label 63EE VSYNC_2

