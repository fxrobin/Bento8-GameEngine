/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : .\Sonic2\GeneratedCode\MainEngine.asm
 * Fichier destination : .\Sonic2\GeneratedCode\TMP.BIN
 * Contenu :
 *     Main     0:MAIN.ASM     3614
 *     Include  0:CONSTANT.ASM 3865
 *     Include  0:WAITVBL.ASM  1923
 *     Include  0:UPDTPAL.ASM  629
 *     Include  0:READJPDS.ASM 1727
 *     Include  0:RUNOBJTS.ASM 1591
 *     Include  0:MRKOBJGN.ASM 481
 *     Include  0:DISPLSPR.ASM 2000
 *     Include  0:ANIMSPR.ASM  1918
 *     Include  0:OBJMOVE.ASM  752
 *     Include  0:OBJLOAD.ASM  1109
 *     Include  0:DELETOBJ.ASM 1178
 *     Include  0:CLEAROBJ.ASM 560
 *     Include  0:CHECKSPR.ASM 6159
 *     Include  0:ERASESPR.ASM 6826
 *     Include  0:UNSETDSP.ASM 2828
 *     Include  0:DRAWSPR.ASM  4677
 *     Include  0:BGBALLOC.ASM 958
 *     Include  0:BGBFREE.ASM  1735
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
    162                                   INCLUD CONSTANT
    163                           * --------------------------------------->>
    164                           * Constants
    165                           *
    166                           * Naming convention
    167                           * -----------------
    168                           * - lower case
    169                           * - underscore-separated names
    170                           *
    171                           * --------------------------------------->>
    172
    173                           * =======================================>>
    174                           * TO8 Registers
    175                           * =======================================>>
    176
    177                  6049     dk_lecteur                    equ $6049
    178                  604A     dk_piste                      equ $604A
    179                  604C     dk_secteur                    equ $604C
    180                  604F     dk_destination                equ $604F
    181
    182                           * =======================================>>
    183                           * Display Constants
    184                           * =======================================>>
    185
    186                  00A0     screen_width                  equ 160 ; s>>
    187                  00C8     screen_height                 equ 200 ; s>>
    188                  0008     nb_priority_levels            equ 8   ; n>>
    189
    190                           * =======================================>>
    191                           * Physics Constants
    192                           * =======================================>>
    193
    194                  0038     gravity                       equ $38 ; G>>
    195
    196                           * =======================================>>
    197                           * Images Constants
    198                           * =======================================>>
    199
    200                  0000     page_bckdraw_routine          equ 0
    201                  0001     bckdraw_routine               equ 1
    202                  0003     page_draw_routine             equ 3
    203                  0004     draw_routine                  equ 4
    204                  0006     page_erase_routine            equ 6
    205                  0007     erase_routine                 equ 7
    206                  0009     erase_nb_cell                 equ 9
    207                  000A     image_x_offset                equ 10
    208                  000C     image_y_offset                equ 12
    209                  000E     image_x_size                  equ 14
    210                  000F     image_y_size                  equ 15 ; mu>>
    211                  0010     image_meta_size               equ 16 ; nu>>
    212
    213                           * =======================================>>
    214                           * Object Constants
    215                           * =======================================>>
    216
    217                  0002     nb_reserved_objects           equ 2
    218                  002B     nb_dynamic_objects            equ 43
    219                  0003     nb_level_objects              equ 3
    220                  002D     nb_objects                    equ (nb_res>>
    221
    222                           * --------------------------------------->>
    223                           * Object Status Table offsets
    224                           * --------------------------------------->>
    225
    226                  0050     object_size                   equ 80 ; th>>
    227                  0050     next_object                   equ object_>>
    228
    229                  0000     id                            equ 0      >>
    230                  0001     subtype                       equ 1      >>
    231                  0002     render_flags                  equ 2
    232
    233                           * --- render_flags bitfield variables --->>
    234                  0001     render_xmirror_mask           equ $01 ; (>>
    235                  0002     render_ymirror_mask           equ $02 ; (>>
    236                  0004     render_playfieldcoord_mask    equ $04 ; (>>
    237                  0008     render_hide_mask              equ $08 ; (>>
    238                  0010     render_fixedoverlay_mask      equ $10 ; (>>
    239                  0020     render_todelete_mask          equ $20 ; (>>
    240                  0040     render_free2_mask             equ $40 ; (>>
    241                  0080     render_free3_mask             equ $80 ; (>>
    242                            
    243                  0003     priority                      equ 3      >>
    244                  0004     anim                          equ 4  ; an>>
    245                  0006     prev_anim                     equ 6  ; an>>
    246                  0008     anim_frame                    equ 8      >>
    247                  0009     anim_frame_duration           equ 9      >>
    248                  000A     mapping_frame                 equ 10 ; an>>
    249                  000C     x_pos                         equ 12 ; an>>
    250                  000E     x_sub                         equ 14     >>
    251                  000F     y_pos                         equ 15 ; an>>
    252                  0011     y_sub                         equ 17     >>
    253                  0012     x_pixel                       equ 18     >>
    254                  0013     y_pixel                       equ 19     >>
    255                  0014     x_vel                         equ 20 ; an>>
    256                  0016     y_vel                         equ 22 ; an>>
    257                  0018     routine                       equ 24     >>
    258                  0019     routine_secondary             equ 25     >>
    259                  001A     ext_variables                 equ 26 ; to>>
    260
    261                           * --------------------------------------->>
    262                           * reserved variables (engine)
    263
    264                  0029     rsv_render_flags              equ 41
    265
    266                           * --- rsv_render_flags bitfield variables>>
    267                  0001     rsv_render_checkrefresh_mask  equ $01 ; (>>
    268                  0002     rsv_render_erasesprite_mask   equ $02 ; (>>
    269                  0004     rsv_render_displaysprite_mask equ $04 ; (>>
    270                  0008     rsv_render_outofrange_mask    equ $08 ; (>>
    271
    272                  002A     rsv_prev_anim                 equ 42 ; an>>
    273                  002C     rsv_curr_mapping_frame        equ 44 ; an>>
    274                  002E     rsv_ptr_sub_object_erase      equ 46 ; an>>
    275                  0030     rsv_ptr_sub_object_draw       equ 48 ; an>>
    276                  0032     rsv_x2_pixel                  equ 50     >>
    277                  0033     rsv_y2_pixel                  equ 51     >>
    278
    279                           * --------------------------------------->>
    280                           * reserved variables (engine) - buffer sp>>
    281
    282                  0034     rsv_buffer_0                  equ 52 ; St>>
    283                  0034     rsv_priority_0                equ 52 ; in>>
    284                  0035     rsv_priority_prev_obj_0       equ 53 ; an>>
    285                  0037     rsv_priority_next_obj_0       equ 55 ; an>>
    286                  0039     rsv_prev_mapping_frame_0      equ 57 ; an>>
    287                  003B     rsv_bgdata_0                  equ 59 ; an>>
    288                  003D     rsv_prev_x_pixel_0            equ 61 ; pr>>
    289                  003E     rsv_prev_y_pixel_0            equ 62 ; pr>>
    290                  003F     rsv_prev_x2_pixel_0           equ 63 ; pr>>
    291                  0040     rsv_prev_y2_pixel_0           equ 64 ; pr>>
    292                  0041     rsv_onscreen_0                equ 65 ; ha>>
    293
    294                  0042     rsv_buffer_1                  equ 66 ; St>>
    295                  0042     rsv_priority_1                equ 66 ; in>>
    296                  0043     rsv_priority_prev_obj_1       equ 67 ; an>>
    297                  0045     rsv_priority_next_obj_1       equ 69 ; an>>
    298                  0047     rsv_prev_mapping_frame_1      equ 71 ; an>>
    299                  0049     rsv_bgdata_1                  equ 73 ; an>>
    300                  004B     rsv_prev_x_pixel_1            equ 75 ; pr>>
    301                  004C     rsv_prev_y_pixel_1            equ 76 ; pr>>
    302                  004D     rsv_prev_x2_pixel_1           equ 77 ; pr>>
    303                  004E     rsv_prev_y2_pixel_1           equ 78 ; pr>>
    304                  004F     rsv_onscreen_1                equ 79 ; ha>>
    305
    306                  0000     buf_priority                  equ 0  ; of>>
    307                  0001     buf_priority_prev_obj         equ 1  ;
    308                  0003     buf_priority_next_obj         equ 3  ;
    309                  0005     buf_prev_mapping_frame        equ 5  ;
    310                  0007     buf_bgdata                    equ 7  ;
    311                  0009     buf_prev_x_pixel              equ 9  ;
    312                  000A     buf_prev_y_pixel              equ 10 ;
    313                  000B     buf_prev_x2_pixel             equ 11 ;
    314                  000C     buf_prev_y2_pixel             equ 12 ;
    315                  000D     buf_onscreen                  equ 13 ;
    316
     10        6000                       org   $6000
     11
     12                           *****************************************>>
     13                           * Main Loop
     14                           *****************************************>>
     15        6000               LevelMainLoop
     16  8     6000 BD   9169             jsr   WaitVBL
     17  8     6003 BD   9210             jsr   UpdatePalette
     18  8     6006 BD   923B             jsr   ReadJoypads
     19  8     6009 BD   9253             jsr   RunObjects
     20  8     600C BD   9443             jsr   CheckSpritesRefresh
     21  8     600F BD   9641             jsr   EraseSprites
     22  8     6012 BD   9834             jsr   UnsetDisplayPriority
     23  8     6015 BD   9917             jsr   DrawSprites
     24  3     6018 20   E6               bra   LevelMainLoop
     25
     26                           * =======================================>>
     27                           * Global Data
     28                           *
     29                           * Naming convention
     30                           * -----------------
     31                           * - underscore-separated names
     32                           * - first letter of each word in upper ca>>
     33                           *
     34                           * Templates
     35                           * ---------
     36                           * - Glb_*        : global variable
     37                           * - Tbl_*        : data table
     38                           * - Lst_*        : list is a data table w>>
     39                           * - Obj_*        : address of an object i>>
     40                           *
     41                           * - *_Object_RAM : sub group of objects
     42                           * - *_end        : data end label
     43                           *
     44                           * =======================================>>
     45
     46                           * --------------------------------------->>
     47                           * Display
     48                           * --------------------------------------->>
     49                            
     50        601A 00            Glb_Cur_Wrk_Screen_Id         fcb   $00  >>
     51        601B 00            Glb_Cur_Wrk_Screen_Id_x2      fcb   $00  >>
     52        601C 0000          Glb_Camera_X_Pos              fdb   $0000>>
     53        601E 0000          Glb_Camera_Y_Pos              fdb   $0000>>
     54        6020 0000          Glb_Sprite_Screen_Pos_PartA   fdb   $0000>>
     55        6022 0000          Glb_Sprite_Screen_Pos_PartB   fdb   $0000>>
     56
     57                           * --------------------------------------->>
     58                           * Background Backup Cells - BBC
     59                           * --------------------------------------->>
     60
     61                  0082     nb_free_cells                 equ   130
     62                  0040     cell_size                     equ   64   >>
     63                  6000     cell_start_adr                equ   $6000>>
     64
     65        6024 0000          Lst_FreeCellFirstEntry_0      fdb   $0000>>
     66        6026               Lst_FreeCell_0                rmb   cell_>>
     67
     68        7066 0000          Lst_FreeCellFirstEntry_1      fdb   $0000>>
     69        7068               Lst_FreeCell_1                rmb   cell_>>
     70
     71                           * ----- Cells variables
     72                  0000     nb_cells                      equ   0
     73                  0001     cell_start                    equ   1
     74                  0003     cell_end                      equ   3
     75                  0005     next_entry                    equ   5
     76                  0007     entry_size                    equ   7
     77
     78                           * --------------------------------------->>
     79                           * Display Priority Structure - DPS
     80                           * --------------------------------------->>
     81
     82        80A8               DPS_buffer_0
     83        80A8               Tbl_Priority_First_Entry_0    rmb   2+(nb>>
     84        80BA               Tbl_Priority_Last_Entry_0     rmb   2+(nb>>
     85        80CC 80CE          Lst_Priority_Unset_0          fdb   Lst_P>>
     86        80CE                                             rmb   (nb_o>>
     87        8128               DPS_buffer_1
     88        8128               Tbl_Priority_First_Entry_1    rmb   2+(nb>>
     89        813A               Tbl_Priority_Last_Entry_1     rmb   2+(nb>>
     90        814C 814E          Lst_Priority_Unset_1          fdb   Lst_P>>
     91        814E                                             rmb   (nb_o>>
     92                            
     93                  0000     buf_Tbl_Priority_First_Entry  equ   0
     94                  0012     buf_Tbl_Priority_Last_Entry   equ   Tbl_P>>
     95                  0024     buf_Lst_Priority_Unset        equ   Lst_P>>
     96
     97                           * --------------------------------------->>
     98                           * Sub Objects List - SOL
     99                           * --------------------------------------->>
    100
    101        81A8               Tbl_Sub_Object_Erase          rmb   nb_ob>>
    102        8202               Tbl_Sub_Object_Draw           rmb   nb_ob>>
    103
    104                           * --------------------------------------->>
    105                           * Object Status Table - OST
    106                           * --------------------------------------->>
    107                            
    108        825C               Object_RAM *@globals
    109        825C               Reserved_Object_RAM
    110        825C               Obj_MainCharacter             rmb   objec>>
    111        82AC               Obj_Sidekick                  rmb   objec>>
    112        82FC               Reserved_Object_RAM_End
    113        82FC               Dynamic_Object_RAM            rmb   nb_dy>>
    114        906C               Dynamic_Object_RAM_End
    115        906C               LevelOnly_Object_RAM
    116        906C               Obj_TailsTails                rmb   objec>>
    117        90BC               Obj_SonicDust                 rmb   objec>>
    118        910C               Obj_TailsDust                 rmb   objec>>
    119        915C               LevelOnly_Object_RAM_End
    120        915C               Object_RAM_End
    121
    122                           * --------------------------------------->>
    123                           * Lifecycle
    124                           * --------------------------------------->>
    125
    126        915C               Glb_MainCharacter_Is_Dead     rmb   $1,0
    127
    128                           * --------------------------------------->>
    129                           * Get Orientation To Player
    130                           * --------------------------------------->>
    131
    132        915D               Glb_Closest_Player            rmb   $2,0 >>
    133        915F               Glb_Player_Is_Left            rmb   $1,0 >>
    134        9160               Glb_Player_Is_Above           rmb   $1,0 >>
    135        9161               Glb_Player_H_Distance         rmb   $2,0 >>
    136        9163               Glb_Player_V_Distance         rmb   $2,0 >>
    137        9165               Glb_Abs_H_Distance_Mainc      rmb   $2,0 >>
    138        9167               Glb_H_Distance_Sidek          rmb   $2,0 >>
    139
    140                           * =======================================>>
    141                           * Routines
    142                           * =======================================>>
    317                                   INCLUD WAITVBL
    318                           *****************************************>>
    319                           * Attente VBL
    320                           * Alternance de la page 2 et 3 entre affi>>
    321                           * Alternance de la RAMA et RAM B dans l'e>>
    322                           * --------------------------------------->>
    323                           *
    324                           * Page Affichee par l'automate Video
    325                           * ----------------------------------
    326                           *   $E7DD determine la page affichee a l'>>
    327                           *   bit7=0 bit6=0 bit5=0 bit4=0 (#$0_) : >>
    328                           *   bit7=0 bit6=1 bit5=0 bit4=0 (#$4_) : >>
    329                           *   bit7=1 bit6=0 bit5=0 bit4=0 (#$8_) : >>
    330                           *   bit7=1 bit6=1 bit5=0 bit4=0 (#$C_) : >>
    331                           *   bit3 bit2 bit1 bit0  (#$_0 a #$_F) : >>
    332                           *   Remarque : bit5 et bit4 utilisable un>>
    333                           *
    334                           * Page en espace cartouche (ecriture dans>>
    335                           * --------------------------------------->>
    336                           *   $E7E6 determine la page visible dans >>
    337                           *   bit7 toujours a 0
    338                           *   bit6=1 : ecriture autorisee
    339                           *   bit5=1 : espace cartouche recouvert p>>
    340                           *   bit4=0 : CAS1N valide : banques 0-15 >>
    341                           *   bit5=1 bit4=0 bit3=0 bit2=0 bit1=0 bi>>
    342                           *   ...
    343                           *   bit5=1 bit4=0 bit3=1 bit2=1 bit1=1 bi>>
    344                           *   bit5=1 bit4=1 bit3=0 bit2=0 bit1=0 bi>>
    345                           *   ...
    346                           *   bit5=1 bit4=1 bit3=1 bit2=1 bit1=1 bi>>
    347                           *
    348                           * Demi-Page 0 en espace ecran (4000 a 5FF>>
    349                           * --------------------------------------->>
    350                           *   $E7C3 determine la demi-page de la pa>>
    351                           *   bit0=0 : 8Ko RAMA
    352                           *   bit0=1 : 8ko RAMB
    353                           *
    354                           *****************************************>>
    355        9169               WaitVBL
    356  7     9169 7D   E7E7             tst   $E7E7              * le fai>>
    357  3     916C 2A   FB               bpl   WaitVBL            * tant q>>
    358        916E               WaitVBL_01
    359  7     916E 7D   E7E7             tst   $E7E7              * le fai>>
    360  3     9171 2B   FB               bmi   WaitVBL_01         * tant q>>
    361                            
    362  6     9173 FC   91AD             ldd   Vint_runcount
    363  4     9176 C3   0001             addd  #1
    364  6     9179 FD   91AD             std   Vint_runcount
    365                            
    366  5     917C B6   601A             lda   Glb_Cur_Wrk_Screen_Id
    367  4     917F 9A   01               ora   1
    368  5     9181 B7   601A             sta   Glb_Cur_Wrk_Screen_Id
    369  2     9184 48                    lsla
    370  5     9185 B7   601B             sta   Glb_Cur_Wrk_Screen_Id_x2
    371                            
    372        9188               SwapVideoPage
    373  5     9188 F6   9196             ldb   am_SwapVideoPage+1 * charge>>
    374  2     918B C4   40               andb  #$40               * altern>>
    375  2     918D CA   80               orb   #$80               * bit7=1>>
    376  5     918F F7   E7DD             stb   $E7DD              * change>>
    377  7     9192 73   9196             com   am_SwapVideoPage+1 * altern>>
    378        9195               am_SwapVideoPage
    379  2     9195 C6   00               ldb   #$00
    380  2     9197 C4   01               andb  #$01               * altern>>
    381  2     9199 CA   62               orb   #$62               * bit6=1>>
    382  5     919B F7   E7E6             stb   $E7E6              * change>>
    383  5     919E F6   E7C3             ldb   $E7C3              * charge>>
    384  2     91A1 C4   01               andb  #$01
    385  3     91A3 26   04               bne   SwapVideoPage_01   * si bit>>
    386  7     91A5 7C   E7C3             inc   $E7C3              * bit0=1>>
    387  5     91A8 39                    rts
    388        91A9               SwapVideoPage_01
    389  7     91A9 7A   E7C3             dec   $E7C3              * bit0=0>>
    390  5     91AC 39                    rts
    391                            
    392        91AD               Vint_runcount rmb   $2,0 *@globals
    393
    394                                   INCLUD UPDTPAL
    395                           *****************************************>>
    396                           * Mise a jour de la palette
    397                           *****************************************>>
    398                           * TODO ajout systeme de refresh pour ne p>>
    399                           * ou integrer le refresh palette en debut>>
    400                           * palette doit etre refresh avant le trac>>
    401
    402        91AF 00            cpt            fcb   $00
    403                  91B0     Ptr_palette    equ   Normal_palette
    404        91B0               Normal_palette rmb   $20,0   *@globals
    405        91D0               Black_palette  rmb   $20,0   *@globals
    406        91F0               White_palette  rmb   $20,$FF *@globals
    407
    408        9210               UpdatePalette
    409  6+3   9210 10AE 9F 0000         ldy   [Ptr_palette]
    410  5+3   9215 AE   9F 0000         ldx   [Ptr_palette]
    411  4+1   9219 30   88 20           leax  $20,x
    412  7     921C 7F   91AF            clr   cpt                      * r>>
    413        921F               SetColor
    414  5     921F B6   91AF             lda   cpt                        >>
    415  2     9222 48                   asla                              >>
    416  5     9223 B7   E7DB            sta   $E7DB                       >>
    417  5+3   9226 EC   A1              ldd   ,y++                        >>
    418  5     9228 F7   E7DA            stb   $E7DA                       >>
    419  5     922B B7   E7DA            sta   $E7DA                    * s>>
    420  7     922E 7C   91AF            inc   cpt                         >>
    421  7+0   9231 10AC 84              cmpy  ,x                       * t>>
    422  3     9234 26   E9              bne   SetColor                 * o>>
    423  5     9236 39                    rts
    424
    425
    426                                   INCLUD READJPDS
    427                           * --------------------------------------->>
    428                           * Controller Buttons
    429                           *
    430                  0001     c1_button_up_mask            equ   $01 *@>>
    431                  0002     c1_button_down_mask          equ   $02 *@>>
    432                  0004     c1_button_left_mask          equ   $04 *@>>
    433                  0008     c1_button_right_mask         equ   $08 *@>>
    434                  0010     c2_button_up_mask            equ   $10 *@>>
    435                  0020     c2_button_down_mask          equ   $20 *@>>
    436                  0040     c2_button_left_mask          equ   $40 *@>>
    437                  0080     c2_button_right_mask         equ   $80 *@>>
    438                  0040     c1_button_A_mask             equ   $40 *@>>
    439                  0080     c2_button_A_mask             equ   $80 *@>>
    440
    441        9237               Joypads
    442        9237               Joypads_Held
    443        9237 00            Dpad_Held                    fcb   $00
    444        9238 00            Fire_Held                    fcb   $00
    445        9239               Joypads_Press
    446        9239 00            Dpad_Press                   fcb   $00
    447        923A 00            Fire_Press                   fcb   $00
    448
    449                           *****************************************>>
    450                           * Get joystick parameters
    451                           *
    452                           * Direction des Joypads
    453                           * ---------------------
    454                           * Registre: $E7CC (8bits)
    455                           *
    456                           * Joypad2     Joypad1
    457                           * 1111        1111 (0: appuye | 1: relach>>
    458                           * ||||_Haut   ||||_Haut
    459                           * |||__Bas    |||__Bas
    460                           * ||___Gauche ||___Gauche
    461                           * |____Droite |____Droite
    462                           *
    463                           * Boutons des Joypads
    464                           * -------------------
    465                           * Registre: $E7CD (8bits)
    466                           *
    467                           * 11 000000 (0: appuye | 1: relache)
    468                           * ||[------] 6 bits convertisseur numeriq>>
    469                           * ||_Fire Joypad1
    470                           * |__Fire Joypad2
    471                           *
    472                           * Variables globales: Joypads_Held, Joypa>>
    473                           * --------------------------------------->>
    474                           * (16 bits)
    475                           * Joypad2     Joypad1
    476                           * 0000        0000 (0: relache | 1: appuy>>
    477                           * ||||_Haut   ||||_Haut                  >>
    478                           * |||__Bas    |||__Bas                   >>
    479                           * ||___Gauche ||___Gauche                >>
    480                           * |____Droite |____Droite
    481                           *
    482                           *****************************************>>
    483                            
    484                                                                  *;>>
    485                                                                  *;>>
    486                                                                  *;>>
    487                                                                  *;>>
    488                                                                  *
    489                                                                  *;>>
    490        923B               ReadJoypads                            *R>>
    491                                                                  * >>
    492                                                                  * >>
    493                                                                  * >>
    494                                                                  * >>
    495                                                                  *
    496                                                                  *;>>
    497                                                                  *J>>
    498                                                                  * >>
    499                                                                  * >>
    500                                                                  * >>
    501                                                                  * >>
    502                                                                  * >>
    503                                                                  * >>
    504                                                                  * >>
    505                                                                  * >>
    506                                                                  * >>
    507                                                                  * >>
    508                                                                  * >>
    509  3     923B CC   E7CC             ldd   #$E7CC                   * >>
    510  2     923E 43                    coma                           * >>
    511  2     923F 53                    comb
    512                                                                  * >>
    513                                                                  * >>
    514                                                                  * >>
    515  6     9240 FD   9237             std   Joypads_Held
    516  5     9243 B8   9237             eora  Dpad_Held
    517  5     9246 F8   9238             eorb  Fire_Held
    518  5     9249 B4   9237             anda  Dpad_Held                * >>
    519  5     924C F4   9238             andb  Fire_Held
    520  6     924F FD   9239             std   Joypads_Press            * >>
    521  5     9252 39                    rts                            * >>
    522                                                                  *;>>
    523
    524
    525                                   INCLUD RUNOBJTS
    526                           * --------------------------------------->>
    527                           * This runs the code of all the objects t>>
    528                           *
    529                           * ecart par rapport au code d'origine :
    530                           * Il n'y a pas de tableau de pointeur Obj>>
    531                           * du code de l'objet
    532                           * --------------------------------------->>
    533
    534                                                                  *;>>
    535                                                                  *;>>
    536                                                                  *;>>
    537                                                                  *
    538                                                                  *;>>
    539                                                                  *
    540                                                                  *;>>
    541        9253               RunObjects                             *R>>
    542                                                                  * >>
    543                                                                  * >>
    544  4     9253 108E 825C             ldy   #Object_RAM              * >>
    545                                                                  *
    546                                                                  * >>
    547                                                                  * >>
    548                                                                  * >>
    549                                                                  * >>
    550                                                                  * >>
    551                                                                  * >>
    552        9257               RunObjects_01                          *+>>
    553                                                                  * >>
    554                                                                  * >>
    555                                                                  * >>
    556                                                                  *
    557                                                                  * >>
    558  7     9257 7D   915C             tst   Glb_MainCharacter_Is_Dead
    559  3     925A 27   10               beq   RunObjectsWhenPlayerIsDead
    560                                                                  * >>
    561                                                                  * >>
    562                                                                  *;>>
    563                                                                  *
    564                                                                  *;>>
    565                                                                  *;>>
    566                                                                  *;>>
    567                                                                  *
    568                                                                  *;>>
    569                                                                  *
    570                                                                  *;>>
    571        925C               RunObject                              *R>>
    572  5+0   925C EE   A4               ldu   ,y                       * >>
    573  3     925E 27   02               beq   RunNextObject            * >>
    574                                                                  *
    575                                                                  * >>
    576                                                                  * >>
    577                                                                  * >>
    578  7+0   9260 AD   C4               jsr   ,u                       * >>
    579                                                                  * >>
    580                                                                  *
    581                                                                  *;>>
    582        9262               RunNextObject                          *R>>
    583  4+1   9262 31   A8 50            leay  next_object,y            * >>
    584        9265               am_RunNextObject
    585  5     9265 108C 915C             cmpy  #Object_RAM_End          * >>
    586  3     9269 26   F1               bne   RunObject                *;>>
    587        926B               RunObjects_End                         *R>>
    588  5     926B 39                    rts                            * >>
    589                                                                  *
    590                                                                  *;>>
    591                                                                  *;>>
    592                                                                  *;>>
    593        926C               RunObjectsWhenPlayerIsDead             *R>>
    594                                                                  * >>
    595                                                                  * >>
    596  4     926C 108E 825C             ldy   #Reserved_Object_RAM
    597  3     9270 8E   82FC             ldx   #Reserved_Object_RAM_End
    598  6     9273 BF   9267             stx   am_RunNextObject+2
    599  7     9276 8D   E4               bsr   RunObject
    600                                                                  * >>
    601                                                                  * >>
    602  4     9278 108E 82FC             ldy   #Dynamic_Object_RAM
    603  7     927C 8D   12               bsr   RunObjectDisplayOnly
    604                                                                  * >>
    605                                                                  * >>
    606  4     927E 108E 906C             ldy   #LevelOnly_Object_RAM
    607  3     9282 8E   915C             ldx   #LevelOnly_Object_RAM_End
    608  6     9285 BF   9267             stx   am_RunNextObject+2
    609  3     9288 20   D2               bra   RunObject
    610                                                                  *
    611  3     928A 8E   915C             ldx   #Object_RAM_End          * >>
    612  6     928D BF   9267             stx   am_RunNextObject+2
    613                                                                  *;>>
    614                                                                  *
    615                                                                  *;>>
    616        9290               RunObjectDisplayOnly                   *R>>
    617                                                                  * >>
    618  5+0   9290 EE   A4               ldu   ,y                       * >>
    619  3     9292 27   06               beq   RunNextObjectDisplayOnly * >>
    620  6+1   9294 6D   22               tst   render_flags,y           * >>
    621  3     9296 2A   02               bpl   RunNextObjectDisplayOnly * >>
    622  7     9298 8D   12               bsr   DisplaySprite            * >>
    623        929A               RunNextObjectDisplayOnly               *+>>
    624  4+1   929A 31   A8 50            leay  next_object,y            * >>
    625  5     929D 108C 906C             cmpy  #Dynamic_Object_RAM_End  * >>
    626  3     92A1 26   ED               bne   RunObjectDisplayOnly
    627  5     92A3 39                    rts                            * >>
    628                                                                  *;>>
    629                                                                  *
    630                                                                  *;>>
    631
    632                                   INCLUD MRKOBJGN
    633                           * --------------------------------------->>
    634                           * MarkObjGone
    635                           * -----------
    636                           * Subroutine to destroy an object that is>>
    637                           * -- TODO --
    638                           * waiting for camera implementation
    639                           *
    640                           * input REG : none
    641                           * clear REG : none
    642                           * --------------------------------------->>
    643
    644                                                                  *;>>
    645                                                                  *;>>
    646                                                                  *;>>
    647                                                                  *
    648                                                                  *;>>
    649                                                                  *;>>
    650                                                                  *;>>
    651        92A4               MarkObjGone *@globals                  *M>>
    652                                                                  * >>
    653                                                                  * >>
    654  3     92A4 20   06               bra   DisplaySprite            * >>
    655                                                                  *+>>
    656                                                                  * >>
    657                                                                  * >>
    658                                                                  * >>
    659                                                                  * >>
    660                                                                  * >>
    661                                                                  * >>
    662                                                                  *
    663                                                                  *+>>
    664                                                                  * >>
    665                                                                  * >>
    666                                                                  * >>
    667                                                                  * >>
    668                                                                  *+>>
    669                                                                  * >>
    670
    671                                   INCLUD DISPLSPR
    672                           * --------------------------------------->>
    673                           * DisplaySprite
    674                           * -------------
    675                           * Subroutine to manage sprite priority.
    676                           * Object's priority is read and object is>>
    677                           * priority: 0 - unregistred
    678                           * priority: 1 - register non moving overl>>
    679                           * priority; 2-8 - register moving sprite >>
    680                           *
    681                           * Unlike original S2 code, sprite priorit>>
    682                           * it allows to keep an exact sprite order>>
    683                           *
    684                           * DisplaySprite
    685                           * input REG : [u] object pointer (OST)
    686                           *
    687                           * DisplaySprite_x
    688                           * input REG : [x] object pointer (OST)
    689                           * --------------------------------------->>
    690                            
    691        92A6               DisplaySprite_x *@globals
    692  5+6   92A6 34   56               pshs  d,x,u
    693  6     92A8 1F   13               tfr   x,u
    694  3     92AA 20   02               bra   DSP_Start
    695                            
    696        92AC               DisplaySprite *@globals
    697  5+6   92AC 34   56               pshs  d,x,u
    698                            
    699        92AE               DSP_Start
    700  5     92AE B6   601A             lda   Glb_Cur_Wrk_Screen_Id      >>
    701  3     92B1 26   09               bne   DSP_SetBuffer1
    702                            
    703        92B3               DSP_SetBuffer0
    704  4+1   92B3 30   C8 34            leax  rsv_buffer_0,u             >>
    705  7     92B6 10BE 80A8             ldy   DPS_buffer_0               >>
    706  3     92BA 20   07               bra   DSP_BufferPositionned
    707                            
    708        92BC               DSP_SetBuffer1
    709  4+1   92BC 30   C8 42            leax  rsv_buffer_1,u             >>
    710  7     92BF 10BE 8128             ldy   DPS_buffer_1               >>
    711                            
    712        92C3               DSP_BufferPositionned
    713  4+1   92C3 A6   43               lda   priority,u                 >>
    714  4+1   92C5 A1   00               cmpa  buf_priority,x
    715  3     92C7 27   46               beq   DSP_rts                    >>
    716  4+1   92C9 E6   00               ldb   buf_priority,x
    717  3     92CB 26   31               bne   DSP_ChangePriority
    718                            
    719        92CD               DSP_InitPriority
    720  4+1   92CD A7   00               sta   buf_priority,x             >>
    721                            
    722        92CF               DSP_CheckLastEntry
    723  4+1   92CF 31   A8 12            leay  buf_Tbl_Priority_Last_Entry>>
    724  6+1   92D2 6D   A6               tst   a,y                        >>
    725  3     92D4 26   0F               bne   DSP_addToExistingNode      >>
    726                            
    727        92D6               DSP_addFirstNode
    728  5+1   92D6 EF   A6               stu   a,y                        >>
    729  4+1   92D8 31   A8 EE            leay  buf_Tbl_Priority_First_Entr>>
    730  5+1   92DB EF   A6               stu   a,y                        >>
    731  5     92DD DC   00               ldd   0
    732  5+1   92DF ED   01               std   buf_priority_prev_obj,x    >>
    733  5+1   92E1 ED   03               std   buf_priority_next_obj,x
    734  3     92E3 20   2A               bra   DSP_rts
    735                            
    736        92E5               DSP_addToExistingNode
    737  5+4   92E5 AE   B6               ldx   [a,y]                      >>
    738  5     92E7 F6   601A             ldb   Glb_Cur_Wrk_Screen_Id
    739  3     92EA 26   05               bne   DSP_LinkBuffer1
    740  5+1   92EC EF   88 37            stu   rsv_priority_next_obj_0,x  >>
    741  3     92EF 20   03               bra   DSP_LinkCurWithPrev
    742        92F1               DSP_LinkBuffer1
    743  5+1   92F1 EF   88 45            stu   rsv_priority_next_obj_1,x  >>
    744                            
    745        92F4               DSP_LinkCurWithPrev
    746  5+1   92F4 AF   41               stx   buf_priority_prev_obj,u    >>
    747  5+1   92F6 EF   A6               stu   a,y                        >>
    748  5     92F8 DC   00               ldd   0
    749  5+1   92FA ED   03               std   buf_priority_next_obj,x    >>
    750  3     92FC 20   11               bra   DSP_rts
    751                            
    752        92FE               DSP_ChangePriority
    753  4+1   92FE 31   A8 24            leay  buf_Lst_Priority_Unset,y
    754  5+3   9301 EF   B4               stu   [,y]                       >>
    755  4+1   9303 31   22               leay  2,y
    756  6+0   9305 10AF A4               sty   ,y                         >>
    757  4+1   9308 31   A8 DA            leay  -buf_Lst_Priority_Unset-2,y>>
    758  4     930B 91   00               cmpa  0
    759  3     930D 26   C0               bne   DSP_CheckLastEntry         >>
    760
    761        930F               DSP_rts
    762  5+8   930F 35   D6               puls  d,x,u,pc
    763                            
    764                                                                  *;>>
    765                                                                  *;>>
    766                                                                  *;>>
    767                                                                  *
    768                                                                  *;>>
    769                                                                  *
    770                                                                  *;>>
    771                                                                  *D>>
    772                                                                  * >>
    773                                                                  * >>
    774                                                                  * >>
    775                                                                  * >>
    776                                                                  * >>
    777                            
    778                                                                  * >>
    779                                                                  * >>
    780                                                                  * >>
    781                            
    782                                                                  * >>
    783                                                                  * >>
    784                                                                  *
    785                                                                  *r>>
    786                            
    787                                                                  * >>
    788                                                                  *;>>
    789
    790                                   INCLUD ANIMSPR
    791                           * --------------------------------------->>
    792                           * Subroutine to animate a sprite using an>>
    793                           *
    794                           *   this function also change render flag>>
    795                           *   the status byte;
    796                           *
    797                           * input REG : [u] pointeur sur l'objet
    798                           *             [x] pointeur sur le script >>
    799                           * --------------------------------------->>
    800
    801                                                                  *;>>
    802                                                                  *;>>
    803                                                                  *;>>
    804                                                                  *
    805                                                                  *;>>
    806                                                                  *
    807                                                                  *;>>
    808        9311               AnimateSprite                          *A>>
    809                                                                  * >>
    810  4+1   9311 A6   44               lda   anim,u                   * >>
    811  4+1   9313 A1   46               cmpa  prev_anim,u              * >>
    812  3     9315 27   08               beq   Anim_Run                 * >>
    813  4+1   9317 A7   46               sta   prev_anim,u              * >>
    814  2     9319 C6   00                     ldb   #0
    815  4+1   931B E7   48               stb   anim_frame,u             * >>
    816  4+1   931D E7   49               stb   anim_frame_duration,u    * >>
    817                                                                  *;>>
    818        931F               Anim_Run                               *A>>
    819  6+1   931F 6A   49               dec   anim_frame_duration,u    * >>
    820  3     9321 2A   23               bpl   Anim_Wait                * >>
    821  4+1   9323 AB   44               adda  anim,u                   * >>
    822  4+1   9325 30   86               leax  a,x                      * >>
    823  4+0   9327 E6   84               ldb   ,x
    824  4+1   9329 E7   49                     stb   anim_frame_duration,u>>
    825                                                                  * >>
    826  4+1   932B E6   48               ldb   anim_frame,u             * >>
    827  2     932D 5C                    incb
    828  4+1   932E A6   85               lda   b,x                      * >>
    829                                   * bmi   Anim_End_FF            * >>
    830  2     9330 81   FA                     cmpa  #$FA                 >>
    831  3     9332 24   13                     bhs   Anim_End_FF          >>
    832                                                                  *;>>
    833        9334               Anim_Next                              *A>>
    834                                      * ne pas utiliser             >>
    835  4+1   9334 A7   4A               sta   mapping_frame,u          * >>
(836)0:ANIMSPR.ASM Expression Error
    836         ldb   status,u                 *    move.b  status(a0),d1
    837  2     9336 C4   03               andb  #3                       * >>
    838  4+1   9338 A6   42               lda   render_flags,u           * >>
    839  2     933A 84   FC               anda  #$FC
    840  4+1   933C A7   42               sta   render_flags,u
    841  4+1   933E EA   42               orb   render_flags,u           * >>
    842  6+1   9340 6C   48               inc   anim_frame,u             * >>
    843                                                                  *;>>
    844        9342               Anim_Wait                              *A>>
    845  5     9342 39                    rts                            * >>
    846                                                                  *;>>
    847                                                                  *;>>
    848        9343               Anim_End_FF                            *A>>
    849  2     9343 4C                    inca                           * >>
    850  3     9344 26   0C               bne   Anim_End_FE              * >>
    851  2     9346 C6   00                     ldb   #0
    852  4+1   9348 E7   48               stb   anim_frame,u             * >>
    853  4+1   934A A6   01               lda   1,x                      * >>
    854  3     934C 20   E6               bra   Anim_Next                * >>
    855                                                                  *;>>
    856                                                                  *;>>
    857        934E               Anim_End_FE                            *A>>
    858  2     934E 4C                    inca                           * >>
    859  3     934F 26   12               bne   Anim_End_FD              * >>
    860  2     9351 5C                    incb
    861  4+1   9352 A6   48               lda   anim_frame,u             * >>
    862  4+1   9354 A0   85               suba  b,x                      * >>
    863  4+1   9356 A7   48               sta   anim_frame,u
    864  6     9358 1F   89               tfr   a,b                      * >>
    865  2     935A 5C                    incb
    866  4+1   935B A6   85               lda   b,x                      * >>
    867  3     935D 20   D5               bra   Anim_Next                * >>
    868                                                                  *;>>
    869                                                                  *;>>
    870        935F               Anim_End_FD                            *A>>
    871  2     935F 4C                    inca                           * >>
    872  3     9360 26   0A               bne   Anim_End_FC              * >>
    873  2     9362 5C                    incb
    874  4+1   9363 A6   85               lda   b,x
    875  4+1   9365 A7   44               sta   anim,u                   * >>
    876  5     9367 39                    rts                            * >>
    877                                                                  *;>>
    878                                                                  *;>>
    879        9368               Anim_End_FC                            *A>>
    880  2     9368 4C                    inca                           * >>
    881  3     9369 26   11               bne   Anim_End_FB              * >>
    882  6+1   936B 6C   C8 18            inc   routine,u
    883  6+1   936E 6C   C8 18            inc   routine,u                * >>
    884  2     9371 86   00               lda   #0
    885  4+1   9373 A7   49               sta   anim_frame_duration,u    * >>
    886  6+1   9375 6C   48               inc   anim_frame,u             * >>
    887  5     9377 39                    rts                            * >>
    888                                                                  *;>>
    889                                                                  *;>>
    890        9378               Anim_End_FB                            *A>>
    891  2     9378 4C                    inca                           * >>
    892  3     9379 26   0C               bne   Anim_End_FA              * >>
    893  2     937B 86   00               lda   #0
    894  4+1   937D A7   48               sta   anim_frame,u             * >>
    895  4+1   937F A7   C8 19            sta   routine_secondary,u      * >>
    896  5     9382 39                    rts                            * >>
    897                                                                  *;>>
    898                                                                  *;>>
    899        9383               Anim_End_FA                            *A>>
    900                                   * inca                         * >>
    901  3     9383 26   0B               bne   Anim_End                 * >>
    902  6+1   9385 6C   C8 19            inc   routine_secondary,u      * >>
    903  6+1   9388 6C   C8 19            inc   routine_secondary,u
    904  5     938B 39                    rts                            * >>
    905                                                                  *;>>
    906                                                                  *;>>
    907                                                                  *A>>
    908                                                                  * >>
    909                                                                  * >>
    910                                                                  * >>
    911                                                                  *;>>
    912        938C               Anim_End                               *A>>
    913  5     938C 39                    rts                            * >>
    914                                                                  *;>>
    915
    916                                   INCLUD OBJMOVE
    917                           * --------------------------------------->>
    918                           * Subroutine translating object speed to >>
    919                           * This moves the object horizontally and >>
    920                           * but does not apply gravity to it
    921                           * --------------------------------------->>
    922
    923                                                                  *;>>
    924                                                                  *;>>
    925                                                                  *;>>
    926                                                                  *;>>
    927                                                                  *;>>
    928                                                                  *
    929                                                                  *;>>
    930                                                                  *
    931                                                                  *;>>
    932        938D               ObjectMove                             *O>>
    933                                                                  * >>
    934                                                                  * >>
    935                                                                  * >>
    936                                                                  * >>
    937                                                                  * >>
    938                                                                  * >>
    939  4+1   938D E6   C8 14            ldb   x_vel,u
    940  2     9390 1D                    sex                            ; >>
    941  5     9391 B7   93A2             sta   am_ObjectMove_01+1
    942  5+1   9394 EC   C8 14            ldd   x_vel,u
    943  6+1   9397 E3   4D               addd  x_pos+1,u                ; >>
    944  5+1   9399 ED   4D               std   x_pos+1,u                ; >>
    945  4+1   939B A6   4C               lda   x_pos,u
    946        939D               am_ObjectMove_01
    947  2     939D 89   00               adca  #$00                     ; >>
    948  4+1   939F A7   4C               sta   x_pos,u                  ; >>
    949                            
    950                                                                  * >>
    951                                                                  * >>
    952                                                                  * >>
    953                                                                  * >>
    954                                                                  * >>
    955                                                                  * >>
    956  4+1   93A1 E6   C8 16            ldb   y_vel,u
    957  2     93A4 1D                    sex                            ; >>
    958  5     93A5 B7   93B8             sta   am_ObjectMove_02+1
    959  5+1   93A8 EC   C8 16            ldd   y_vel,u
    960  6+1   93AB E3   C8 10            addd  y_pos+1,u                ; >>
    961  5+1   93AE ED   C8 10            std   y_pos+1,u                ; >>
    962  4+1   93B1 A6   4F               lda   y_pos,u
    963        93B3               am_ObjectMove_02
    964  2     93B3 89   00               adca  #$00                     ; >>
    965  4+1   93B5 A7   4F               sta   y_pos,u                  ; >>
    966  5     93B7 39                    rts                            * >>
    967                                                                  *;>>
    968                                                                  *;>>
    969
    970                                   INCLUD OBJLOAD
    971                           * --------------------------------------->>
    972                           * Single object loading subroutine
    973                           * Find an empty object array
    974                           *
    975                           * input  REG : [u] pointeur sur l'objet c>>
    976                           * output REG : [x] pointeur sur l'objet l>>
    977                           * --------------------------------------->>
    978
    979                                                                  *;>>
    980                                                                  *;>>
    981                                                                  *;>>
    982                                                                  *;>>
    983                                                                  *;>>
    984                                                                  *
    985                                                                  *;>>
    986                                                                  *S>>
    987                                                                  * >>
    988                                                                  * >>
    989                                                                  * >>
    990                                                                  * >>
    991                                                                  * >>
    992                                                                  *
    993                                                                  */>>
    994                                                                  * >>
    995                                                                  * >>
    996                                                                  * >>
    997                                                                  * >>
    998                                                                  *
    999                                                                  *r>>
   1000                                                                  * >>
   1001                                                                  *;>>
   1002                                                                  *;>>
   1003                                                                  *;>>
   1004                                                                  *;>>
   1005                                                                  *;>>
   1006                                                                  *
   1007                                                                  *;>>
   1008                                                                  *
   1009                                                                  *;>>
   1010        93B8               SingleObjLoad2                         *S>>
   1011  6     93B8 1F   31               tfr   u,x                      * >>
   1012  4+1   93BA 30   88 50            leax  next_object,x            * >>
   1013  4     93BD 8C   906C             cmpx  #Dynamic_Object_RAM_End  * >>
   1014  3     93C0 27   10               beq   SingleObjLoad2_02        * >>
   1015                                                                  * >>
   1016                                                                  * >>
   1017                                                                  * >>
   1018                                                                  * >>
   1019                                                                  * >>
   1020                                                                  * >>
   1021                                                                  * >>
   1022                                                                  * >>
   1023                                                                  *
   1024        93C2               SingleObjLoad2_01                      *->>
   1025  6+0   93C2 6D   84               tst   ,x                       * >>
   1026  3     93C4 27   0C               beq   SingleObjLoad2_02        * >>
   1027  4+1   93C6 30   88 50            leax  next_object,x            * >>
   1028  4     93C9 8C   906C             cmpx  #Dynamic_Object_RAM_End
   1029  3     93CC 26   F8               bne   SingleObjLoad2_01        * >>
   1030                                                                  *
   1031        93CE               SingleObjLoad2_02                      *r>>
   1032  5     93CE 39                    rts                            * >>
   1033                                                                  *
   1034                                                                  * >>
   1035                                                                  *+>>
   1036                                                                  *.>>
   1037                                                                  *.>>
   1038                                                                  *
   1039                                                                  * >>
   1040                                                                  * >>
   1041                                                                  * >>
   1042                                                                  * >>
   1043                                                                  * >>
   1044                                                                  * >>
   1045                                                                  *
   1046                                                                  *.>>
   1047                                                                  *.>>
   1048                                                                  * >>
   1049                                                                  * >>
   1050                                                                  * >>
   1051                                                                  *;>>
   1052                                                                  *;>>
   1053                                                                  *;>>
   1054                                                                  *;>>
   1055                                                                  *;>>
   1056                                                                  *
   1057                                                                  *;>>
   1058                                                                  *
   1059                                                                  *;>>
   1060                                                                  *S>>
   1061                                                                  * >>
   1062                                                                  * >>
   1063                                                                  *
   1064                                                                  *->>
   1065                                                                  * >>
   1066                                                                  * >>
   1067                                                                  * >>
   1068                                                                  * >>
   1069                                                                  *
   1070                                                                  *r>>
   1071                                                                  * >>
   1072                                                                  *;>>
   1073
   1074
   1075                                   INCLUD DELETOBJ
   1076                           * --------------------------------------->>
   1077                           * DeleteObject
   1078                           * ------------
   1079                           * Subroutine to delete an object.
   1080                           * If the object is rendered as a sprite i>>
   1081                           * routine
   1082                           *
   1083                           * DeleteObject
   1084                           * input REG : [u] object pointer (OST)
   1085                           *
   1086                           * DeleteObject_x
   1087                           * input REG : [x] object pointer (OST)
   1088                           * --------------------------------------->>
   1089
   1090                                                                  *;>>
   1091                                                                  *;>>
   1092                                                                  *;>>
   1093                                                                  *
   1094                                                                  *;>>
   1095                                                                  *
   1096                                                                  *;>>
   1097        93CF               DeleteObject_x *@globals               *D>>
   1098  5+6   93CF 34   56               pshs  d,x,u                    * >>
   1099  6     93D1 1F   13               tfr   x,u                      *;>>
   1100  3     93D3 20   06               bra   DOB_Start
   1101        93D5               DeleteObject *@globals                 *D>>
   1102  5+6   93D5 34   56               pshs  d,x,u
   1103        93D7               DOB_Start
   1104  4+1   93D7 A6   C8 41            lda   rsv_onscreen_0,u
   1105  3     93DA 27   1F               beq   DOB_TestOnscreen1Delete  ; >>
   1106                            
   1107        93DC               DOB_Unset0
   1108  6     93DC BE   80CC             ldx   Lst_Priority_Unset_0     ; >>
   1109  5+0   93DF EF   84               stu   ,x
   1110  4+1   93E1 30   02               leax  2,x
   1111  6     93E3 BF   80CC             stx   Lst_Priority_Unset_0
   1112                            
   1113        93E6               DOB_TestOnscreen1
   1114  4+1   93E6 A6   C8 4F            lda   rsv_onscreen_1,u
   1115  3     93E9 27   1A               beq   DOB_ToDeleteFlag         ; >>
   1116                            
   1117        93EB               DOB_Unset1
   1118  6     93EB BE   814C             ldx   Lst_Priority_Unset_1     ; >>
   1119  5+0   93EE EF   84               stu   ,x
   1120  4+1   93F0 30   02               leax  2,x
   1121  6     93F2 BF   814C             stx   Lst_Priority_Unset_1
   1122  3     93F5 20   0E               bra  DOB_ToDeleteFlag
   1123                            
   1124        93F7               DOB_TestOnscreen1Delete
   1125  4+1   93F7 A6   C8 4F            lda   rsv_onscreen_1,u
   1126  3     93FA 26   F3               bne   DOB_Unset1               ; >>
   1127
   1128  8     93FC BD   940D             jsr   ClearObj                 ; >>
   1129  3     93FF 20   0A               bra   DOB_rts
   1130                                                                  * >>
   1131                                                                  *
   1132                                                                  * >>
   1133                                                                  * >>
   1134                                                                  *->>
   1135                                                                  * >>
   1136                                                                  * >>
   1137                                                                  * >>
   1138                                                                  * >>
   1139                                                                  *
   1140        9401               DOB_ToDeleteFlag
   1141  4+1   9401 A6   42               lda   render_flags,u
   1142  4     9403 9A   20               ora   render_todelete_mask
   1143  4+1   9405 A7   42               sta   render_flags,u           ; >>
   1144                            
   1145        9407               DOB_rts
   1146  5+8   9407 35   D6               puls  d,x,u,pc                 * >>
   1147                                                                  *;>>
   1148
   1149                                   INCLUD CLEAROBJ
   1150                           * --------------------------------------->>
   1151                           * ClearObj
   1152                           * --------
   1153                           * Subroutine to clear an object data in O>>
   1154                           *
   1155                           * input REG : [u] pointer on objet (OST)
   1156                           * clear REG : [d,y]
   1157                           * --------------------------------------->>
   1158
   1159        9409               ClearObj *@globals
   1160  7     9409 10FF 9437             sts   CLO_1+2
   1161  6     940D BF   943B             stx   CLO_2+2
   1162  3     9410 CC   0000             ldd   #$0000
   1163  3     9413 8E   0000             ldx   #$0000
   1164  4+0   9416 31   84               leay  ,x
   1165  4+0   9418 32   84               leas  ,x
   1166  4+1   941A 33   C8 50            leau  object_size,u
   1167  5+8   941D 36   76               pshu  d,x,y,s
   1168  5+8   941F 36   76               pshu  d,x,y,s
   1169  5+8   9421 36   76               pshu  d,x,y,s
   1170  5+8   9423 36   76               pshu  d,x,y,s
   1171  5+8   9425 36   76               pshu  d,x,y,s
   1172  5+8   9427 36   76               pshu  d,x,y,s
   1173  5+8   9429 36   76               pshu  d,x,y,s
   1174  5+8   942B 36   76               pshu  d,x,y,s
   1175  5+8   942D 36   76               pshu  d,x,y,s
   1176  5+8   942F 36   76               pshu  d,x,y,s
   1177        9431               CLO_1
   1178  4     9431 10CE 0000             lds   #$0000
   1179        9435               CLO_2
   1180  3     9435 8E   0000             ldx   #$0000
   1181  5     9438 39                    rts
   1182
   1183                                   INCLUD CHECKSPR
   1184                           * --------------------------------------->>
   1185                           * CheckSpritesRefresh
   1186                           * -------------------
   1187                           * Subroutine to determine if sprites are >>
   1188                           * Read Display Priority Structure (back t>>
   1189                           * priority: 0 - unregistred
   1190                           * priority: 1 - register non moving overl>>
   1191                           * priority; 2-8 - register moving sprite >>
   1192                           *
   1193                           * input REG : none
   1194                           * --------------------------------------->>
   1195
   1196        9439 0000          cur_priority            fdb   $00
   1197        943B 0000          cur_ptr_sub_obj_erase   fdb   $0000
   1198        943D 0000          cur_ptr_sub_obj_draw    fdb   $0000
   1199                            
   1200        943F               CheckSpritesRefresh
   1201
   1202        943F               CSR_Start
   1203  3     943F CC   81A8             ldd   #Tbl_Sub_Object_Erase
   1204  6     9442 FD   943F             std   cur_ptr_sub_obj_erase
   1205  3     9445 CC   8202             ldd   #Tbl_Sub_Object_Draw
   1206  6     9448 FD   9441             std   cur_ptr_sub_obj_draw
   1207  5     944B B6   601A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1208  3     944E 26   64               bne   CSR_SetBuffer1
   1209                            
   1210        9450               CSR_SetBuffer0
   1211  4     9450 96   34               lda   rsv_buffer_0               >>
   1212  5     9452 B7   9516             sta   CSR_ProcessEachPriorityLeve>>
   1213        9455               CSR_P8B0
   1214  6     9455 FE   80B6             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1215  3     9458 27   0C               beq   CSR_P7B0
   1216  2     945A 86   08               lda   #$08
   1217  5     945C B7   943D             sta   cur_priority
   1218  8     945F BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1219        9462               CSR_P7B0
   1220  6     9462 FE   80B4             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1221  3     9465 27   0A               beq   CSR_P6B0
   1222  7     9467 7A   943D             dec   cur_priority
   1223  8     946A BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1224        946D               CSR_P6B0
   1225  6     946D FE   80B2             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1226  3     9470 27   0A               beq   CSR_P5B0
   1227  7     9472 7A   943D             dec   cur_priority
   1228  8     9475 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1229        9478               CSR_P5B0
   1230  6     9478 FE   80B0             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1231  3     947B 27   0A               beq   CSR_P4B0
   1232  7     947D 7A   943D             dec   cur_priority
   1233  8     9480 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1234        9483               CSR_P4B0
   1235  6     9483 FE   80AE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1236  3     9486 27   0A               beq   CSR_P3B0
   1237  7     9488 7A   943D             dec   cur_priority
   1238  8     948B BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1239        948E               CSR_P3B0
   1240  6     948E FE   80AC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1241  3     9491 27   0A               beq   CSR_P2B0
   1242  7     9493 7A   943D             dec   cur_priority
   1243  8     9496 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1244        9499               CSR_P2B0
   1245  6     9499 FE   80AA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1246  3     949C 27   0A               beq   CSR_P1B0
   1247  7     949E 7A   943D             dec   cur_priority
   1248  8     94A1 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1249        94A4               CSR_P1B0
   1250  6     94A4 FE   80A8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1251  3     94A7 27   0A               beq   CSR_rtsB0
   1252  7     94A9 7A   943D             dec   cur_priority
   1253  8     94AC BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1254        94AF               CSR_rtsB0
   1255  5     94AF 39                    rts
   1256                            
   1257        94B0               CSR_SetBuffer1
   1258  4     94B0 96   42               lda   rsv_buffer_1               >>
   1259  5     94B2 B7   9516             sta   CSR_ProcessEachPriorityLeve>>
   1260        94B5               CSR_P8B1
   1261  6     94B5 FE   8136             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1262  3     94B8 27   0C               beq   CSR_P7B1
   1263  2     94BA 86   08               lda   #$08
   1264  5     94BC B7   943D             sta   cur_priority
   1265  8     94BF BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1266        94C2               CSR_P7B1
   1267  6     94C2 FE   8134             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1268  3     94C5 27   0A               beq   CSR_P6B1
   1269  7     94C7 7A   943D             dec   cur_priority
   1270  8     94CA BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1271        94CD               CSR_P6B1
   1272  6     94CD FE   8132             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1273  3     94D0 27   0A               beq   CSR_P5B1
   1274  7     94D2 7A   943D             dec   cur_priority
   1275  8     94D5 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1276        94D8               CSR_P5B1
   1277  6     94D8 FE   8130             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1278  3     94DB 27   0A               beq   CSR_P4B1
   1279  7     94DD 7A   943D             dec   cur_priority
   1280  8     94E0 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1281        94E3               CSR_P4B1
   1282  6     94E3 FE   812E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1283  3     94E6 27   0A               beq   CSR_P3B1
   1284  7     94E8 7A   943D             dec   cur_priority
   1285  8     94EB BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1286        94EE               CSR_P3B1
   1287  6     94EE FE   812C             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1288  3     94F1 27   0A               beq   CSR_P2B1
   1289  7     94F3 7A   943D             dec   cur_priority
   1290  8     94F6 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1291        94F9               CSR_P2B1
   1292  6     94F9 FE   812A             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1293  3     94FC 27   0A               beq   CSR_P1B1
   1294  7     94FE 7A   943D             dec   cur_priority
   1295  8     9501 BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1296        9504               CSR_P1B1
   1297  6     9504 FE   8128             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1298  3     9507 27   0A               beq   CSR_rtsB1
   1299  7     9509 7A   943D             dec   cur_priority
   1300  8     950C BD   9514             jsr   CSR_ProcessEachPriorityLeve>>
   1301        950F               CSR_rtsB1
   1302  5     950F 39                    rts
   1303
   1304        9510               CSR_ProcessEachPriorityLevel
   1305  4+1   9510 30   C8 10            leax  16,u                       >>
   1306  4+1   9513 A6   C8 29            lda   rsv_render_flags,u
   1307  2     9516 84   01               anda  #rsv_render_checkrefresh_ma>>
   1308  6     9518 1026 00A9             lbne  CSR_CheckErase
   1309                            
   1310        951C               CSR_CheckDelHide
   1311  4+1   951C A6   42               lda   render_flags,u
   1312  2     951E 84   28               anda  #render_hide_mask!render_to>>
   1313  3     9520 26   5E               bne   CSR_DoNotDisplaySprite
   1314
   1315        9522               CSR_UpdSpriteImageBasedOnMirror
   1316  4+1   9522 A6   C8 29            lda   rsv_render_flags,u
   1317  2     9525 8A   01               ora   #rsv_render_checkrefresh_ma>>
   1318  4+1   9527 A7   C8 29            sta   rsv_render_flags,u         >>
   1319  4+1   952A A6   42               lda   render_flags,u             >>
   1320  2     952C 84   03               anda  #render_xmirror_mask!render>>
   1321  2     952E C6   10               ldb   #image_meta_size
   1322  11    9530 3D                    mul
   1323  6+1   9531 E3   4A               addd  mapping_frame,u
   1324  5+1   9533 ED   C8 2C            std   rsv_curr_mapping_frame,u
   1325                            
   1326        9536               CSR_CheckPlayFieldCoord
   1327  4+1   9536 A6   42               lda   render_flags,u
   1328  2     9538 84   04               anda  #render_playfieldcoord_mask>>
   1329  3     953A 27   6A               beq   CSR_CheckVerticalPosition  >>
   1330                            
   1331  5+1   953C EC   4C               ldd   x_pos,u
   1332  7     953E B3   601C             subd  Glb_Camera_X_Pos
   1333  6+1   9541 10AE C8 2C            ldy   rsv_curr_mapping_frame,u
   1334  6+1   9545 E3   2A               addd  image_x_offset,y
   1335  3     9547 29   74               bvs   CSR_SetOutOfRange          >>
   1336  3     9549 2B   72               bmi   CSR_SetOutOfRange          >>
   1337  4+1   954B E7   C8 12            stb   x_pixel,u
   1338  4+1   954E EB   2E               addb  image_x_size,y
   1339  3     9550 29   6B               bvs   CSR_SetOutOfRange          >>
   1340  4+1   9552 E7   C8 32            stb   rsv_x2_pixel,u
   1341  2     9555 C1   A0               cmpb  #screen_width
   1342  3     9557 2E   64               bgt   CSR_SetOutOfRange          >>
   1343
   1344  5+1   9559 EC   4F               ldd   y_pos,u
   1345  7     955B B3   601E             subd  Glb_Camera_Y_Pos
   1346  6+1   955E E3   2C               addd  image_y_offset,y
   1347  3     9560 29   5B               bvs   CSR_SetOutOfRange          >>
   1348  3     9562 2B   59               bmi   CSR_SetOutOfRange          >>
   1349  4+1   9564 E7   C8 13            stb   y_pixel,u
   1350  4+1   9567 EB   2F               addb  image_y_size,y
   1351  3     9569 29   52               bvs   CSR_SetOutOfRange          >>
   1352  4+1   956B E7   C8 33            stb   rsv_y2_pixel,u
   1353  2     956E C1   C8               cmpb  #screen_height
   1354  3     9570 2E   4B               bgt   CSR_SetOutOfRange          >>
   1355  4+1   9572 A6   C8 29            lda   rsv_render_flags,u
   1356  2     9575 84   F7               anda  #:rsv_render_outofrange_mas>>
   1357  4+1   9577 A7   C8 29            sta   rsv_render_flags,u
   1358  3     957A 20   49               bra   CSR_CheckErase
   1359                            
   1360        957C               CSR_DoNotDisplaySprite
   1361  4+1   957C A6   C8 29            lda   rsv_render_flags,u
   1362  2     957F 84   F9               anda  #:rsv_render_erasesprite_ma>>
   1363  4+1   9581 A7   C8 29            sta   rsv_render_flags,u
   1364  4+1   9584 E6   0D               ldb   buf_onscreen,x
   1365  3     9586 27   17               beq   CSR_NextObject             >>
   1366  2     9588 8A   02               ora   #rsv_render_erasesprite_mas>>
   1367  4+1   958A A7   C8 29            sta   rsv_render_flags,u
   1368                            
   1369  7     958D 10BE 943F             ldy   cur_ptr_sub_obj_erase
   1370  6+1   9591 10AF C8 2E            sty   rsv_ptr_sub_object_erase,u
   1371  5+3   9595 EF   A1               stu   ,y++
   1372  7     9597 10BF 943F             sty   cur_ptr_sub_obj_erase
   1373                            
   1374        959B               CSR_NextObject
   1375  5+1   959B EE   03               ldu   buf_priority_next_obj,x
   1376  6     959D 1026 FF73             lbne  CSR_ProcessEachPriorityLeve>>
   1377  5     95A1 39                    rts
   1378
   1379        95A2               CSR_CheckVerticalPosition
   1380  4+1   95A2 E6   C8 13            ldb   y_pixel,u                  >>
   1381  6+1   95A5 E3   2F               addd  image_y_size,y
   1382  3     95A7 29   14               bvs   CSR_SetOutOfRange          >>
   1383  5     95A9 1083 00C8             cmpd  #screen_height
   1384  3     95AD 2E   0E               bgt   CSR_SetOutOfRange          >>
   1385  4+1   95AF A6   C8 29            lda   rsv_render_flags,u
   1386  2     95B2 84   F7               anda  #:rsv_render_outofrange_mas>>
   1387  4+1   95B4 A7   C8 29            sta   rsv_render_flags,u
   1388  3     95B7 20   0C               bra   CSR_CheckErase
   1389                            
   1390        95B9               CSR_SetOutOfRange
   1391  4+1   95B9 A6   C8 29            lda   rsv_render_flags,u
   1392  2     95BC 8A   08               ora   #rsv_render_outofrange_mask>>
   1393  4+1   95BE A7   C8 29            sta   rsv_render_flags,u
   1394
   1395        95C1               CSR_CheckErase
   1396  4+1   95C1 A6   00               lda   buf_priority,x
   1397  5     95C3 B1   943D             cmpa  cur_priority
   1398  3     95C6 26   3A               bne   CSR_CheckDraw
   1399                            
   1400  7     95C8 10BE 943F             ldy   cur_ptr_sub_obj_erase
   1401  6+1   95CC 10AF C8 2E            sty   rsv_ptr_sub_object_erase,u
   1402                            
   1403  4+1   95D0 A6   0D               lda   buf_onscreen,x
   1404  3     95D2 27   29               beq   CSR_SetEraseFalse          >>
   1405  5+1   95D4 EC   C8 12            ldd   x_pixel,u                  >>
   1406  7+1   95D7 10A3 09               cmpd  buf_prev_x_pixel,x
   1407  3     95DA 26   14               bne   CSR_SetEraseTrue           >>
   1408  5+1   95DC EC   C8 2C            ldd   rsv_curr_mapping_frame,u
   1409  7+1   95DF 10A3 05               cmpd  buf_prev_mapping_frame,x
   1410  3     95E2 26   0C               bne   CSR_SetEraseTrue           >>
   1411  4+1   95E4 A6   43               lda   priority,u
   1412  4+1   95E6 A1   00               cmpa  buf_priority,x
   1413  3     95E8 26   06               bne   CSR_SetEraseTrue           >>
   1414  3     95EA 20   11               bra   CSR_SetEraseFalse          >>
   1415                            
   1416        95EC               CSR_SetEraseTrue
   1417  4+1   95EC A6   C8 29            lda   rsv_render_flags,u
   1418  2     95EF 8A   02               ora   #rsv_render_erasesprite_mas>>
   1419                            
   1420  5+3   95F1 EF   A1               stu   ,y++
   1421  7     95F3 10BF 943F             sty   cur_ptr_sub_obj_erase
   1422                            
   1423  3     95F7 20   09               bra   CSR_CheckDraw
   1424                            
   1425        95F9               CSR_SetEraseFalse
   1426  4+1   95F9 A6   C8 29            lda   rsv_render_flags,u
   1427  2     95FC 84   FD               anda  #:rsv_render_erasesprite_ma>>
   1428                            
   1429        95FE               CSR_CheckDraw
   1430  4+1   95FE A6   43               lda   priority,u
   1431  5     9600 B1   943D             cmpa  cur_priority
   1432  3     9603 26   9A               bne   CSR_NextObject
   1433                            
   1434  7     9605 10BE 9441             ldy   cur_ptr_sub_obj_draw
   1435  6+1   9609 10AF C8 30            sty   rsv_ptr_sub_object_draw,u
   1436                            
   1437  4+1   960D A6   C8 29            lda   rsv_render_flags,u
   1438  2     9610 84   08               anda  #rsv_render_outofrange_mask>>
   1439  3     9612 26   21               bne   CSR_SetDrawFalse           >>
   1440  5+1   9614 EC   C8 2C            ldd   rsv_curr_mapping_frame,u
   1441  3     9617 27   1C               beq   CSR_SetDrawFalse           >>
   1442  4     9619 96   02               lda   render_flags
   1443  2     961B 84   08               anda  #render_hide_mask
   1444  3     961D 26   16               bne   CSR_SetDrawFalse           >>
   1445                            
   1446        961F               CSR_SetDrawTrue
   1447  4+1   961F A6   C8 29            lda   rsv_render_flags,u
   1448  2     9622 8A   04               ora   #rsv_render_displaysprite_m>>
   1449                            
   1450  5+3   9624 EF   A1               stu   ,y++
   1451  7     9626 10BF 9441             sty   cur_ptr_sub_obj_draw
   1452                            
   1453  5+1   962A EE   03               ldu   buf_priority_next_obj,x
   1454  6     962C 1026 FEE4             lbne   CSR_ProcessEachPriorityLev>>
   1455  5     9630 39                    rts
   1456
   1457        9631               CSR_SetDrawFalse
   1458  4+1   9631 A6   C8 29            lda   rsv_render_flags,u
   1459  2     9634 84   FB               anda  #:rsv_render_displaysprite_>>
   1460                            
   1461  5+1   9636 EE   03               ldu   buf_priority_next_obj,x
   1462  6     9638 1026 FED8             lbne   CSR_ProcessEachPriorityLev>>
   1463  5     963C 39                    rts
   1464
   1465
   1466                                   INCLUD ERASESPR
   1467                           * --------------------------------------->>
   1468                           * EraseSprites
   1469                           * ------------
   1470                           * Subroutine to erase sprites on screen
   1471                           * Read Display Priority Structure (front >>
   1472                           * priority: 0 - unregistred
   1473                           * priority: 1 - register non moving overl>>
   1474                           * priority; 2-8 - register moving sprite >>
   1475                           *
   1476                           * input REG : none
   1477                           * --------------------------------------->>
   1478                            
   1479        963D               EraseSprites
   1480
   1481        963D               ESP_Start
   1482  5     963D B6   601A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1483  3     9640 26   5F               bne   ESP_P1B1
   1484                            
   1485        9642               ESP_P1B0
   1486  6     9642 FE   80BA             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1487  3     9645 27   0C               beq   ESP_P2B0
   1488  2     9647 86   01               lda   #$01
   1489  5     9649 B7   970E             sta   ESP_CheckPriorityB0+1
   1490  8     964C BD   970A             jsr   ESP_ProcessEachPriorityLeve>>
   1491        964F               ESP_P2B0
   1492  6     964F FE   80BC             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1493  3     9652 27   0A               beq   ESP_P3B0
   1494  7     9654 7C   970E             inc   ESP_CheckPriorityB0+1
   1495  8     9657 BD   970A             jsr   ESP_ProcessEachPriorityLeve>>
   1496        965A               ESP_P3B0
   1497  6     965A FE   80BE             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1498  3     965D 27   0A               beq   ESP_P4B0
   1499  7     965F 7C   970E             inc   ESP_CheckPriorityB0+1
   1500  8     9662 BD   970A             jsr   ESP_ProcessEachPriorityLeve>>
   1501        9665               ESP_P4B0
   1502  6     9665 FE   80C0             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1503  3     9668 27   0A               beq   ESP_P5B0
   1504  7     966A 7C   970E             inc   ESP_CheckPriorityB0+1
   1505  8     966D BD   970A             jsr   ESP_ProcessEachPriorityLeve>>
   1506        9670               ESP_P5B0
   1507  6     9670 FE   80C2             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1508  3     9673 27   0A               beq   ESP_P6B0
   1509  7     9675 7C   970E             inc   ESP_CheckPriorityB0+1
   1510  8     9678 BD   970A             jsr   ESP_ProcessEachPriorityLeve>>
   1511        967B               ESP_P6B0
   1512  6     967B FE   80C4             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1513  3     967E 27   0A               beq   ESP_P7B0
   1514  7     9680 7C   970E             inc   ESP_CheckPriorityB0+1
   1515  8     9683 BD   970A             jsr   ESP_ProcessEachPriorityLeve>>
   1516        9686               ESP_P7B0
   1517  6     9686 FE   80C6             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1518  3     9689 27   0A               beq   ESP_P8B0
   1519  7     968B 7C   970E             inc   ESP_CheckPriorityB0+1
   1520  8     968E BD   970A             jsr   ESP_ProcessEachPriorityLeve>>
   1521        9691               ESP_P8B0
   1522  6     9691 FE   80C8             ldu   DPS_buffer_0+buf_Tbl_Priori>>
   1523  3     9694 27   0A               beq   ESP_rtsB0
   1524  7     9696 7C   970E             inc   ESP_CheckPriorityB0+1
   1525  8     9699 BD   970A             jsr   ESP_ProcessEachPriorityLeve>>
   1526        969C               ESP_rtsB0
   1527  5     969C 39                    rts
   1528                            
   1529        969D               ESP_P1B1
   1530  6     969D FE   813A             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1531  3     96A0 27   0C               beq   ESP_P2B1
   1532  2     96A2 86   08               lda   #$08
   1533  5     96A4 B7   97A3             sta   ESP_CheckPriorityB1+1
   1534  8     96A7 BD   979F             jsr   ESP_ProcessEachPriorityLeve>>
   1535        96AA               ESP_P2B1
   1536  6     96AA FE   813C             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1537  3     96AD 27   0C               beq   ESP_P3B1
   1538  2     96AF 86   07               lda   #$07
   1539  5     96B1 B7   97A3             sta   ESP_CheckPriorityB1+1
   1540  8     96B4 BD   979F             jsr   ESP_ProcessEachPriorityLeve>>
   1541        96B7               ESP_P3B1
   1542  6     96B7 FE   813E             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1543  3     96BA 27   0C               beq   ESP_P4B1
   1544  2     96BC 86   06               lda   #$06
   1545  5     96BE B7   97A3             sta   ESP_CheckPriorityB1+1
   1546  8     96C1 BD   979F             jsr   ESP_ProcessEachPriorityLeve>>
   1547        96C4               ESP_P4B1
   1548  6     96C4 FE   8140             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1549  3     96C7 27   0C               beq   ESP_P5B1
   1550  2     96C9 86   05               lda   #$05
   1551  5     96CB B7   97A3             sta   ESP_CheckPriorityB1+1
   1552  8     96CE BD   979F             jsr   ESP_ProcessEachPriorityLeve>>
   1553        96D1               ESP_P5B1
   1554  6     96D1 FE   8142             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1555  3     96D4 27   0C               beq   ESP_P6B1
   1556  2     96D6 86   04               lda   #$04
   1557  5     96D8 B7   97A3             sta   ESP_CheckPriorityB1+1
   1558  8     96DB BD   979F             jsr   ESP_ProcessEachPriorityLeve>>
   1559        96DE               ESP_P6B1
   1560  6     96DE FE   8144             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1561  3     96E1 27   0C               beq   ESP_P7B1
   1562  2     96E3 86   03               lda   #$03
   1563  5     96E5 B7   97A3             sta   ESP_CheckPriorityB1+1
   1564  8     96E8 BD   979F             jsr   ESP_ProcessEachPriorityLeve>>
   1565        96EB               ESP_P7B1
   1566  6     96EB FE   8146             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1567  3     96EE 27   0C               beq   ESP_P8B1
   1568  2     96F0 86   02               lda   #$02
   1569  5     96F2 B7   97A3             sta   ESP_CheckPriorityB1+1
   1570  8     96F5 BD   979F             jsr   ESP_ProcessEachPriorityLeve>>
   1571        96F8               ESP_P8B1
   1572  6     96F8 FE   8148             ldu   DPS_buffer_1+buf_Tbl_Priori>>
   1573  3     96FB 27   0C               beq   ESP_rtsB1
   1574  2     96FD 86   01               lda   #$01
   1575  5     96FF B7   97A3             sta   ESP_CheckPriorityB1+1
   1576  8     9702 BD   979F             jsr   ESP_ProcessEachPriorityLeve>>
   1577        9705               ESP_rtsB1
   1578  5     9705 39                    rts
   1579
   1580                           * *******
   1581                           * BUFFER0
   1582                           * *******
   1583
   1584        9706               ESP_ProcessEachPriorityLevelB0
   1585  4+1   9706 A6   C8 34            lda   rsv_priority_0,u
   1586                            
   1587        9709               ESP_CheckPriorityB0
   1588  2     9709 81   00               cmpa  #0                         >>
   1589  3     970B 26   3C               bne   ESP_NextObjectB0           >>
   1590                            
   1591        970D               ESP_UnsetCheckRefreshB0
   1592  4+1   970D A6   C8 29            lda   rsv_render_flags,u
   1593  2     9710 84   FE               anda  #:rsv_render_checkrefresh_m>>
   1594  4+1   9712 A7   C8 29            sta   rsv_render_flags,u
   1595                            
   1596        9715               ESP_CheckEraseB0
   1597  2     9715 84   02               anda  #rsv_render_erasesprite_mas>>
   1598  3     9717 26   61               bne   ESP_CallEraseRoutineB0     >>
   1599                            
   1600                                   * if not supposed to be refreshed>>
   1601                            
   1602  4+1   9719 A6   C8 41            lda   rsv_onscreen_0,u
   1603  3     971C 27   2B               beq   ESP_NextObjectB0
   1604                            
   1605                                   * search a collision with a sprit>>
   1606                                   * the sprite under should have to>>
   1607                                   * in this case it forces the refr>>
   1608                                   * as a sub loop, this should be o>>
   1609                            
   1610        971E               ESP_SubEraseSpriteSearchInitB0
   1611  5+1   971E AE   C8 2E            ldx   rsv_ptr_sub_object_erase,u
   1612                            
   1613        9721               ESP_SubEraseSearchB0
   1614  7     9721 BC   943F             cmpx  cur_ptr_sub_obj_erase
   1615  3     9724 27   29               beq   ESP_SubDrawSpriteSearchInit>>
   1616  6+3   9726 10AE 83               ldy   ,--x
   1617                            
   1618        9729               ESP_SubEraseCheckCollisionB0
   1619  5+1   9729 EC   A8 3D            ldd   rsv_prev_x_pixel_0,y       >>
   1620  4+1   972C A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1621  3     972F 24   F4               bhs   ESP_SubEraseSearchB0
   1622  4+1   9731 E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1623  3     9734 24   EF               bhs   ESP_SubEraseSearchB0
   1624  5+1   9736 EC   A8 3F            ldd   rsv_prev_x2_pixel_0,y      >>
   1625  4+1   9739 A1   C8 12            cmpa  x_pixel,u                  >>
   1626  3     973C 23   E7               bls   ESP_SubEraseSearchB0
   1627  4+1   973E E1   C8 13            cmpb  y_pixel,u                  >>
   1628  3     9741 23   E2               bls   ESP_SubEraseSearchB0
   1629  3     9743 20   2F               bra   ESP_SubCheckOverlayB0
   1630
   1631        9745               ESP_NextObjectB0
   1632  5+1   9745 EE   C8 35            ldu   rsv_priority_prev_obj_0,u
   1633  3     9748 26   C0               bne   ESP_ProcessEachPriorityLeve>>
   1634  5     974A 39                    rts
   1635
   1636        974B               ESP_SubDrawSpriteSearchInitB0
   1637  5+1   974B AE   C8 30            ldx   rsv_ptr_sub_object_draw,u
   1638                            
   1639        974E               ESP_SubDrawSearchB0
   1640  7     974E BC   9441             cmpx  cur_ptr_sub_obj_draw
   1641  3     9751 27   21               beq   ESP_SubCheckOverlayB0      >>
   1642  6+3   9753 10AE 83               ldy   ,--x
   1643
   1644        9756               ESP_SubDrawCheckCollisionB0
   1645  5+1   9756 EC   A8 12            ldd   x_pixel,y                  >>
   1646  4+1   9759 A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1647  3     975C 24   F4               bhs   ESP_SubDrawSearchB0
   1648  4+1   975E E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1649  3     9761 24   EF               bhs   ESP_SubDrawSearchB0
   1650  5+1   9763 EC   A8 32            ldd   rsv_x2_pixel,y             >>
   1651  4+1   9766 A1   C8 12            cmpa  x_pixel,u                  >>
   1652  3     9769 23   E7               bls   ESP_SubDrawSearchB0
   1653  4+1   976B E1   C8 13            cmpb  y_pixel,u                  >>
   1654  3     976E 23   E2               bls   ESP_SubDrawSearchB0
   1655                            
   1656        9770               ESP_SubCheckOverlayB0
   1657  4+1   9770 A6   42               lda   render_flags,u
   1658  2     9772 84   10               anda  #render_fixedoverlay_mask
   1659  3     9774 26   24               bne   ESP_UnsetOnScreenFlagB0
   1660                            
   1661        9776               ESP_CallEraseRoutineB0
   1662  6     9776 FF   978E             stu   ESP_CallEraseRoutineB0_00+1>>
   1663  5+1   9779 AE   C8 39            ldx   rsv_prev_mapping_frame_0,u >>
   1664  4+1   977C A6   06               lda   page_erase_routine,x
   1665  5     977E B7   E7E5             sta   $E7E5                      >>
   1666  5+1   9781 EE   C8 3B            ldu   rsv_bgdata_0,u             >>
   1667  7+4   9784 AD   98 07            jsr   [erase_routine,x]          >>
   1668  4+0   9787 31   C4               leay  ,u                         >>
   1669        9789               ESP_CallEraseRoutineB0_00
   1670  3     9789 CE   0000             ldu   #$0000                     >>
   1671  5+1   978C EC   C8 3B            ldd   rsv_bgdata_0,u             >>
   1672  2     978F C4   40               andb  #cell_size                 >>
   1673  6     9791 1F   01               tfr   d,x                        >>
   1674                            
   1675        9793               ESP_FreeEraseBufferB0
   1676  8     9793 BD   9AF4             jsr   BgBufferFree               >>
   1677                            
   1678        9796               ESP_UnsetOnScreenFlagB0
   1679  6+1   9796 6F   C8 41            clr   rsv_onscreen_0,u           >>
   1680  3     9799 20   AE               bra   ESP_NextObjectB0
   1681
   1682                           * *******
   1683                           * BUFFER1
   1684                           * *******
   1685                            
   1686        979B               ESP_ProcessEachPriorityLevelB1
   1687  4+1   979B A6   C8 42            lda   rsv_priority_1,u
   1688                            
   1689        979E               ESP_CheckPriorityB1
   1690  2     979E 81   00               cmpa  #0                         >>
   1691  3     97A0 26   3C               bne   ESP_NextObjectB1           >>
   1692                            
   1693        97A2               ESP_UnsetCheckRefreshB1
   1694  4+1   97A2 A6   C8 29            lda   rsv_render_flags,u
   1695  2     97A5 84   FE               anda  #:rsv_render_checkrefresh_m>>
   1696  4+1   97A7 A7   C8 29            sta   rsv_render_flags,u
   1697                            
   1698        97AA               ESP_CheckEraseB1
   1699  2     97AA 84   02               anda  #rsv_render_erasesprite_mas>>
   1700  3     97AC 26   61               bne   ESP_CallEraseRoutineB1     >>
   1701                            
   1702                                   * if not supposed to be refreshed>>
   1703                            
   1704  4+1   97AE A6   C8 4F            lda   rsv_onscreen_1,u
   1705  3     97B1 27   2B               beq   ESP_NextObjectB1
   1706                            
   1707                                   * search a collision with a sprit>>
   1708                                   * the sprite under should have to>>
   1709                                   * in this case it forces the refr>>
   1710                                   * as a sub loop, this should be o>>
   1711                            
   1712        97B3               ESP_SubEraseSpriteSearchInitB1
   1713  5+1   97B3 AE   C8 2E            ldx   rsv_ptr_sub_object_erase,u
   1714                            
   1715        97B6               ESP_SubEraseSearchB1
   1716  7     97B6 BC   943F             cmpx  cur_ptr_sub_obj_erase
   1717  3     97B9 27   29               beq   ESP_SubDrawSpriteSearchInit>>
   1718  6+3   97BB 10AE 83               ldy   ,--x
   1719                            
   1720        97BE               ESP_SubEraseCheckCollisionB1
   1721  5+1   97BE EC   A8 4B            ldd   rsv_prev_x_pixel_1,y       >>
   1722  4+1   97C1 A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1723  3     97C4 24   F4               bhs   ESP_SubEraseSearchB1
   1724  4+1   97C6 E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1725  3     97C9 24   EF               bhs   ESP_SubEraseSearchB1
   1726  5+1   97CB EC   A8 4D            ldd   rsv_prev_x2_pixel_1,y      >>
   1727  4+1   97CE A1   C8 12            cmpa  x_pixel,u                  >>
   1728  3     97D1 23   E7               bls   ESP_SubEraseSearchB1
   1729  4+1   97D3 E1   C8 13            cmpb  y_pixel,u                  >>
   1730  3     97D6 23   E2               bls   ESP_SubEraseSearchB1
   1731  3     97D8 20   2F               bra   ESP_SubCheckOverlayB1
   1732
   1733        97DA               ESP_NextObjectB1
   1734  5+1   97DA EE   C8 43            ldu   rsv_priority_prev_obj_1,u
   1735  3     97DD 26   C0               bne   ESP_ProcessEachPriorityLeve>>
   1736  5     97DF 39                    rts
   1737
   1738        97E0               ESP_SubDrawSpriteSearchInitB1
   1739  5+1   97E0 AE   C8 30            ldx   rsv_ptr_sub_object_draw,u
   1740                            
   1741        97E3               ESP_SubDrawSearchB1
   1742  7     97E3 BC   9441             cmpx  cur_ptr_sub_obj_draw
   1743  3     97E6 27   21               beq   ESP_SubCheckOverlayB1      >>
   1744  6+3   97E8 10AE 83               ldy   ,--x
   1745
   1746        97EB               ESP_SubDrawCheckCollisionB1
   1747  5+1   97EB EC   A8 12            ldd   x_pixel,y                  >>
   1748  4+1   97EE A1   C8 32            cmpa  rsv_x2_pixel,u             >>
   1749  3     97F1 24   F4               bhs   ESP_SubDrawSearchB1
   1750  4+1   97F3 E1   C8 33            cmpb  rsv_y2_pixel,u             >>
   1751  3     97F6 24   EF               bhs   ESP_SubDrawSearchB1
   1752  5+1   97F8 EC   A8 32            ldd   rsv_x2_pixel,y             >>
   1753  4+1   97FB A1   C8 12            cmpa  x_pixel,u                  >>
   1754  3     97FE 23   E7               bls   ESP_SubDrawSearchB1
   1755  4+1   9800 E1   C8 13            cmpb  y_pixel,u                  >>
   1756  3     9803 23   E2               bls   ESP_SubDrawSearchB1
   1757                            
   1758        9805               ESP_SubCheckOverlayB1
   1759  4+1   9805 A6   42               lda   render_flags,u
   1760  2     9807 84   10               anda  #render_fixedoverlay_mask
   1761  3     9809 26   24               bne   ESP_UnsetOnScreenFlagB1
   1762                            
   1763        980B               ESP_CallEraseRoutineB1
   1764  6     980B FF   9823             stu   ESP_CallEraseRoutineB1_00+1>>
   1765  5+1   980E AE   C8 47            ldx   rsv_prev_mapping_frame_1,u >>
   1766  4+1   9811 A6   06               lda   page_erase_routine,x
   1767  5     9813 B7   E7E5             sta   $E7E5                      >>
   1768  5+1   9816 EE   C8 49            ldu   rsv_bgdata_1,u             >>
   1769  7+4   9819 AD   98 07            jsr   [erase_routine,x]          >>
   1770  4+0   981C 31   C4               leay  ,u                         >>
   1771        981E               ESP_CallEraseRoutineB1_00
   1772  3     981E CE   0000             ldu   #$0000                     >>
   1773  5+1   9821 EC   C8 49            ldd   rsv_bgdata_1,u             >>
   1774  2     9824 C4   40               andb  #cell_size                 >>
   1775  6     9826 1F   01               tfr   d,x                        >>
   1776                            
   1777        9828               ESP_FreeEraseBufferB1
   1778  8     9828 BD   9AF4             jsr   BgBufferFree               >>
   1779                            
   1780        982B               ESP_UnsetOnScreenFlagB1
   1781  6+1   982B 6F   C8 4F            clr   rsv_onscreen_1,u           >>
   1782  3     982E 20   AE               bra   ESP_NextObjectB1
   1783
   1784                                   INCLUD UNSETDSP
   1785                           * --------------------------------------->>
   1786                           * UnsetDisplayPriority
   1787                           * --------------------
   1788                           * Subroutine to unset sprites in Display >>
   1789                           * Read Lst_Priority_Unset_0/1
   1790                           *
   1791                           * input REG : none
   1792                           * --------------------------------------->>
   1793                            
   1794        9830               UnsetDisplayPriority
   1795
   1796        9830               UDP_Start
   1797  5     9830 B6   601A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1798  3     9833 26   73               bne   UDP_B1
   1799                            
   1800        9835               UDP_B0
   1801  3     9835 8E   80CE             ldx   #Lst_Priority_Unset_0+2
   1802                            
   1803        9838               UDP_CheckEndB0
   1804  7     9838 BC   80CC             cmpx  Lst_Priority_Unset_0       >>
   1805  3     983B 26   0B               bne   UDP_CheckPrioPrevB0
   1806                            
   1807        983D               UDP_InitListB0
   1808  3     983D 8E   80CE             ldx   #Lst_Priority_Unset_0+2
   1809  6     9840 BF   80CC             stx   Lst_Priority_Unset_0       >>
   1810  5     9843 39                    rts
   1811                            
   1812        9844               UDP_CheckPrioPrevB0
   1813  5+3   9844 EE   81               ldu   ,x++
   1814  5+1   9846 EC   C8 35            ldd   rsv_priority_prev_obj_0,u
   1815  3     9849 26   16               bne   UDP_ChainPrevB0
   1816                            
   1817  4+1   984B A6   C8 34            lda   rsv_priority_0,u
   1818  2     984E 4A                    deca
   1819  2     984F 48                    lsla
   1820  4     9850 108E 80A8             ldy   #Tbl_Priority_First_Entry_0>>
   1821  4+1   9854 31   A6               leay  a,y
   1822  5+1   9856 EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1823  5+0   9859 ED   A4               std   ,y
   1824  3     985B 20   0E               bra   UDP_CheckPrioNextB0
   1825                            
   1826        985D               UDP_ChainPrevB0
   1827  5+1   985D EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1828  6+1   9860 10AE C8 35            ldy   rsv_priority_prev_obj_0,u
   1829  5+1   9864 ED   A8 37            std   rsv_priority_next_obj_0,y
   1830
   1831        9867               UDP_CheckPrioNextB0
   1832  5+1   9867 EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1833  3     986A 26   16               bne   UDP_ChainNextB0
   1834
   1835  4+1   986C A6   C8 34            lda   rsv_priority_0,u
   1836  2     986F 4A                    deca
   1837  2     9870 48                    lsla
   1838  4     9871 108E 80BA             ldy   #Tbl_Priority_Last_Entry_0
   1839  4+1   9875 31   A6               leay  a,y
   1840  5+1   9877 EC   C8 37            ldd   rsv_priority_next_obj_0,u
   1841  5+0   987A ED   A4               std   ,y
   1842  3     987C 20   0E               bra   UDP_CheckDeleteB0
   1843                            
   1844        987E               UDP_ChainNextB0
   1845  5+1   987E EC   C8 35            ldd   rsv_priority_prev_obj_0,u
   1846  6+1   9881 10AE C8 37            ldy   rsv_priority_next_obj_0,u
   1847  5+1   9885 ED   A8 35            std   rsv_priority_prev_obj_0,y
   1848                            
   1849        9888               UDP_CheckDeleteB0
   1850  4+1   9888 A6   42               lda   render_flags,u
   1851  2     988A 84   20               anda  #render_todelete_mask
   1852  3     988C 27   13               beq   UDP_SetNewPrioB0
   1853  4+1   988E A6   C8 41            lda   rsv_onscreen_0,u
   1854  3     9891 26   0E               bne   UDP_SetNewPrioB0
   1855  4+1   9893 A6   C8 4F            lda   rsv_onscreen_1,u
   1856  3     9896 26   09               bne   UDP_SetNewPrioB0
   1857  8     9898 BD   940D             jsr   ClearObj
   1858  3     989B 20   9F               bra   UDP_CheckEndB0
   1859                            
   1860        989D               UDP_SetNewPrioB0
   1861  4+1   989D A6   43               lda   priority,u
   1862  4+1   989F A7   C8 34            sta   rsv_priority_0,u
   1863  3     98A2 20   98               bra   UDP_CheckEndB0
   1864
   1865        98A4               UDP_B1
   1866  3     98A4 8E   814E             ldx   #Lst_Priority_Unset_1+2
   1867                            
   1868        98A7               UDP_CheckEndB1
   1869  7     98A7 BC   814C             cmpx  Lst_Priority_Unset_1       >>
   1870  3     98AA 26   0B               bne   UDP_CheckPrioPrevB1
   1871                            
   1872        98AC               UDP_InitListB1
   1873  3     98AC 8E   814E             ldx   #Lst_Priority_Unset_1+2
   1874  6     98AF BF   814C             stx   Lst_Priority_Unset_1       >>
   1875  5     98B2 39                    rts
   1876                            
   1877        98B3               UDP_CheckPrioPrevB1
   1878  5+3   98B3 EE   81               ldu   ,x++
   1879  5+1   98B5 EC   C8 43            ldd   rsv_priority_prev_obj_1,u
   1880  3     98B8 26   16               bne   UDP_ChainPrevB1
   1881                            
   1882  4+1   98BA A6   C8 42            lda   rsv_priority_1,u
   1883  2     98BD 4A                    deca
   1884  2     98BE 48                    lsla
   1885  4     98BF 108E 8128             ldy   #Tbl_Priority_First_Entry_1>>
   1886  4+1   98C3 31   A6               leay  a,y
   1887  5+1   98C5 EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1888  5+0   98C8 ED   A4               std   ,y
   1889  3     98CA 20   0E               bra   UDP_CheckPrioNextB1
   1890                            
   1891        98CC               UDP_ChainPrevB1
   1892  5+1   98CC EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1893  6+1   98CF 10AE C8 43            ldy   rsv_priority_prev_obj_1,u
   1894  5+1   98D3 ED   A8 45            std   rsv_priority_next_obj_1,y
   1895
   1896        98D6               UDP_CheckPrioNextB1
   1897  5+1   98D6 EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1898  3     98D9 26   16               bne   UDP_ChainNextB1
   1899
   1900  4+1   98DB A6   C8 42            lda   rsv_priority_1,u
   1901  2     98DE 4A                    deca
   1902  2     98DF 48                    lsla
   1903  4     98E0 108E 813A             ldy   #Tbl_Priority_Last_Entry_1
   1904  4+1   98E4 31   A6               leay  a,y
   1905  5+1   98E6 EC   C8 45            ldd   rsv_priority_next_obj_1,u
   1906  5+0   98E9 ED   A4               std   ,y
   1907  3     98EB 20   0E               bra   UDP_CheckDeleteB1
   1908                            
   1909        98ED               UDP_ChainNextB1
   1910  5+1   98ED EC   C8 43            ldd   rsv_priority_prev_obj_1,u
   1911  6+1   98F0 10AE C8 45            ldy   rsv_priority_next_obj_1,u
   1912  5+1   98F4 ED   A8 43            std   rsv_priority_prev_obj_1,y
   1913                            
   1914        98F7               UDP_CheckDeleteB1
   1915  4+1   98F7 A6   42               lda   render_flags,u
   1916  2     98F9 84   20               anda  #render_todelete_mask
   1917  3     98FB 27   13               beq   UDP_SetNewPrioB1
   1918  4+1   98FD A6   C8 4F            lda   rsv_onscreen_1,u
   1919  3     9900 26   0E               bne   UDP_SetNewPrioB1
   1920  4+1   9902 A6   C8 4F            lda   rsv_onscreen_1,u
   1921  3     9905 26   09               bne   UDP_SetNewPrioB1
   1922  8     9907 BD   940D             jsr   ClearObj
   1923  3     990A 20   9F               bra   UDP_CheckEndB1
   1924                            
   1925        990C               UDP_SetNewPrioB1
   1926  4+1   990C A6   43               lda   priority,u
   1927  4+1   990E A7   C8 42            sta   rsv_priority_1,u
   1928  3     9911 20   98               bra   UDP_CheckEndB1
   1929
   1930                                   INCLUD DRAWSPR
   1931                           * --------------------------------------->>
   1932                           * DrawSprites
   1933                           * ------------
   1934                           * Subroutine to draw sprites on screen
   1935                           * Read Display Priority Structure (back t>>
   1936                           * priority: 0 - unregistred
   1937                           * priority: 1 - register non moving overl>>
   1938                           * priority; 2-8 - register moving sprite >>
   1939                           *
   1940                           * input REG : none
   1941                           * --------------------------------------->>
   1942                            
   1943        9913               DrawSprites
   1944
   1945        9913               DRS_Start
   1946  5     9913 B6   601A             lda   Glb_Cur_Wrk_Screen_Id      >>
   1947  3     9916 26   45               bne   DRS_P8B1
   1948                            
   1949        9918               DRS_P8B0
   1950  6     9918 BE   80B6             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1951  3     991B 27   07               beq   DRS_P7B0
   1952  8     991D BD   999E             jsr   DRS_ProcessEachPriorityLeve>>
   1953        9920               DRS_P7B0
   1954  6     9920 BE   80B4             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1955  3     9923 27   07               beq   DRS_P6B0
   1956  8     9925 BD   999E             jsr   DRS_ProcessEachPriorityLeve>>
   1957        9928               DRS_P6B0
   1958  6     9928 BE   80B2             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1959  3     992B 27   07               beq   DRS_P5B0
   1960  8     992D BD   999E             jsr   DRS_ProcessEachPriorityLeve>>
   1961        9930               DRS_P5B0
   1962  6     9930 BE   80B0             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1963  3     9933 27   07               beq   DRS_P4B0
   1964  8     9935 BD   999E             jsr   DRS_ProcessEachPriorityLeve>>
   1965        9938               DRS_P4B0
   1966  6     9938 BE   80AE             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1967  3     993B 27   07               beq   DRS_P3B0
   1968  8     993D BD   999E             jsr   DRS_ProcessEachPriorityLeve>>
   1969        9940               DRS_P3B0
   1970  6     9940 BE   80AC             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1971  3     9943 27   07               beq   DRS_P2B0
   1972  8     9945 BD   999E             jsr   DRS_ProcessEachPriorityLeve>>
   1973        9948               DRS_P2B0
   1974  6     9948 BE   80AA             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1975  3     994B 27   07               beq   DRS_P1B0
   1976  8     994D BD   999E             jsr   DRS_ProcessEachPriorityLeve>>
   1977        9950               DRS_P1B0
   1978  6     9950 BE   80A8             ldx   DPS_buffer_0+buf_Tbl_Priori>>
   1979  3     9953 27   07               beq   DRS_rtsB0
   1980  8     9955 BD   999E             jsr   DRS_ProcessEachPriorityLeve>>
   1981        9958               DRS_rtsB0
   1982  5     9958 39                    rts
   1983                            
   1984        9959               DRS_P8B1
   1985  6     9959 BE   8136             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   1986  3     995C 27   07               beq   DRS_P7B1
   1987  8     995E BD   9A3B             jsr   DRS_ProcessEachPriorityLeve>>
   1988        9961               DRS_P7B1
   1989  6     9961 BE   8134             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   1990  3     9964 27   07               beq   DRS_P6B1
   1991  8     9966 BD   9A3B             jsr   DRS_ProcessEachPriorityLeve>>
   1992        9969               DRS_P6B1
   1993  6     9969 BE   8132             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   1994  3     996C 27   07               beq   DRS_P5B1
   1995  8     996E BD   9A3B             jsr   DRS_ProcessEachPriorityLeve>>
   1996        9971               DRS_P5B1
   1997  6     9971 BE   8130             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   1998  3     9974 27   07               beq   DRS_P4B1
   1999  8     9976 BD   9A3B             jsr   DRS_ProcessEachPriorityLeve>>
   2000        9979               DRS_P4B1
   2001  6     9979 BE   812E             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2002  3     997C 27   07               beq   DRS_P3B1
   2003  8     997E BD   9A3B             jsr   DRS_ProcessEachPriorityLeve>>
   2004        9981               DRS_P3B1
   2005  6     9981 BE   812C             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2006  3     9984 27   07               beq   DRS_P2B1
   2007  8     9986 BD   9A3B             jsr   DRS_ProcessEachPriorityLeve>>
   2008        9989               DRS_P2B1
   2009  6     9989 BE   812A             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2010  3     998C 27   07               beq   DRS_P1B1
   2011  8     998E BD   9A3B             jsr   DRS_ProcessEachPriorityLeve>>
   2012        9991               DRS_P1B1
   2013  6     9991 BE   8128             ldx   DPS_buffer_1+buf_Tbl_Priori>>
   2014  3     9994 27   07               beq   DRS_rtsB1
   2015  8     9996 BD   9A3B             jsr   DRS_ProcessEachPriorityLeve>>
   2016        9999               DRS_rtsB1
   2017  5     9999 39                    rts
   2018
   2019        999A               DRS_ProcessEachPriorityLevelB0
   2020  4+1   999A A6   88 29            lda   rsv_render_flags,x
   2021  2     999D 84   04               anda  #rsv_render_displaysprite_m>>
   2022  3     999F 27   4A               beq   DRS_NextObjectB0
   2023  4+1   99A1 A6   88 41            lda   rsv_onscreen_0,x
   2024  3     99A4 26   45               bne   DRS_NextObjectB0
   2025  4+1   99A6 A6   02               lda   render_flags,x
   2026  2     99A8 84   10               anda  #render_fixedoverlay_mask
   2027  3     99AA 26   45               bne   DRS_DrawWithoutBackupB0
   2028  5+1   99AC EE   88 2C            ldu   rsv_curr_mapping_frame,x
   2029  4+1   99AF A6   49               lda   erase_nb_cell,u
   2030  8     99B1 BD   9AAB             jsr   BgBufferAlloc              >>
   2031  5     99B4 108C 0000             cmpy  #$0000                     >>
   2032  3     99B8 27   31               beq   DRS_NextObjectB0           >>
   2033  5+1   99BA EC   88 12            ldd   x_pixel,x                  >>
   2034  5+1   99BD ED   88 3D            std   rsv_prev_x_pixel_0,x       >>
   2035  8     99C0 BD   9A0E             jsr   DRS_XYToAddress
   2036  5+1   99C3 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2037  5+1   99C6 EF   88 39            stu   rsv_prev_mapping_frame_0,x >>
   2038  4+1   99C9 A6   40               lda   page_bckdraw_routine,u
   2039  5     99CB B7   E7E5             sta   $E7E5                      >>
   2040  4+0   99CE 33   A4               leau  ,y                         >>
   2041  6     99D0 BF   99DB             stx   DRS_dyn3B0+1               >>
   2042  7+4   99D3 AD   98 01            jsr   [bckdraw_routine,x]        >>
   2043        99D6               DRS_dyn3B0
   2044  3     99D6 8E   0000             ldx   #$0000                     >>
   2045  5+1   99D9 EF   88 3B            stu   rsv_bgdata_0,x             >>
   2046  5+1   99DC EC   88 32            ldd   rsv_x2_pixel,x             >>
   2047  5+1   99DF ED   88 3F            std   rsv_prev_x2_pixel_0,x      >>
   2048  2     99E2 86   01               lda   #$01
   2049  4+1   99E4 A7   88 41            sta   rsv_onscreen_0,x           >>
   2050        99E7               DRS_NextObjectB0
   2051  5+1   99E7 AE   88 37            ldx   rsv_priority_next_obj_0,x
   2052  3     99EA 26   B2               bne   DRS_ProcessEachPriorityLeve>>
   2053  5     99EC 39                    rts
   2054                            
   2055        99ED               DRS_DrawWithoutBackupB0
   2056  5+1   99ED EC   88 12            ldd   x_pixel,x                  >>
   2057  8     99F0 BD   9A0E             jsr   DRS_XYToAddress
   2058  5+1   99F3 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2059  4+1   99F6 A6   43               lda   page_draw_routine,u
   2060  5     99F8 B7   E7E5             sta   $E7E5                      >>
   2061  6     99FB BF   9A06             stx   DRS_dyn4B0+1               >>
   2062  7+4   99FE AD   98 04            jsr   [draw_routine,x]           >>
   2063        9A01               DRS_dyn4B0
   2064  3     9A01 8E   0000             ldx   #$0000                     >>
   2065  5+1   9A04 AE   88 37            ldx   rsv_priority_next_obj_0,x
   2066  3     9A07 26   95               bne   DRS_ProcessEachPriorityLeve>>
   2067  5     9A09 39                    rts
   2068
   2069        9A0A               DRS_XYToAddress
   2070  2     9A0A 44                    lsra                             >>
   2071  3     9A0B 25   18               bcs   DRS_XYToAddressRAMBFirst   >>
   2072        9A0D               DRS_XYToAddressRAMAFirst
   2073  5     9A0D B7   9A1C             sta   DRS_dyn1+2
   2074  2     9A10 86   28               lda   #$28                       >>
   2075  4+1   9A12 E6   88 13            ldb   y_pixel,x                  >>
   2076  11    9A15 3D                    mul
   2077        9A16               DRS_dyn1
   2078  6     9A16 D3   00               addd  $0000                      >>
   2079  6     9A18 FD   6020             std   Glb_Sprite_Screen_Pos_PartA>>
   2080  2     9A1B 8A   20               ora   #$20                       >>
   2081  6     9A1D FD   6022             std   Glb_Sprite_Screen_Pos_PartB>>
   2082  5     9A20 39                    rts
   2083        9A21               DRS_XYToAddressRAMBFirst
   2084  5     9A21 B7   9A30             sta   DRS_dyn2+2
   2085  2     9A24 86   28               lda   #$28                       >>
   2086  4+1   9A26 E6   88 13            ldb   y_pixel,x                  >>
   2087  11    9A29 3D                    mul
   2088        9A2A               DRS_dyn2
   2089  7     9A2A F3   2000             addd  $2000                      >>
   2090  6     9A2D FD   6020             std   Glb_Sprite_Screen_Pos_PartA>>
   2091  7     9A30 B3   1FFF             subd  $1FFF
   2092  6     9A33 FD   6022             std   Glb_Sprite_Screen_Pos_PartB>>
   2093  5     9A36 39                    rts
   2094                            
   2095        9A37               DRS_ProcessEachPriorityLevelB1
   2096  4+1   9A37 A6   88 29            lda   rsv_render_flags,x
   2097  2     9A3A 84   04               anda  #rsv_render_displaysprite_m>>
   2098  3     9A3C 27   4A               beq   DRS_NextObjectB1
   2099  4+1   9A3E A6   88 4F            lda   rsv_onscreen_1,x
   2100  3     9A41 26   45               bne   DRS_NextObjectB1
   2101  4+1   9A43 A6   02               lda   render_flags,x
   2102  2     9A45 84   10               anda  #render_fixedoverlay_mask
   2103  3     9A47 26   45               bne   DRS_DrawWithoutBackupB1
   2104  5+1   9A49 EE   88 2C            ldu   rsv_curr_mapping_frame,x
   2105  4+1   9A4C A6   49               lda   erase_nb_cell,u
   2106  8     9A4E BD   9AAB             jsr   BgBufferAlloc              >>
   2107  5     9A51 108C 0000             cmpy  #$0000                     >>
   2108  3     9A55 27   31               beq   DRS_NextObjectB1           >>
   2109  5+1   9A57 EC   88 12            ldd   x_pixel,x                  >>
   2110  5+1   9A5A ED   88 4B            std   rsv_prev_x_pixel_1,x       >>
   2111  8     9A5D BD   9A0E             jsr   DRS_XYToAddress
   2112  5+1   9A60 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2113  5+1   9A63 EF   88 47            stu   rsv_prev_mapping_frame_1,x >>
   2114  4+1   9A66 A6   40               lda   page_bckdraw_routine,u
   2115  5     9A68 B7   E7E5             sta   $E7E5                      >>
   2116  4+0   9A6B 33   A4               leau  ,y                         >>
   2117  6     9A6D BF   9A78             stx   DRS_dyn3B1+1               >>
   2118  7+4   9A70 AD   98 01            jsr   [bckdraw_routine,x]        >>
   2119        9A73               DRS_dyn3B1
   2120  3     9A73 8E   0000             ldx   #$0000                     >>
   2121  5+1   9A76 EF   88 49            stu   rsv_bgdata_1,x             >>
   2122  5+1   9A79 EC   88 32            ldd   rsv_x2_pixel,x             >>
   2123  5+1   9A7C ED   88 4D            std   rsv_prev_x2_pixel_1,x      >>
   2124  2     9A7F 86   01               lda   #$01
   2125  4+1   9A81 A7   88 4F            sta   rsv_onscreen_1,x           >>
   2126        9A84               DRS_NextObjectB1
   2127  5+1   9A84 AE   88 45            ldx   rsv_priority_next_obj_1,x
   2128  3     9A87 26   B2               bne   DRS_ProcessEachPriorityLeve>>
   2129  5     9A89 39                    rts
   2130                            
   2131        9A8A               DRS_DrawWithoutBackupB1
   2132  5+1   9A8A EC   88 12            ldd   x_pixel,x                  >>
   2133  8     9A8D BD   9A0E             jsr   DRS_XYToAddress
   2134  5+1   9A90 EE   88 2C            ldu   rsv_curr_mapping_frame,x   >>
   2135  4+1   9A93 A6   43               lda   page_draw_routine,u
   2136  5     9A95 B7   E7E5             sta   $E7E5                      >>
   2137  6     9A98 BF   9AA3             stx   DRS_dyn4B1+1               >>
   2138  7+4   9A9B AD   98 04            jsr   [draw_routine,x]           >>
   2139        9A9E               DRS_dyn4B1
   2140  3     9A9E 8E   0000             ldx   #$0000                     >>
   2141  5+1   9AA1 AE   88 45            ldx   rsv_priority_next_obj_1,x
   2142  3     9AA4 26   95               bne   DRS_ProcessEachPriorityLeve>>
   2143  5     9AA6 39                    rts
   2144
   2145                                   INCLUD BGBALLOC
   2146                           * --------------------------------------->>
   2147                           * BgBufferAlloc
   2148                           * -------------
   2149                           * Subroutine to allocate memory into back>>
   2150                           *
   2151                           * input  REG : [a] number of requested ce>>
   2152                           * output REG : [y] cell_end or 0000 if no>>
   2153                           * --------------------------------------->>
   2154
   2155        9AA7               BgBufferAlloc
   2156  5+3   9AA7 34   14               pshs  b,x
   2157  5     9AA9 F6   601A             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2158  3     9AAC 26   0D               bne   BBA1                       >>
   2159                            
   2160        9AAE               BBA0
   2161  3     9AAE 8E   6024             ldx   #Lst_FreeCellFirstEntry_0  >>
   2162  7     9AB1 10BE 6024             ldy   Lst_FreeCellFirstEntry_0   >>
   2163  3     9AB5 20   0B               bra   BBA_Next
   2164                            
   2165        9AB7               BBA1
   2166  3     9AB7 8E   7066             ldx   #Lst_FreeCellFirstEntry_1  >>
   2167  7     9ABA 10BE 7066             ldy   Lst_FreeCellFirstEntry_1   >>
   2168                            
   2169        9ABE               BBA_Next
   2170  3     9ABE 27   32               beq   BBA_rts                    >>
   2171  4+1   9AC0 A1   20               cmpa  nb_cells,y                 >>
   2172  3     9AC2 27   0D               beq   BBA_FitCell                >>
   2173  3     9AC4 23   16               bls   BBA_DivideCell             >>
   2174  4+1   9AC6 30   25               leax  next_entry,y               >>
   2175  6+1   9AC8 10AE 25               ldy   next_entry,y               >>
   2176  3     9ACB 20   F5               bra   BBA_Next
   2177                            
   2178        9ACD               BBA_FitCell
   2179  5+1   9ACD EC   25               ldd   next_entry,y
   2180  5+0   9ACF ED   84               std   ,x                         >>
   2181  6+1   9AD1 6F   20               clr   nb_cells,y                 >>
   2182  6+1   9AD3 10AE 23               ldy   cell_end,y                 >>
   2183  3     9AD6 20   1A               bra   BBA_rts
   2184                            
   2185        9AD8               BBA_DivideCell
   2186  5     9AD8 B7   9AE2             sta   BBA_dyn+1
   2187  4+1   9ADB E6   20               ldb   nb_cells,y
   2188        9ADD               BBA_dyn
   2189  2     9ADD C0   00               subb  #$00                       >>
   2190  4+1   9ADF E7   20               stb   nb_cells,y                 >>
   2191                            
   2192  2     9AE1 C6   40               ldb   #cell_size
   2193  11    9AE3 3D                    mul
   2194  2     9AE4 8A   50               ora   #80                        >>
   2195  5+1   9AE6 AE   23               ldx   cell_end,y
   2196  4+4   9AE8 30   8B               leax  d,x                        >>
   2197  5+1   9AEA AF   23               stx   cell_end,y                 >>
   2198  4+0   9AEC 31   84               leay  ,x                         >>
   2199                            
   2200        9AEE               BBA_rts
   2201  5+5   9AEE 35   94               puls  b,x,pc
   2202
   2203                                   INCLUD BGBFREE
   2204                           * --------------------------------------->>
   2205                           * BgBufferFree
   2206                           * ------------
   2207                           * Subroutine to free memory from backgrou>>
   2208                           *
   2209                           * input  REG : [x] cell_start
   2210                           *              [y] cell_end
   2211                           * output REG : none
   2212                           * --------------------------------------->>
   2213
   2214        9AF0               BgBufferFree
   2215  5+4   9AF0 34   46               pshs  d,u
   2216  3     9AF2 CC   0000             ldd   #$0000
   2217  6     9AF5 FD   9B47             std   BBF_SetNewEntryNextentry+1 >>
   2218  5     9AF8 F6   601A             ldb   Glb_Cur_Wrk_Screen_Id      >>
   2219  3     9AFB 26   14               bne   BBF1                       >>
   2220                            
   2221        9AFD               BBF0
   2222  5+1   9AFD EE   C8 39            ldu   rsv_prev_mapping_frame_0,u >>
   2223  4+1   9B00 A6   49               lda   erase_nb_cell,u            >>
   2224  6     9B02 FE   6026             ldu   Lst_FreeCell_0             >>
   2225  6     9B05 FF   9B35             stu   BBF_AddNewEntryAtEnd+4     >>
   2226  6     9B08 FE   6024             ldu   Lst_FreeCellFirstEntry_0   >>
   2227  3     9B0B 20   12               bra   BBF_Next
   2228                            
   2229        9B0D               BBF1
   2230  5+1   9B0D EE   C8 47            ldu   rsv_prev_mapping_frame_1,u
   2231  4+1   9B10 A6   49               lda   erase_nb_cell,u
   2232  6     9B12 FE   7068             ldu   Lst_FreeCell_1
   2233  6     9B15 FF   9B35             stu   BBF_AddNewEntryAtEnd+4
   2234  6     9B18 FE   7066             ldu   Lst_FreeCellFirstEntry_1
   2235                            
   2236        9B1B               BBF_Next
   2237  3     9B1B 27   14               beq   BBF_AddNewEntryAtEnd       >>
   2238  7+1   9B1D 10AC 41               cmpy  cell_start,u               >>
   2239  3     9B20 27   2D               beq   BBF_ExpandAtStart          >>
   2240  3     9B22 22   4C               bhi   BBF_ExpandAtEnd            >>
   2241  5+1   9B24 EE   45               ldu   next_entry,u               >>
   2242  3     9B26 20   F7               bra   BBF_Next
   2243                            
   2244        9B28               BBF_AddNewEntry
   2245  6     9B28 FF   9B47             stu   BBF_SetNewEntryNextentry+1
   2246  4+1   9B2B 33   45               leau  next_entry,u               >>
   2247        9B2D               BBF_AddNewEntryAtEnd
   2248  6     9B2D FF   9B4C             stu   BBF_SetNewEntryPrevLink+1  >>
   2249  3     9B30 CE   0000             ldu   #$0000                     >>
   2250        9B33               BBF_FindFreeSlot
   2251  4+1   9B33 E6   40               ldb   nb_cells,u                 >>
   2252  3     9B35 27   08               beq   BBF_SetNewEntry            >>
   2253  4+1   9B37 33   47               leau  entry_size,u               >>
   2254  3     9B39 20   FC               bra   BBF_FindFreeSlot           >>
   2255        9B3B               BBF_SetNewEntry
   2256  4+1   9B3B A7   40               sta   nb_cells,u                 >>
   2257  5+1   9B3D AF   41               stx   cell_start,u               >>
   2258  6+1   9B3F 10AF 43               sty   cell_end,u                 >>
   2259        9B42               BBF_SetNewEntryNextentry
   2260  3     9B42 8E   0000             ldx   #$0000                     >>
   2261  5+1   9B45 AF   45               stx   next_entry,u               >>
   2262        9B47               BBF_SetNewEntryPrevLink
   2263  5     9B47 DF   00               stu   $0000                      >>
   2264  3     9B49 20   30               bra   BBF_rts
   2265
   2266        9B4B               BBF_ExpandAtStart
   2267  5+1   9B4B AF   41               stx   cell_start,u
   2268  4+1   9B4D AB   40               adda  nb_cells,u
   2269  4+1   9B4F A7   40               sta   nb_cells,u
   2270  6+1   9B51 10AE 45               ldy   next_entry,u
   2271  3     9B54 27   25               beq   BBF_rts
   2272        9B56               BBF_Join
   2273  6+1   9B56 AC   23               cmpx  cell_end,y
   2274  3     9B58 26   21               bne   BBF_rts
   2275  5+1   9B5A EC   21               ldd   cell_start,y
   2276  5+1   9B5C ED   41               std   cell_start,u
   2277  4+1   9B5E A6   20               lda   nb_cells,y
   2278  4+1   9B60 AB   40               adda  nb_cells,u
   2279  4+1   9B62 A7   40               sta   nb_cells,u
   2280  6+1   9B64 6F   20               clr   nb_cells,y                 >>
   2281  5+1   9B66 EC   25               ldd   next_entry,y
   2282  5+1   9B68 ED   45               std   next_entry,u               >>
   2283  3     9B6A 20   0F               bra   BBF_rts
   2284
   2285        9B6C               BBF_ExpandAtEnd
   2286  6+1   9B6C AC   43               cmpx  cell_end,u
   2287  3     9B6E 26   BC               bne   BBF_AddNewEntry
   2288  6+1   9B70 10AF 43               sty   cell_end,u
   2289  4+1   9B73 AB   40               adda  nb_cells,u
   2290  4+1   9B75 A7   40               sta   nb_cells,u
   2291                            
   2292        9B77               BBF_rts
   2293  5+6   9B77 35   C6               puls  d,u,pc
----------------
5136 cycle(s)
15225 byte(s)
----------------
    161

000001 Total Errors
        Expression Error     836         ldb   status,u                 *  >>

000403 Total Symbols
     1x          Label 93A1 am_ObjectMove_01
     1x          Label 93B7 am_ObjectMove_02
     3x          Label 9265 am_RunNextObject
     2x          Label 9195 am_SwapVideoPage
     3x          Equ   0004 anim
     0x          Label 9311 AnimateSprite
     1x          Label 9390 Anim_End
     1x          Label 9387 Anim_End_FA
     1x          Label 937C Anim_End_FB
     1x          Label 936C Anim_End_FC
     1x          Label 9363 Anim_End_FD
     1x          Label 9352 Anim_End_FE
     1x          Label 9347 Anim_End_FF
     8x          Equ   0008 anim_frame
     4x          Equ   0009 anim_frame_duration
     2x          Label 9334 Anim_Next
     1x          Label 931F Anim_Run
     1x          Label 9346 Anim_Wait
     0x          Label 9AB2 BBA0
     1x          Label 9ABB BBA1
     1x          Label 9ADC BBA_DivideCell
     1x          Label 9AE1 BBA_dyn
     1x          Label 9AD1 BBA_FitCell
     2x          Label 9AC2 BBA_Next
     2x          Label 9AF2 BBA_rts
     0x          Label 9B01 BBF0
     1x          Label 9B11 BBF1
     1x          Label 9B2C BBF_AddNewEntry
     3x          Label 9B31 BBF_AddNewEntryAtEnd
     1x          Label 9B70 BBF_ExpandAtEnd
     1x          Label 9B4F BBF_ExpandAtStart
     1x          Label 9B37 BBF_FindFreeSlot
     0x          Label 9B5A BBF_Join
     2x          Label 9B1F BBF_Next
     4x          Label 9B7B BBF_rts
     1x          Label 9B3F BBF_SetNewEntry
     2x          Label 9B46 BBF_SetNewEntryNextentry
     1x          Label 9B4B BBF_SetNewEntryPrevLink
     2x          Equ   0001 bckdraw_routine
     2x          Label 9AAB BgBufferAlloc
     2x          Label 9AF4 BgBufferFree
     0x          Label 91D0 Black_palette
     0x          Equ   0007 buf_bgdata
     2x          Equ   0024 buf_Lst_Priority_Unset
     2x          Equ   000D buf_onscreen
     1x          Equ   0005 buf_prev_mapping_frame
     0x          Equ   000B buf_prev_x2_pixel
     1x          Equ   0009 buf_prev_x_pixel
     0x          Equ   000C buf_prev_y2_pixel
     0x          Equ   000A buf_prev_y_pixel
     5x          Equ   0000 buf_priority
     5x          Equ   0003 buf_priority_next_obj
     2x          Equ   0001 buf_priority_prev_obj
    33x          Equ   0000 buf_Tbl_Priority_First_Entry
    18x          Equ   0012 buf_Tbl_Priority_Last_Entry
     0x          Equ   0040 c1_button_A_mask
     0x          Equ   0002 c1_button_down_mask
     0x          Equ   0004 c1_button_left_mask
     0x          Equ   0008 c1_button_right_mask
     0x          Equ   0001 c1_button_up_mask
     0x          Equ   0080 c2_button_A_mask
     0x          Equ   0020 c2_button_down_mask
     0x          Equ   0040 c2_button_left_mask
     0x          Equ   0080 c2_button_right_mask
     0x          Equ   0010 c2_button_up_mask
     7x          Equ   0003 cell_end
     5x          Equ   0040 cell_size
     5x          Equ   0001 cell_start
     0x          Equ   6000 cell_start_adr
     1x          Label 9443 CheckSpritesRefresh
     3x          Label 940D ClearObj
     1x          Label 9435 CLO_1
     1x          Label 9439 CLO_2
     3x          Label 91AF cpt
     0x          Label 9520 CSR_CheckDelHide
     2x          Label 9602 CSR_CheckDraw
     3x          Label 95C5 CSR_CheckErase
     0x          Label 953A CSR_CheckPlayFieldCoord
     1x          Label 95A6 CSR_CheckVerticalPosition
     1x          Label 9580 CSR_DoNotDisplaySprite
     2x          Label 959F CSR_NextObject
     1x          Label 94A8 CSR_P1B0
     1x          Label 9508 CSR_P1B1
     1x          Label 949D CSR_P2B0
     1x          Label 94FD CSR_P2B1
     1x          Label 9492 CSR_P3B0
     1x          Label 94F2 CSR_P3B1
     1x          Label 9487 CSR_P4B0
     1x          Label 94E7 CSR_P4B1
     1x          Label 947C CSR_P5B0
     1x          Label 94DC CSR_P5B1
     1x          Label 9471 CSR_P6B0
     1x          Label 94D1 CSR_P6B1
     1x          Label 9466 CSR_P7B0
     1x          Label 94C6 CSR_P7B1
     0x          Label 9459 CSR_P8B0
     0x          Label 94B9 CSR_P8B1
    21x          Label 9514 CSR_ProcessEachPriorityLevel
     1x          Label 94B3 CSR_rtsB0
     1x          Label 9513 CSR_rtsB1
     0x          Label 9454 CSR_SetBuffer0
     1x          Label 94B4 CSR_SetBuffer1
     3x          Label 9635 CSR_SetDrawFalse
     0x          Label 9623 CSR_SetDrawTrue
     2x          Label 95FD CSR_SetEraseFalse
     3x          Label 95F0 CSR_SetEraseTrue
    10x          Label 95BD CSR_SetOutOfRange
     0x          Label 9443 CSR_Start
     0x          Label 9526 CSR_UpdSpriteImageBasedOnMirror
    18x          Label 943D cur_priority
     5x          Label 9441 cur_ptr_sub_obj_draw
     7x          Label 943F cur_ptr_sub_obj_erase
     0x          Label 93D9 DeleteObject
     0x          Label 93D3 DeleteObject_x
     2x          Label 92AC DisplaySprite
     0x          Label 92A6 DisplaySprite_x
     0x          Equ   604F dk_destination
     0x          Equ   6049 dk_lecteur
     0x          Equ   604A dk_piste
     0x          Equ   604C dk_secteur
     1x          Label 940B DOB_rts
     1x          Label 93DB DOB_Start
     0x          Label 93EA DOB_TestOnscreen1
     1x          Label 93FB DOB_TestOnscreen1Delete
     2x          Label 9405 DOB_ToDeleteFlag
     0x          Label 93E0 DOB_Unset0
     1x          Label 93EF DOB_Unset1
     2x          Label 9237 Dpad_Held
     0x          Label 9239 Dpad_Press
    27x          Label 80A8 DPS_buffer_0
    25x          Label 8128 DPS_buffer_1
     1x          Label 9917 DrawSprites
     2x          Equ   0004 draw_routine
     1x          Label 99F1 DRS_DrawWithoutBackupB0
     1x          Label 9A8E DRS_DrawWithoutBackupB1
     1x          Label 9A1A DRS_dyn1
     1x          Label 9A2E DRS_dyn2
     1x          Label 99DA DRS_dyn3B0
     1x          Label 9A77 DRS_dyn3B1
     1x          Label 9A05 DRS_dyn4B0
     1x          Label 9AA2 DRS_dyn4B1
     3x          Label 99EB DRS_NextObjectB0
     3x          Label 9A88 DRS_NextObjectB1
     1x          Label 9954 DRS_P1B0
     1x          Label 9995 DRS_P1B1
     1x          Label 994C DRS_P2B0
     1x          Label 998D DRS_P2B1
     1x          Label 9944 DRS_P3B0
     1x          Label 9985 DRS_P3B1
     1x          Label 993C DRS_P4B0
     1x          Label 997D DRS_P4B1
     1x          Label 9934 DRS_P5B0
     1x          Label 9975 DRS_P5B1
     1x          Label 992C DRS_P6B0
     1x          Label 996D DRS_P6B1
     1x          Label 9924 DRS_P7B0
     1x          Label 9965 DRS_P7B1
     0x          Label 991C DRS_P8B0
     1x          Label 995D DRS_P8B1
    10x          Label 999E DRS_ProcessEachPriorityLevelB0
    10x          Label 9A3B DRS_ProcessEachPriorityLevelB1
     1x          Label 995C DRS_rtsB0
     1x          Label 999D DRS_rtsB1
     0x          Label 9917 DRS_Start
     4x          Label 9A0E DRS_XYToAddress
     0x          Label 9A11 DRS_XYToAddressRAMAFirst
     1x          Label 9A25 DRS_XYToAddressRAMBFirst
     0x          Label 92D6 DSP_addFirstNode
     1x          Label 92E5 DSP_addToExistingNode
     1x          Label 92C3 DSP_BufferPositionned
     1x          Label 92FE DSP_ChangePriority
     1x          Label 92CF DSP_CheckLastEntry
     0x          Label 92CD DSP_InitPriority
     1x          Label 92F1 DSP_LinkBuffer1
     1x          Label 92F4 DSP_LinkCurWithPrev
     3x          Label 930F DSP_rts
     0x          Label 92B3 DSP_SetBuffer0
     1x          Label 92BC DSP_SetBuffer1
     1x          Label 92AE DSP_Start
     1x          Label 82FC Dynamic_Object_RAM
     3x          Label 906C Dynamic_Object_RAM_End
     1x          Equ   0007 entry_size
     1x          Label 9641 EraseSprites
     4x          Equ   0009 erase_nb_cell
     2x          Equ   0007 erase_routine
     1x          Label 977A ESP_CallEraseRoutineB0
     1x          Label 978D ESP_CallEraseRoutineB0_00
     1x          Label 980F ESP_CallEraseRoutineB1
     1x          Label 9822 ESP_CallEraseRoutineB1_00
     0x          Label 9719 ESP_CheckEraseB0
     0x          Label 97AE ESP_CheckEraseB1
     8x          Label 970D ESP_CheckPriorityB0
     8x          Label 97A2 ESP_CheckPriorityB1
     0x          Label 9797 ESP_FreeEraseBufferB0
     0x          Label 982C ESP_FreeEraseBufferB1
     3x          Label 9749 ESP_NextObjectB0
     3x          Label 97DE ESP_NextObjectB1
     0x          Label 9646 ESP_P1B0
     1x          Label 96A1 ESP_P1B1
     1x          Label 9653 ESP_P2B0
     1x          Label 96AE ESP_P2B1
     1x          Label 965E ESP_P3B0
     1x          Label 96BB ESP_P3B1
     1x          Label 9669 ESP_P4B0
     1x          Label 96C8 ESP_P4B1
     1x          Label 9674 ESP_P5B0
     1x          Label 96D5 ESP_P5B1
     1x          Label 967F ESP_P6B0
     1x          Label 96E2 ESP_P6B1
     1x          Label 968A ESP_P7B0
     1x          Label 96EF ESP_P7B1
     1x          Label 9695 ESP_P8B0
     1x          Label 96FC ESP_P8B1
     9x          Label 970A ESP_ProcessEachPriorityLevelB0
     9x          Label 979F ESP_ProcessEachPriorityLevelB1
     1x          Label 96A0 ESP_rtsB0
     1x          Label 9709 ESP_rtsB1
     0x          Label 9641 ESP_Start
     2x          Label 9774 ESP_SubCheckOverlayB0
     2x          Label 9809 ESP_SubCheckOverlayB1
     0x          Label 975A ESP_SubDrawCheckCollisionB0
     0x          Label 97EF ESP_SubDrawCheckCollisionB1
     4x          Label 9752 ESP_SubDrawSearchB0
     4x          Label 97E7 ESP_SubDrawSearchB1
     1x          Label 974F ESP_SubDrawSpriteSearchInitB0
     1x          Label 97E4 ESP_SubDrawSpriteSearchInitB1
     0x          Label 972D ESP_SubEraseCheckCollisionB0
     0x          Label 97C2 ESP_SubEraseCheckCollisionB1
     4x          Label 9725 ESP_SubEraseSearchB0
     4x          Label 97BA ESP_SubEraseSearchB1
     0x          Label 9722 ESP_SubEraseSpriteSearchInitB0
     0x          Label 97B7 ESP_SubEraseSpriteSearchInitB1
     0x          Label 9711 ESP_UnsetCheckRefreshB0
     0x          Label 97A6 ESP_UnsetCheckRefreshB1
     1x          Label 979A ESP_UnsetOnScreenFlagB0
     1x          Label 982F ESP_UnsetOnScreenFlagB1
     0x          Equ   001A ext_variables
     2x          Label 9238 Fire_Held
     0x          Label 923A Fire_Press
     0x          Label 9165 Glb_Abs_H_Distance_Mainc
     1x          Label 601C Glb_Camera_X_Pos
     1x          Label 601E Glb_Camera_Y_Pos
     0x          Label 915D Glb_Closest_Player
    10x          Label 601A Glb_Cur_Wrk_Screen_Id
     1x          Label 601B Glb_Cur_Wrk_Screen_Id_x2
     0x          Label 9167 Glb_H_Distance_Sidek
     1x          Label 915C Glb_MainCharacter_Is_Dead
     0x          Label 9161 Glb_Player_H_Distance
     0x          Label 9160 Glb_Player_Is_Above
     0x          Label 915F Glb_Player_Is_Left
     0x          Label 9163 Glb_Player_V_Distance
     2x          Label 6020 Glb_Sprite_Screen_Pos_PartA
     2x          Label 6022 Glb_Sprite_Screen_Pos_PartB
     0x          Equ   0038 gravity
     0x          Equ   0000 id
     1x          Equ   0010 image_meta_size
     1x          Equ   000A image_x_offset
     1x          Equ   000E image_x_size
     1x          Equ   000C image_y_offset
     2x          Equ   000F image_y_size
     0x          Label 9237 Joypads
     1x          Label 9237 Joypads_Held
     1x          Label 9239 Joypads_Press
     1x          Label 6000 LevelMainLoop
     1x          Label 906C LevelOnly_Object_RAM
     1x          Label 915C LevelOnly_Object_RAM_End
     3x          Label 6024 Lst_FreeCellFirstEntry_0
     3x          Label 7066 Lst_FreeCellFirstEntry_1
     1x          Label 6026 Lst_FreeCell_0
     1x          Label 7068 Lst_FreeCell_1
     8x          Label 80CC Lst_Priority_Unset_0
     7x          Label 814C Lst_Priority_Unset_1
     2x          Equ   000A mapping_frame
     0x          Label 92A4 MarkObjGone
    14x          Equ   0000 nb_cells
     2x          Equ   002B nb_dynamic_objects
     2x          Equ   0082 nb_free_cells
     0x          Equ   0003 nb_level_objects
     4x          Equ   002D nb_objects
     4x          Equ   0008 nb_priority_levels
     1x          Equ   0002 nb_reserved_objects
     9x          Equ   0005 next_entry
     4x          Equ   0050 next_object
     1x          Label 91B0 Normal_palette
     0x          Label 9391 ObjectMove
     1x          Label 825C Object_RAM
     2x          Label 915C Object_RAM_End
     8x          Equ   0050 object_size
     0x          Label 825C Obj_MainCharacter
     0x          Label 82AC Obj_Sidekick
     0x          Label 90BC Obj_SonicDust
     0x          Label 910C Obj_TailsDust
     0x          Label 906C Obj_TailsTails
     2x          Equ   0000 page_bckdraw_routine
     2x          Equ   0003 page_draw_routine
     2x          Equ   0006 page_erase_routine
     2x          Equ   0006 prev_anim
     5x          Equ   0003 priority
     2x          Equ   0000 Ptr_palette
     1x          Label 923B ReadJoypads
     4x          Equ   0010 render_fixedoverlay_mask
    16x          Equ   0002 render_flags
     0x          Equ   0040 render_free2_mask
     0x          Equ   0080 render_free3_mask
     2x          Equ   0008 render_hide_mask
     1x          Equ   0004 render_playfieldcoord_mask
     4x          Equ   0020 render_todelete_mask
     1x          Equ   0001 render_xmirror_mask
     1x          Equ   0002 render_ymirror_mask
     1x          Label 825C Reserved_Object_RAM
     1x          Label 82FC Reserved_Object_RAM_End
     2x          Equ   0018 routine
     3x          Equ   0019 routine_secondary
     3x          Equ   003B rsv_bgdata_0
     3x          Equ   0049 rsv_bgdata_1
     2x          Equ   0034 rsv_buffer_0
     2x          Equ   0042 rsv_buffer_1
    10x          Equ   002C rsv_curr_mapping_frame
     6x          Equ   0041 rsv_onscreen_0
     9x          Equ   004F rsv_onscreen_1
     0x          Equ   002A rsv_prev_anim
     3x          Equ   0039 rsv_prev_mapping_frame_0
     3x          Equ   0047 rsv_prev_mapping_frame_1
     2x          Equ   003F rsv_prev_x2_pixel_0
     2x          Equ   004D rsv_prev_x2_pixel_1
     2x          Equ   003D rsv_prev_x_pixel_0
     2x          Equ   004B rsv_prev_x_pixel_1
     0x          Equ   0040 rsv_prev_y2_pixel_0
     0x          Equ   004E rsv_prev_y2_pixel_1
     0x          Equ   003E rsv_prev_y_pixel_0
     0x          Equ   004C rsv_prev_y_pixel_1
     4x          Equ   0034 rsv_priority_0
     4x          Equ   0042 rsv_priority_1
     9x          Equ   0037 rsv_priority_next_obj_0
     9x          Equ   0045 rsv_priority_next_obj_1
     5x          Equ   0035 rsv_priority_prev_obj_0
     5x          Equ   0043 rsv_priority_prev_obj_1
     3x          Equ   0030 rsv_ptr_sub_object_draw
     4x          Equ   002E rsv_ptr_sub_object_erase
     4x          Equ   0001 rsv_render_checkrefresh_mask
     5x          Equ   0004 rsv_render_displaysprite_mask
     6x          Equ   0002 rsv_render_erasesprite_mask
    23x          Equ   0029 rsv_render_flags
     4x          Equ   0008 rsv_render_outofrange_mask
     9x          Equ   0032 rsv_x2_pixel
     5x          Equ   0033 rsv_y2_pixel
     1x          Label 9262 RunNextObject
     2x          Label 929A RunNextObjectDisplayOnly
     3x          Label 925C RunObject
     2x          Label 9290 RunObjectDisplayOnly
     1x          Label 9253 RunObjects
     1x          Label 926C RunObjectsWhenPlayerIsDead
     0x          Label 9257 RunObjects_01
     0x          Label 926B RunObjects_End
     2x          Equ   00C8 screen_height
     1x          Equ   00A0 screen_width
     1x          Label 921F SetColor
     0x          Label 93BC SingleObjLoad2
     1x          Label 93C6 SingleObjLoad2_01
     2x          Label 93D2 SingleObjLoad2_02
     1x Unknown  Equ   0000 status
     0x          Equ   0001 subtype
     0x          Label 9188 SwapVideoPage
     1x          Label 91A9 SwapVideoPage_01
     1x          Label 80A8 Tbl_Priority_First_Entry_0
     1x          Label 8128 Tbl_Priority_First_Entry_1
     2x          Label 80BA Tbl_Priority_Last_Entry_0
     1x          Label 813A Tbl_Priority_Last_Entry_1
     1x          Label 8202 Tbl_Sub_Object_Draw
     1x          Label 81A8 Tbl_Sub_Object_Erase
     0x          Label 9839 UDP_B0
     1x          Label 98A8 UDP_B1
     1x          Label 9882 UDP_ChainNextB0
     1x          Label 98F1 UDP_ChainNextB1
     1x          Label 9861 UDP_ChainPrevB0
     1x          Label 98D0 UDP_ChainPrevB1
     1x          Label 988C UDP_CheckDeleteB0
     1x          Label 98FB UDP_CheckDeleteB1
     2x          Label 983C UDP_CheckEndB0
     2x          Label 98AB UDP_CheckEndB1
     1x          Label 986B UDP_CheckPrioNextB0
     1x          Label 98DA UDP_CheckPrioNextB1
     1x          Label 9848 UDP_CheckPrioPrevB0
     1x          Label 98B7 UDP_CheckPrioPrevB1
     0x          Label 9841 UDP_InitListB0
     0x          Label 98B0 UDP_InitListB1
     3x          Label 98A1 UDP_SetNewPrioB0
     3x          Label 9910 UDP_SetNewPrioB1
     0x          Label 9834 UDP_Start
     1x          Label 9834 UnsetDisplayPriority
     1x          Label 9210 UpdatePalette
     2x          Label 91AD Vint_runcount
     2x          Label 9169 WaitVBL
     1x          Label 916E WaitVBL_01
     0x          Label 91F0 White_palette
    12x          Equ   0012 x_pixel
     5x          Equ   000C x_pos
     0x          Equ   000E x_sub
     2x          Equ   0014 x_vel
     8x          Equ   0013 y_pixel
     5x          Equ   000F y_pos
     0x          Equ   0011 y_sub
     2x          Equ   0016 y_vel

