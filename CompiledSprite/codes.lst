/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : TEST1X10.asm
 * Fichier destination : TEST1X10.BIN
 * Contenu :
 *     Main     0:TEST1X10.asm 7540
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
     12        8000                      ORG $8000
     13
     14                           *****************************************>>
     15                           * Constantes et variables
     16                           *****************************************>>
     17                  0014     DEBUTECRANA EQU $0014       * test pour f>>
     18                  1F40     FINECRANA EQU $1F40  * fin de la RAM A vi>>
     19                  2014     DEBUTECRANB EQU $2014       * test pour f>>
     20                  3F40     FINECRANB EQU $3F40  * fin de la RAM B vi>>
     21
     22        8000 0000          SSAVE FDB $0000
     23
     24                           *****************************************>>
     25                           * Debut du programme
     26                           *****************************************>>
     27  2     8002 1A   50              ORCC #$50     * a documenter (inte>>
     28                            
     29  2     8004 86   7B              LDA #$7B      * passage en mode 16>>
     30  5     8006 B7   E7DC            STA $E7DC
     31
     32                           *****************************************>>
     33                           * Initialisation de la palette de couleur>>
     34                           *****************************************>>
     35  4     8009 108E 8205            LDY #TABPALETTE
     36  2     800D 4F                   CLRA
     37        800E               SETPALETTE
     38  5+1   800E 34   02              PSHS A
     39  2     8010 48                   ASLA
     40  5     8011 B7   E7DB            STA $E7DB
     41  5+3   8014 EC   A1              LDD ,Y++
     42  5     8016 F7   E7DA            STB $E7DA
     43  5     8019 B7   E7DA            STA $E7DA
     44  5+1   801C 35   02              PULS A
     45  2     801E 4C                   INCA
     46  5     801F 108C 8225            CMPY #FINTABPALETTE
     47  3     8023 26   E9              BNE    SETPALETTE
     48                            
     49                           *****************************************>>
     50                           * Initialisation de la routine de commuta>>
     51                           *****************************************>>
     52  5     8025 F6   6081            LDB $6081 * A documenter
     53  2     8028 CA   10              ORB #$10  * mettre le bit d4 a 1
     54  5     802A F7   6081            STB $6081
     55  5     802D F7   E7E7            STB $E7E7
     56  8     8030 BD   8068            JSR SCRC * page 2 en RAM Cartouche>>
     57                            
     58                           *---------------------------------------->>
     59                           * Initialisation des deux pages videos av>>
     60                           *---------------------------------------->>
     61  2     8033 C6   03              LDB #$03  * On monte la page 3
     62  5     8035 F7   E7E5            STB $E7E5 * en RAM Donnees (A000-D>>
     63                            
     64  8     8038 BD   809B            JSR DRAW_RAM_DATA_TO_CART_160x200
     65  8     803B BD   810A            JSR DRAW_TEST1X100000             >>
     66  8     803E BD   8068            JSR SCRC                          >>
     67  8     8041 BD   809B            JSR DRAW_RAM_DATA_TO_CART_160x200
     68  8     8044 BD   810A            JSR DRAW_TEST1X100000             >>
     69  8     8047 BD   8068            JSR SCRC                          >>
     70                            
     71                           *---------------------------------------->>
     72                           * Boucle principale
     73                           *---------------------------------------->>
     74        804A               MAIN
     75                                  * Effacement et affichage des spri>>
     76  7+3   804A AD   9F 8170         JSR [DRAW_EREF_TEST1X100000_1] * T>>
     77  8     804E BD   810A            JSR DRAW_TEST1X100000 * TODO boulc>>
     78                            
     79                                  * Gestion des deplacements
     80  8     8051 BD   81D6            JSR JOY_READ
     81                            
     82  6     8054 BE   816C            LDX POS_TEST1X100000 * avance de 2>>
     83  6     8057 FC   816E            LDD POS_TEST1X100000+2
     84  6     805A BF   816E            STX POS_TEST1X100000+2
     85  7     805D B3   81F3            SUBD JOY_STATUS
     86  6     8060 FD   816C            STD POS_TEST1X100000
     87
     88  8     8063 BD   8068            JSR SCRC        * changement de pa>>
     89  3     8066 20   E2              BRA MAIN
     90
     91                           *****************************************>>
     92                           * Changement de page ESPACE ECRAN (affich>>
     93                           *      $E7DD determine la page affichee d>>
     94                           *      D7=0 D6=0 D5=0 D4=0 (#$0_) : page >>
     95                           *      D7=0 D6=1 D5=0 D4=0 (#$4_) : page >>
     96                           *      D7=1 D6=0 D5=0 D4=0 (#$8_) : page >>
     97                           *      D7=1 D6=1 D5=0 D4=0 (#$C_) : page >>
     98                           *   D3 D2 D1 D0  (#$_0 a #$_F) : couleur >>
     99                           *   Remarque : D5 et D4 utilisable unique>>
    100                           *
    101                           * Changement de page ESPACE CARTOUCHE (ec>>
    102                           *      $E7E6 determine la page affichee d>>
    103                           *   D5 : 1 = espace cartouche recouvert p>>
    104                           *   D4 : 0 = CAS1N valide : banques 0-15 >>
    105                           *      D5=1 D4=0 D3=0 D2=0 D1=0 D0=0 (#$6>>
    106                           *   ...
    107                           *      D5=1 D4=0 D3=1 D2=1 D1=1 D0=1 (#$6>>
    108                           *      D5=1 D4=1 D3=0 D2=0 D1=0 D0=0 (#$7>>
    109                           *   ...
    110                           *      D5=1 D4=1 D3=1 D2=1 D1=1 D0=1 (#$7>>
    111                           *****************************************>>
    112        8068               SCRC
    113  8     8068 BD   8090            JSR VSYNC
    114                            
    115  6     806B BE   8170            LDX DRAW_EREF_TEST1X100000_1      >>
    116  7     806E 10BE 8172            LDY DRAW_EREF_TEST1X100000_1+2  * >>
    117  7     8072 10BF 8170            STY DRAW_EREF_TEST1X100000_1    * >>
    118  6     8076 BF   8172            STX DRAW_EREF_TEST1X100000_1+2  * >>
    119                            
    120  5     8079 F6   8087            LDB SCRC0+1   * charge la valeur d>>
    121  2     807C C4   80              ANDB #$80     * permute #$00 ou #$>>
    122  2     807E CA   0F              ORB #$0F      * recharger la coule>>
    123  5     8080 F7   E7DD            STB $E7DD     * changement page da>>
    124  7     8083 73   8087            COM SCRC0+1   * modification du co>>
    125        8086               SCRC0
    126  2     8086 C6   00              LDB #$00
    127  2     8088 C4   02              ANDB #$02     * permute #$60 ou #$>>
    128  2     808A CA   60              ORB #$60      * espace cartouche r>>
    129  5     808C F7   E7E6            STB $E7E6     * changement page da>>
    130  5     808F 39                   RTS                  * E7E6 D5=1 p>>
    131                                                       * CAS1N : ban>>
    132
    133                           *****************************************>>
    134                           * Attente VBL
    135                           *****************************************>>
    136        8090               VSYNC
    137        8090               VSYNC_1
    138  7     8090 7D   E7E7            TST    $E7E7
    139  3     8093 2A   FB              BPL    VSYNC_1
    140        8095               VSYNC_2
    141  7     8095 7D   E7E7            TST    $E7E7
    142  3     8098 2B   FB              BMI    VSYNC_2
    143  5     809A 39                   RTS
    144
    145                           *****************************************>>
    146                           * Affichage de l arriere plan xxx cycles
    147                           *****************************************>>
    148        809B               DRAW_RAM_DATA_TO_CART_160x200
    149  5+3   809B 34   48              PSHS U,DP            * sauvegarde >>
    150  7     809D 10FF 8000            STS >SSAVE
    151                            
    152  4     80A1 10CE 1F40            LDS #FINECRANA       * init pointe>>
    153  3     80A5 CE   A000            LDU #$A000
    154
    155        80A8               DRAW_RAM_DATA_TO_CART_160x200A
    156  5+7   80A8 37   3E              PULU A,B,DP,X,Y
    157  5+7   80AA 34   3E              PSHS Y,X,DP,B,A
    158  5+7   80AC 37   3E              PULU A,B,DP,X,Y
    159  5+7   80AE 34   3E              PSHS Y,X,DP,B,A
    160  5+7   80B0 37   3E              PULU A,B,DP,X,Y
    161  5+7   80B2 34   3E              PSHS Y,X,DP,B,A
    162  5+7   80B4 37   3E              PULU A,B,DP,X,Y
    163  5+7   80B6 34   3E              PSHS Y,X,DP,B,A
    164  5+7   80B8 37   3E              PULU A,B,DP,X,Y
    165  5+7   80BA 34   3E              PSHS Y,X,DP,B,A
    166  5+7   80BC 37   3E              PULU A,B,DP,X,Y
    167  5+7   80BE 34   3E              PSHS Y,X,DP,B,A
    168  5     80C0 118C 0014            CMPS #DEBUTECRANA
    169  3     80C4 26   E2              BNE DRAW_RAM_DATA_TO_CART_160x200A>>
    170  5+7   80C6 37   3E              PULU A,B,DP,X,Y
    171  5+7   80C8 34   3E              PSHS Y,X,DP,B,A
    172  5+7   80CA 37   3E              PULU A,B,DP,X,Y
    173  5+7   80CC 34   3E              PSHS Y,X,DP,B,A
    174  5+6   80CE 37   3C              PULU B,DP,X,Y
    175  5+6   80D0 34   3C              PSHS Y,X,DP,B
    176
    177  4     80D2 10CE 3F40            LDS #FINECRANB       * init pointe>>
    178  3     80D6 CE   C000            LDU #$C000
    179
    180        80D9               DRAW_RAM_DATA_TO_CART_160x200B
    181  5+7   80D9 37   3E              PULU A,B,DP,X,Y
    182  5+7   80DB 34   3E              PSHS Y,X,DP,B,A
    183  5+7   80DD 37   3E              PULU A,B,DP,X,Y
    184  5+7   80DF 34   3E              PSHS Y,X,DP,B,A
    185  5+7   80E1 37   3E              PULU A,B,DP,X,Y
    186  5+7   80E3 34   3E              PSHS Y,X,DP,B,A
    187  5+7   80E5 37   3E              PULU A,B,DP,X,Y
    188  5+7   80E7 34   3E              PSHS Y,X,DP,B,A
    189  5+7   80E9 37   3E              PULU A,B,DP,X,Y
    190  5+7   80EB 34   3E              PSHS Y,X,DP,B,A
    191  5+7   80ED 37   3E              PULU A,B,DP,X,Y
    192  5+7   80EF 34   3E              PSHS Y,X,DP,B,A
    193  5     80F1 118C 2014            CMPS #DEBUTECRANB
    194  3     80F5 26   E2              BNE DRAW_RAM_DATA_TO_CART_160x200B>>
    195  5+7   80F7 37   3E              PULU A,B,DP,X,Y
    196  5+7   80F9 34   3E              PSHS Y,X,DP,B,A
    197  5+7   80FB 37   3E              PULU A,B,DP,X,Y
    198  5+7   80FD 34   3E              PSHS Y,X,DP,B,A
    199  5+6   80FF 37   3C              PULU B,DP,X,Y
    200  5+6   8101 34   3C              PSHS Y,X,DP,B
    201
    202  7     8103 10FE 8000            LDS  >SSAVE          * rechargemen>>
    203  5+3   8107 35   48              PULS U,DP
    204  5     8109 39                   RTS
    205
    206                           *****************************************>>
    207                           * Affiche un computed sprite en xxx cycle>>
    208                           *****************************************>>
    209        810A               DRAW_TEST1X100000
    210  5+3   810A 34   48              PSHS U,DP
    211  7     810C 10FF 8000            STS >SSAVE
    212
    213  7     8110 10FE 816C            LDS POS_TEST1X100000
    214  3     8114 CE   816C            LDU #DATA_TEST1X100000_1
    215
    216  4+1   8117 A6   7F              LDA -1,S
    217  6     8119 BE   8170            LDX DRAW_EREF_TEST1X100000_1
    218  4+1   811C A7   0E              STA 14,X
    219  2     811E 86   98              LDA #$98
    220  4+1   8120 A7   7F              STA -1,S
    221  4+1   8122 A6   E8 D7           LDA -41,S
    222  6     8125 BE   8170            LDX DRAW_EREF_TEST1X100000_1
    223  4+1   8128 A7   88 12           STA 18,X
    224  2     812B 86   89              LDA #$89
    225  4+1   812D A7   E8 D7           STA -41,S
    226
    227  7     8130 10FE 816E            LDS POS_TEST1X100000+2
    228  3     8134 CE   816C            LDU #DATA_TEST1X100000_2
    229
    230  4+1   8137 A6   7F              LDA -1,S
    231  6     8139 BE   8170            LDX DRAW_EREF_TEST1X100000_1
    232  4+1   813C A7   88 1E           STA 30,X
    233  2     813F 86   89              LDA #$89
    234  4+1   8141 A7   7F              STA -1,S
    235  4+1   8143 A6   E8 D7           LDA -41,S
    236  6     8146 BE   8170            LDX DRAW_EREF_TEST1X100000_1
    237  4+1   8149 A7   88 22           STA 34,X
    238  2     814C 86   98              LDA #$98
    239  4+1   814E A7   E8 D7           STA -41,S
    240
    241  6     8151 BE   816C            LDX POS_TEST1X100000 * save des po>>
    242  7     8154 10BE 8170            LDY DRAW_EREF_TEST1X100000_1
    243  5+1   8158 AF   A8 2D           STX 45,Y
    244  6     815B BE   816E            LDX POS_TEST1X100000+2
    245  7     815E 10BE 8170            LDY DRAW_EREF_TEST1X100000_1
    246  5+1   8162 AF   A8 2F           STX 47,Y
    247
    248  7     8165 10FE 8000            LDS  >SSAVE
    249  5+3   8169 35   48              PULS U,DP
    250  5     816B 39                   RTS
    251
    252        816C               DATA_TEST1X100000_1
    253        816C               DATA_TEST1X100000_2
    254        816C               POS_TEST1X100000
    255        816C 1F40                 FDB $1F40
    256        816E 3F40                 FDB $3F40
    257        8170               DRAW_EREF_TEST1X100000_1
    258        8170 8174                 FDB E1DRAW_TEST1X100000
    259        8172 81A5                 FDB E2DRAW_TEST1X100000
    260
    261        8174               E1DRAW_TEST1X100000
    262  5+3   8174 34   48              PSHS U,DP
    263  7     8176 10FF 8000            STS >SSAVE
    264
    265  7     817A 10FE 81A1            LDS E1POS_TEST1X100000
    266  3     817E CE   81A1            LDU #E1DATA_TEST1X100000_1
    267
    268  2     8181 86   98              LDA #$98
    269  4+1   8183 A7   7F              STA -1,S
    270  2     8185 86   89              LDA #$89
    271  4+1   8187 A7   E8 D7           STA -41,S
    272
    273  7     818A 10FE 81A3            LDS E1POS_TEST1X100000+2
    274  3     818E CE   81A1            LDU #E1DATA_TEST1X100000_2
    275
    276  2     8191 86   89              LDA #$89
    277  4+1   8193 A7   7F              STA -1,S
    278  2     8195 86   98              LDA #$98
    279  4+1   8197 A7   E8 D7           STA -41,S
    280
    281  7     819A 10FE 8000            LDS  >SSAVE
    282  5+3   819E 35   48              PULS U,DP
    283  5     81A0 39                   RTS
    284
    285        81A1               E1DATA_TEST1X100000_1
    286        81A1               E1DATA_TEST1X100000_2
    287        81A1               E1POS_TEST1X100000
    288        81A1 1F40                 FDB $1F40
    289        81A3 3F40                 FDB $3F40
    290
    291        81A5               E2DRAW_TEST1X100000
    292  5+3   81A5 34   48              PSHS U,DP
    293  7     81A7 10FF 8000            STS >SSAVE
    294
    295  7     81AB 10FE 81D2            LDS E2POS_TEST1X100000
    296  3     81AF CE   81D2            LDU #E2DATA_TEST1X100000_1
    297
    298  2     81B2 86   98              LDA #$98
    299  4+1   81B4 A7   7F              STA -1,S
    300  2     81B6 86   89              LDA #$89
    301  4+1   81B8 A7   E8 D7           STA -41,S
    302
    303  7     81BB 10FE 81D4            LDS E2POS_TEST1X100000+2
    304  3     81BF CE   81D2            LDU #E2DATA_TEST1X100000_2
    305
    306  2     81C2 86   89              LDA #$89
    307  4+1   81C4 A7   7F              STA -1,S
    308  2     81C6 86   98              LDA #$98
    309  4+1   81C8 A7   E8 D7           STA -41,S
    310
    311  7     81CB 10FE 8000            LDS  >SSAVE
    312  5+3   81CF 35   48              PULS U,DP
    313  5     81D1 39                   RTS
    314
    315        81D2               E2DATA_TEST1X100000_1
    316        81D2               E2DATA_TEST1X100000_2
    317        81D2               E2POS_TEST1X100000
    318        81D2 1F40                 FDB $1F40
    319        81D4 3F40                 FDB $3F40
    320                            
    321                           *---------------------------------------
    322                           * Get joystick parameters
    323                           *---------------------------------------
    324        81D6               JOY_READ
    325  3     81D6 8E   E7CF            ldx    #$e7cf
    326  4     81D9 108E E7CD            ldy    #$e7cd
    327  3     81DD CE   81F5            ldu    #JOY_TABLE
    328  3     81E0 CC   400F            ldd    #$400f
    329  5     81E3 F4   E7CC            andb   >$e7cc  * Read position
    330  4+1   81E6 E6   C5              ldb    b,u     * Read orientation
    331  5     81E8 F7   81F3            stb    JOY_STATUS * Orientation
    332  4+0   81EB A4   A4              anda   ,y      * Read button
    333  2     81ED 88   40              eora   #$40    * status
    334  5     81EF B7   81F4            sta    JOY_STATUS+1 * Boutton
    335  5     81F2 39                   RTS
    336        81F3               JOY_STATUS
    337        81F3 00                   FCB $00 * Pos Joystick
    338        81F4 00                   FCB $00 * 40 Bouton A enfonce
    339        81F5               JOY_TABLE * Utilise pour orientation a vo>>
    340        81F5 0000                 FDB $0000
    341        81F7 0000                 FDB $0000
    342        81F9 0005                 FDB $0005 * 05 Bas Droite
    343        81FB 0607                 FDB $0607 * 06 Haut Droite 07 Droi>>
    344        81FD 0009                 FDB $0009 * 09 Bas Gauche
    345        81FF 0A01                 FDB $0A01 * 0A Haut Gauche 0B Gauc>>
    346        8201 000D                 FDB $000D * 0D Bas
    347        8203 0E00                 FDB $0E00 * 0E Haut 0F Rien
    348
    349        8205               TABPALETTE
    350        8205 0111                 FDB $0111     * index:0  R:51  V:5>>
    351        8207 0143                 FDB $0143     * index:1  R:108 V:1>>
    352        8209 0113                 FDB $0113     * index:2  R:107 V:5>>
    353        820B 0484                 FDB $0484     * index:3  R:132 V:1>>
    354        820D 0112                 FDB $0112     * index:4  R:92  V:6>>
    355        820F 0247                 FDB $0247     * index:5  R:180 V:1>>
    356        8211 0233                 FDB $0233     * index:6  R:116 V:1>>
    357        8213 0177                 FDB $0177     * index:7  R:172 V:1>>
    358        8215 0111                 FDB $0111     * index:8  R:60  V:5>>
    359        8217 0016                 FDB $0016     * index:9  R:164 V:6>>
    360        8219 0698                 FDB $0698     * index:10 R:187 V:1>>
    361        821B 0344                 FDB $0344     * index:11 R:132 V:1>>
    362        821D 0221                 FDB $0221     * index:12 R:68  V:9>>
    363        821F 0452                 FDB $0452     * index:13 R:92  V:1>>
    364        8221 0356                 FDB $0356     * index:14 R:164 V:1>>
    365        8223 0125                 FDB $0125     * index:15 R:140 V:1>>
    366        8225               FINTABPALETTE

000000 Total Errors

000033 Total Symbols
     1x          Label 816C DATA_TEST1X100000_1
     1x          Label 816C DATA_TEST1X100000_2
     1x          Equ   0014 DEBUTECRANA
     1x          Equ   2014 DEBUTECRANB
    11x          Label 8170 DRAW_EREF_TEST1X100000_1
     2x          Label 809B DRAW_RAM_DATA_TO_CART_160x200
     1x          Label 80A8 DRAW_RAM_DATA_TO_CART_160x200A
     1x          Label 80D9 DRAW_RAM_DATA_TO_CART_160x200B
     3x          Label 810A DRAW_TEST1X100000
     1x          Label 81A1 E1DATA_TEST1X100000_1
     1x          Label 81A1 E1DATA_TEST1X100000_2
     1x          Label 8174 E1DRAW_TEST1X100000
     2x          Label 81A1 E1POS_TEST1X100000
     1x          Label 81D2 E2DATA_TEST1X100000_1
     1x          Label 81D2 E2DATA_TEST1X100000_2
     1x          Label 81A5 E2DRAW_TEST1X100000
     2x          Label 81D2 E2POS_TEST1X100000
     1x          Equ   1F40 FINECRANA
     1x          Equ   3F40 FINECRANB
     1x          Label 8225 FINTABPALETTE
     1x          Label 81D6 JOY_READ
     3x          Label 81F3 JOY_STATUS
     1x          Label 81F5 JOY_TABLE
     1x          Label 804A MAIN
     8x          Label 816C POS_TEST1X100000
     4x          Label 8068 SCRC
     2x          Label 8086 SCRC0
     1x          Label 800E SETPALETTE
     8x          Label 8000 SSAVE
     1x          Label 8205 TABPALETTE
     1x          Label 8090 VSYNC
     1x          Label 8090 VSYNC_1
     1x          Label 8095 VSYNC_2

