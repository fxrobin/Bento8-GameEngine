/*--------------------------------------------------------------*
 * Compilé avec C6809 v0.83                                     *
 *--------------------------------------------------------------*
 * Fichier source      : ./input/CODE/TEST.ASS.TMP
 * Fichier destination : TMP.BIN
 * Contenu :
 *     Main     0:MAIN.ASM     23287
 *--------------------------------------------------------------*/

Macro Pass
Pass1
Pass2
     12        6300                      ORG $6300
     13
     14                           *****************************************>>
     15                           * Constantes et variables
     16                           *****************************************>>
     17
     18                  6205     DK_lecture               EQU $6205 * rout>>
     19                  620A     DK_piste                 EQU $620A * 2B n>>
     20                  620F     DK_secteur               EQU $620F * 1B n>>
     21                  6213     DK_destination           EQU $6213 * 2B d>>
     22                  622C     DK_dernier_bloc_a_ecrire EQU $622C * 2B f>>
     23
     24                  0014     DEBUTECRANA EQU $0014 * test pour fin sta>>
     25                  1F40     FINECRANA   EQU $1F40 * fin de la RAM A v>>
     26                  2014     DEBUTECRANB EQU $2014 * test pour fin sta>>
     27                  3F40     FINECRANB   EQU $3F40 * fin de la RAM B v>>
     28
     29                  0005     JOY_BD EQU $05 * Bas Droite
     30                  0006     JOY_HD EQU $06 * Haut Droite
     31                  0007     JOY_D  EQU $07 * Droite
     32                  0009     JOY_BG EQU $09 * Bas Gauche
     33                  000A     JOY_HG EQU $0A * Haut Gauche
     34                  000B     JOY_G  EQU $0B * Gauche
     35                  000D     JOY_B  EQU $0D * Bas
     36                  000E     JOY_H  EQU $0E * Haut
     37                  000F     JOY_C  EQU $0F * Centre
     38                  0040     JOY_A  EQU $40 * Bouton
     39
     40                  9F00     HERO_POS EQU $9F00 * Emplacement memoire >>
     41
     42                           *****************************************>>
     43                           * Debut du programme
     44                           *****************************************>>
     45        6300               BEGIN
     46  2     6300 1A   50              ORCC #$50     * desactive les inte>>
     47                            
     48                           *****************************************>>
     49                           * Initialisation du mode video
     50                           *****************************************>>
     51  2     6302 86   7B              LDA #$7B      * passage en mode 16>>
     52  5     6304 B7   E7DC            STA $E7DC
     53                            
     54                           *****************************************>>
     55                           * Initialisation de la palette en noir
     56                           *****************************************>>
     57
     58  3     6307 CC   0000            LDD #$0000
     59        630A               SETBLACKPALETTE
     60  5     630A B7   E7DB            STA $E7DB     * determine l'indice>>
     61  5     630D F7   E7DA            STB $E7DA     * set de la couleur >>
     62  5     6310 F7   E7DA            STB $E7DA   * set de la couleur Bl>>
     63  2     6313 8B   02              ADDA #$02     * increment de l'ind>>
     64  2     6315 81   20              CMPA #$20     * si on atteint 32 s>>
     65  3     6317 26   F1              BNE    SETBLACKPALETTE
     66                            
     67                                  * Bordure initialisee avec couleur>>
     68                                  **********************************>>
     69                            
     70  5     6319 F6   E7DD         LDB $E7DD
     71  2     631C C4   F0              ANDB #$F0
     72  5     631E F7   E7DD            STB $E7DD
     73
     74                           *****************************************>>
     75                           * Chargement des pages memoire
     76                           *****************************************>>
     77                                  * Chargement des pages depuis la d>>
     78                                  **********************************>>
     79                            
     80  3     6321 CC   0004            LDD #$0004
     81  6     6324 FD   620A            STD DK_piste
     82  2     6327 86   01              LDA #$01
     83  5     6329 B7   620F            STA DK_secteur
     84  3     632C CC   DF00            LDD #$DF00
     85  6     632F FD   622C            STD DK_dernier_bloc_a_ecrire
     86                            
     87        6332               LDPAGE_LOOP
     88  2     6332 C6   00              LDB #$00
     89  5     6334 F7   E7E5            STB $E7E5 * Selection de la page e>>
     90                            
     91  2     6337 86   01              LDA #$01
     92  5     6339 B7   620F            STA DK_secteur
     93  3     633C CC   A000            LDD #$A000
     94  6     633F FD   6213            STD DK_destination
     95  8     6342 BD   6205            JSR DK_lecture
     96                            
     97                                  * Duplication de la page p en p+1
     98                                  *********************************
     99        6345               CPPAGE_LOOP
    100  2     6345 C6   62              LDB #$62                       * O>>
    101  5     6347 F7   E7E6            STB $E7E6                      * e>>
    102
    103  3     634A CE   A000         LDU #$A000                     * Sour>>
    104  4     634D 108E 4040         LDY #$4000+64                  * Dest>>
    105  7     6351 10BF 6535            STY MEM_COPY_DATA_TO_CART_E+2
    106  4     6355 108E 2040         LDY #$2000+64                  * Dest>>
    107  8     6359 BD   644D         JSR MEM_COPY_DATA_TO_CART      * Copi>>
    108                            
    109  3     635C CE   C000         LDU #$C000                     * Sour>>
    110  4     635F 108E 2040         LDY #$2000+64                  * Dest>>
    111  7     6363 10BF 6535            STY MEM_COPY_DATA_TO_CART_E+2
    112  4     6367 108E 0040         LDY #$0000+64                  * Dest>>
    113  8     636B BD   644D         JSR MEM_COPY_DATA_TO_CART      * Copi>>
    114
    115        636E               PAGEINITNEXT
    116  3     636E 20   00           BRA PAGEINIT
    117
    118        6370               PAGEINIT
    119  2     6370 86   04              LDA #$04
    120  5     6372 B7   6333            STA LDPAGE_LOOP+1
    121  2     6375 86   65           LDA #$65
    122  5     6377 B7   6346         STA CPPAGE_LOOP+1
    123  2     637A 86   11           LDA #$11
    124  5     637C B7   636F            STA PAGEINITNEXT+1
    125  3     637F 20   B1           BRA LDPAGE_LOOP
    126
    127        6381               PAGENEXT
    128  7     6381 7C   6346         INC CPPAGE_LOOP+1
    129  7     6384 7C   6346            INC CPPAGE_LOOP+1
    130  7     6387 7C   6333            INC LDPAGE_LOOP+1
    131  7     638A 7C   6333            INC LDPAGE_LOOP+1
    132  5     638D F6   6333            LDB LDPAGE_LOOP+1
    133  2     6390 C1   16              CMPB #$16
    134  3     6392 23   9E              BLS LDPAGE_LOOP
    135
    136                           *****************************************>>
    137                           * Initialisation de la routine de commuta>>
    138                           *****************************************>>
    139        6394               INIT_VID
    140  5     6394 F6   6081            LDB $6081 * A documenter
    141  2     6397 CA   10              ORB #$10  * mettre le bit d4 a 1
    142  5     6399 F7   6081            STB $6081
    143  5     639C F7   E7E7            STB $E7E7
    144  8     639F BD   641D            JSR SCRC     * page 2 en RAM Carto>>
    145
    146                           *****************************************>>
    147                           * Initialisation de la palette de couleur>>
    148                           *****************************************>>
    149                           * Ecriture en $E7DB de l'adresse ou sera >>
    150                           *
    151                           * les adresses vont de deux en deux car i>>
    152                           * couleur: 0, adresse: 00
    153                           * couleur: 1, adresse: 02
    154                           * couleur: 2, adresse: 04
    155                           * ...
    156                           *
    157                           * Deux ecritures en $E7DA (auto-increment>>
    158                           *                          positionnee en>>
    159                           *
    160                           *                             V V V V    >>
    161                           * Premiere adresse        fondamentale V >>
    162                           *
    163                           * Deuxieme adresse            X X X M    >>
    164                           * auto-incrementee        bit de marquage>>
    165                           *
    166                           * Piste d'optim pour changer plus de coul>>
    167                           * ne changer que la moditie des donnees d>>
    168                           *****************************************>>
    169
    170  4     63A2 108E 65EB            LDY #TABPALETTE
    171  2     63A6 4F                   CLRA                        * regi>>
    172        63A7               SETPALETTE
    173  5+1   63A7 34   02              PSHS A                      * sauv>>
    174  2     63A9 48                   ASLA                        * mult>>
    175  5     63AA B7   E7DB            STA $E7DB                   * dete>>
    176  5+3   63AD EC   A1              LDD ,Y++                    * char>>
    177  5     63AF F7   E7DA            STB $E7DA                   * set >>
    178  5     63B2 B7   E7DA            STA $E7DA           * set de la co>>
    179  5+1   63B5 35   02              PULS A                      * rech>>
    180  2     63B7 4C                   INCA                        * et i>>
    181  5     63B8 108C 660B            CMPY #FINTABPALETTE * test fin de >>
    182  3     63BC 26   E9              BNE    SETPALETTE      * on rebouc>>
    183
    184                           *****************************************>>
    185                           * Initialisation des sprites
    186                           *****************************************>>
    187  3     63BE 8E   693B            LDX #HERO_IDLE_R
    188  6     63C1 BF   6969            STX HERO_ANIMATION_ADR_OLD
    189  8     63C4 BD   68B8            JSR HERO_ANIMATION_LOAD
    190
    191                           *****************************************>>
    192                           * Boucle principale
    193                           *****************************************>>
    194
    195                                  * Init routine effacement sprite
    196  8     63C7 BD   687F            JSR Compute_Position
    197  5     63CA F6   696D            LDB HERO_ANIMATION_PAG            >>
    198  5     63CD F7   696F            STB HERO_ANIMATION_PAG_DEL
    199  5     63D0 F7   E7E5            STB $E7E5                         >>
    200  7+3   63D3 AD   9F 6975         JSR [HERO_ANIMATION_DRW]          >>
    201  8     63D7 BD   641D            JSR SCRC
    202  3     63DA 20   0D              BRA MAIN_0
    203                            
    204        63DC               MAIN
    205                                  * Effacement et affichage des spri>>
    206  6     63DC FC   696F            LDD HERO_ANIMATION_PAG_DEL        >>
    207  5     63DF F7   696F            STB HERO_ANIMATION_PAG_DEL
    208  5     63E2 B7   E7E5            STA $E7E5                         >>
    209  7+3   63E5 AD   9F 6971         JSR [HERO_ANIMATION_DEL]          >>
    210        63E9               MAIN_0
    211  6     63E9 FC   6973            LDD HERO_ANIMATION_DEL+2          >>
    212  6     63EC FD   6971            STD HERO_ANIMATION_DEL
    213
    214                                  * Gestion des deplacements
    215  8     63EF BD   660B            JSR JOY_READ
    216  8     63F2 BD   662D            JSR Hero_Move
    217  8     63F5 BD   687F            JSR Compute_Position
    218  6     63F8 BE   6967            LDX HERO_ANIMATION_ADR
    219  7     63FB BC   6969            CMPX HERO_ANIMATION_ADR_OLD
    220  3     63FE 26   05              BNE MAIN_1
    221  8     6400 BD   692B            JSR HERO_ANIMATION_NEXT
    222  3     6403 20   06              BRA MAIN_2
    223        6405               MAIN_1
    224  6     6405 BF   6969            STX HERO_ANIMATION_ADR_OLD
    225  8     6408 BD   68B8            JSR HERO_ANIMATION_LOAD
    226        640B               MAIN_2
    227                            
    228  5     640B F6   696D            LDB HERO_ANIMATION_PAG            >>
    229  5     640E F7   6970            STB HERO_ANIMATION_PAG_DEL+1
    230  5     6411 F7   E7E5            STB $E7E5                         >>
    231  7+3   6414 AD   9F 6975         JSR [HERO_ANIMATION_DRW]          >>
    232                            
    233  8     6418 BD   641D            JSR SCRC                          >>
    234  3     641B 20   BF              BRA MAIN
    235
    236                           *****************************************>>
    237                           * Changement de page ESPACE ECRAN (affich>>
    238                           *      $E7DD determine la page affichee d>>
    239                           *      D7=0 D6=0 D5=0 D4=0 (#$0_) : page >>
    240                           *      D7=0 D6=1 D5=0 D4=0 (#$4_) : page >>
    241                           *      D7=1 D6=0 D5=0 D4=0 (#$8_) : page >>
    242                           *      D7=1 D6=1 D5=0 D4=0 (#$C_) : page >>
    243                           *   D3 D2 D1 D0  (#$_0 a #$_F) : couleur >>
    244                           *   Remarque : D5 et D4 utilisable unique>>
    245                           *
    246                           * Changement de page ESPACE CARTOUCHE (ec>>
    247                           *      $E7E6 determine la page affichee d>>
    248                           *   D5 : 1 = espace cartouche recouvert p>>
    249                           *   D4 : 0 = CAS1N valide : banques 0-15 >>
    250                           *      D5=1 D4=0 D3=0 D2=0 D1=0 D0=0 (#$6>>
    251                           *   ...
    252                           *      D5=1 D4=0 D3=1 D2=1 D1=1 D0=1 (#$6>>
    253                           *      D5=1 D4=1 D3=0 D2=0 D1=0 D0=0 (#$7>>
    254                           *   ...
    255                           *      D5=1 D4=1 D3=1 D2=1 D1=1 D0=1 (#$7>>
    256                           *****************************************>>
    257        641D               SCRC
    258  8     641D BD   6442            JSR VSYNC
    259
    260  5     6420 F6   6439            LDB SCRC0+1
    261  2     6423 C4   01              ANDB #$01
    262  5     6425 FB   696E            ADDB HERO_ANIMATION_PAG_REF
    263  5     6428 F7   696D            STB HERO_ANIMATION_PAG
    264                            
    265  5     642B F6   6439            LDB SCRC0+1   * charge la valeur d>>
    266  2     642E C4   80              ANDB #$80     * permute #$00 ou #$>>
    267  2     6430 CA   00              ORB #$00      * recharger la coule>>
    268  5     6432 F7   E7DD            STB $E7DD     * changement page da>>
    269  7     6435 73   6439            COM SCRC0+1   * modification du co>>
    270        6438               SCRC0
    271  2     6438 C6   00              LDB #$00
    272  2     643A C4   02              ANDB #$02     * permute #$60 ou #$>>
    273  2     643C CA   60              ORB #$60      * espace cartouche r>>
    274  5     643E F7   E7E6            STB $E7E6     * changement page da>>
    275  5     6441 39                   RTS                  * E7E6 D5=1 p>>
    276                                                       * CAS1N : ban>>
    277
    278                           *****************************************>>
    279                           * Attente VBL
    280                           *****************************************>>
    281        6442               VSYNC
    282        6442               VSYNC_1
    283  7     6442 7D   E7E7            TST    $E7E7
    284  3     6445 2A   FB              BPL    VSYNC_1
    285        6447               VSYNC_2
    286  7     6447 7D   E7E7            TST    $E7E7
    287  3     644A 2B   FB              BMI    VSYNC_2
    288  5     644C 39                   RTS
    289
    290                           *****************************************>>
    291                           * Copie Memoire de la zone donnee vers ca>>
    292                           * Cycles en fonction de l'implementation
    293                           * 256 octets (-128 a 127) x 64  boucles (>>
    294                           * 128 octets (-64  a 63)  x 128 boucles (>>
    295                           * 32  octets (-16  a 15)  x 512 boucles (>>
    296                           *****************************************>>
    297                            
    298        644D               MEM_COPY_DATA_TO_CART
    299  7     644D 10FF 653D        STS MEM_COPY_DATA_TO_CART_S+2  * sauve>>
    300  6     6451 1F   34          TFR U,S
    301        6453               MEM_COPY_DATA_TO_CART_LOOP
    302  5+6   6453 35   56          PULS       D,X,U
    303  5+1   6455 ED   A8 C0       STD -64,Y
    304  5+1   6458 AF   A8 C2       STX -62,Y
    305  5+1   645B EF   A8 C4       STU -60,Y
    306  5+6   645E 35   56          PULS       D,X,U
    307  5+1   6460 ED   A8 C6       STD -58,Y
    308  5+1   6463 AF   A8 C8       STX -56,Y
    309  5+1   6466 EF   A8 CA       STU -54,Y
    310  5+6   6469 35   56          PULS       D,X,U
    311  5+1   646B ED   A8 CC       STD -52,Y
    312  5+1   646E AF   A8 CE       STX -50,Y
    313  5+1   6471 EF   A8 D0       STU -48,Y
    314  5+6   6474 35   56          PULS       D,X,U
    315  5+1   6476 ED   A8 D2       STD -46,Y
    316  5+1   6479 AF   A8 D4       STX -44,Y
    317  5+1   647C EF   A8 D6       STU -42,Y
    318  5+6   647F 35   56          PULS       D,X,U
    319  5+1   6481 ED   A8 D8       STD -40,Y
    320  5+1   6484 AF   A8 DA       STX -38,Y
    321  5+1   6487 EF   A8 DC       STU -36,Y
    322  5+6   648A 35   56          PULS       D,X,U
    323  5+1   648C ED   A8 DE       STD -34,Y
    324  5+1   648F AF   A8 E0       STX -32,Y
    325  5+1   6492 EF   A8 E2       STU -30,Y
    326  5+6   6495 35   56          PULS       D,X,U
    327  5+1   6497 ED   A8 E4       STD -28,Y
    328  5+1   649A AF   A8 E6       STX -26,Y
    329  5+1   649D EF   A8 E8       STU -24,Y
    330  5+6   64A0 35   56          PULS       D,X,U
    331  5+1   64A2 ED   A8 EA       STD -22,Y
    332  5+1   64A5 AF   A8 EC       STX -20,Y
    333  5+1   64A8 EF   A8 EE       STU -18,Y
    334  5+6   64AB 35   56          PULS       D,X,U
    335  5+1   64AD ED   30          STD -16,Y
    336  5+1   64AF AF   32          STX -14,Y
    337  5+1   64B1 EF   34          STU -12,Y
    338  5+6   64B3 35   56          PULS       D,X,U
    339  5+1   64B5 ED   36          STD -10,Y
    340  5+1   64B7 AF   38          STX -8,Y
    341  5+1   64B9 EF   3A          STU -6,Y
    342  5+6   64BB 35   56          PULS       D,X,U
    343  5+1   64BD ED   3C          STD -4,Y
    344  5+1   64BF AF   3E          STX -2,Y
    345  5+0   64C1 EF   A4          STU ,Y
    346  5+6   64C3 35   56          PULS       D,X,U
    347  5+1   64C5 ED   22          STD 2,Y
    348  5+1   64C7 AF   24          STX 4,Y
    349  5+1   64C9 EF   26          STU 6,Y
    350  5+6   64CB 35   56          PULS       D,X,U
    351  5+1   64CD ED   28          STD 8,Y
    352  5+1   64CF AF   2A          STX 10,Y
    353  5+1   64D1 EF   2C          STU 12,Y
    354  5+6   64D3 35   56          PULS       D,X,U
    355  5+1   64D5 ED   2E          STD 14,Y
    356  5+1   64D7 AF   A8 10       STX 16,Y
    357  5+1   64DA EF   A8 12       STU 18,Y
    358  5+6   64DD 35   56          PULS       D,X,U
    359  5+1   64DF ED   A8 14       STD 20,Y
    360  5+1   64E2 AF   A8 16       STX 22,Y
    361  5+1   64E5 EF   A8 18       STU 24,Y
    362  5+6   64E8 35   56          PULS       D,X,U
    363  5+1   64EA ED   A8 1A       STD 26,Y
    364  5+1   64ED AF   A8 1C       STX 28,Y
    365  5+1   64F0 EF   A8 1E       STU 30,Y
    366  5+6   64F3 35   56          PULS       D,X,U
    367  5+1   64F5 ED   A8 20       STD 32,Y
    368  5+1   64F8 AF   A8 22       STX 34,Y
    369  5+1   64FB EF   A8 24       STU 36,Y
    370  5+6   64FE 35   56          PULS       D,X,U
    371  5+1   6500 ED   A8 26       STD 38,Y
    372  5+1   6503 AF   A8 28       STX 40,Y
    373  5+1   6506 EF   A8 2A       STU 42,Y
    374  5+6   6509 35   56          PULS       D,X,U
    375  5+1   650B ED   A8 2C       STD 44,Y
    376  5+1   650E AF   A8 2E       STX 46,Y
    377  5+1   6511 EF   A8 30       STU 48,Y
    378  5+6   6514 35   56          PULS       D,X,U
    379  5+1   6516 ED   A8 32       STD 50,Y
    380  5+1   6519 AF   A8 34       STX 52,Y
    381  5+1   651C EF   A8 36       STU 54,Y
    382  5+6   651F 35   56          PULS       D,X,U
    383  5+1   6521 ED   A8 38       STD 56,Y
    384  5+1   6524 AF   A8 3A       STX 58,Y
    385  5+1   6527 EF   A8 3C       STU 60,Y
    386  5+2   652A 35   06          PULS       D
    387  5+1   652C ED   A8 3E       STD 62,Y
    388  4+4   652F 31   A9 0080     LEAY 128,Y
    389        6533               MEM_COPY_DATA_TO_CART_E
    390  5     6533 108C 00C0        CMPY    #$00C0
    391  6     6537 1026 FF18        LBNE    MEM_COPY_DATA_TO_CART_LOOP
    392        653B               MEM_COPY_DATA_TO_CART_S
    393  4     653B 10CE 0000        LDS     #$0000    * Rechargement du po>>
    394  5     653F 39               RTS
    395
    396                           *****************************************>>
    397                           * Effacement memoire Cartouche (27000 cy)>>
    398                           *****************************************>>
    399        6540               CLR_CART
    400  5+3   6540 34   48           PSHS U,DP
    401  7     6542 10FF 6577         STS CLR_CART_3+2
    402  4     6546 10CE 4000         LDS #$4000
    403  3     654A CE   0C0C         LDU #$0C0C
    404  4     654D 108E 0C0C         LDY #$0C0C
    405  3     6551 8E   0C0C         LDX #$0C0C
    406  3     6554 CC   0C0C         LDD #$0C0C
    407  6     6557 1F   8B           TFR A,DP
    408        6559               CLR_CART_2
    409  5+9   6559 34   7E           PSHS U,Y,X,DP,B,A
    410  5+9   655B 34   7E           PSHS U,Y,X,DP,B,A
    411  5+9   655D 34   7E           PSHS U,Y,X,DP,B,A
    412  5+9   655F 34   7E           PSHS U,Y,X,DP,B,A
    413  5+9   6561 34   7E           PSHS U,Y,X,DP,B,A
    414  5+9   6563 34   7E           PSHS U,Y,X,DP,B,A
    415  5+9   6565 34   7E           PSHS U,Y,X,DP,B,A
    416  5+9   6567 34   7E           PSHS U,Y,X,DP,B,A
    417  5+9   6569 34   7E           PSHS U,Y,X,DP,B,A
    418  5+9   656B 34   7E           PSHS U,Y,X,DP,B,A
    419  5     656D 118C 0004         CMPS #$0004
    420  3     6571 26   E6           BNE CLR_CART_2
    421  5+4   6573 34   60           PSHS U,Y
    422        6575               CLR_CART_3
    423  4     6575 10CE 0000         LDS #$0000
    424  5+3   6579 35   48           PULS DP,U
    425  5     657B 39                RTS
    426                            
    427                           *****************************************>>
    428                           * Affichage de l arriere plan 57900 cycle>>
    429                           *****************************************>>
    430        657C               DRAW_RAM_DATA_TO_CART_160x200
    431  5+3   657C 34   48              PSHS U,DP            * sauvegarde >>
    432  7     657E 10FF 65E6            STS DRAW_RAM_DATA_TO_CART_160x200A>>
    433                            
    434  4     6582 10CE 1F40            LDS #FINECRANA       * init pointe>>
    435  3     6586 CE   A000            LDU #$A000
    436
    437        6589               DRAW_RAM_DATA_TO_CART_160x200A
    438  5+7   6589 37   3E              PULU A,B,DP,X,Y
    439  5+7   658B 34   3E              PSHS Y,X,DP,B,A
    440  5+7   658D 37   3E              PULU A,B,DP,X,Y
    441  5+7   658F 34   3E              PSHS Y,X,DP,B,A
    442  5+7   6591 37   3E              PULU A,B,DP,X,Y
    443  5+7   6593 34   3E              PSHS Y,X,DP,B,A
    444  5+7   6595 37   3E              PULU A,B,DP,X,Y
    445  5+7   6597 34   3E              PSHS Y,X,DP,B,A
    446  5+7   6599 37   3E              PULU A,B,DP,X,Y
    447  5+7   659B 34   3E              PSHS Y,X,DP,B,A
    448  5+7   659D 37   3E              PULU A,B,DP,X,Y
    449  5+7   659F 34   3E              PSHS Y,X,DP,B,A
    450  5     65A1 118C 0014            CMPS #DEBUTECRANA
    451  3     65A5 26   E2              BNE DRAW_RAM_DATA_TO_CART_160x200A>>
    452  5+7   65A7 37   3E              PULU A,B,DP,X,Y
    453  5+7   65A9 34   3E              PSHS Y,X,DP,B,A
    454  5+7   65AB 37   3E              PULU A,B,DP,X,Y
    455  5+7   65AD 34   3E              PSHS Y,X,DP,B,A
    456  5+6   65AF 37   3C              PULU B,DP,X,Y
    457  5+6   65B1 34   3C              PSHS Y,X,DP,B
    458
    459  4     65B3 10CE 3F40            LDS #FINECRANB       * init pointe>>
    460  3     65B7 CE   C000            LDU #$C000
    461
    462        65BA               DRAW_RAM_DATA_TO_CART_160x200B
    463  5+7   65BA 37   3E              PULU A,B,DP,X,Y
    464  5+7   65BC 34   3E              PSHS Y,X,DP,B,A
    465  5+7   65BE 37   3E              PULU A,B,DP,X,Y
    466  5+7   65C0 34   3E              PSHS Y,X,DP,B,A
    467  5+7   65C2 37   3E              PULU A,B,DP,X,Y
    468  5+7   65C4 34   3E              PSHS Y,X,DP,B,A
    469  5+7   65C6 37   3E              PULU A,B,DP,X,Y
    470  5+7   65C8 34   3E              PSHS Y,X,DP,B,A
    471  5+7   65CA 37   3E              PULU A,B,DP,X,Y
    472  5+7   65CC 34   3E              PSHS Y,X,DP,B,A
    473  5+7   65CE 37   3E              PULU A,B,DP,X,Y
    474  5+7   65D0 34   3E              PSHS Y,X,DP,B,A
    475  5     65D2 118C 2014            CMPS #DEBUTECRANB
    476  3     65D6 26   E2              BNE DRAW_RAM_DATA_TO_CART_160x200B>>
    477  5+7   65D8 37   3E              PULU A,B,DP,X,Y
    478  5+7   65DA 34   3E              PSHS Y,X,DP,B,A
    479  5+7   65DC 37   3E              PULU A,B,DP,X,Y
    480  5+7   65DE 34   3E              PSHS Y,X,DP,B,A
    481  5+6   65E0 37   3C              PULU B,DP,X,Y
    482  5+6   65E2 34   3C              PSHS Y,X,DP,B
    483        65E4               DRAW_RAM_DATA_TO_CART_160x200A_E
    484  4     65E4 10CE 0000            LDS  #$0000 * rechargement des reg>>
    485  5+3   65E8 35   48              PULS U,DP
    486  5     65EA 39                   RTS
    487
    488                           *****************************************>>
    489                           * Palette de 16 couleurs
    490                           *****************************************>>
    491        65EB               TABPALETTE
    492        65EB 0000                 FDB $0000     * index:1  R:0   V:0>>
    493        65ED 0004                 FDB $0004     * index:2  R:139 V:2>>
    494        65EF 047D                 FDB $047d     * index:3  R:236 V:1>>
    495        65F1 0028                 FDB $0028     * index:4  R:189 V:9>>
    496        65F3 006A                 FDB $006a     * index:5  R:206 V:1>>
    497        65F5 01A6                 FDB $01a6     * index:6  R:167 V:2>>
    498        65F7 0061                 FDB $0061     * index:7  R:75  V:1>>
    499        65F9 0020                 FDB $0020     * index:8  R:16  V:9>>
    500        65FB 0010                 FDB $0010     * index:9  R:0   V:4>>
    501        65FD 0220                 FDB $0220     * index:10 R:22  V:8>>
    502        65FF 0B82                 FDB $0b82     * index:11 R:103 V:1>>
    503        6601 0DDD                 FDB $0ddd     * index:12 R:239 V:2>>
    504        6603 0D30                 FDB $0d30     * index:13 R:9   V:1>>
    505        6605 0700                 FDB $0700     * index:14 R:12  V:3>>
    506        6607 0000                 FDB $0000     * index:15 R:53  V:7>>
    507        6609 000C                 FDB $000c     * index:16 R:225 V:0>>
    508        660B               FINTABPALETTE
    509
    510                           *****************************************>>
    511                           * Get joystick parameters
    512                           *****************************************>>
    513        660B               JOY_READ
    514  5     660B B6   662A            LDA    JOY_BTN_STATUS
    515  5     660E B7   662B            STA JOY_BTN_STATUS_OLD
    516  3     6611 8E   E7CF            ldx    #$e7cf
    517  4     6614 108E E7CD            ldy    #$e7cd
    518  3     6618 CC   400F            ldd    #$400f
    519  5     661B F4   E7CC            andb   >$e7cc     * Read position
    520  5     661E F7   6629            stb    JOY_DIR_STATUS
    521  4+0   6621 A4   A4              anda   ,y         * Read button
    522  2     6623 88   40              eora   #$40
    523  5     6625 B7   662A            sta    JOY_BTN_STATUS
    524  5     6628 39                   RTS
    525        6629               JOY_DIR_STATUS
    526        6629 00                   FCB $00 * Position Pad
    527        662A               JOY_BTN_STATUS
    528        662A 00                   FCB $00 * 40 Bouton A enfonce
    529        662B               JOY_BTN_STATUS_OLD
    530        662B 00                   FCB $00 * 40 Bouton A enfonce
    531        662C               HERO_ISJUMPING
    532        662C 00                   FCB $00       * flag is jumping $0>>
    533
    534                           *****************************************>>
    535                           * Subroutine to      make HERO walk/run
    536                           *****************************************>>
    537        662D               Hero_Move
    538                           * si bouton jump: Maj ysp Jump start & ch>>
    539  6     662D FC   662A            LDD JOY_BTN_STATUS
    540  5     6630 1083 4000            CMPD #$4000
    541  3     6634 26   2A              BNE Hero_alreadyJumping     * si s>>
    542  5     6636 F6   662C            LDB HERO_ISJUMPING
    543  3     6639 26   25              BNE Hero_alreadyJumping           >>
    544  7     663B 7C   662C            INC HERO_ISJUMPING          * set >>
    545  6     663E FC   695D            LDD HERO_G_SPEED            * char>>
    546  3     6641 2D   05              BLT Hero_JumpLeft      * si vitess>>
    547  3     6643 8E   693B            LDX #HERO_IDLE_R        * Charge a>>
    548  3     6646 20   03              BRA Hero_Jump
    549        6648               Hero_JumpLeft
    550  3     6648 8E   693B            LDX #HERO_IDLE_R        * Charge a>>
    551        664B               Hero_Jump
    552  6     664B BF   6967            STX HERO_ANIMATION_ADR      * Sauv>>
    553  6     664E FD   695F            STD HERO_X_SPEED            * Init>>
    554  6     6651 FC   6957            LDD HERO_AIR_JUMP_VEL       * Init>>
    555  6     6654 FD   6963            STD HERO_Y_SPEED
    556  3     6657 CC   0000            LDD #$0000
    557  6     665A FD   6961            STD HERO_X_SPS
    558  6     665D FD   6965            STD HERO_Y_SPS
    559
    560        6660               Hero_alreadyJumping
    561                           * Maj xsp en fonction de G ou D joystick
    562  5     6660 F6   662C            LDB HERO_ISJUMPING
    563  6     6663 1027 0089            LBEQ Hero_OnGround          * si u>>
    564  5     6667 B6   6629            LDA JOY_DIR_STATUS
    565  2     666A 81   07              CMPA #JOY_D
    566  3     666C 27   09              BEQ Hero_JumpAccelD
    567  2     666E 81   0B              CMPA #JOY_G
    568  3     6670 27   0D              BEQ Hero_JumpAccelG
    569  6     6672 FC   695F            LDD HERO_X_SPEED
    570  3     6675 20   0E              BRA Hero_JumpCapTopXSpeed
    571        6677               Hero_JumpAccelD
    572  6     6677 FC   695F            LDD HERO_X_SPEED
    573  7     667A F3   6951            ADDD HERO_AIR_X_ACCELERATION
    574  3     667D 20   06              BRA Hero_JumpCapTopXSpeed
    575        667F               Hero_JumpAccelG
    576  6     667F FC   695F            LDD HERO_X_SPEED
    577  7     6682 B3   6951            SUBD HERO_AIR_X_ACCELERATION
    578
    579        6685               Hero_JumpCapTopXSpeed
    580                           * Top xsp
    581  8     6685 10B3 6945            CMPD HERO_X_TOP_SPEED
    582  3     6689 2F   03              BLE Hero_JumpAirDrag
    583  6     668B FC   6945            LDD HERO_X_TOP_SPEED
    584                            
    585        668E               Hero_JumpAirDrag
    586                           * Maj xsp Air drag
    587  6     668E FD   695F            STD HERO_X_SPEED
    588  6     6691 FC   6963            LDD HERO_Y_SPEED     * si ysp (ysp>>
    589  3     6694 2C   36              BGE Hero_JumpCut
    590  5     6696 1083 FC00            CMPD #$FC00
    591  3     669A 2F   30              BLE Hero_JumpCut
    592  6     669C FC   695F            LDD HERO_X_SPEED
    593  3     669F 2C   0D              BGE Hero_JumpAirDragPositive
    594  2     66A1 C6   C3              LDB #$C3                          >>
    595  5     66A3 F7   66C6            STB Hero_AirDragSUB
    596  3     66A6 CC   0000            LDD #$0000
    597  7     66A9 B3   695F            SUBD HERO_X_SPEED
    598  3     66AC 20   08              BRA Hero_JumpAirDragCommon
    599        66AE               Hero_JumpAirDragPositive
    600  2     66AE C6   83              LDB #$83                          >>
    601  5     66B0 F7   66C6            STB Hero_AirDragSUB
    602  6     66B3 FC   695F            LDD HERO_X_SPEED
    603        66B6               Hero_JumpAirDragCommon
    604  2     66B6 44                   LSRA   * Division par 32 du regist>>
    605  2     66B7 56                   RORB
    606  2     66B8 44                   LSRA
    607  2     66B9 56                   RORB
    608  2     66BA 44                   LSRA
    609  2     66BB 56                   RORB
    610  2     66BC 44                   LSRA
    611  2     66BD 56                   RORB
    612  2     66BE 44                   LSRA
    613  2     66BF 56                   RORB
    614  5     66C0 F7   66C8            STB Hero_AirDragSUB+2       * STB >>
    615  6     66C3 FC   695F            LDD HERO_X_SPEED
    616        66C6               Hero_AirDragSUB
    617  4     66C6 83   0000            SUBD #$0000
    618  6     66C9 FD   695F            STD HERO_X_SPEED
    619
    620        66CC               Hero_JumpCut
    621                           * Maj ysp Jump cut
    622  6     66CC FC   6963            LDD HERO_Y_SPEED
    623  7     66CF 7D   662A            TST JOY_BTN_STATUS   * si le bouto>>
    624  3     66D2 26   09              BNE Hero_JumpGravity
    625  8     66D4 10B3 6959            CMPD HERO_AIR_JUMP_CUT      * et s>>
    626  3     66D8 2C   03              BGE Hero_JumpGravity
    627  6     66DA FC   6959            LDD HERO_AIR_JUMP_CUT       * ysp >>
    628
    629        66DD               Hero_JumpGravity
    630                           * Maj ysp with gravity
    631  7     66DD F3   6953            ADDD HERO_AIR_Y_GRAVITY     * ajou>>
    632
    633        66E0               Hero_JumpCapTopYSpeed
    634                           * Top ysp
    635  8     66E0 10B3 6949            CMPD HERO_Y_TOP_SPEED       * si l>>
    636  3     66E4 2F   03              BLE Hero_JumpPosUpdate
    637  6     66E6 FC   6949            LDD HERO_Y_TOP_SPEED * on repositi>>
    638
    639        66E9               Hero_JumpPosUpdate
    640  6     66E9 FD   6963            STD HERO_Y_SPEED
    641                            
    642                           * Maj X et Y pos
    643  8     66EC BD   67F5            JSR Hero_MoveUpdatePosJump
    644  5     66EF 39                   RTS
    645
    646                           * Gestion a Terre
    647                           ********************************
    648
    649        66F0               Hero_OnGround
    650  5     66F0 B6   6629            LDA JOY_DIR_STATUS
    651  2     66F3 81   0B              CMPA #JOY_G
    652  3     66F5 26   02              BNE Hero_NotLeft
    653  3     66F7 20   71              BRA Hero_MoveLeft
    654
    655        66F9               Hero_NotLeft                   * XREF: He>>
    656  2     66F9 81   07              CMPA #JOY_D
    657  3     66FB 26   03              BNE Hero_NotLeftOrRight
    658  5     66FD 16   00AE            LBRA Hero_MoveRight
    659
    660        6700               Hero_NotLeftOrRight            * XREF: He>>
    661  6     6700 FC   695D            LDD HERO_G_SPEED
    662  5     6703 1083 0000            CMPD #$0000
    663  6     6707 1027 00E1            LBEQ Hero_MoveUpdatePos  * Si la v>>
    664  3     670B 2D   32              BLT Hero_NotLeftOrRight_00 * se de>>
    665  7     670D B3   694F            SUBD HERO_FRICTION     * se deplac>>
    666  5     6710 1083 0000            CMPD #$0000
    667  3     6714 2E   12              BGT Hero_NotLeftOrRight_01 * si on>>
    668  3     6716 CC   0000            LDD #$0000
    669  6     6719 FD   695D            STD HERO_G_SPEED
    670  6     671C FD   6961            STD HERO_X_SPS
    671  3     671F 8E   693B            LDX #HERO_IDLE_R        * Charge a>>
    672  6     6722 BF   6967            STX HERO_ANIMATION_ADR      * Sauv>>
    673
    674  5     6725 16   00C4            LBRA Hero_MoveUpdatePos
    675        6728               Hero_NotLeftOrRight_01
    676  5     6728 1083 0600            CMPD #HERO_JOG_SPD_LIMIT
    677  3     672C 2C   0B              BGE Hero_NotLeftOrRight_02
    678  6     672E FD   695D            STD HERO_G_SPEED
    679  3     6731 8E   693B            LDX #HERO_IDLE_R        * Charge a>>
    680  6     6734 BF   6967            STX HERO_ANIMATION_ADR      * Sauv>>
    681
    682  3     6737 20   03              BRA Hero_NotLeftOrRight_03
    683        6739               Hero_NotLeftOrRight_02
    684  6     6739 FD   695D            STD HERO_G_SPEED
    685        673C               Hero_NotLeftOrRight_03
    686  5     673C 16   00AD            LBRA Hero_MoveUpdatePos
    687        673F               Hero_NotLeftOrRight_00
    688  7     673F F3   694F            ADDD HERO_FRICTION     * se deplac>>
    689  3     6742 24   0F              BCC Hero_NotLeftOrRight_11 * si on>>
    690  3     6744 CC   0000            LDD #$0000
    691  6     6747 FD   695D            STD HERO_G_SPEED
    692  3     674A 8E   693B            LDX #HERO_IDLE_R        * Charge a>>
    693  6     674D BF   6967            STX HERO_ANIMATION_ADR      * Sauv>>
    694
    695  5     6750 16   0099            LBRA Hero_MoveUpdatePos
    696        6753               Hero_NotLeftOrRight_11
    697  5     6753 1083 FA00            CMPD #HERO_JOG_NEG_SPD_LIMIT
    698  3     6757 2F   0B              BLE Hero_NotLeftOrRight_12
    699  6     6759 FD   695D            STD HERO_G_SPEED
    700  3     675C 8E   693B            LDX #HERO_IDLE_R        * Charge a>>
    701  6     675F BF   6967            STX HERO_ANIMATION_ADR      * Sauv>>
    702
    703  3     6762 20   03              BRA Hero_NotLeftOrRight_13
    704        6764               Hero_NotLeftOrRight_12
    705  6     6764 FD   695D            STD HERO_G_SPEED
    706        6767               Hero_NotLeftOrRight_13
    707  5     6767 16   0082            LBRA Hero_MoveUpdatePos
    708
    709        676A               Hero_MoveLeft                      * XREF>>
    710  6     676A FC   695D            LDD HERO_G_SPEED            * Char>>
    711  5     676D 1083 0000            CMPD #$0000                 * Test>>
    712  3     6771 2F   11              BLE Hero_MoveLeft_00        * BRAN>>
    713  7     6773 B3   694D            SUBD HERO_DECELERATION      * orie>>
    714  3     6776 24   06              BCC Hero_MoveLeft_03        * BRAN>>
    715  3     6778 CC   0000            LDD #$0000
    716  7     677B B3   694D            SUBD HERO_DECELERATION      * si l>>
    717        677E               Hero_MoveLeft_03
    718  6     677E FD   695D            STD HERO_G_SPEED            * On s>>
    719  5     6781 16   0068            LBRA Hero_MoveUpdatePos           >>
    720        6784               Hero_MoveLeft_00                         >>
    721  8     6784 10B3 6947            CMPD HERO_X_NEG_TOP_SPEED   * Comp>>
    722  3     6788 27   62              BEQ Hero_MoveUpdatePos      * vite>>
    723  7     678A B3   694B            SUBD HERO_ACCELERATION      * acce>>
    724  8     678D 10B3 6947            CMPD HERO_X_NEG_TOP_SPEED   * Comp>>
    725  3     6791 2E   0F              BGT Hero_MoveLeft_01        * BRAN>>
    726  3     6793 8E   693B            LDX #HERO_IDLE_R        * Charge a>>
    727  6     6796 BF   6967            STX HERO_ANIMATION_ADR      * Sauv>>
    728
    729  6     6799 FC   6947            LDD HERO_X_NEG_TOP_SPEED    * Limi>>
    730  6     679C FD   695D            STD HERO_G_SPEED            * Enre>>
    731  5     679F 16   004A            LBRA Hero_MoveUpdatePos     * Mise>>
    732        67A2               Hero_MoveLeft_01
    733  6     67A2 FD   695D            STD HERO_G_SPEED            * Enre>>
    734  3     67A5 8E   693B            LDX #HERO_IDLE_R        * Charge a>>
    735  6     67A8 BF   6967            STX HERO_ANIMATION_ADR      * Sauv>>
    736
    737  5     67AB 16   003E            LBRA Hero_MoveUpdatePos
    738
    739        67AE               Hero_MoveRight                  * XREF: H>>
    740  6     67AE FC   695D            LDD HERO_G_SPEED        * Chargeme>>
    741  5     67B1 1083 0000            CMPD #$0000                 * Test>>
    742  3     67B5 2C   0E              BGE Hero_MoveRight_00       * BRAN>>
    743  7     67B7 F3   694D            ADDD HERO_DECELERATION      * orie>>
    744  3     67BA 24   03              BCC Hero_MoveRight_03       * BRAN>>
    745  6     67BC FC   694D            LDD HERO_DECELERATION   * si la vi>>
    746        67BF               Hero_MoveRight_03
    747  6     67BF FD   695D            STD HERO_G_SPEED        * On stock>>
    748  5     67C2 16   0027            LBRA Hero_MoveUpdatePos           >>
    749        67C5               Hero_MoveRight_00                  * Orie>>
    750  8     67C5 10B3 6945            CMPD HERO_X_TOP_SPEED             >>
    751  3     67C9 27   21              BEQ Hero_MoveUpdatePos      * vite>>
    752  7     67CB F3   694B            ADDD HERO_ACCELERATION      * acce>>
    753  8     67CE 10B3 6945            CMPD HERO_X_TOP_SPEED             >>
    754  3     67D2 2D   0F              BLT Hero_MoveRight_01       * BRAN>>
    755  3     67D4 8E   693B            LDX #HERO_IDLE_R                  >>
    756  6     67D7 BF   6967            STX HERO_ANIMATION_ADR      * Sauv>>
    757
    758  6     67DA FC   6945            LDD HERO_X_TOP_SPEED        * Limi>>
    759  6     67DD FD   695D            STD HERO_G_SPEED            * Enre>>
    760  5     67E0 16   0009            LBRA Hero_MoveUpdatePos           >>
    761        67E3               Hero_MoveRight_01
    762  6     67E3 FD   695D            STD HERO_G_SPEED                  >>
    763  3     67E6 8E   693B            LDX #HERO_IDLE_R                  >>
    764  6     67E9 BF   6967            STX HERO_ANIMATION_ADR            >>
    765
    766                           *****************************************>>
    767                           * Mise a jour de la vitesse X et Y a part>>
    768                           *****************************************>>
    769
    770        67EC               Hero_MoveUpdatePos
    771  6     67EC FC   695D            LDD HERO_G_SPEED                  >>
    772                           * TODO MAJ HERO_X_SPEED : xsp = gsp*cos(a>>
    773                           * TODO MAJ HERO_Y_SPEED : ysp = gsp*-sin(>>
    774  6     67EF FD   695F            STD HERO_X_SPEED
    775  7     67F2 7F   6963            CLR HERO_Y_SPEED
    776
    777                           *****************************************>>
    778                           * Mise a jour de la position X et Y a par>>
    779                           *****************************************>>
    780
    781                           * Coordonnees X
    782                           ***************
    783
    784        67F5               Hero_MoveUpdatePosJump
    785  6     67F5 FC   695F            LDD HERO_X_SPEED
    786  3     67F8 2C   0D              BGE Hero_MoveUpdateXPos_00        >>
    787  2     67FA 86   C0              LDA #$C0                          >>
    788  5     67FC B7   6824            STA Hero_MoveUpdateXPos_00C       >>
    789  3     67FF CC   0000            LDD #$0000
    790  7     6802 B3   695F            SUBD HERO_X_SPEED                 >>
    791  3     6805 20   08              BRA Hero_MoveUpdateXPos_00A
    792        6807               Hero_MoveUpdateXPos_00
    793  2     6807 86   CB              LDA #$CB                          >>
    794  5     6809 B7   6824            STA Hero_MoveUpdateXPos_00C       >>
    795  6     680C FC   695F            LDD HERO_X_SPEED
    796        680F               Hero_MoveUpdateXPos_00A
    797  7     680F F3   6961            ADDD HERO_X_SPS                   >>
    798  5     6812 B7   681B            STA Hero_MoveUpdateXPos_00B+1     >>
    799  2     6815 84   03              ANDA #$03                         >>
    800  6     6817 FD   6961            STD HERO_X_SPS                    >>
    801        681A               Hero_MoveUpdateXPos_00B
    802  2     681A C6   00              LDB #$00                          >>
    803  2     681C 54                   LSRB                              >>
    804  2     681D 54                   LSRB                              >>
    805  5     681E F7   6825            STB Hero_MoveUpdateXPos_00C+1     >>
    806  5     6821 F6   695B            LDB HERO_X_POS
    807        6824               Hero_MoveUpdateXPos_00C
    808  2     6824 CB   00              ADDB #$00                         >>
    809        6826               Hero_MoveUpdateXPos_01
    810  2     6826 C1   50              CMPB #$50                         >>
    811  3     6828 2F   02              BLE Hero_MoveUpdateXPos_02  * Bute>>
    812  2     682A C6   50              LDB #$50                          >>
    813        682C               Hero_MoveUpdateXPos_02
    814  2     682C C1   0C           CMPB #$0C                            >>
    815  3     682E 2C   02              BGE Hero_MoveUpdateXPos_03  * Bute>>
    816  2     6830 C6   0C              LDB #$0C                          >>
    817        6832               Hero_MoveUpdateXPos_03
    818  5     6832 F7   695B            STB HERO_X_POS
    819
    820                           * Coordonnees Y
    821                           ***************
    822
    823  6     6835 FC   6963            LDD HERO_Y_SPEED                  >>
    824  3     6838 2C   0D              BGE Hero_MoveUpdateYPos_00        >>
    825  2     683A 86   C0              LDA #$C0                          >>
    826  5     683C B7   685B            STA Hero_MoveUpdateYPos_00C       >>
    827  3     683F CC   0000            LDD #$0000
    828  7     6842 B3   6963            SUBD HERO_Y_SPEED                 >>
    829  3     6845 20   08              BRA Hero_MoveUpdateYPos_00A
    830        6847               Hero_MoveUpdateYPos_00
    831  2     6847 86   CB              LDA #$CB                          >>
    832  5     6849 B7   685B            STA Hero_MoveUpdateYPos_00C       >>
    833  6     684C FC   6963            LDD HERO_Y_SPEED
    834        684F               Hero_MoveUpdateYPos_00A
    835  7     684F F3   6965            ADDD HERO_Y_SPS                   >>
    836  5     6852 F7   6966            STB HERO_Y_SPS+1                  >>
    837  5     6855 B7   685C            STA Hero_MoveUpdateYPos_00C+1     >>
    838  5     6858 F6   695C            LDB HERO_Y_POS
    839        685B               Hero_MoveUpdateYPos_00C
    840  2     685B CB   00              ADDB #$00                         >>
    841        685D               Hero_MoveUpdateYPos_01
    842  2     685D C1   A2              CMPB #$A2                         >>
    843  3     685F 23   1A              BLS Hero_MoveUpdateYPos_03        >>
    844  2     6861 C6   A2              LDB #$A2                          >>
    845  7     6863 7D   662C            TST HERO_ISJUMPING
    846  3     6866 27   13              BEQ Hero_MoveUpdateYPos_03  * pas >>
    847  5     6868 F7   695C            STB HERO_Y_POS
    848                           * si retombe au sol on repositionne anima>>
    849  7     686B 7F   662C            CLR HERO_ISJUMPING
    850  6     686E FC   695F            LDD HERO_X_SPEED
    851  6     6871 FD   695D            STD HERO_G_SPEED
    852  3     6874 8E   693B            LDX #HERO_IDLE_R                  >>
    853  6     6877 BF   6967            STX HERO_ANIMATION_ADR            >>
    854  5     687A 39                   RTS
    855        687B               Hero_MoveUpdateYPos_03
    856  5     687B F7   695C            STB HERO_Y_POS
    857  5     687E 39                   RTS
    858
    859                           * TODO : Braking Animation
    860                           * Sonic enters his braking animation when>>
    861                           * In Sonic 1 and Sonic CD, he then stays >>
    862                           * In the other 3 games, Sonic returns to >>
    863
    864        687F               Compute_Position
    865  5     687F B6   695B            LDA HERO_X_POS
    866  2     6882 44                   LSRA
    867  3     6883 25   17              BCS Compute_Position_01
    868  5     6885 B7   68B7            STA Compute_Position_02+1
    869  2     6888 86   28              LDA #$28
    870  5     688A F6   695C            LDB HERO_Y_POS
    871  2     688D 5A                   DECB
    872  11    688E 3D                   MUL
    873  7     688F F3   68B6            ADDD Compute_Position_02
    874  6     6892 FD   9F00            STD HERO_POS
    875  4     6895 C3   2000            ADDD #$2000                       >>
    876  6     6898 FD   9F02            STD HERO_POS+2
    877  5     689B 39                   RTS
    878        689C               Compute_Position_01
    879  5     689C B7   68B7            STA Compute_Position_02+1
    880  2     689F 86   28              LDA #$28
    881  5     68A1 F6   695C            LDB HERO_Y_POS
    882  2     68A4 5A                   DECB
    883  11    68A5 3D                   MUL
    884  7     68A6 F3   68B6            ADDD Compute_Position_02
    885  4     68A9 C3   2000            ADDD #$2000
    886  6     68AC FD   9F00            STD HERO_POS
    887  4     68AF 83   1FFF            SUBD #$1FFF
    888  6     68B2 FD   9F02            STD HERO_POS+2
    889  5     68B5 39                   RTS
    890        68B6               Compute_Position_02
    891        68B6 0000                 FDB $0000
    892
    893                           *****************************************>>
    894                           * HERO Animations nb Cycles
    895                           * -------------------------
    896                           * Note: Speed abs +0, rel +8, rel cap +10>>
    897                           *
    898                           * Chargement nouvelle animation
    899                           *    nouvelle frame = 109 a 119
    900                           *
    901                           * Chargement frame suivante
    902                           *    frame identique = 15
    903                           * ou frame suivante  = 116 a 126
    904                           *
    905                           * Chargement frame suivante avec branchem>>
    906                           *    nouvelle frame = 165 a 175
    907                           * ou frame suivante = 172 a 182
    908                           *
    909                           * Chargement frame suivante avec retour s>>
    910                           *    nouvelle frame = 167 a 177
    911                           * ou frame suivante = 174 a 184
    912                           *****************************************>>
    913
    914        68B8               HERO_ANIMATION_LOAD                      >>
    915  6     68B8 BF   6967            STX HERO_ANIMATION_ADR
    916  6     68BB BF   696B            STX HERO_ANIMATION_RTN_ADR
    917  7     68BE 7F   6977            CLR HERO_ANIMATION_IMC            >>
    918        68C1               HERO_ANIMATION_LOAD_00
    919  5+1   68C1 EC   1E              LDD -2,X                          >>
    920  2     68C3 81   00              CMPA #$00                         >>
    921  3     68C5 27   16              BEQ HERO_ANIMATION_LOAD_01
    922  5     68C7 B6   695D            LDA HERO_G_SPEED              * G_>>
    923  3     68CA 2C   08              BGE HERO_ANIMATION_LOAD_01A
    924  3     68CC CC   0000            LDD #$0000
    925  7     68CF B3   695D            SUBD HERO_G_SPEED                 >>
    926  4+1   68D2 E6   1F              LDB -1,X                          >>
    927        68D4               HERO_ANIMATION_LOAD_01A
    928  5     68D4 B7   68D8            STA HERO_ANIMATION_LOAD_01B+1 * Au>>
    929        68D7               HERO_ANIMATION_LOAD_01B
    930  2     68D7 C0   00              SUBB #$00                         >>
    931  3     68D9 24   02              BCC HERO_ANIMATION_LOAD_01
    932  2     68DB C6   01              LDB #$01                          >>
    933                            
    934        68DD               HERO_ANIMATION_LOAD_01
    935  5     68DD F7   6979            STB HERO_ANIMATION_FRR            >>
    936  5     68E0 B6   6977            LDA HERO_ANIMATION_IMC
    937  2     68E3 C6   05              LDB #$05
    938  11    68E5 3D                   MUL
    939  7     68E6 F3   6967            ADDD HERO_ANIMATION_ADR
    940  6     68E9 1F   02              TFR D,Y
    941  4+0   68EB E6   A4              LDB ,Y
    942  2     68ED C1   1F              CMPB #$1F                         >>
    943  3     68EF 22   1C              BHI HERO_ANIMATION_LOAD_NOPAGE
    944  5     68F1 B6   696D            LDA HERO_ANIMATION_PAG
    945  5     68F4 F7   696D            STB HERO_ANIMATION_PAG
    946  5     68F7 B1   696E            CMPA HERO_ANIMATION_PAG_REF
    947  3     68FA 27   03              BEQ HERO_ANIMATION_LOAD_02
    948  7     68FC 7C   696D            INC HERO_ANIMATION_PAG        * si>>
    949        68FF               HERO_ANIMATION_LOAD_02
    950  5     68FF F7   696E            STB HERO_ANIMATION_PAG_REF    * on>>
    951  5+1   6902 AE   21              LDX 1,Y
    952  6     6904 BF   6975            STX HERO_ANIMATION_DRW
    953  5+1   6907 AE   23              LDX 3,Y
    954  6     6909 BF   6973            STX HERO_ANIMATION_DEL+2
    955  5     690C 39                   RTS
    956        690D               HERO_ANIMATION_LOAD_NOPAGE
    957  2     690D C1   FF              CMPB #$FF
    958  3     690F 26   0C              BNE HERO_ANIMATION_LOAD_FE
    959  5+1   6911 AE   23              LDX 3,Y
    960  6     6913 BF   6977            STX HERO_ANIMATION_IMC            >>
    961  5+1   6916 AE   21              LDX 1,Y
    962  6     6918 BF   6967            STX HERO_ANIMATION_ADR
    963  3     691B 20   A4              BRA HERO_ANIMATION_LOAD_00  * Outp>>
    964        691D               HERO_ANIMATION_LOAD_FE
    965  6     691D BE   696B            LDX HERO_ANIMATION_RTN_ADR  * RETU>>
    966  6     6920 BF   6967            STX HERO_ANIMATION_ADR
    967  5     6923 F6   6978            LDB HERO_ANIMATION_RTN_IMC
    968  5     6926 F7   6977            STB HERO_ANIMATION_IMC
    969  3     6929 20   96              BRA HERO_ANIMATION_LOAD_00  * Outp>>
    970
    971        692B               HERO_ANIMATION_NEXT
    972  7     692B 7A   6979            DEC HERO_ANIMATION_FRR
    973  3     692E 2F   01              BLE HERO_ANIMATION_NEXT_00  * BRAN>>
    974  5     6930 39                   RTS
    975        6931               HERO_ANIMATION_NEXT_00
    976  7     6931 7C   6977            INC HERO_ANIMATION_IMC
    977  6     6934 BE   6967            LDX HERO_ANIMATION_ADR
    978  3     6937 20   88              BRA HERO_ANIMATION_LOAD_00  * Outp>>
    979                            
    980                           *   SAMPLE CODE ANIMATION
    981                           *      ---------------------
    982                           *      FDB $0018            * 00 Absolute>>
    983                           *HERO_IDLE_L
    984                           *      FCB $01                     * Page>>
    985                           *      FDB $A000            * Adresse drw>>
    986                           *      FDB $A000            * Adresse del>>
    987                           *
    988                           *      FCB $FF                     * FF S>>
    989                           *      FDB HERO_IDLE-C * adresse animatio>>
    990                           *      FDB $0301            * 03 image ci>>
    991                           *
    992                           *      FCB $FE                     * FE R>>
    993                           *
    994                           *      LDX #HERO_IDLE_R
    995                           *      JSR HERO_ANIMATION_LOAD
    996                           *
    997                           *      JSR HERO_ANIMATION_NEXT
    998
    999                           *****************************************>>
   1000                           * ANIMATION Scripts
   1001                           *****************************************>>
   1002
   1003
   1004
   1005        6939 0018                 FDB $0018
   1006        693B               HERO_IDLE_R
   1007        693B 04                   FCB $04
   1008        693C A000                 FDB $A000
   1009        693E CADB                 FDB $CADB
   1010        6940 FF                   FCB $FF
   1011        6941 693B                 FDB HERO_IDLE_R
   1012        6943 0000                 FDB $0000
   1013                            
   1014                           *****************************************>>
   1015                           * HERO Variables
   1016                           *****************************************>>
   1017
   1018        6945               HERO_X_TOP_SPEED
   1019        6945 0600                 FDB $0600        * 0600 vitesse X >>
   1020        6947               HERO_X_NEG_TOP_SPEED
   1021        6947 FA00                 FDB $FA00        * FA00 vitesse X >>
   1022        6949               HERO_Y_TOP_SPEED
   1023        6949 1000                 FDB $1000        * 0010 vitesse Y >>
   1024        694B               HERO_ACCELERATION
   1025        694B 000C                 FDB $000C        * 000C constante >>
   1026        694D               HERO_DECELERATION
   1027        694D 0080                 FDB $0080        * 0080 constante >>
   1028        694F               HERO_FRICTION
   1029        694F 000C                 FDB $000C        * 000C constante >>
   1030        6951               HERO_AIR_X_ACCELERATION
   1031        6951 0018                 FDB $0018        * 0018 constate a>>
   1032        6953               HERO_AIR_Y_GRAVITY
   1033        6953 0038                 FDB $0038        * 0038 constante >>
   1034        6955               HERO_AIR_X_DRAG
   1035        6955 00F8                 FDB $00F8        * 00F8 constante >>
   1036        6957               HERO_AIR_JUMP_VEL
   1037        6957 F980                 FDB $F980             * F980 const>>
   1038        6959               HERO_AIR_JUMP_CUT
   1039        6959 FC00                 FDB $FC00             * FC constan>>
   1040                            
   1041                           *HERO_WALK_SPD_LIMIT EQU $0400           >>
   1042                           *HERO_WALK_NEG_SPD_LIMIT EQU $FC00  * FC0>>
   1043                  0600     HERO_JOG_SPD_LIMIT EQU $0600        * 060>>
   1044                  FA00     HERO_JOG_NEG_SPD_LIMIT EQU $FA00    * FA0>>
   1045
   1046        695B               HERO_X_POS
   1047        695B 18                   FCB $18                     * Hori>>
   1048        695C               HERO_Y_POS
   1049        695C A2                   FCB $A2                     * Vert>>
   1050        695D               HERO_G_SPEED
   1051        695D 0000                 FDB $0000            * Ground Spee>>
   1052        695F               HERO_X_SPEED
   1053        695F 0000                 FDB $0000            * Horizontal >>
   1054        6961               HERO_X_SPS
   1055        6961 0000                 FDB $0000            * Subpixel X >>
   1056        6963               HERO_Y_SPEED
   1057        6963 0000                 FDB $0000            * Vertical Sp>>
   1058        6965               HERO_Y_SPS
   1059        6965 0000                 FDB $0000            * Subpixel Y >>
   1060                            
   1061        6967               HERO_ANIMATION_ADR
   1062        6967 0000                 FDB $0000        * Animation coura>>
   1063        6969               HERO_ANIMATION_ADR_OLD
   1064        6969 0000                 FDB $0000        * Sauvegarde anci>>
   1065        696B               HERO_ANIMATION_RTN_ADR
   1066        696B 0000                 FDB $0000        * Animation coura>>
   1067        696D               HERO_ANIMATION_PAG
   1068        696D 00                   FCB $00          * Animation coura>>
   1069        696E               HERO_ANIMATION_PAG_REF
   1070        696E 00                   FCB $00          * Animation coura>>
   1071        696F               HERO_ANIMATION_PAG_DEL
   1072        696F 00                   FCB $00        * Animation courant>>
   1073        6970 00                   FCB $00        * Animation courant>>
   1074        6971               HERO_ANIMATION_DEL
   1075        6971 0000                 FDB $0000        * Animation coura>>
   1076        6973 0000                 FDB $0000        * Animation coura>>
   1077        6975               HERO_ANIMATION_DRW
   1078        6975 0000                 FDB $0000        * Animation coura>>
   1079        6977               HERO_ANIMATION_IMC
   1080        6977 00                   FCB $00          * Animation coura>>
   1081        6978               HERO_ANIMATION_RTN_IMC
   1082        6978 00                   FCB $00          * Animation coura>>
   1083        6979               HERO_ANIMATION_FRR
   1084        6979 00                   FCB $00          * Animation coura>>

000000 Total Errors

000148 Total Symbols
     0x          Label 6300 BEGIN
     0x          Label 6540 CLR_CART
     1x          Label 6559 CLR_CART_2
     1x          Label 6575 CLR_CART_3
     2x          Label 687F Compute_Position
     1x          Label 689C Compute_Position_01
     4x          Label 68B6 Compute_Position_02
     3x          Label 6345 CPPAGE_LOOP
     1x          Equ   0014 DEBUTECRANA
     1x          Equ   2014 DEBUTECRANB
     1x          Equ   622C DK_dernier_bloc_a_ecrire
     1x          Equ   6213 DK_destination
     1x          Equ   6205 DK_lecture
     1x          Equ   620A DK_piste
     2x          Equ   620F DK_secteur
     0x          Label 657C DRAW_RAM_DATA_TO_CART_160x200
     1x          Label 6589 DRAW_RAM_DATA_TO_CART_160x200A
     1x          Label 65E4 DRAW_RAM_DATA_TO_CART_160x200A_E
     1x          Label 65BA DRAW_RAM_DATA_TO_CART_160x200B
     1x          Equ   1F40 FINECRANA
     1x          Equ   3F40 FINECRANB
     1x          Label 660B FINTABPALETTE
     2x          Label 694B HERO_ACCELERATION
     3x          Label 66C6 Hero_AirDragSUB
     2x          Label 6959 HERO_AIR_JUMP_CUT
     1x          Label 6957 HERO_AIR_JUMP_VEL
     2x          Label 6951 HERO_AIR_X_ACCELERATION
     0x          Label 6955 HERO_AIR_X_DRAG
     1x          Label 6953 HERO_AIR_Y_GRAVITY
     2x          Label 6660 Hero_alreadyJumping
    16x          Label 6967 HERO_ANIMATION_ADR
     3x          Label 6969 HERO_ANIMATION_ADR_OLD
     4x          Label 6971 HERO_ANIMATION_DEL
     3x          Label 6975 HERO_ANIMATION_DRW
     2x          Label 6979 HERO_ANIMATION_FRR
     5x          Label 6977 HERO_ANIMATION_IMC
     2x          Label 68B8 HERO_ANIMATION_LOAD
     3x          Label 68C1 HERO_ANIMATION_LOAD_00
     2x          Label 68DD HERO_ANIMATION_LOAD_01
     1x          Label 68D4 HERO_ANIMATION_LOAD_01A
     1x          Label 68D7 HERO_ANIMATION_LOAD_01B
     1x          Label 68FF HERO_ANIMATION_LOAD_02
     1x          Label 691D HERO_ANIMATION_LOAD_FE
     1x          Label 690D HERO_ANIMATION_LOAD_NOPAGE
     1x          Label 692B HERO_ANIMATION_NEXT
     1x          Label 6931 HERO_ANIMATION_NEXT_00
     6x          Label 696D HERO_ANIMATION_PAG
     4x          Label 696F HERO_ANIMATION_PAG_DEL
     3x          Label 696E HERO_ANIMATION_PAG_REF
     2x          Label 696B HERO_ANIMATION_RTN_ADR
     1x          Label 6978 HERO_ANIMATION_RTN_IMC
     4x          Label 694D HERO_DECELERATION
     2x          Label 694F HERO_FRICTION
    20x          Label 695D HERO_G_SPEED
    13x          Label 693B HERO_IDLE_R
     5x          Label 662C HERO_ISJUMPING
     1x          Equ   FA00 HERO_JOG_NEG_SPD_LIMIT
     1x          Equ   0600 HERO_JOG_SPD_LIMIT
     1x          Label 664B Hero_Jump
     1x          Label 6677 Hero_JumpAccelD
     1x          Label 667F Hero_JumpAccelG
     1x          Label 668E Hero_JumpAirDrag
     1x          Label 66B6 Hero_JumpAirDragCommon
     1x          Label 66AE Hero_JumpAirDragPositive
     2x          Label 6685 Hero_JumpCapTopXSpeed
     0x          Label 66E0 Hero_JumpCapTopYSpeed
     2x          Label 66CC Hero_JumpCut
     2x          Label 66DD Hero_JumpGravity
     1x          Label 6648 Hero_JumpLeft
     1x          Label 66E9 Hero_JumpPosUpdate
     1x          Label 662D Hero_Move
     1x          Label 676A Hero_MoveLeft
     1x          Label 6784 Hero_MoveLeft_00
     1x          Label 67A2 Hero_MoveLeft_01
     1x          Label 677E Hero_MoveLeft_03
     1x          Label 67AE Hero_MoveRight
     1x          Label 67C5 Hero_MoveRight_00
     1x          Label 67E3 Hero_MoveRight_01
     1x          Label 67BF Hero_MoveRight_03
    12x          Label 67EC Hero_MoveUpdatePos
     1x          Label 67F5 Hero_MoveUpdatePosJump
     1x          Label 6807 Hero_MoveUpdateXPos_00
     1x          Label 680F Hero_MoveUpdateXPos_00A
     1x          Label 681A Hero_MoveUpdateXPos_00B
     3x          Label 6824 Hero_MoveUpdateXPos_00C
     0x          Label 6826 Hero_MoveUpdateXPos_01
     1x          Label 682C Hero_MoveUpdateXPos_02
     1x          Label 6832 Hero_MoveUpdateXPos_03
     1x          Label 6847 Hero_MoveUpdateYPos_00
     1x          Label 684F Hero_MoveUpdateYPos_00A
     3x          Label 685B Hero_MoveUpdateYPos_00C
     0x          Label 685D Hero_MoveUpdateYPos_01
     2x          Label 687B Hero_MoveUpdateYPos_03
     1x          Label 66F9 Hero_NotLeft
     1x          Label 6700 Hero_NotLeftOrRight
     1x          Label 673F Hero_NotLeftOrRight_00
     1x          Label 6728 Hero_NotLeftOrRight_01
     1x          Label 6739 Hero_NotLeftOrRight_02
     1x          Label 673C Hero_NotLeftOrRight_03
     1x          Label 6753 Hero_NotLeftOrRight_11
     1x          Label 6764 Hero_NotLeftOrRight_12
     1x          Label 6767 Hero_NotLeftOrRight_13
     1x          Label 66F0 Hero_OnGround
     4x          Equ   9F00 HERO_POS
     3x          Label 6947 HERO_X_NEG_TOP_SPEED
     3x          Label 695B HERO_X_POS
    15x          Label 695F HERO_X_SPEED
     4x          Label 6961 HERO_X_SPS
     5x          Label 6945 HERO_X_TOP_SPEED
     5x          Label 695C HERO_Y_POS
     8x          Label 6963 HERO_Y_SPEED
     3x          Label 6965 HERO_Y_SPS
     2x          Label 6949 HERO_Y_TOP_SPEED
     0x          Label 6394 INIT_VID
     0x          Equ   0040 JOY_A
     0x          Equ   000D JOY_B
     0x          Equ   0005 JOY_BD
     0x          Equ   0009 JOY_BG
     4x          Label 662A JOY_BTN_STATUS
     1x          Label 662B JOY_BTN_STATUS_OLD
     0x          Equ   000F JOY_C
     2x          Equ   0007 JOY_D
     3x          Label 6629 JOY_DIR_STATUS
     2x          Equ   000B JOY_G
     0x          Equ   000E JOY_H
     0x          Equ   0006 JOY_HD
     0x          Equ   000A JOY_HG
     1x          Label 660B JOY_READ
     6x          Label 6332 LDPAGE_LOOP
     1x          Label 63DC MAIN
     1x          Label 63E9 MAIN_0
     1x          Label 6405 MAIN_1
     1x          Label 640B MAIN_2
     2x          Label 644D MEM_COPY_DATA_TO_CART
     2x          Label 6533 MEM_COPY_DATA_TO_CART_E
     1x          Label 6453 MEM_COPY_DATA_TO_CART_LOOP
     1x          Label 653B MEM_COPY_DATA_TO_CART_S
     1x          Label 6370 PAGEINIT
     1x          Label 636E PAGEINITNEXT
     0x          Label 6381 PAGENEXT
     3x          Label 641D SCRC
     3x          Label 6438 SCRC0
     1x          Label 630A SETBLACKPALETTE
     1x          Label 63A7 SETPALETTE
     1x          Label 65EB TABPALETTE
     1x          Label 6442 VSYNC
     1x          Label 6442 VSYNC_1
     1x          Label 6447 VSYNC_2

